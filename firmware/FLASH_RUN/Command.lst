   1              	 .syntax unified
   2              	 .cpu cortex-m3
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,1
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "Command.cc"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text._ZN7command20getRemainingCapacityEv,"ax",%progbits
  19              	 .align 2
  20              	 .global _ZN7command20getRemainingCapacityEv
  21              	 .thumb
  22              	 .thumb_func
  24              	_ZN7command20getRemainingCapacityEv:
  25              	.LFB118:
  26              	 .file 1 "src/MightyBoard/Motherboard/Command.cc"
   1:src/MightyBoard/Motherboard/Command.cc **** /*
   2:src/MightyBoard/Motherboard/Command.cc ****  * Copyright 2010 by Adam Mayer	 <adam@makerbot.com>
   3:src/MightyBoard/Motherboard/Command.cc ****  *
   4:src/MightyBoard/Motherboard/Command.cc ****  * This program is free software: you can redistribute it and/or modify
   5:src/MightyBoard/Motherboard/Command.cc ****  * it under the terms of the GNU General Public License as published by
   6:src/MightyBoard/Motherboard/Command.cc ****  * the Free Software Foundation, either version 3 of the License, or
   7:src/MightyBoard/Motherboard/Command.cc ****  * (at your option) any later version.
   8:src/MightyBoard/Motherboard/Command.cc ****  *
   9:src/MightyBoard/Motherboard/Command.cc ****  * This program is distributed in the hope that it will be useful,
  10:src/MightyBoard/Motherboard/Command.cc ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:src/MightyBoard/Motherboard/Command.cc ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:src/MightyBoard/Motherboard/Command.cc ****  * GNU General Public License for more details.
  13:src/MightyBoard/Motherboard/Command.cc ****  *
  14:src/MightyBoard/Motherboard/Command.cc ****  * You should have received a copy of the GNU General Public License
  15:src/MightyBoard/Motherboard/Command.cc ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>
  16:src/MightyBoard/Motherboard/Command.cc ****  */
  17:src/MightyBoard/Motherboard/Command.cc **** 
  18:src/MightyBoard/Motherboard/Command.cc **** #include "Command.hh"
  19:src/MightyBoard/Motherboard/Command.cc **** #include "Steppers.hh"
  20:src/MightyBoard/Motherboard/Command.cc **** #include "Commands.hh"
  21:src/MightyBoard/Motherboard/Command.cc **** #include "Configuration.hh"
  22:src/MightyBoard/Motherboard/Command.cc **** #include "Timeout.hh"
  23:src/MightyBoard/Motherboard/Command.cc **** #include "CircularBuffer.hh"
  24:src/MightyBoard/Motherboard/Command.cc **** //#include <util/atomic.h>
  25:src/MightyBoard/Motherboard/Command.cc **** //#include <avr/eeprom.h>
  26:src/MightyBoard/Motherboard/Command.cc **** #include "EepromMap.hh"
  27:src/MightyBoard/Motherboard/Command.cc **** #include "SDCard.hh"
  28:src/MightyBoard/Motherboard/Command.cc **** #include "Pin.hh"
  29:src/MightyBoard/Motherboard/Command.cc **** //#include <util/delay.h>
  30:src/MightyBoard/Motherboard/Command.cc **** #include "Piezo.hh"
  31:src/MightyBoard/Motherboard/Command.cc **** #include "RGB_LED.hh"
  32:src/MightyBoard/Motherboard/Command.cc **** //#include "Interface.hh"
  33:src/MightyBoard/Motherboard/Command.cc **** #include "UtilityScripts.hh"
  34:src/MightyBoard/Motherboard/Command.cc **** #include "Planner.hh"
  35:src/MightyBoard/Motherboard/Command.cc **** #include "stdio.h"
  36:src/MightyBoard/Motherboard/Command.cc **** #include "Menu_locales.hh"
  37:src/MightyBoard/Motherboard/Command.cc **** 
  38:src/MightyBoard/Motherboard/Command.cc **** #include "Host.hh"
  39:src/MightyBoard/Motherboard/Command.cc **** #include "Delay.hh"
  40:src/MightyBoard/Motherboard/Command.cc **** #include "Eeprom.hh"
  41:src/MightyBoard/Motherboard/Command.cc **** 
  42:src/MightyBoard/Motherboard/Command.cc **** extern "C" {
  43:src/MightyBoard/Motherboard/Command.cc **** 	#include "lpc_types.h"
  44:src/MightyBoard/Motherboard/Command.cc **** #include "comm.h"
  45:src/MightyBoard/Motherboard/Command.cc **** }
  46:src/MightyBoard/Motherboard/Command.cc **** 
  47:src/MightyBoard/Motherboard/Command.cc **** namespace command {
  48:src/MightyBoard/Motherboard/Command.cc **** 
  49:src/MightyBoard/Motherboard/Command.cc **** #define COMMAND_BUFFER_SIZE 4096//512
  50:src/MightyBoard/Motherboard/Command.cc **** uint8_t buffer_data[COMMAND_BUFFER_SIZE];
  51:src/MightyBoard/Motherboard/Command.cc **** CircularBuffer command_buffer(COMMAND_BUFFER_SIZE, buffer_data);
  52:src/MightyBoard/Motherboard/Command.cc **** uint8_t currentToolIndex = 0;
  53:src/MightyBoard/Motherboard/Command.cc **** 
  54:src/MightyBoard/Motherboard/Command.cc **** uint32_t line_number;
  55:src/MightyBoard/Motherboard/Command.cc **** 
  56:src/MightyBoard/Motherboard/Command.cc **** bool outstanding_tool_command = false;
  57:src/MightyBoard/Motherboard/Command.cc **** bool check_temp_state = false;
  58:src/MightyBoard/Motherboard/Command.cc **** bool paused = false;
  59:src/MightyBoard/Motherboard/Command.cc **** bool heat_shutdown = false;
  60:src/MightyBoard/Motherboard/Command.cc **** uint32_t sd_count = 0;
  61:src/MightyBoard/Motherboard/Command.cc **** 
  62:src/MightyBoard/Motherboard/Command.cc **** uint16_t getRemainingCapacity() {
  27              	 .loc 1 62 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32              	.LVL0:
  33              	.LBB335:
  34              	.LBB336:
  35              	.LBB337:
  36              	 .file 2 "src/MightyBoard/shared/CircularBuffer.hh"
   1:src/MightyBoard/shared/CircularBuffer.hh **** /*
   2:src/MightyBoard/shared/CircularBuffer.hh ****  * Copyright 2010 by Adam Mayer	 <adam@makerbot.com>
   3:src/MightyBoard/shared/CircularBuffer.hh ****  *
   4:src/MightyBoard/shared/CircularBuffer.hh ****  * This program is free software: you can redistribute it and/or modify
   5:src/MightyBoard/shared/CircularBuffer.hh ****  * it under the terms of the GNU General Public License as published by
   6:src/MightyBoard/shared/CircularBuffer.hh ****  * the Free Software Foundation, either version 3 of the License, or
   7:src/MightyBoard/shared/CircularBuffer.hh ****  * (at your option) any later version.
   8:src/MightyBoard/shared/CircularBuffer.hh ****  *
   9:src/MightyBoard/shared/CircularBuffer.hh ****  * This program is distributed in the hope that it will be useful,
  10:src/MightyBoard/shared/CircularBuffer.hh ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:src/MightyBoard/shared/CircularBuffer.hh ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:src/MightyBoard/shared/CircularBuffer.hh ****  * GNU General Public License for more details.
  13:src/MightyBoard/shared/CircularBuffer.hh ****  *
  14:src/MightyBoard/shared/CircularBuffer.hh ****  * You should have received a copy of the GNU General Public License
  15:src/MightyBoard/shared/CircularBuffer.hh ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>
  16:src/MightyBoard/shared/CircularBuffer.hh ****  */
  17:src/MightyBoard/shared/CircularBuffer.hh **** 
  18:src/MightyBoard/shared/CircularBuffer.hh **** 
  19:src/MightyBoard/shared/CircularBuffer.hh **** #ifndef SHARED_CIRCULAR_BUFFER_HH_
  20:src/MightyBoard/shared/CircularBuffer.hh **** #define SHARED_CIRCULAR_BUFFER_HH_
  21:src/MightyBoard/shared/CircularBuffer.hh **** 
  22:src/MightyBoard/shared/CircularBuffer.hh **** #include <stdint.h>
  23:src/MightyBoard/shared/CircularBuffer.hh **** 
  24:src/MightyBoard/shared/CircularBuffer.hh **** typedef uint16_t BufSizeType;
  25:src/MightyBoard/shared/CircularBuffer.hh **** 
  26:src/MightyBoard/shared/CircularBuffer.hh **** /// A simple, reliable circular buffer implementation.
  27:src/MightyBoard/shared/CircularBuffer.hh **** /// This implementation does not offer any protection from
  28:src/MightyBoard/shared/CircularBuffer.hh **** /// interrupts and code writing over each other!  You must
  29:src/MightyBoard/shared/CircularBuffer.hh **** /// disable interrupts before all accesses and writes to
  30:src/MightyBoard/shared/CircularBuffer.hh **** /// a circular buffer that is updated in an interrupt.
  31:src/MightyBoard/shared/CircularBuffer.hh **** template<typename T>
  32:src/MightyBoard/shared/CircularBuffer.hh **** class CircularBufferTempl {
  33:src/MightyBoard/shared/CircularBuffer.hh **** public:
  34:src/MightyBoard/shared/CircularBuffer.hh **** 	typedef T BufDataType;
  35:src/MightyBoard/shared/CircularBuffer.hh **** private:
  36:src/MightyBoard/shared/CircularBuffer.hh **** 	const BufSizeType size; /// Size of this buffer
  37:src/MightyBoard/shared/CircularBuffer.hh **** 	volatile BufSizeType length; /// Current length of valid buffer data
  38:src/MightyBoard/shared/CircularBuffer.hh **** 	volatile BufSizeType start; /// Current start point of valid bufffer data
  39:src/MightyBoard/shared/CircularBuffer.hh **** 	BufDataType* const data; /// Pointer to buffer data
  40:src/MightyBoard/shared/CircularBuffer.hh **** 	volatile bool overflow; /// Overflow indicator
  41:src/MightyBoard/shared/CircularBuffer.hh **** 	volatile bool underflow; /// Underflow indicator
  42:src/MightyBoard/shared/CircularBuffer.hh **** public:
  43:src/MightyBoard/shared/CircularBuffer.hh **** 	CircularBufferTempl(BufSizeType size_in, BufDataType* data_in) :
  44:src/MightyBoard/shared/CircularBuffer.hh **** 		size(size_in), length(0), start(0), data(data_in), overflow(false),
  45:src/MightyBoard/shared/CircularBuffer.hh **** 				underflow(false) {
  46:src/MightyBoard/shared/CircularBuffer.hh **** 	}
  47:src/MightyBoard/shared/CircularBuffer.hh **** 
  48:src/MightyBoard/shared/CircularBuffer.hh **** 	/// Reset the buffer to its empty state.  All data in
  49:src/MightyBoard/shared/CircularBuffer.hh **** 	/// the buffer will be (effectively) lost.
  50:src/MightyBoard/shared/CircularBuffer.hh **** 	inline void reset() {
  51:src/MightyBoard/shared/CircularBuffer.hh **** 		length = 0;
  52:src/MightyBoard/shared/CircularBuffer.hh **** 		start = 0;
  53:src/MightyBoard/shared/CircularBuffer.hh **** 		overflow = false;
  54:src/MightyBoard/shared/CircularBuffer.hh **** 		underflow = false;
  55:src/MightyBoard/shared/CircularBuffer.hh **** 	}
  56:src/MightyBoard/shared/CircularBuffer.hh **** 	/// Append a byte to the tail of the buffer
  57:src/MightyBoard/shared/CircularBuffer.hh **** 	inline void push(BufDataType b) {
  58:src/MightyBoard/shared/CircularBuffer.hh **** 		if (length < size) {
  59:src/MightyBoard/shared/CircularBuffer.hh **** 			operator[](length) = b;
  60:src/MightyBoard/shared/CircularBuffer.hh **** 			length++;
  61:src/MightyBoard/shared/CircularBuffer.hh **** 		} else {
  62:src/MightyBoard/shared/CircularBuffer.hh **** 			overflow = true;
  63:src/MightyBoard/shared/CircularBuffer.hh **** 		}
  64:src/MightyBoard/shared/CircularBuffer.hh **** 	}
  65:src/MightyBoard/shared/CircularBuffer.hh **** 	/// Pop a byte off the head of the buffer
  66:src/MightyBoard/shared/CircularBuffer.hh **** 	inline BufDataType pop() {
  67:src/MightyBoard/shared/CircularBuffer.hh **** 		if (isEmpty()) {
  68:src/MightyBoard/shared/CircularBuffer.hh **** 			underflow = true;
  69:src/MightyBoard/shared/CircularBuffer.hh **** 			return BufDataType();
  70:src/MightyBoard/shared/CircularBuffer.hh **** 		}
  71:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufDataType& popped_byte = operator[](0);
  72:src/MightyBoard/shared/CircularBuffer.hh **** 		start = (start + 1) % size;
  73:src/MightyBoard/shared/CircularBuffer.hh **** 		length--;
  74:src/MightyBoard/shared/CircularBuffer.hh **** 		return popped_byte;
  75:src/MightyBoard/shared/CircularBuffer.hh **** 	}
  76:src/MightyBoard/shared/CircularBuffer.hh **** 
  77:src/MightyBoard/shared/CircularBuffer.hh **** 	/// Pop a number of bytes off the head of the buffer.  If there
  78:src/MightyBoard/shared/CircularBuffer.hh **** 	/// are not enough bytes to complete the pop, pop what we can and
  79:src/MightyBoard/shared/CircularBuffer.hh **** 	/// set the underflow flag.
  80:src/MightyBoard/shared/CircularBuffer.hh **** 	inline void pop(BufSizeType sz) {
  81:src/MightyBoard/shared/CircularBuffer.hh **** 		if (length < sz) {
  82:src/MightyBoard/shared/CircularBuffer.hh **** 			underflow = true;
  83:src/MightyBoard/shared/CircularBuffer.hh **** 			sz = length;
  84:src/MightyBoard/shared/CircularBuffer.hh **** 		}
  85:src/MightyBoard/shared/CircularBuffer.hh **** 		start = (start + sz) % size;
  86:src/MightyBoard/shared/CircularBuffer.hh **** 		length -= sz;
  87:src/MightyBoard/shared/CircularBuffer.hh **** 	}
  88:src/MightyBoard/shared/CircularBuffer.hh **** 
  89:src/MightyBoard/shared/CircularBuffer.hh **** 	/// Get the length of the buffer
  90:src/MightyBoard/shared/CircularBuffer.hh **** 	inline const BufSizeType getLength() const {
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
  92:src/MightyBoard/shared/CircularBuffer.hh **** 	}
  93:src/MightyBoard/shared/CircularBuffer.hh **** 
  94:src/MightyBoard/shared/CircularBuffer.hh **** 	/// Get the remaining capacity of this buffer
  95:src/MightyBoard/shared/CircularBuffer.hh **** 	inline const BufSizeType getRemainingCapacity() const {
  96:src/MightyBoard/shared/CircularBuffer.hh **** 		return size - length;
  37              	 .loc 2 96 0
  38 0000 40F20003 	 movw r3,#:lower16:.LANCHOR0
  39 0004 C0F20003 	 movt r3,#:upper16:.LANCHOR0
  40 0008 5A88     	 ldrh r2,[r3,#2]
  41 000a 1888     	 ldrh r0,[r3,#0]
  42 000c 801A     	 subs r0,r0,r2
  43              	.LBE337:
  44              	.LBE336:
  45              	.LBE335:
  63:src/MightyBoard/Motherboard/Command.cc **** 	uint16_t sz;
  64:src/MightyBoard/Motherboard/Command.cc **** //	ATOMIC_BLOCK(ATOMIC_FORCEON) {
  65:src/MightyBoard/Motherboard/Command.cc **** 		sz = command_buffer.getRemainingCapacity();
  66:src/MightyBoard/Motherboard/Command.cc **** //	}
  67:src/MightyBoard/Motherboard/Command.cc **** 	return sz;
  68:src/MightyBoard/Motherboard/Command.cc **** }
  46              	 .loc 1 68 0
  47 000e 80B2     	 uxth r0,r0
  48 0010 7047     	 bx lr
  49              	 .cfi_endproc
  50              	.LFE118:
  52 0012 00BF     	 .section .text._ZN7command5pauseEb,"ax",%progbits
  53              	 .align 2
  54              	 .global _ZN7command5pauseEb
  55              	 .thumb
  56              	 .thumb_func
  58              	_ZN7command5pauseEb:
  59              	.LFB119:
  69:src/MightyBoard/Motherboard/Command.cc **** 
  70:src/MightyBoard/Motherboard/Command.cc **** void pause(bool pause) {
  60              	 .loc 1 70 0
  61              	 .cfi_startproc
  62              	 
  63              	 
  64              	 
  65              	.LVL1:
  71:src/MightyBoard/Motherboard/Command.cc **** 	paused = pause;
  66              	 .loc 1 71 0
  67 0000 40F20003 	 movw r3,#:lower16:.LANCHOR1
  68 0004 C0F20003 	 movt r3,#:upper16:.LANCHOR1
  69 0008 1870     	 strb r0,[r3,#0]
  72:src/MightyBoard/Motherboard/Command.cc **** }
  70              	 .loc 1 72 0
  71 000a 7047     	 bx lr
  72              	 .cfi_endproc
  73              	.LFE119:
  75              	 .section .text._ZN7command12heatShutdownEv,"ax",%progbits
  76              	 .align 2
  77              	 .global _ZN7command12heatShutdownEv
  78              	 .thumb
  79              	 .thumb_func
  81              	_ZN7command12heatShutdownEv:
  82              	.LFB120:
  73:src/MightyBoard/Motherboard/Command.cc **** void heatShutdown(){
  83              	 .loc 1 73 0
  84              	 .cfi_startproc
  85              	 
  86              	 
  87              	 
  74:src/MightyBoard/Motherboard/Command.cc **** 	heat_shutdown = true;
  88              	 .loc 1 74 0
  89 0000 40F20003 	 movw r3,#:lower16:.LANCHOR2
  90 0004 C0F20003 	 movt r3,#:upper16:.LANCHOR2
  91 0008 4FF00102 	 mov r2,#1
  92 000c 1A70     	 strb r2,[r3,#0]
  75:src/MightyBoard/Motherboard/Command.cc **** }
  93              	 .loc 1 75 0
  94 000e 7047     	 bx lr
  95              	 .cfi_endproc
  96              	.LFE120:
  98              	 .section .text._ZN7command8isPausedEv,"ax",%progbits
  99              	 .align 2
 100              	 .global _ZN7command8isPausedEv
 101              	 .thumb
 102              	 .thumb_func
 104              	_ZN7command8isPausedEv:
 105              	.LFB121:
  76:src/MightyBoard/Motherboard/Command.cc **** 
  77:src/MightyBoard/Motherboard/Command.cc **** bool isPaused() {
 106              	 .loc 1 77 0
 107              	 .cfi_startproc
 108              	 
 109              	 
 110              	 
  78:src/MightyBoard/Motherboard/Command.cc **** 	return paused;
 111              	 .loc 1 78 0
 112 0000 40F20003 	 movw r3,#:lower16:.LANCHOR1
 113 0004 C0F20003 	 movt r3,#:upper16:.LANCHOR1
  79:src/MightyBoard/Motherboard/Command.cc **** }
 114              	 .loc 1 79 0
 115 0008 1878     	 ldrb r0,[r3,#0]
 116 000a 7047     	 bx lr
 117              	 .cfi_endproc
 118              	.LFE121:
 120              	 .section .text._ZN7command7isEmptyEv,"ax",%progbits
 121              	 .align 2
 122              	 .global _ZN7command7isEmptyEv
 123              	 .thumb
 124              	 .thumb_func
 126              	_ZN7command7isEmptyEv:
 127              	.LFB122:
  80:src/MightyBoard/Motherboard/Command.cc **** 
  81:src/MightyBoard/Motherboard/Command.cc **** bool isEmpty() {
 128              	 .loc 1 81 0
 129              	 .cfi_startproc
 130              	 
 131              	 
 132              	 
 133              	.LVL2:
 134              	.LBB338:
 135              	.LBB339:
  97:src/MightyBoard/shared/CircularBuffer.hh **** 	}
  98:src/MightyBoard/shared/CircularBuffer.hh **** 
  99:src/MightyBoard/shared/CircularBuffer.hh **** 	/// Check if the buffer is empty
 100:src/MightyBoard/shared/CircularBuffer.hh **** 	inline const bool isEmpty() const {
 101:src/MightyBoard/shared/CircularBuffer.hh **** 		return length == 0;
 136              	 .loc 2 101 0
 137 0000 40F20003 	 movw r3,#:lower16:.LANCHOR0
 138 0004 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 139 0008 5888     	 ldrh r0,[r3,#2]
 140 000a 80B2     	 uxth r0,r0
 141              	.LBE339:
 142              	.LBE338:
  82:src/MightyBoard/Motherboard/Command.cc **** 	return command_buffer.isEmpty();
  83:src/MightyBoard/Motherboard/Command.cc **** }
 143              	 .loc 1 83 0
 144 000c D0F10100 	 rsbs r0,r0,#1
 145 0010 38BF     	 it cc
 146 0012 0020     	 movcc r0,#0
 147 0014 7047     	 bx lr
 148              	 .cfi_endproc
 149              	.LFE122:
 151 0016 00BF     	 .section .text._ZN7command4pushEh,"ax",%progbits
 152              	 .align 2
 153              	 .global _ZN7command4pushEh
 154              	 .thumb
 155              	 .thumb_func
 157              	_ZN7command4pushEh:
 158              	.LFB123:
  84:src/MightyBoard/Motherboard/Command.cc **** 
  85:src/MightyBoard/Motherboard/Command.cc **** void push(uint8_t byte) {
 159              	 .loc 1 85 0
 160              	 .cfi_startproc
 161              	 
 162              	 
 163              	 
 164              	.LVL3:
 165 0000 10B4     	 push {r4}
 166              	.LCFI0:
 167              	 .cfi_def_cfa_offset 4
 168              	 .cfi_offset 4,-4
 169              	.LVL4:
 170              	.LBB340:
 171              	.LBB341:
  58:src/MightyBoard/shared/CircularBuffer.hh **** 		if (length < size) {
 172              	 .loc 2 58 0
 173 0002 40F20003 	 movw r3,#:lower16:.LANCHOR0
 174 0006 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 175 000a 5988     	 ldrh r1,[r3,#2]
 176 000c 89B2     	 uxth r1,r1
 177 000e 1A88     	 ldrh r2,[r3,#0]
 178 0010 9142     	 cmp r1,r2
 179 0012 15D2     	 bcs .L7
  59:src/MightyBoard/shared/CircularBuffer.hh **** 			operator[](length) = b;
 180              	 .loc 2 59 0
 181 0014 40F20003 	 movw r3,#:lower16:.LANCHOR0
 182 0018 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 183 001c 5C88     	 ldrh r4,[r3,#2]
 184 001e A4B2     	 uxth r4,r4
 185              	.LVL5:
 186              	.LBB342:
 187              	.LBB343:
 102:src/MightyBoard/shared/CircularBuffer.hh **** 	}
 103:src/MightyBoard/shared/CircularBuffer.hh **** 	/// Read the buffer directly
 104:src/MightyBoard/shared/CircularBuffer.hh **** 	inline BufDataType& operator[](BufSizeType index) {
 105:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufSizeType actual_index = (index + start) % size;
 188              	 .loc 2 105 0
 189 0020 9988     	 ldrh r1,[r3,#4]
 190 0022 89B2     	 uxth r1,r1
 191              	.LVL6:
 192 0024 6118     	 adds r1,r4,r1
 193              	.LVL7:
 194 0026 91FBF2F4 	 sdiv r4,r1,r2
 195              	.LVL8:
 196 002a 02FB1412 	 mls r2,r2,r4,r1
 106:src/MightyBoard/shared/CircularBuffer.hh **** 		return data[actual_index];
 197              	 .loc 2 106 0
 198 002e 92B2     	 uxth r2,r2
 199              	.LBE343:
 200              	.LBE342:
  59:src/MightyBoard/shared/CircularBuffer.hh **** 			operator[](length) = b;
 201              	 .loc 2 59 0
 202 0030 9968     	 ldr r1,[r3,#8]
 203 0032 8854     	 strb r0,[r1,r2]
  60:src/MightyBoard/shared/CircularBuffer.hh **** 			length++;
 204              	 .loc 2 60 0
 205 0034 5A88     	 ldrh r2,[r3,#2]
 206 0036 02F10102 	 add r2,r2,#1
 207 003a 92B2     	 uxth r2,r2
 208 003c 5A80     	 strh r2,[r3,#2]
 209 003e 06E0     	 b .L6
 210              	.LVL9:
 211              	.L7:
  62:src/MightyBoard/shared/CircularBuffer.hh **** 			overflow = true;
 212              	 .loc 2 62 0
 213 0040 40F20003 	 movw r3,#:lower16:.LANCHOR0
 214 0044 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 215 0048 4FF00102 	 mov r2,#1
 216 004c 1A73     	 strb r2,[r3,#12]
 217              	.L6:
 218              	.LBE341:
 219              	.LBE340:
  86:src/MightyBoard/Motherboard/Command.cc **** 	command_buffer.push(byte);
  87:src/MightyBoard/Motherboard/Command.cc **** }
 220              	 .loc 1 87 0
 221 004e 10BC     	 pop {r4}
 222 0050 7047     	 bx lr
 223              	 .cfi_endproc
 224              	.LFE123:
 226 0052 00BF     	 .section .text._ZN7command4pop8Ev,"ax",%progbits
 227              	 .align 2
 228              	 .global _ZN7command4pop8Ev
 229              	 .thumb
 230              	 .thumb_func
 232              	_ZN7command4pop8Ev:
 233              	.LFB124:
  88:src/MightyBoard/Motherboard/Command.cc **** 
  89:src/MightyBoard/Motherboard/Command.cc **** uint8_t pop8() {
 234              	 .loc 1 89 0
 235              	 .cfi_startproc
 236              	 
 237              	 
 238              	 
 239 0000 30B4     	 push {r4,r5}
 240              	.LCFI1:
 241              	 .cfi_def_cfa_offset 8
 242              	 .cfi_offset 5,-4
 243              	 .cfi_offset 4,-8
 244              	.LVL10:
 245              	.LBB344:
 246              	.LBB345:
 247              	.LBB346:
 248              	.LBB347:
 101:src/MightyBoard/shared/CircularBuffer.hh **** 		return length == 0;
 249              	 .loc 2 101 0
 250 0002 40F20003 	 movw r3,#:lower16:.LANCHOR0
 251 0006 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 252 000a 5B88     	 ldrh r3,[r3,#2]
 253 000c 9BB2     	 uxth r3,r3
 254              	.LBE347:
 255              	.LBE346:
  67:src/MightyBoard/shared/CircularBuffer.hh **** 		if (isEmpty()) {
 256              	 .loc 2 67 0
 257 000e 4BB9     	 cbnz r3,.L10
  68:src/MightyBoard/shared/CircularBuffer.hh **** 			underflow = true;
 258              	 .loc 2 68 0
 259 0010 40F20003 	 movw r3,#:lower16:.LANCHOR0
 260 0014 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 261 0018 4FF00102 	 mov r2,#1
 262 001c 5A73     	 strb r2,[r3,#13]
  69:src/MightyBoard/shared/CircularBuffer.hh **** 			return BufDataType();
 263              	 .loc 2 69 0
 264 001e 4FF00000 	 mov r0,#0
 265 0022 1CE0     	 b .L11
 266              	.L10:
 267              	.LVL11:
 268              	.LBB348:
 269              	.LBB349:
 105:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufSizeType actual_index = (index + start) % size;
 270              	 .loc 2 105 0
 271 0024 40F20003 	 movw r3,#:lower16:.LANCHOR0
 272 0028 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 273 002c 9988     	 ldrh r1,[r3,#4]
 274 002e 89B2     	 uxth r1,r1
 275 0030 1A88     	 ldrh r2,[r3,#0]
 276              	.LVL12:
 277 0032 91FBF2F0 	 sdiv r0,r1,r2
 278 0036 02FB1011 	 mls r1,r2,r0,r1
 279              	.LVL13:
 280              	 .loc 2 106 0
 281 003a 88B2     	 uxth r0,r1
 282 003c 9C68     	 ldr r4,[r3,#8]
 283              	.LBE349:
 284              	.LBE348:
  72:src/MightyBoard/shared/CircularBuffer.hh **** 		start = (start + 1) % size;
 285              	 .loc 2 72 0
 286 003e 9988     	 ldrh r1,[r3,#4]
 287 0040 89B2     	 uxth r1,r1
 288 0042 01F10101 	 add r1,r1,#1
 289 0046 91FBF2F5 	 sdiv r5,r1,r2
 290 004a 02FB1512 	 mls r2,r2,r5,r1
 291 004e 92B2     	 uxth r2,r2
 292 0050 9A80     	 strh r2,[r3,#4]
  73:src/MightyBoard/shared/CircularBuffer.hh **** 		length--;
 293              	 .loc 2 73 0
 294 0052 5A88     	 ldrh r2,[r3,#2]
 295 0054 02F1FF32 	 add r2,r2,#-1
 296 0058 92B2     	 uxth r2,r2
 297 005a 5A80     	 strh r2,[r3,#2]
  74:src/MightyBoard/shared/CircularBuffer.hh **** 		return popped_byte;
 298              	 .loc 2 74 0
 299 005c 205C     	 ldrb r0,[r4,r0]
 300              	.LVL14:
 301              	.L11:
 302              	.LBE345:
 303              	.LBE344:
  90:src/MightyBoard/Motherboard/Command.cc **** //	sd_count ++;
  91:src/MightyBoard/Motherboard/Command.cc **** 	return command_buffer.pop();
  92:src/MightyBoard/Motherboard/Command.cc **** }
 304              	 .loc 1 92 0
 305 005e 30BC     	 pop {r4,r5}
 306 0060 7047     	 bx lr
 307              	 .cfi_endproc
 308              	.LFE124:
 310 0062 00BF     	 .section .text._ZN7command5pop16Ev,"ax",%progbits
 311              	 .align 2
 312              	 .global _ZN7command5pop16Ev
 313              	 .thumb
 314              	 .thumb_func
 316              	_ZN7command5pop16Ev:
 317              	.LFB125:
  93:src/MightyBoard/Motherboard/Command.cc **** 
  94:src/MightyBoard/Motherboard/Command.cc **** int16_t pop16() {
 318              	 .loc 1 94 0
 319              	 .cfi_startproc
 320              	 
 321              	 
 322              	 
 323 0000 70B4     	 push {r4,r5,r6}
 324              	.LCFI2:
 325              	 .cfi_def_cfa_offset 12
 326              	 .cfi_offset 6,-4
 327              	 .cfi_offset 5,-8
 328              	 .cfi_offset 4,-12
 329              	.LVL15:
 330              	.LBB350:
 331              	.LBB351:
 332              	.LBB352:
 333              	.LBB353:
 334              	.LBB354:
 101:src/MightyBoard/shared/CircularBuffer.hh **** 		return length == 0;
 335              	 .loc 2 101 0
 336 0002 40F20003 	 movw r3,#:lower16:.LANCHOR0
 337 0006 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 338 000a 5B88     	 ldrh r3,[r3,#2]
 339 000c 9BB2     	 uxth r3,r3
 340              	.LBE354:
 341              	.LBE353:
  67:src/MightyBoard/shared/CircularBuffer.hh **** 		if (isEmpty()) {
 342              	 .loc 2 67 0
 343 000e 4BB9     	 cbnz r3,.L13
  68:src/MightyBoard/shared/CircularBuffer.hh **** 			underflow = true;
 344              	 .loc 2 68 0
 345 0010 40F20003 	 movw r3,#:lower16:.LANCHOR0
 346 0014 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 347 0018 4FF00102 	 mov r2,#1
 348 001c 5A73     	 strb r2,[r3,#13]
  69:src/MightyBoard/shared/CircularBuffer.hh **** 			return BufDataType();
 349              	 .loc 2 69 0
 350 001e 4FF00003 	 mov r3,#0
 351 0022 1CE0     	 b .L14
 352              	.L13:
 353              	.LVL16:
 354              	.LBB355:
 355              	.LBB356:
 105:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufSizeType actual_index = (index + start) % size;
 356              	 .loc 2 105 0
 357 0024 40F20003 	 movw r3,#:lower16:.LANCHOR0
 358 0028 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 359 002c 9988     	 ldrh r1,[r3,#4]
 360 002e 89B2     	 uxth r1,r1
 361 0030 1A88     	 ldrh r2,[r3,#0]
 362              	.LVL17:
 363 0032 91FBF2F0 	 sdiv r0,r1,r2
 364 0036 02FB1011 	 mls r1,r2,r0,r1
 365              	.LVL18:
 366              	 .loc 2 106 0
 367 003a 88B2     	 uxth r0,r1
 368 003c 9C68     	 ldr r4,[r3,#8]
 369              	.LBE356:
 370              	.LBE355:
  72:src/MightyBoard/shared/CircularBuffer.hh **** 		start = (start + 1) % size;
 371              	 .loc 2 72 0
 372 003e 9988     	 ldrh r1,[r3,#4]
 373 0040 89B2     	 uxth r1,r1
 374 0042 01F10101 	 add r1,r1,#1
 375 0046 91FBF2F5 	 sdiv r5,r1,r2
 376 004a 02FB1512 	 mls r2,r2,r5,r1
 377 004e 92B2     	 uxth r2,r2
 378 0050 9A80     	 strh r2,[r3,#4]
  73:src/MightyBoard/shared/CircularBuffer.hh **** 		length--;
 379              	 .loc 2 73 0
 380 0052 5A88     	 ldrh r2,[r3,#2]
 381 0054 02F1FF32 	 add r2,r2,#-1
 382 0058 92B2     	 uxth r2,r2
 383 005a 5A80     	 strh r2,[r3,#2]
  74:src/MightyBoard/shared/CircularBuffer.hh **** 		return popped_byte;
 384              	 .loc 2 74 0
 385 005c 235C     	 ldrb r3,[r4,r0]
 386              	.LVL19:
 387              	.L14:
 388              	.LBE352:
 389              	.LBE351:
  95:src/MightyBoard/Motherboard/Command.cc **** 	union {
  96:src/MightyBoard/Motherboard/Command.cc **** 		// AVR is little-endian
  97:src/MightyBoard/Motherboard/Command.cc **** 		int16_t a;
  98:src/MightyBoard/Motherboard/Command.cc **** 		struct {
  99:src/MightyBoard/Motherboard/Command.cc **** 			uint8_t data[2];
 100:src/MightyBoard/Motherboard/Command.cc **** 		} b;
 101:src/MightyBoard/Motherboard/Command.cc **** 	} shared;
 102:src/MightyBoard/Motherboard/Command.cc **** 	shared.b.data[0] = command_buffer.pop();
 390              	 .loc 1 102 0
 391 005e 4FF00000 	 mov r0,#0
 392              	.LVL20:
 393 0062 63F30700 	 bfi r0,r3,#0,#8
 394              	.LVL21:
 395              	.LBB357:
 396              	.LBB358:
 397              	.LBB359:
 398              	.LBB360:
 101:src/MightyBoard/shared/CircularBuffer.hh **** 		return length == 0;
 399              	 .loc 2 101 0
 400 0066 40F20003 	 movw r3,#:lower16:.LANCHOR0
 401 006a C0F20003 	 movt r3,#:upper16:.LANCHOR0
 402 006e 5B88     	 ldrh r3,[r3,#2]
 403 0070 9BB2     	 uxth r3,r3
 404              	.LBE360:
 405              	.LBE359:
  67:src/MightyBoard/shared/CircularBuffer.hh **** 		if (isEmpty()) {
 406              	 .loc 2 67 0
 407 0072 4BB9     	 cbnz r3,.L15
  68:src/MightyBoard/shared/CircularBuffer.hh **** 			underflow = true;
 408              	 .loc 2 68 0
 409 0074 40F20003 	 movw r3,#:lower16:.LANCHOR0
 410 0078 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 411 007c 4FF00102 	 mov r2,#1
 412 0080 5A73     	 strb r2,[r3,#13]
  69:src/MightyBoard/shared/CircularBuffer.hh **** 			return BufDataType();
 413              	 .loc 2 69 0
 414 0082 4FF00003 	 mov r3,#0
 415 0086 1CE0     	 b .L16
 416              	.L15:
 417              	.LVL22:
 418              	.LBB361:
 419              	.LBB362:
 105:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufSizeType actual_index = (index + start) % size;
 420              	 .loc 2 105 0
 421 0088 40F20003 	 movw r3,#:lower16:.LANCHOR0
 422 008c C0F20003 	 movt r3,#:upper16:.LANCHOR0
 423 0090 9988     	 ldrh r1,[r3,#4]
 424 0092 89B2     	 uxth r1,r1
 425 0094 1A88     	 ldrh r2,[r3,#0]
 426              	.LVL23:
 427 0096 91FBF2F4 	 sdiv r4,r1,r2
 428 009a 02FB1411 	 mls r1,r2,r4,r1
 429              	.LVL24:
 430              	 .loc 2 106 0
 431 009e 8CB2     	 uxth r4,r1
 432 00a0 9D68     	 ldr r5,[r3,#8]
 433              	.LBE362:
 434              	.LBE361:
  72:src/MightyBoard/shared/CircularBuffer.hh **** 		start = (start + 1) % size;
 435              	 .loc 2 72 0
 436 00a2 9988     	 ldrh r1,[r3,#4]
 437 00a4 89B2     	 uxth r1,r1
 438 00a6 01F10101 	 add r1,r1,#1
 439 00aa 91FBF2F6 	 sdiv r6,r1,r2
 440 00ae 02FB1612 	 mls r2,r2,r6,r1
 441 00b2 92B2     	 uxth r2,r2
 442 00b4 9A80     	 strh r2,[r3,#4]
  73:src/MightyBoard/shared/CircularBuffer.hh **** 		length--;
 443              	 .loc 2 73 0
 444 00b6 5A88     	 ldrh r2,[r3,#2]
 445 00b8 02F1FF32 	 add r2,r2,#-1
 446 00bc 92B2     	 uxth r2,r2
 447 00be 5A80     	 strh r2,[r3,#2]
  74:src/MightyBoard/shared/CircularBuffer.hh **** 		return popped_byte;
 448              	 .loc 2 74 0
 449 00c0 2B5D     	 ldrb r3,[r5,r4]
 450              	.LVL25:
 451              	.L16:
 452              	.LBE358:
 453              	.LBE357:
 103:src/MightyBoard/Motherboard/Command.cc **** 	shared.b.data[1] = command_buffer.pop();
 454              	 .loc 1 103 0
 455 00c2 63F30F20 	 bfi r0,r3,#8,#8
 456              	.LBE350:
 104:src/MightyBoard/Motherboard/Command.cc **** //	sd_count+=2;
 105:src/MightyBoard/Motherboard/Command.cc **** 	return shared.a;
 106:src/MightyBoard/Motherboard/Command.cc **** }
 457              	 .loc 1 106 0
 458 00c6 00B2     	 sxth r0,r0
 459              	.LVL26:
 460 00c8 70BC     	 pop {r4,r5,r6}
 461 00ca 7047     	 bx lr
 462              	 .cfi_endproc
 463              	.LFE125:
 465              	 .section .text._ZN7command5pop32Ev,"ax",%progbits
 466              	 .align 2
 467              	 .global _ZN7command5pop32Ev
 468              	 .thumb
 469              	 .thumb_func
 471              	_ZN7command5pop32Ev:
 472              	.LFB126:
 107:src/MightyBoard/Motherboard/Command.cc **** 
 108:src/MightyBoard/Motherboard/Command.cc **** int32_t pop32() {
 473              	 .loc 1 108 0
 474              	 .cfi_startproc
 475              	 
 476              	 
 477              	 
 478 0000 70B4     	 push {r4,r5,r6}
 479              	.LCFI3:
 480              	 .cfi_def_cfa_offset 12
 481              	 .cfi_offset 6,-4
 482              	 .cfi_offset 5,-8
 483              	 .cfi_offset 4,-12
 484              	.LVL27:
 485              	.LBB363:
 486              	.LBB364:
 487              	.LBB365:
 488              	.LBB366:
 489              	.LBB367:
 101:src/MightyBoard/shared/CircularBuffer.hh **** 		return length == 0;
 490              	 .loc 2 101 0
 491 0002 40F20003 	 movw r3,#:lower16:.LANCHOR0
 492 0006 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 493 000a 5B88     	 ldrh r3,[r3,#2]
 494 000c 9BB2     	 uxth r3,r3
 495              	.LBE367:
 496              	.LBE366:
  67:src/MightyBoard/shared/CircularBuffer.hh **** 		if (isEmpty()) {
 497              	 .loc 2 67 0
 498 000e 4BB9     	 cbnz r3,.L18
  68:src/MightyBoard/shared/CircularBuffer.hh **** 			underflow = true;
 499              	 .loc 2 68 0
 500 0010 40F20003 	 movw r3,#:lower16:.LANCHOR0
 501 0014 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 502 0018 4FF00102 	 mov r2,#1
 503 001c 5A73     	 strb r2,[r3,#13]
  69:src/MightyBoard/shared/CircularBuffer.hh **** 			return BufDataType();
 504              	 .loc 2 69 0
 505 001e 4FF00003 	 mov r3,#0
 506 0022 1CE0     	 b .L19
 507              	.L18:
 508              	.LVL28:
 509              	.LBB368:
 510              	.LBB369:
 105:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufSizeType actual_index = (index + start) % size;
 511              	 .loc 2 105 0
 512 0024 40F20003 	 movw r3,#:lower16:.LANCHOR0
 513 0028 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 514 002c 9988     	 ldrh r1,[r3,#4]
 515 002e 89B2     	 uxth r1,r1
 516 0030 1A88     	 ldrh r2,[r3,#0]
 517              	.LVL29:
 518 0032 91FBF2F0 	 sdiv r0,r1,r2
 519 0036 02FB1011 	 mls r1,r2,r0,r1
 520              	.LVL30:
 521              	 .loc 2 106 0
 522 003a 88B2     	 uxth r0,r1
 523 003c 9C68     	 ldr r4,[r3,#8]
 524              	.LBE369:
 525              	.LBE368:
  72:src/MightyBoard/shared/CircularBuffer.hh **** 		start = (start + 1) % size;
 526              	 .loc 2 72 0
 527 003e 9988     	 ldrh r1,[r3,#4]
 528 0040 89B2     	 uxth r1,r1
 529 0042 01F10101 	 add r1,r1,#1
 530 0046 91FBF2F5 	 sdiv r5,r1,r2
 531 004a 02FB1512 	 mls r2,r2,r5,r1
 532 004e 92B2     	 uxth r2,r2
 533 0050 9A80     	 strh r2,[r3,#4]
  73:src/MightyBoard/shared/CircularBuffer.hh **** 		length--;
 534              	 .loc 2 73 0
 535 0052 5A88     	 ldrh r2,[r3,#2]
 536 0054 02F1FF32 	 add r2,r2,#-1
 537 0058 92B2     	 uxth r2,r2
 538 005a 5A80     	 strh r2,[r3,#2]
  74:src/MightyBoard/shared/CircularBuffer.hh **** 		return popped_byte;
 539              	 .loc 2 74 0
 540 005c 235C     	 ldrb r3,[r4,r0]
 541              	.LVL31:
 542              	.L19:
 543              	.LBE365:
 544              	.LBE364:
 109:src/MightyBoard/Motherboard/Command.cc **** 	union {
 110:src/MightyBoard/Motherboard/Command.cc **** 		// AVR is little-endian
 111:src/MightyBoard/Motherboard/Command.cc **** 		int32_t a;
 112:src/MightyBoard/Motherboard/Command.cc **** 		struct {
 113:src/MightyBoard/Motherboard/Command.cc **** 			uint8_t data[4];
 114:src/MightyBoard/Motherboard/Command.cc **** 		} b;
 115:src/MightyBoard/Motherboard/Command.cc **** 	} shared;
 116:src/MightyBoard/Motherboard/Command.cc **** 	shared.b.data[0] = command_buffer.pop();
 545              	 .loc 1 116 0
 546 005e 4FF00000 	 mov r0,#0
 547              	.LVL32:
 548 0062 63F30700 	 bfi r0,r3,#0,#8
 549              	.LVL33:
 550              	.LBB370:
 551              	.LBB371:
 552              	.LBB372:
 553              	.LBB373:
 101:src/MightyBoard/shared/CircularBuffer.hh **** 		return length == 0;
 554              	 .loc 2 101 0
 555 0066 40F20003 	 movw r3,#:lower16:.LANCHOR0
 556 006a C0F20003 	 movt r3,#:upper16:.LANCHOR0
 557 006e 5B88     	 ldrh r3,[r3,#2]
 558 0070 9BB2     	 uxth r3,r3
 559              	.LBE373:
 560              	.LBE372:
  67:src/MightyBoard/shared/CircularBuffer.hh **** 		if (isEmpty()) {
 561              	 .loc 2 67 0
 562 0072 4BB9     	 cbnz r3,.L20
  68:src/MightyBoard/shared/CircularBuffer.hh **** 			underflow = true;
 563              	 .loc 2 68 0
 564 0074 40F20003 	 movw r3,#:lower16:.LANCHOR0
 565 0078 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 566 007c 4FF00102 	 mov r2,#1
 567 0080 5A73     	 strb r2,[r3,#13]
  69:src/MightyBoard/shared/CircularBuffer.hh **** 			return BufDataType();
 568              	 .loc 2 69 0
 569 0082 4FF00003 	 mov r3,#0
 570 0086 1CE0     	 b .L21
 571              	.L20:
 572              	.LVL34:
 573              	.LBB374:
 574              	.LBB375:
 105:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufSizeType actual_index = (index + start) % size;
 575              	 .loc 2 105 0
 576 0088 40F20003 	 movw r3,#:lower16:.LANCHOR0
 577 008c C0F20003 	 movt r3,#:upper16:.LANCHOR0
 578 0090 9988     	 ldrh r1,[r3,#4]
 579 0092 89B2     	 uxth r1,r1
 580 0094 1A88     	 ldrh r2,[r3,#0]
 581              	.LVL35:
 582 0096 91FBF2F4 	 sdiv r4,r1,r2
 583 009a 02FB1411 	 mls r1,r2,r4,r1
 584              	.LVL36:
 585              	 .loc 2 106 0
 586 009e 8CB2     	 uxth r4,r1
 587 00a0 9D68     	 ldr r5,[r3,#8]
 588              	.LBE375:
 589              	.LBE374:
  72:src/MightyBoard/shared/CircularBuffer.hh **** 		start = (start + 1) % size;
 590              	 .loc 2 72 0
 591 00a2 9988     	 ldrh r1,[r3,#4]
 592 00a4 89B2     	 uxth r1,r1
 593 00a6 01F10101 	 add r1,r1,#1
 594 00aa 91FBF2F6 	 sdiv r6,r1,r2
 595 00ae 02FB1612 	 mls r2,r2,r6,r1
 596 00b2 92B2     	 uxth r2,r2
 597 00b4 9A80     	 strh r2,[r3,#4]
  73:src/MightyBoard/shared/CircularBuffer.hh **** 		length--;
 598              	 .loc 2 73 0
 599 00b6 5A88     	 ldrh r2,[r3,#2]
 600 00b8 02F1FF32 	 add r2,r2,#-1
 601 00bc 92B2     	 uxth r2,r2
 602 00be 5A80     	 strh r2,[r3,#2]
  74:src/MightyBoard/shared/CircularBuffer.hh **** 		return popped_byte;
 603              	 .loc 2 74 0
 604 00c0 2B5D     	 ldrb r3,[r5,r4]
 605              	.LVL37:
 606              	.L21:
 607              	.LBE371:
 608              	.LBE370:
 117:src/MightyBoard/Motherboard/Command.cc **** 	shared.b.data[1] = command_buffer.pop();
 609              	 .loc 1 117 0
 610 00c2 63F30F20 	 bfi r0,r3,#8,#8
 611              	.LVL38:
 612              	.LBB376:
 613              	.LBB377:
 614              	.LBB378:
 615              	.LBB379:
 101:src/MightyBoard/shared/CircularBuffer.hh **** 		return length == 0;
 616              	 .loc 2 101 0
 617 00c6 40F20003 	 movw r3,#:lower16:.LANCHOR0
 618 00ca C0F20003 	 movt r3,#:upper16:.LANCHOR0
 619 00ce 5B88     	 ldrh r3,[r3,#2]
 620 00d0 9BB2     	 uxth r3,r3
 621              	.LBE379:
 622              	.LBE378:
  67:src/MightyBoard/shared/CircularBuffer.hh **** 		if (isEmpty()) {
 623              	 .loc 2 67 0
 624 00d2 4BB9     	 cbnz r3,.L22
  68:src/MightyBoard/shared/CircularBuffer.hh **** 			underflow = true;
 625              	 .loc 2 68 0
 626 00d4 40F20003 	 movw r3,#:lower16:.LANCHOR0
 627 00d8 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 628 00dc 4FF00102 	 mov r2,#1
 629 00e0 5A73     	 strb r2,[r3,#13]
  69:src/MightyBoard/shared/CircularBuffer.hh **** 			return BufDataType();
 630              	 .loc 2 69 0
 631 00e2 4FF00003 	 mov r3,#0
 632 00e6 1CE0     	 b .L23
 633              	.L22:
 634              	.LVL39:
 635              	.LBB380:
 636              	.LBB381:
 105:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufSizeType actual_index = (index + start) % size;
 637              	 .loc 2 105 0
 638 00e8 40F20003 	 movw r3,#:lower16:.LANCHOR0
 639 00ec C0F20003 	 movt r3,#:upper16:.LANCHOR0
 640 00f0 9988     	 ldrh r1,[r3,#4]
 641 00f2 89B2     	 uxth r1,r1
 642 00f4 1A88     	 ldrh r2,[r3,#0]
 643              	.LVL40:
 644 00f6 91FBF2F4 	 sdiv r4,r1,r2
 645 00fa 02FB1411 	 mls r1,r2,r4,r1
 646              	.LVL41:
 647              	 .loc 2 106 0
 648 00fe 8CB2     	 uxth r4,r1
 649 0100 9D68     	 ldr r5,[r3,#8]
 650              	.LBE381:
 651              	.LBE380:
  72:src/MightyBoard/shared/CircularBuffer.hh **** 		start = (start + 1) % size;
 652              	 .loc 2 72 0
 653 0102 9988     	 ldrh r1,[r3,#4]
 654 0104 89B2     	 uxth r1,r1
 655 0106 01F10101 	 add r1,r1,#1
 656 010a 91FBF2F6 	 sdiv r6,r1,r2
 657 010e 02FB1612 	 mls r2,r2,r6,r1
 658 0112 92B2     	 uxth r2,r2
 659 0114 9A80     	 strh r2,[r3,#4]
  73:src/MightyBoard/shared/CircularBuffer.hh **** 		length--;
 660              	 .loc 2 73 0
 661 0116 5A88     	 ldrh r2,[r3,#2]
 662 0118 02F1FF32 	 add r2,r2,#-1
 663 011c 92B2     	 uxth r2,r2
 664 011e 5A80     	 strh r2,[r3,#2]
  74:src/MightyBoard/shared/CircularBuffer.hh **** 		return popped_byte;
 665              	 .loc 2 74 0
 666 0120 2B5D     	 ldrb r3,[r5,r4]
 667              	.LVL42:
 668              	.L23:
 669              	.LBE377:
 670              	.LBE376:
 118:src/MightyBoard/Motherboard/Command.cc **** 	shared.b.data[2] = command_buffer.pop();
 671              	 .loc 1 118 0
 672 0122 63F31740 	 bfi r0,r3,#16,#8
 673              	.LVL43:
 674              	.LBB382:
 675              	.LBB383:
 676              	.LBB384:
 677              	.LBB385:
 101:src/MightyBoard/shared/CircularBuffer.hh **** 		return length == 0;
 678              	 .loc 2 101 0
 679 0126 40F20003 	 movw r3,#:lower16:.LANCHOR0
 680 012a C0F20003 	 movt r3,#:upper16:.LANCHOR0
 681 012e 5B88     	 ldrh r3,[r3,#2]
 682 0130 9BB2     	 uxth r3,r3
 683              	.LBE385:
 684              	.LBE384:
  67:src/MightyBoard/shared/CircularBuffer.hh **** 		if (isEmpty()) {
 685              	 .loc 2 67 0
 686 0132 4BB9     	 cbnz r3,.L24
  68:src/MightyBoard/shared/CircularBuffer.hh **** 			underflow = true;
 687              	 .loc 2 68 0
 688 0134 40F20003 	 movw r3,#:lower16:.LANCHOR0
 689 0138 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 690 013c 4FF00102 	 mov r2,#1
 691 0140 5A73     	 strb r2,[r3,#13]
  69:src/MightyBoard/shared/CircularBuffer.hh **** 			return BufDataType();
 692              	 .loc 2 69 0
 693 0142 4FF00003 	 mov r3,#0
 694 0146 1CE0     	 b .L25
 695              	.L24:
 696              	.LVL44:
 697              	.LBB386:
 698              	.LBB387:
 105:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufSizeType actual_index = (index + start) % size;
 699              	 .loc 2 105 0
 700 0148 40F20003 	 movw r3,#:lower16:.LANCHOR0
 701 014c C0F20003 	 movt r3,#:upper16:.LANCHOR0
 702 0150 9988     	 ldrh r1,[r3,#4]
 703 0152 89B2     	 uxth r1,r1
 704 0154 1A88     	 ldrh r2,[r3,#0]
 705              	.LVL45:
 706 0156 91FBF2F4 	 sdiv r4,r1,r2
 707 015a 02FB1411 	 mls r1,r2,r4,r1
 708              	.LVL46:
 709              	 .loc 2 106 0
 710 015e 8CB2     	 uxth r4,r1
 711 0160 9D68     	 ldr r5,[r3,#8]
 712              	.LBE387:
 713              	.LBE386:
  72:src/MightyBoard/shared/CircularBuffer.hh **** 		start = (start + 1) % size;
 714              	 .loc 2 72 0
 715 0162 9988     	 ldrh r1,[r3,#4]
 716 0164 89B2     	 uxth r1,r1
 717 0166 01F10101 	 add r1,r1,#1
 718 016a 91FBF2F6 	 sdiv r6,r1,r2
 719 016e 02FB1612 	 mls r2,r2,r6,r1
 720 0172 92B2     	 uxth r2,r2
 721 0174 9A80     	 strh r2,[r3,#4]
  73:src/MightyBoard/shared/CircularBuffer.hh **** 		length--;
 722              	 .loc 2 73 0
 723 0176 5A88     	 ldrh r2,[r3,#2]
 724 0178 02F1FF32 	 add r2,r2,#-1
 725 017c 92B2     	 uxth r2,r2
 726 017e 5A80     	 strh r2,[r3,#2]
  74:src/MightyBoard/shared/CircularBuffer.hh **** 		return popped_byte;
 727              	 .loc 2 74 0
 728 0180 2B5D     	 ldrb r3,[r5,r4]
 729              	.LVL47:
 730              	.L25:
 731              	.LBE383:
 732              	.LBE382:
 119:src/MightyBoard/Motherboard/Command.cc **** 	shared.b.data[3] = command_buffer.pop();
 733              	 .loc 1 119 0
 734 0182 63F31F60 	 bfi r0,r3,#24,#8
 735              	.LVL48:
 736              	.LBE363:
 120:src/MightyBoard/Motherboard/Command.cc **** //	sd_count+=4;
 121:src/MightyBoard/Motherboard/Command.cc **** 	return shared.a;
 122:src/MightyBoard/Motherboard/Command.cc **** }
 737              	 .loc 1 122 0
 738 0186 70BC     	 pop {r4,r5,r6}
 739 0188 7047     	 bx lr
 740              	 .cfi_endproc
 741              	.LFE126:
 743 018a 00BF     	 .section .text._ZN7commandL21handleMovementCommandERKh,"ax",%progbits
 744              	 .align 2
 745              	 .thumb
 746              	 .thumb_func
 748              	_ZN7commandL21handleMovementCommandERKh:
 749              	.LFB132:
 123:src/MightyBoard/Motherboard/Command.cc **** 
 124:src/MightyBoard/Motherboard/Command.cc **** enum {
 125:src/MightyBoard/Motherboard/Command.cc **** 	READY,
 126:src/MightyBoard/Motherboard/Command.cc **** 	MOVING,
 127:src/MightyBoard/Motherboard/Command.cc **** 	DELAY,
 128:src/MightyBoard/Motherboard/Command.cc **** 	HOMING,
 129:src/MightyBoard/Motherboard/Command.cc **** 	WAIT_ON_TOOL,
 130:src/MightyBoard/Motherboard/Command.cc **** 	WAIT_ON_PLATFORM,
 131:src/MightyBoard/Motherboard/Command.cc **** 	WAIT_ON_BUTTON
 132:src/MightyBoard/Motherboard/Command.cc **** } mode = READY;
 133:src/MightyBoard/Motherboard/Command.cc **** 
 134:src/MightyBoard/Motherboard/Command.cc **** Timeout delay_timeout;
 135:src/MightyBoard/Motherboard/Command.cc **** Timeout homing_timeout;
 136:src/MightyBoard/Motherboard/Command.cc **** Timeout tool_wait_timeout;
 137:src/MightyBoard/Motherboard/Command.cc **** Timeout button_wait_timeout;
 138:src/MightyBoard/Motherboard/Command.cc **** /// Bitmap of button pushes to wait for
 139:src/MightyBoard/Motherboard/Command.cc **** uint8_t button_mask;
 140:src/MightyBoard/Motherboard/Command.cc **** enum {
 141:src/MightyBoard/Motherboard/Command.cc **** 	BUTTON_TIMEOUT_CONTINUE = 0,
 142:src/MightyBoard/Motherboard/Command.cc **** 	BUTTON_TIMEOUT_ABORT = 1,
 143:src/MightyBoard/Motherboard/Command.cc **** 	BUTTON_CLEAR_SCREEN = 2
 144:src/MightyBoard/Motherboard/Command.cc **** };
 145:src/MightyBoard/Motherboard/Command.cc **** /// Action to take when button times out
 146:src/MightyBoard/Motherboard/Command.cc **** uint8_t button_timeout_behavior;
 147:src/MightyBoard/Motherboard/Command.cc **** 
 148:src/MightyBoard/Motherboard/Command.cc **** 
 149:src/MightyBoard/Motherboard/Command.cc **** bool sdcard_reset = false;
 150:src/MightyBoard/Motherboard/Command.cc **** 
 151:src/MightyBoard/Motherboard/Command.cc **** void reset() {
 152:src/MightyBoard/Motherboard/Command.cc **** 	command_buffer.reset();
 153:src/MightyBoard/Motherboard/Command.cc **** 	line_number = 0;
 154:src/MightyBoard/Motherboard/Command.cc **** 	check_temp_state = false;
 155:src/MightyBoard/Motherboard/Command.cc **** 	paused = false;
 156:src/MightyBoard/Motherboard/Command.cc **** 	sd_count = 0;
 157:src/MightyBoard/Motherboard/Command.cc **** 	sdcard_reset = false;
 158:src/MightyBoard/Motherboard/Command.cc **** 	mode = READY;
 159:src/MightyBoard/Motherboard/Command.cc **** }
 160:src/MightyBoard/Motherboard/Command.cc **** 
 161:src/MightyBoard/Motherboard/Command.cc **** bool isWaiting(){
 162:src/MightyBoard/Motherboard/Command.cc **** 	return (mode == WAIT_ON_BUTTON);
 163:src/MightyBoard/Motherboard/Command.cc **** }
 164:src/MightyBoard/Motherboard/Command.cc ****     
 165:src/MightyBoard/Motherboard/Command.cc **** bool isReady() {
 166:src/MightyBoard/Motherboard/Command.cc ****     return (mode == READY);
 167:src/MightyBoard/Motherboard/Command.cc **** }
 168:src/MightyBoard/Motherboard/Command.cc **** 
 169:src/MightyBoard/Motherboard/Command.cc **** uint32_t getLineNumber() {
 170:src/MightyBoard/Motherboard/Command.cc **** 	return line_number;	
 171:src/MightyBoard/Motherboard/Command.cc **** }
 172:src/MightyBoard/Motherboard/Command.cc **** 
 173:src/MightyBoard/Motherboard/Command.cc **** void clearLineNumber() {
 174:src/MightyBoard/Motherboard/Command.cc **** 	line_number = 0;
 175:src/MightyBoard/Motherboard/Command.cc **** }
 176:src/MightyBoard/Motherboard/Command.cc **** 
 177:src/MightyBoard/Motherboard/Command.cc **** 
 178:src/MightyBoard/Motherboard/Command.cc **** // Handle movement comands -- called from a few places
 179:src/MightyBoard/Motherboard/Command.cc **** static void handleMovementCommand(const uint8_t &command) {
 750              	 .loc 1 179 0
 751              	 .cfi_startproc
 752              	 
 753              	 
 754              	.LVL49:
 755 0000 2DE9F043 	 push {r4,r5,r6,r7,r8,r9,lr}
 756              	.LCFI4:
 757              	 .cfi_def_cfa_offset 28
 758              	 .cfi_offset 14,-4
 759              	 .cfi_offset 9,-8
 760              	 .cfi_offset 8,-12
 761              	 .cfi_offset 7,-16
 762              	 .cfi_offset 6,-20
 763              	 .cfi_offset 5,-24
 764              	 .cfi_offset 4,-28
 765 0004 8FB0     	 sub sp,sp,#60
 766              	.LCFI5:
 767              	 .cfi_def_cfa_offset 88
 768 0006 0446     	 mov r4,r0
 769              	.LBB388:
 180:src/MightyBoard/Motherboard/Command.cc **** 	// if we're already moving, check to make sure the buffer isn't full
 181:src/MightyBoard/Motherboard/Command.cc **** 	if (/*mode == MOVING && */planner::isBufferFull()) {
 770              	 .loc 1 181 0
 771 0008 FFF7FEFF 	 bl _ZN7planner12isBufferFullEv
 772              	.LVL50:
 773 000c 0028     	 cmp r0,#0
 774 000e 40F08580 	 bne .L26
 775              	.LBB389:
 182:src/MightyBoard/Motherboard/Command.cc **** 		return; // we'll be back!
 183:src/MightyBoard/Motherboard/Command.cc **** 	}
 184:src/MightyBoard/Motherboard/Command.cc **** 	if (command == HOST_CMD_QUEUE_POINT_EXT) {
 776              	 .loc 1 184 0
 777 0012 2378     	 ldrb r3,[r4,#0]
 778 0014 8B2B     	 cmp r3,#139
 779 0016 3DD1     	 bne .L28
 780              	.LVL51:
 781              	.LBB390:
 782              	.LBB391:
 783              	.LBB392:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 784              	 .loc 2 91 0
 785 0018 40F20003 	 movw r3,#:lower16:.LANCHOR0
 786 001c C0F20003 	 movt r3,#:upper16:.LANCHOR0
 787 0020 5B88     	 ldrh r3,[r3,#2]
 788 0022 9BB2     	 uxth r3,r3
 789              	.LBE392:
 790              	.LBE391:
 185:src/MightyBoard/Motherboard/Command.cc **** 		// check for completion
 186:src/MightyBoard/Motherboard/Command.cc **** 		if (command_buffer.getLength() >= 25) {
 791              	 .loc 1 186 0
 792 0024 182B     	 cmp r3,#24
 793 0026 79D9     	 bls .L26
 794              	.LBB393:
 187:src/MightyBoard/Motherboard/Command.cc **** 			Motherboard::getBoard().resetUserInputTimeout();
 795              	 .loc 1 187 0
 796 0028 40F20000 	 movw r0,#:lower16:_ZN11Motherboard11motherboardE
 797 002c C0F20000 	 movt r0,#:upper16:_ZN11Motherboard11motherboardE
 798 0030 FFF7FEFF 	 bl _ZN11Motherboard21resetUserInputTimeoutEv
 188:src/MightyBoard/Motherboard/Command.cc **** 			pop8(); // remove the command code
 799              	 .loc 1 188 0
 800 0034 FFF7FEFF 	 bl _ZN7command4pop8Ev
 189:src/MightyBoard/Motherboard/Command.cc **** 			mode = MOVING;
 801              	 .loc 1 189 0
 802 0038 40F20003 	 movw r3,#:lower16:.LANCHOR3
 803 003c C0F20003 	 movt r3,#:upper16:.LANCHOR3
 804 0040 4FF00102 	 mov r2,#1
 805 0044 1A70     	 strb r2,[r3,#0]
 190:src/MightyBoard/Motherboard/Command.cc **** 
 191:src/MightyBoard/Motherboard/Command.cc **** 			int32_t x = pop32();
 806              	 .loc 1 191 0
 807 0046 FFF7FEFF 	 bl _ZN7command5pop32Ev
 808 004a 0646     	 mov r6,r0
 809              	.LVL52:
 192:src/MightyBoard/Motherboard/Command.cc **** 			int32_t y = pop32();
 810              	 .loc 1 192 0
 811 004c FFF7FEFF 	 bl _ZN7command5pop32Ev
 812              	.LVL53:
 813 0050 0746     	 mov r7,r0
 814              	.LVL54:
 193:src/MightyBoard/Motherboard/Command.cc **** 			int32_t z = pop32();
 815              	 .loc 1 193 0
 816 0052 FFF7FEFF 	 bl _ZN7command5pop32Ev
 817              	.LVL55:
 818 0056 8046     	 mov r8,r0
 819              	.LVL56:
 194:src/MightyBoard/Motherboard/Command.cc **** 			int32_t a = pop32();
 820              	 .loc 1 194 0
 821 0058 FFF7FEFF 	 bl _ZN7command5pop32Ev
 822              	.LVL57:
 823 005c 0546     	 mov r5,r0
 824              	.LVL58:
 195:src/MightyBoard/Motherboard/Command.cc **** 			int32_t b = pop32();
 825              	 .loc 1 195 0
 826 005e FFF7FEFF 	 bl _ZN7command5pop32Ev
 827              	.LVL59:
 828 0062 0446     	 mov r4,r0
 829              	.LVL60:
 196:src/MightyBoard/Motherboard/Command.cc **** 			int32_t dda = pop32();
 830              	 .loc 1 196 0
 831 0064 FFF7FEFF 	 bl _ZN7command5pop32Ev
 832              	.LVL61:
 833 0068 0390     	 str r0,[sp,#12]
 834              	.LVL62:
 197:src/MightyBoard/Motherboard/Command.cc **** 
 198:src/MightyBoard/Motherboard/Command.cc **** 			line_number++;
 835              	 .loc 1 198 0
 836 006a 40F20003 	 movw r3,#:lower16:.LANCHOR4
 837 006e C0F20003 	 movt r3,#:upper16:.LANCHOR4
 838 0072 1A68     	 ldr r2,[r3,#0]
 839 0074 02F10102 	 add r2,r2,#1
 840 0078 1A60     	 str r2,[r3,#0]
 199:src/MightyBoard/Motherboard/Command.cc **** 		
 200:src/MightyBoard/Motherboard/Command.cc **** 			planner::addMoveToBuffer(Point(x,y,z,a,b), dda);
 841              	 .loc 1 200 0
 842 007a 0095     	 str r5,[sp,#0]
 843 007c 0194     	 str r4,[sp,#4]
 844 007e 04A8     	 add r0,sp,#16
 845 0080 3146     	 mov r1,r6
 846 0082 3A46     	 mov r2,r7
 847 0084 4346     	 mov r3,r8
 848 0086 FFF7FEFF 	 bl _ZN5PointC1Elllll
 849 008a 04A8     	 add r0,sp,#16
 850 008c 03A9     	 add r1,sp,#12
 851 008e FFF7FEFF 	 bl _ZN7planner15addMoveToBufferERK5PointRKl
 852 0092 43E0     	 b .L26
 853              	.LVL63:
 854              	.L28:
 855              	.LBE393:
 856              	.LBE390:
 857              	.LBB394:
 201:src/MightyBoard/Motherboard/Command.cc **** 		}
 202:src/MightyBoard/Motherboard/Command.cc **** 	}
 203:src/MightyBoard/Motherboard/Command.cc **** 	 else if (command == HOST_CMD_QUEUE_POINT_NEW) {
 858              	 .loc 1 203 0
 859 0094 8E2B     	 cmp r3,#142
 860 0096 41D1     	 bne .L26
 861              	.LVL64:
 862              	.LBB395:
 863              	.LBB396:
 864              	.LBB397:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 865              	 .loc 2 91 0
 866 0098 40F20003 	 movw r3,#:lower16:.LANCHOR0
 867 009c C0F20003 	 movt r3,#:upper16:.LANCHOR0
 868 00a0 5B88     	 ldrh r3,[r3,#2]
 869 00a2 9BB2     	 uxth r3,r3
 870              	.LBE397:
 871              	.LBE396:
 204:src/MightyBoard/Motherboard/Command.cc **** 		// check for completion
 205:src/MightyBoard/Motherboard/Command.cc **** 		if (command_buffer.getLength() >= 26) {
 872              	 .loc 1 205 0
 873 00a4 192B     	 cmp r3,#25
 874 00a6 39D9     	 bls .L26
 875              	.LBB398:
 206:src/MightyBoard/Motherboard/Command.cc **** 			Motherboard::getBoard().resetUserInputTimeout();
 876              	 .loc 1 206 0
 877 00a8 40F20000 	 movw r0,#:lower16:_ZN11Motherboard11motherboardE
 878 00ac C0F20000 	 movt r0,#:upper16:_ZN11Motherboard11motherboardE
 879 00b0 FFF7FEFF 	 bl _ZN11Motherboard21resetUserInputTimeoutEv
 207:src/MightyBoard/Motherboard/Command.cc **** 			pop8(); // remove the command code
 880              	 .loc 1 207 0
 881 00b4 FFF7FEFF 	 bl _ZN7command4pop8Ev
 208:src/MightyBoard/Motherboard/Command.cc **** 			mode = MOVING;
 882              	 .loc 1 208 0
 883 00b8 40F20003 	 movw r3,#:lower16:.LANCHOR3
 884 00bc C0F20003 	 movt r3,#:upper16:.LANCHOR3
 885 00c0 4FF00102 	 mov r2,#1
 886 00c4 1A70     	 strb r2,[r3,#0]
 209:src/MightyBoard/Motherboard/Command.cc **** 			
 210:src/MightyBoard/Motherboard/Command.cc **** 			int32_t x = pop32();
 887              	 .loc 1 210 0
 888 00c6 FFF7FEFF 	 bl _ZN7command5pop32Ev
 889 00ca 0646     	 mov r6,r0
 890              	.LVL65:
 211:src/MightyBoard/Motherboard/Command.cc **** 			int32_t y = pop32();
 891              	 .loc 1 211 0
 892 00cc FFF7FEFF 	 bl _ZN7command5pop32Ev
 893              	.LVL66:
 894 00d0 0746     	 mov r7,r0
 895              	.LVL67:
 212:src/MightyBoard/Motherboard/Command.cc **** 			int32_t z = pop32();
 896              	 .loc 1 212 0
 897 00d2 FFF7FEFF 	 bl _ZN7command5pop32Ev
 898              	.LVL68:
 899 00d6 8046     	 mov r8,r0
 900              	.LVL69:
 213:src/MightyBoard/Motherboard/Command.cc **** 			int32_t a = pop32();
 901              	 .loc 1 213 0
 902 00d8 FFF7FEFF 	 bl _ZN7command5pop32Ev
 903              	.LVL70:
 904 00dc 0546     	 mov r5,r0
 905              	.LVL71:
 214:src/MightyBoard/Motherboard/Command.cc **** 			int32_t b = pop32();
 906              	 .loc 1 214 0
 907 00de FFF7FEFF 	 bl _ZN7command5pop32Ev
 908              	.LVL72:
 909 00e2 0446     	 mov r4,r0
 910              	.LVL73:
 215:src/MightyBoard/Motherboard/Command.cc **** 			int32_t us = pop32();
 911              	 .loc 1 215 0
 912 00e4 FFF7FEFF 	 bl _ZN7command5pop32Ev
 913              	.LVL74:
 914 00e8 0390     	 str r0,[sp,#12]
 915              	.LVL75:
 216:src/MightyBoard/Motherboard/Command.cc **** 			int32_t relative = pop8();
 916              	 .loc 1 216 0
 917 00ea FFF7FEFF 	 bl _ZN7command4pop8Ev
 918 00ee 8146     	 mov r9,r0
 919              	.LVL76:
 217:src/MightyBoard/Motherboard/Command.cc **** 
 218:src/MightyBoard/Motherboard/Command.cc **** 			line_number++;
 920              	 .loc 1 218 0
 921 00f0 40F20003 	 movw r3,#:lower16:.LANCHOR4
 922 00f4 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 923 00f8 1A68     	 ldr r2,[r3,#0]
 924 00fa 02F10102 	 add r2,r2,#1
 925 00fe 1A60     	 str r2,[r3,#0]
 219:src/MightyBoard/Motherboard/Command.cc **** 			
 220:src/MightyBoard/Motherboard/Command.cc **** 			planner::addMoveToBufferRelative(Point(x,y,z,a,b), us, relative);
 926              	 .loc 1 220 0
 927 0100 0095     	 str r5,[sp,#0]
 928 0102 0194     	 str r4,[sp,#4]
 929 0104 09A8     	 add r0,sp,#36
 930              	.LVL77:
 931 0106 3146     	 mov r1,r6
 932 0108 3A46     	 mov r2,r7
 933 010a 4346     	 mov r3,r8
 934 010c FFF7FEFF 	 bl _ZN5PointC1Elllll
 935 0110 09A8     	 add r0,sp,#36
 936 0112 03A9     	 add r1,sp,#12
 937 0114 4FFA89F2 	 sxtb r2,r9
 938 0118 FFF7FEFF 	 bl _ZN7planner23addMoveToBufferRelativeERK5PointRKla
 939              	.LVL78:
 940              	.L26:
 941              	.LBE398:
 942              	.LBE395:
 943              	.LBE394:
 944              	.LBE389:
 945              	.LBE388:
 221:src/MightyBoard/Motherboard/Command.cc **** 		}
 222:src/MightyBoard/Motherboard/Command.cc **** 	}
 223:src/MightyBoard/Motherboard/Command.cc **** 	
 224:src/MightyBoard/Motherboard/Command.cc **** }
 946              	 .loc 1 224 0
 947 011c 0FB0     	 add sp,sp,#60
 948 011e BDE8F083 	 pop {r4,r5,r6,r7,r8,r9,pc}
 949              	 .cfi_endproc
 950              	.LFE132:
 952 0122 00BF     	 .section .text._ZN7command5resetEv,"ax",%progbits
 953              	 .align 2
 954              	 .global _ZN7command5resetEv
 955              	 .thumb
 956              	 .thumb_func
 958              	_ZN7command5resetEv:
 959              	.LFB127:
 151:src/MightyBoard/Motherboard/Command.cc **** void reset() {
 960              	 .loc 1 151 0
 961              	 .cfi_startproc
 962              	 
 963              	 
 964              	 
 965              	.LVL79:
 966              	.LBB399:
 967              	.LBB400:
  51:src/MightyBoard/shared/CircularBuffer.hh **** 		length = 0;
 968              	 .loc 2 51 0
 969 0000 40F20002 	 movw r2,#:lower16:.LANCHOR0
 970 0004 C0F20002 	 movt r2,#:upper16:.LANCHOR0
 971 0008 4FF00001 	 mov r1,#0
 972 000c 5180     	 strh r1,[r2,#2]
  52:src/MightyBoard/shared/CircularBuffer.hh **** 		start = 0;
 973              	 .loc 2 52 0
 974 000e 9180     	 strh r1,[r2,#4]
  53:src/MightyBoard/shared/CircularBuffer.hh **** 		overflow = false;
 975              	 .loc 2 53 0
 976 0010 1173     	 strb r1,[r2,#12]
  54:src/MightyBoard/shared/CircularBuffer.hh **** 		underflow = false;
 977              	 .loc 2 54 0
 978 0012 5173     	 strb r1,[r2,#13]
 979              	.LBE400:
 980              	.LBE399:
 153:src/MightyBoard/Motherboard/Command.cc **** 	line_number = 0;
 981              	 .loc 1 153 0
 982 0014 40F20002 	 movw r2,#:lower16:.LANCHOR4
 983 0018 C0F20002 	 movt r2,#:upper16:.LANCHOR4
 984 001c 1160     	 str r1,[r2,#0]
 154:src/MightyBoard/Motherboard/Command.cc **** 	check_temp_state = false;
 985              	 .loc 1 154 0
 986 001e 40F20002 	 movw r2,#:lower16:.LANCHOR5
 987 0022 C0F20002 	 movt r2,#:upper16:.LANCHOR5
 988 0026 1170     	 strb r1,[r2,#0]
 155:src/MightyBoard/Motherboard/Command.cc **** 	paused = false;
 989              	 .loc 1 155 0
 990 0028 40F20002 	 movw r2,#:lower16:.LANCHOR1
 991 002c C0F20002 	 movt r2,#:upper16:.LANCHOR1
 992 0030 1170     	 strb r1,[r2,#0]
 156:src/MightyBoard/Motherboard/Command.cc **** 	sd_count = 0;
 993              	 .loc 1 156 0
 994 0032 40F20002 	 movw r2,#:lower16:.LANCHOR6
 995 0036 C0F20002 	 movt r2,#:upper16:.LANCHOR6
 996 003a 1160     	 str r1,[r2,#0]
 157:src/MightyBoard/Motherboard/Command.cc **** 	sdcard_reset = false;
 997              	 .loc 1 157 0
 998 003c 40F20002 	 movw r2,#:lower16:.LANCHOR7
 999 0040 C0F20002 	 movt r2,#:upper16:.LANCHOR7
 1000 0044 1170     	 strb r1,[r2,#0]
 158:src/MightyBoard/Motherboard/Command.cc **** 	mode = READY;
 1001              	 .loc 1 158 0
 1002 0046 40F20002 	 movw r2,#:lower16:.LANCHOR3
 1003 004a C0F20002 	 movt r2,#:upper16:.LANCHOR3
 1004 004e 1170     	 strb r1,[r2,#0]
 159:src/MightyBoard/Motherboard/Command.cc **** }
 1005              	 .loc 1 159 0
 1006 0050 7047     	 bx lr
 1007              	 .cfi_endproc
 1008              	.LFE127:
 1010 0052 00BF     	 .section .text._ZN7command9isWaitingEv,"ax",%progbits
 1011              	 .align 2
 1012              	 .global _ZN7command9isWaitingEv
 1013              	 .thumb
 1014              	 .thumb_func
 1016              	_ZN7command9isWaitingEv:
 1017              	.LFB128:
 161:src/MightyBoard/Motherboard/Command.cc **** bool isWaiting(){
 1018              	 .loc 1 161 0
 1019              	 .cfi_startproc
 1020              	 
 1021              	 
 1022              	 
 162:src/MightyBoard/Motherboard/Command.cc **** 	return (mode == WAIT_ON_BUTTON);
 1023              	 .loc 1 162 0
 1024 0000 40F20003 	 movw r3,#:lower16:.LANCHOR3
 1025 0004 C0F20003 	 movt r3,#:upper16:.LANCHOR3
 1026 0008 1878     	 ldrb r0,[r3,#0]
 163:src/MightyBoard/Motherboard/Command.cc **** }
 1027              	 .loc 1 163 0
 1028 000a 0628     	 cmp r0,#6
 1029 000c 14BF     	 ite ne
 1030 000e 0020     	 movne r0,#0
 1031 0010 0120     	 moveq r0,#1
 1032 0012 7047     	 bx lr
 1033              	 .cfi_endproc
 1034              	.LFE128:
 1036              	 .section .text._ZN7command7isReadyEv,"ax",%progbits
 1037              	 .align 2
 1038              	 .global _ZN7command7isReadyEv
 1039              	 .thumb
 1040              	 .thumb_func
 1042              	_ZN7command7isReadyEv:
 1043              	.LFB129:
 165:src/MightyBoard/Motherboard/Command.cc **** bool isReady() {
 1044              	 .loc 1 165 0
 1045              	 .cfi_startproc
 1046              	 
 1047              	 
 1048              	 
 166:src/MightyBoard/Motherboard/Command.cc ****     return (mode == READY);
 1049              	 .loc 1 166 0
 1050 0000 40F20003 	 movw r3,#:lower16:.LANCHOR3
 1051 0004 C0F20003 	 movt r3,#:upper16:.LANCHOR3
 1052 0008 1878     	 ldrb r0,[r3,#0]
 167:src/MightyBoard/Motherboard/Command.cc **** }
 1053              	 .loc 1 167 0
 1054 000a D0F10100 	 rsbs r0,r0,#1
 1055 000e 38BF     	 it cc
 1056 0010 0020     	 movcc r0,#0
 1057 0012 7047     	 bx lr
 1058              	 .cfi_endproc
 1059              	.LFE129:
 1061              	 .section .text._ZN7command13getLineNumberEv,"ax",%progbits
 1062              	 .align 2
 1063              	 .global _ZN7command13getLineNumberEv
 1064              	 .thumb
 1065              	 .thumb_func
 1067              	_ZN7command13getLineNumberEv:
 1068              	.LFB130:
 169:src/MightyBoard/Motherboard/Command.cc **** uint32_t getLineNumber() {
 1069              	 .loc 1 169 0
 1070              	 .cfi_startproc
 1071              	 
 1072              	 
 1073              	 
 170:src/MightyBoard/Motherboard/Command.cc **** 	return line_number;	
 1074              	 .loc 1 170 0
 1075 0000 40F20003 	 movw r3,#:lower16:.LANCHOR4
 1076 0004 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 171:src/MightyBoard/Motherboard/Command.cc **** }
 1077              	 .loc 1 171 0
 1078 0008 1868     	 ldr r0,[r3,#0]
 1079 000a 7047     	 bx lr
 1080              	 .cfi_endproc
 1081              	.LFE130:
 1083              	 .section .text._ZN7command15clearLineNumberEv,"ax",%progbits
 1084              	 .align 2
 1085              	 .global _ZN7command15clearLineNumberEv
 1086              	 .thumb
 1087              	 .thumb_func
 1089              	_ZN7command15clearLineNumberEv:
 1090              	.LFB131:
 173:src/MightyBoard/Motherboard/Command.cc **** void clearLineNumber() {
 1091              	 .loc 1 173 0
 1092              	 .cfi_startproc
 1093              	 
 1094              	 
 1095              	 
 174:src/MightyBoard/Motherboard/Command.cc **** 	line_number = 0;
 1096              	 .loc 1 174 0
 1097 0000 40F20003 	 movw r3,#:lower16:.LANCHOR4
 1098 0004 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 1099 0008 4FF00002 	 mov r2,#0
 1100 000c 1A60     	 str r2,[r3,#0]
 175:src/MightyBoard/Motherboard/Command.cc **** }
 1101              	 .loc 1 175 0
 1102 000e 7047     	 bx lr
 1103              	 .cfi_endproc
 1104              	.LFE131:
 1106              	 .section .text._ZN7command28processExtruderCommandPacketEv,"ax",%progbits
 1107              	 .align 2
 1108              	 .global _ZN7command28processExtruderCommandPacketEv
 1109              	 .thumb
 1110              	 .thumb_func
 1112              	_ZN7command28processExtruderCommandPacketEv:
 1113              	.LFB133:
 225:src/MightyBoard/Motherboard/Command.cc **** 
 226:src/MightyBoard/Motherboard/Command.cc **** bool processExtruderCommandPacket() {
 1114              	 .loc 1 226 0
 1115              	 .cfi_startproc
 1116              	 
 1117              	 
 1118 0000 38B5     	 push {r3,r4,r5,lr}
 1119              	.LCFI6:
 1120              	 .cfi_def_cfa_offset 16
 1121              	 .cfi_offset 14,-4
 1122              	 .cfi_offset 5,-8
 1123              	 .cfi_offset 4,-12
 1124              	 .cfi_offset 3,-16
 1125              	.LBB401:
 227:src/MightyBoard/Motherboard/Command.cc **** 	Motherboard& board = Motherboard::getBoard();
 228:src/MightyBoard/Motherboard/Command.cc ****         uint8_t	id = pop8();
 1126              	 .loc 1 228 0
 1127 0002 FFF7FEFF 	 bl _ZN7command4pop8Ev
 1128 0006 0546     	 mov r5,r0
 1129              	.LVL80:
 229:src/MightyBoard/Motherboard/Command.cc **** 		uint8_t command = pop8();
 1130              	 .loc 1 229 0
 1131 0008 FFF7FEFF 	 bl _ZN7command4pop8Ev
 1132              	.LVL81:
 1133 000c 0446     	 mov r4,r0
 1134              	.LVL82:
 230:src/MightyBoard/Motherboard/Command.cc **** 		uint8_t length = pop8();
 1135              	 .loc 1 230 0
 1136 000e FFF7FEFF 	 bl _ZN7command4pop8Ev
 1137              	.LVL83:
 1138              	.LBB402:
 231:src/MightyBoard/Motherboard/Command.cc **** 
 232:src/MightyBoard/Motherboard/Command.cc **** 		switch (command) {
 1139              	 .loc 1 232 0
 1140 0012 A4F10304 	 sub r4,r4,#3
 1141              	.LVL84:
 1142 0016 1C2C     	 cmp r4,#28
 1143 0018 00F2D180 	 bhi .L58
 1144 001c DFE814F0 	 tbh [pc,r4,lsl#1]
 1145              	.L51:
 1146 0020 1D00     	 .2byte (.L36-.L51)/2
 1147 0022 A700     	 .2byte (.L37-.L51)/2
 1148 0024 AC00     	 .2byte (.L38-.L51)/2
 1149 0026 BB00     	 .2byte (.L39-.L51)/2
 1150 0028 C000     	 .2byte (.L40-.L51)/2
 1151 002a B100     	 .2byte (.L41-.L51)/2
 1152 002c B600     	 .2byte (.L42-.L51)/2
 1153 002e 9D00     	 .2byte (.L43-.L51)/2
 1154 0030 A200     	 .2byte (.L44-.L51)/2
 1155 0032 5600     	 .2byte (.L45-.L51)/2
 1156 0034 6700     	 .2byte (.L46-.L51)/2
 1157 0036 C500     	 .2byte (.L47-.L51)/2
 1158 0038 CA00     	 .2byte (.L48-.L51)/2
 1159 003a CF00     	 .2byte (.L58-.L51)/2
 1160 003c CF00     	 .2byte (.L58-.L51)/2
 1161 003e CF00     	 .2byte (.L58-.L51)/2
 1162 0040 CF00     	 .2byte (.L58-.L51)/2
 1163 0042 CF00     	 .2byte (.L58-.L51)/2
 1164 0044 CF00     	 .2byte (.L58-.L51)/2
 1165 0046 CF00     	 .2byte (.L58-.L51)/2
 1166 0048 4C00     	 .2byte (.L49-.L51)/2
 1167 004a CF00     	 .2byte (.L58-.L51)/2
 1168 004c CF00     	 .2byte (.L58-.L51)/2
 1169 004e CF00     	 .2byte (.L58-.L51)/2
 1170 0050 CF00     	 .2byte (.L58-.L51)/2
 1171 0052 CF00     	 .2byte (.L58-.L51)/2
 1172 0054 CF00     	 .2byte (.L58-.L51)/2
 1173 0056 CF00     	 .2byte (.L58-.L51)/2
 1174 0058 7400     	 .2byte (.L50-.L51)/2
 1175              	.L36:
 1176              	.LVL85:
 1177              	.LBB403:
 1178              	.LBB404:
 1179              	.LBB405:
 1180              	 .file 3 "src/MightyBoard/Motherboard/Motherboard.hh"
   1:src/MightyBoard/Motherboard/Motherboard.hh **** /*
   2:src/MightyBoard/Motherboard/Motherboard.hh ****  * Copyright 2010 by Adam Mayer	 <adam@makerbot.com>
   3:src/MightyBoard/Motherboard/Motherboard.hh ****  *
   4:src/MightyBoard/Motherboard/Motherboard.hh ****  * This program is free software: you can redistribute it and/or modify
   5:src/MightyBoard/Motherboard/Motherboard.hh ****  * it under the terms of the GNU General Public License as published by
   6:src/MightyBoard/Motherboard/Motherboard.hh ****  * the Free Software Foundation, either version 3 of the License, or
   7:src/MightyBoard/Motherboard/Motherboard.hh ****  * (at your option) any later version.
   8:src/MightyBoard/Motherboard/Motherboard.hh ****  *
   9:src/MightyBoard/Motherboard/Motherboard.hh ****  * This program is distributed in the hope that it will be useful,
  10:src/MightyBoard/Motherboard/Motherboard.hh ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:src/MightyBoard/Motherboard/Motherboard.hh ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:src/MightyBoard/Motherboard/Motherboard.hh ****  * GNU General Public License for more details.
  13:src/MightyBoard/Motherboard/Motherboard.hh ****  *
  14:src/MightyBoard/Motherboard/Motherboard.hh ****  * You should have received a copy of the GNU General Public License
  15:src/MightyBoard/Motherboard/Motherboard.hh ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>
  16:src/MightyBoard/Motherboard/Motherboard.hh ****  */
  17:src/MightyBoard/Motherboard/Motherboard.hh **** 
  18:src/MightyBoard/Motherboard/Motherboard.hh **** #ifndef BOARDS_MB40_MOTHERBOARD_HH_
  19:src/MightyBoard/Motherboard/Motherboard.hh **** #define BOARDS_MB40_MOTHERBOARD_HH_
  20:src/MightyBoard/Motherboard/Motherboard.hh **** 
  21:src/MightyBoard/Motherboard/Motherboard.hh **** #include "UART.hh"
  22:src/MightyBoard/Motherboard/Motherboard.hh **** #include "DigiPots.hh"
  23:src/MightyBoard/Motherboard/Motherboard.hh **** #include "Types.hh"
  24:src/MightyBoard/Motherboard/Motherboard.hh **** #include "PSU.hh"
  25:src/MightyBoard/Motherboard/Motherboard.hh **** #include "Configuration.hh"
  26:src/MightyBoard/Motherboard/Motherboard.hh **** #include "Timeout.hh"
  27:src/MightyBoard/Motherboard/Motherboard.hh **** //#include "Menu.hh"
  28:src/MightyBoard/Motherboard/Motherboard.hh **** //#include "InterfaceBoard.hh"
  29:src/MightyBoard/Motherboard/Motherboard.hh **** //#include "LiquidCrystalSerial.hh"
  30:src/MightyBoard/Motherboard/Motherboard.hh **** //#include "ButtonArray.hh"
  31:src/MightyBoard/Motherboard/Motherboard.hh **** #include "Thermistor.hh"
  32:src/MightyBoard/Motherboard/Motherboard.hh **** #include "HeatingElement.hh"
  33:src/MightyBoard/Motherboard/Motherboard.hh **** #include "Heater.hh"
  34:src/MightyBoard/Motherboard/Motherboard.hh **** #include "ExtruderBoard.hh"
  35:src/MightyBoard/Motherboard/Motherboard.hh **** #include "Cutoff.hh"
  36:src/MightyBoard/Motherboard/Motherboard.hh **** 
  37:src/MightyBoard/Motherboard/Motherboard.hh **** enum status_states{
  38:src/MightyBoard/Motherboard/Motherboard.hh **** 	STATUS_NONE = 0,
  39:src/MightyBoard/Motherboard/Motherboard.hh **** 	STATUS_HEAT_INACTIVE_SHUTDOWN = 0x40
  40:src/MightyBoard/Motherboard/Motherboard.hh **** };
  41:src/MightyBoard/Motherboard/Motherboard.hh **** 
  42:src/MightyBoard/Motherboard/Motherboard.hh **** 
  43:src/MightyBoard/Motherboard/Motherboard.hh **** /// Build platform heating element on v34 Extruder controller
  44:src/MightyBoard/Motherboard/Motherboard.hh **** /// \ingroup ECv34
  45:src/MightyBoard/Motherboard/Motherboard.hh **** class BuildPlatformHeatingElement : public HeatingElement {
  46:src/MightyBoard/Motherboard/Motherboard.hh **** public:
  47:src/MightyBoard/Motherboard/Motherboard.hh **** 	void setHeatingElement(uint8_t value);
  48:src/MightyBoard/Motherboard/Motherboard.hh **** };
  49:src/MightyBoard/Motherboard/Motherboard.hh **** 
  50:src/MightyBoard/Motherboard/Motherboard.hh **** /// Main class for Motherboard version 4.0+ (Gen4 electronics)
  51:src/MightyBoard/Motherboard/Motherboard.hh **** /// \ingroup HardwareLibraries
  52:src/MightyBoard/Motherboard/Motherboard.hh **** /// \ingroup MBv40
  53:src/MightyBoard/Motherboard/Motherboard.hh **** class Motherboard {
  54:src/MightyBoard/Motherboard/Motherboard.hh **** private:
  55:src/MightyBoard/Motherboard/Motherboard.hh ****         // TODO: Declare this in main, drop the singleton.
  56:src/MightyBoard/Motherboard/Motherboard.hh ****         /// Static instance of the motherboard
  57:src/MightyBoard/Motherboard/Motherboard.hh ****         static Motherboard motherboard;
  58:src/MightyBoard/Motherboard/Motherboard.hh **** 
  59:src/MightyBoard/Motherboard/Motherboard.hh **** public:
  60:src/MightyBoard/Motherboard/Motherboard.hh ****         /// Get the motherboard instance.
  61:src/MightyBoard/Motherboard/Motherboard.hh ****         static Motherboard& getBoard() { return motherboard; }
  62:src/MightyBoard/Motherboard/Motherboard.hh ****        ExtruderBoard& getExtruderBoard(uint8_t id) { if(id == 1){ return Extruder_Two;} else  { ret
 1181              	 .loc 3 62 0
 1182 005a 624B     	 ldr r3,.L64
 1183 005c A3F1E004 	 sub r4,r3,#224
 1184              	.LVL86:
 1185 0060 012D     	 cmp r5,#1
 1186 0062 08BF     	 it eq
 1187 0064 1C46     	 moveq r4,r3
 1188              	.LVL87:
 1189              	.LBE405:
 1190              	.LBE404:
 233:src/MightyBoard/Motherboard/Command.cc **** 		case SLAVE_CMD_SET_TEMP:
 234:src/MightyBoard/Motherboard/Command.cc **** 			board.getExtruderBoard(id).getExtruderHeater().set_target_temperature(pop16());
 1191              	 .loc 1 234 0
 1192 0066 FFF7FEFF 	 bl _ZN7command5pop16Ev
 1193 006a 0146     	 mov r1,r0
 1194 006c 04F12800 	 add r0,r4,#40
 1195 0070 FFF7FEFF 	 bl _ZN6Heater22set_target_temperatureEi
 1196              	.LVL88:
 235:src/MightyBoard/Motherboard/Command.cc **** 			/// if platform is actively heating and extruder is not cooling down, pause extruder
 236:src/MightyBoard/Motherboard/Command.cc **** 			if(board.getPlatformHeater().isHeating() && !board.getPlatformHeater().isCooling() && !board.get
 1197              	 .loc 1 236 0
 1198 0074 5C48     	 ldr r0,.L64+4
 1199 0076 FFF7FEFF 	 bl _ZN6Heater9isHeatingEv
 1200 007a 0028     	 cmp r0,#0
 1201 007c 00F0A280 	 beq .L53
 1202              	.LVL89:
 1203 0080 5948     	 ldr r0,.L64+4
 1204 0082 FFF7FEFF 	 bl _ZN6Heater9isCoolingEv
 1205 0086 0028     	 cmp r0,#0
 1206 0088 40F09C80 	 bne .L53
 1207              	.LVL90:
 1208 008c 04F12800 	 add r0,r4,#40
 1209 0090 FFF7FEFF 	 bl _ZN6Heater9isCoolingEv
 1210 0094 0028     	 cmp r0,#0
 1211 0096 40F09580 	 bne .L53
 237:src/MightyBoard/Motherboard/Command.cc **** 				check_temp_state = true;
 1212              	 .loc 1 237 0 discriminator 5
 1213 009a 40F20003 	 movw r3,#:lower16:.LANCHOR5
 1214 009e C0F20003 	 movt r3,#:upper16:.LANCHOR5
 1215 00a2 4FF00102 	 mov r2,#1
 1216 00a6 1A70     	 strb r2,[r3,#0]
 1217              	.LVL91:
 238:src/MightyBoard/Motherboard/Command.cc **** 				board.getExtruderBoard(id).getExtruderHeater().Pause(true);
 1218              	 .loc 1 238 0 discriminator 5
 1219 00a8 04F12800 	 add r0,r4,#40
 1220 00ac 1146     	 mov r1,r2
 1221 00ae FFF7FEFF 	 bl _ZN6Heater5PauseEb
 239:src/MightyBoard/Motherboard/Command.cc **** 			}  /// else ensure extruder is not paused  
 240:src/MightyBoard/Motherboard/Command.cc **** 			else {
 241:src/MightyBoard/Motherboard/Command.cc **** 				board.getExtruderBoard(id).getExtruderHeater().Pause(false);
 242:src/MightyBoard/Motherboard/Command.cc **** 			}
 243:src/MightyBoard/Motherboard/Command.cc **** 			return true;
 1222              	 .loc 1 243 0 discriminator 5
 1223 00b2 4FF00100 	 mov r0,#1
 1224 00b6 38BD     	 pop {r3,r4,r5,pc}
 1225              	.LVL92:
 1226              	.L49:
 244:src/MightyBoard/Motherboard/Command.cc **** 		// can be removed in process via host query works OK
 245:src/MightyBoard/Motherboard/Command.cc ****  		case SLAVE_CMD_PAUSE_UNPAUSE:
 246:src/MightyBoard/Motherboard/Command.cc **** 			host::pauseBuild(!command::isPaused());
 1227              	 .loc 1 246 0
 1228 00b8 FFF7FEFF 	 bl _ZN7command8isPausedEv
 1229 00bc 80F00100 	 eor r0,r0,#1
 1230 00c0 C0B2     	 uxtb r0,r0
 1231 00c2 FFF7FEFF 	 bl _ZN4host10pauseBuildEb
 247:src/MightyBoard/Motherboard/Command.cc **** 			return true;
 1232              	 .loc 1 247 0
 1233 00c6 4FF00100 	 mov r0,#1
 1234 00ca 38BD     	 pop {r3,r4,r5,pc}
 1235              	.L45:
 1236              	.LVL93:
 1237              	.LBB406:
 1238              	.LBB407:
 1239              	 .loc 3 62 0
 1240 00cc 454B     	 ldr r3,.L64
 1241 00ce A3F1E002 	 sub r2,r3,#224
 1242 00d2 012D     	 cmp r5,#1
 1243 00d4 14BF     	 ite ne
 1244 00d6 1546     	 movne r5,r2
 1245 00d8 1D46     	 moveq r5,r3
 1246              	.LVL94:
 1247              	.LBE407:
 1248              	.LBE406:
 248:src/MightyBoard/Motherboard/Command.cc **** 		case SLAVE_CMD_TOGGLE_FAN:
 249:src/MightyBoard/Motherboard/Command.cc **** 			board.getExtruderBoard(id).setFan((pop8() & 0x01) != 0);
 1249              	 .loc 1 249 0
 1250 00da FFF7FEFF 	 bl _ZN7command4pop8Ev
 1251 00de 00F00101 	 and r1,r0,#1
 1252 00e2 2846     	 mov r0,r5
 1253 00e4 FFF7FEFF 	 bl _ZN13ExtruderBoard6setFanEh
 250:src/MightyBoard/Motherboard/Command.cc **** 			return true;
 1254              	 .loc 1 250 0
 1255 00e8 4FF00100 	 mov r0,#1
 1256 00ec 38BD     	 pop {r3,r4,r5,pc}
 1257              	.LVL95:
 1258              	.L46:
 251:src/MightyBoard/Motherboard/Command.cc **** 		case SLAVE_CMD_TOGGLE_VALVE:
 252:src/MightyBoard/Motherboard/Command.cc **** 			board.setValve((pop8() & 0x01) != 0);
 1259              	 .loc 1 252 0
 1260 00ee FFF7FEFF 	 bl _ZN7command4pop8Ev
 1261 00f2 00F00101 	 and r1,r0,#1
 1262 00f6 40F20000 	 movw r0,#:lower16:_ZN11Motherboard11motherboardE
 1263 00fa C0F20000 	 movt r0,#:upper16:_ZN11Motherboard11motherboardE
 1264 00fe FFF7FEFF 	 bl _ZN11Motherboard8setValveEb
 253:src/MightyBoard/Motherboard/Command.cc **** 			return true;
 1265              	 .loc 1 253 0
 1266 0102 4FF00100 	 mov r0,#1
 1267 0106 38BD     	 pop {r3,r4,r5,pc}
 1268              	.L50:
 254:src/MightyBoard/Motherboard/Command.cc **** 		case SLAVE_CMD_SET_PLATFORM_TEMP:
 255:src/MightyBoard/Motherboard/Command.cc **** 			board.setUsingPlatform(true);
 1269              	 .loc 1 255 0
 1270 0108 40F20004 	 movw r4,#:lower16:_ZN11Motherboard11motherboardE
 1271              	.LVL96:
 1272 010c C0F20004 	 movt r4,#:upper16:_ZN11Motherboard11motherboardE
 1273 0110 2046     	 mov r0,r4
 1274 0112 4FF00101 	 mov r1,#1
 1275 0116 FFF7FEFF 	 bl _ZN11Motherboard16setUsingPlatformEb
 1276              	.LVL97:
 256:src/MightyBoard/Motherboard/Command.cc **** 			board.getPlatformHeater().set_target_temperature(pop16());
 1277              	 .loc 1 256 0
 1278 011a FFF7FEFF 	 bl _ZN7command5pop16Ev
 1279 011e 0146     	 mov r1,r0
 1280 0120 04F50375 	 add r5,r4,#524
 1281              	.LVL98:
 1282 0124 2846     	 mov r0,r5
 1283 0126 FFF7FEFF 	 bl _ZN6Heater22set_target_temperatureEi
 1284              	.LVL99:
 257:src/MightyBoard/Motherboard/Command.cc **** 			// pause extruder heaters platform is heating up
 258:src/MightyBoard/Motherboard/Command.cc **** 			bool pause_state; /// avr-gcc doesn't allow cross-initializtion of variables within a switch sta
 259:src/MightyBoard/Motherboard/Command.cc **** 			pause_state = false;
 260:src/MightyBoard/Motherboard/Command.cc **** 			if(!board.getPlatformHeater().isCooling()){
 1285              	 .loc 1 260 0
 1286 012a 2846     	 mov r0,r5
 1287 012c FFF7FEFF 	 bl _ZN6Heater9isCoolingEv
 226:src/MightyBoard/Motherboard/Command.cc **** bool processExtruderCommandPacket() {
 1288              	 .loc 1 226 0
 1289 0130 80F00100 	 eor r0,r0,#1
 1290 0134 C5B2     	 uxtb r5,r0
 1291              	.LVL100:
 261:src/MightyBoard/Motherboard/Command.cc **** 				pause_state = true;
 262:src/MightyBoard/Motherboard/Command.cc **** 			}
 263:src/MightyBoard/Motherboard/Command.cc **** 			check_temp_state = pause_state;
 1292              	 .loc 1 263 0
 1293 0136 40F20003 	 movw r3,#:lower16:.LANCHOR5
 1294 013a C0F20003 	 movt r3,#:upper16:.LANCHOR5
 1295 013e 1D70     	 strb r5,[r3,#0]
 1296              	.LVL101:
 264:src/MightyBoard/Motherboard/Command.cc **** 			board.getExtruderBoard(0).getExtruderHeater().Pause(pause_state);
 1297              	 .loc 1 264 0
 1298 0140 04F15000 	 add r0,r4,#80
 1299 0144 2946     	 mov r1,r5
 1300 0146 FFF7FEFF 	 bl _ZN6Heater5PauseEb
 1301              	.LVL102:
 265:src/MightyBoard/Motherboard/Command.cc **** 			board.getExtruderBoard(1).getExtruderHeater().Pause(pause_state);
 1302              	 .loc 1 265 0
 1303 014a 04F59870 	 add r0,r4,#304
 1304 014e 2946     	 mov r1,r5
 1305 0150 FFF7FEFF 	 bl _ZN6Heater5PauseEb
 266:src/MightyBoard/Motherboard/Command.cc **** 			
 267:src/MightyBoard/Motherboard/Command.cc **** 			return true;
 1306              	 .loc 1 267 0
 1307 0154 4FF00100 	 mov r0,#1
 1308 0158 38BD     	 pop {r3,r4,r5,pc}
 1309              	.LVL103:
 1310              	.L43:
 268:src/MightyBoard/Motherboard/Command.cc ****         // not being used with 5D
 269:src/MightyBoard/Motherboard/Command.cc **** 		case SLAVE_CMD_TOGGLE_MOTOR_1:
 270:src/MightyBoard/Motherboard/Command.cc **** 			pop8();
 1311              	 .loc 1 270 0
 1312 015a FFF7FEFF 	 bl _ZN7command4pop8Ev
 271:src/MightyBoard/Motherboard/Command.cc **** 			return true;
 1313              	 .loc 1 271 0
 1314 015e 4FF00100 	 mov r0,#1
 1315 0162 38BD     	 pop {r3,r4,r5,pc}
 1316              	.L44:
 272:src/MightyBoard/Motherboard/Command.cc ****         // not being used with 5D
 273:src/MightyBoard/Motherboard/Command.cc **** 		case SLAVE_CMD_TOGGLE_MOTOR_2: 
 274:src/MightyBoard/Motherboard/Command.cc **** 			pop8();
 1317              	 .loc 1 274 0
 1318 0164 FFF7FEFF 	 bl _ZN7command4pop8Ev
 275:src/MightyBoard/Motherboard/Command.cc **** 			return true;
 1319              	 .loc 1 275 0
 1320 0168 4FF00100 	 mov r0,#1
 1321 016c 38BD     	 pop {r3,r4,r5,pc}
 1322              	.L37:
 276:src/MightyBoard/Motherboard/Command.cc **** 		case SLAVE_CMD_SET_MOTOR_1_PWM:
 277:src/MightyBoard/Motherboard/Command.cc **** 			pop8();
 1323              	 .loc 1 277 0
 1324 016e FFF7FEFF 	 bl _ZN7command4pop8Ev
 278:src/MightyBoard/Motherboard/Command.cc **** 			return true;
 1325              	 .loc 1 278 0
 1326 0172 4FF00100 	 mov r0,#1
 1327 0176 38BD     	 pop {r3,r4,r5,pc}
 1328              	.L38:
 279:src/MightyBoard/Motherboard/Command.cc **** 		case SLAVE_CMD_SET_MOTOR_2_PWM:
 280:src/MightyBoard/Motherboard/Command.cc **** 			pop8();
 1329              	 .loc 1 280 0
 1330 0178 FFF7FEFF 	 bl _ZN7command4pop8Ev
 281:src/MightyBoard/Motherboard/Command.cc **** 			return true;
 1331              	 .loc 1 281 0
 1332 017c 4FF00100 	 mov r0,#1
 1333 0180 38BD     	 pop {r3,r4,r5,pc}
 1334              	.L41:
 282:src/MightyBoard/Motherboard/Command.cc **** 		case SLAVE_CMD_SET_MOTOR_1_DIR:
 283:src/MightyBoard/Motherboard/Command.cc **** 			pop8();
 1335              	 .loc 1 283 0
 1336 0182 FFF7FEFF 	 bl _ZN7command4pop8Ev
 284:src/MightyBoard/Motherboard/Command.cc **** 			return true;
 1337              	 .loc 1 284 0
 1338 0186 4FF00100 	 mov r0,#1
 1339 018a 38BD     	 pop {r3,r4,r5,pc}
 1340              	.L42:
 285:src/MightyBoard/Motherboard/Command.cc **** 		case SLAVE_CMD_SET_MOTOR_2_DIR:
 286:src/MightyBoard/Motherboard/Command.cc **** 			pop8();
 1341              	 .loc 1 286 0
 1342 018c FFF7FEFF 	 bl _ZN7command4pop8Ev
 287:src/MightyBoard/Motherboard/Command.cc **** 			return true;
 1343              	 .loc 1 287 0
 1344 0190 4FF00100 	 mov r0,#1
 1345 0194 38BD     	 pop {r3,r4,r5,pc}
 1346              	.L39:
 288:src/MightyBoard/Motherboard/Command.cc **** 		case SLAVE_CMD_SET_MOTOR_1_RPM:
 289:src/MightyBoard/Motherboard/Command.cc **** 			pop32();
 1347              	 .loc 1 289 0
 1348 0196 FFF7FEFF 	 bl _ZN7command5pop32Ev
 290:src/MightyBoard/Motherboard/Command.cc **** 			return true;
 1349              	 .loc 1 290 0
 1350 019a 4FF00100 	 mov r0,#1
 1351 019e 38BD     	 pop {r3,r4,r5,pc}
 1352              	.L40:
 291:src/MightyBoard/Motherboard/Command.cc **** 		case SLAVE_CMD_SET_MOTOR_2_RPM:
 292:src/MightyBoard/Motherboard/Command.cc **** 			pop32();
 1353              	 .loc 1 292 0
 1354 01a0 FFF7FEFF 	 bl _ZN7command5pop32Ev
 293:src/MightyBoard/Motherboard/Command.cc **** 			return true;
 1355              	 .loc 1 293 0
 1356 01a4 4FF00100 	 mov r0,#1
 1357 01a8 38BD     	 pop {r3,r4,r5,pc}
 1358              	.L47:
 294:src/MightyBoard/Motherboard/Command.cc **** 		case SLAVE_CMD_SET_SERVO_1_POS:
 295:src/MightyBoard/Motherboard/Command.cc **** 			pop8();
 1359              	 .loc 1 295 0
 1360 01aa FFF7FEFF 	 bl _ZN7command4pop8Ev
 296:src/MightyBoard/Motherboard/Command.cc **** 			return true;
 1361              	 .loc 1 296 0
 1362 01ae 4FF00100 	 mov r0,#1
 1363 01b2 38BD     	 pop {r3,r4,r5,pc}
 1364              	.L48:
 297:src/MightyBoard/Motherboard/Command.cc **** 		case SLAVE_CMD_SET_SERVO_2_POS:
 298:src/MightyBoard/Motherboard/Command.cc **** 			pop8();
 1365              	 .loc 1 298 0
 1366 01b4 FFF7FEFF 	 bl _ZN7command4pop8Ev
 299:src/MightyBoard/Motherboard/Command.cc **** 			return true;
 1367              	 .loc 1 299 0
 1368 01b8 4FF00100 	 mov r0,#1
 1369 01bc 38BD     	 pop {r3,r4,r5,pc}
 1370              	.L58:
 1371              	.LBE403:
 300:src/MightyBoard/Motherboard/Command.cc **** 		}
 301:src/MightyBoard/Motherboard/Command.cc **** 	return false;
 1372              	 .loc 1 301 0
 1373 01be 4FF00000 	 mov r0,#0
 1374              	.LBE402:
 1375              	.LBE401:
 302:src/MightyBoard/Motherboard/Command.cc **** }
 1376              	 .loc 1 302 0
 1377 01c2 38BD     	 pop {r3,r4,r5,pc}
 1378              	.LVL104:
 1379              	.L53:
 1380              	.LBB412:
 1381              	.LBB411:
 1382              	.LBB410:
 1383              	.LBB408:
 1384              	.LBB409:
 1385              	 .loc 3 62 0
 1386 01c4 074B     	 ldr r3,.L64
 1387 01c6 A3F1E000 	 sub r0,r3,#224
 1388 01ca 012D     	 cmp r5,#1
 1389 01cc 08BF     	 it eq
 1390 01ce 1846     	 moveq r0,r3
 1391              	.LVL105:
 1392              	.LBE409:
 1393              	.LBE408:
 241:src/MightyBoard/Motherboard/Command.cc **** 				board.getExtruderBoard(id).getExtruderHeater().Pause(false);
 1394              	 .loc 1 241 0
 1395 01d0 00F12800 	 add r0,r0,#40
 1396              	.LVL106:
 1397 01d4 4FF00001 	 mov r1,#0
 1398 01d8 FFF7FEFF 	 bl _ZN6Heater5PauseEb
 1399              	.LVL107:
 243:src/MightyBoard/Motherboard/Command.cc **** 			return true;
 1400              	 .loc 1 243 0
 1401 01dc 4FF00100 	 mov r0,#1
 1402 01e0 38BD     	 pop {r3,r4,r5,pc}
 1403              	.L65:
 1404 01e2 00BF     	 .align 2
 1405              	.L64:
 1406 01e4 08010000 	 .word _ZN11Motherboard11motherboardE+264
 1407 01e8 0C020000 	 .word _ZN11Motherboard11motherboardE+524
 1408              	.LBE410:
 1409              	.LBE411:
 1410              	.LBE412:
 1411              	 .cfi_endproc
 1412              	.LFE133:
 1414              	 .section .text._ZN7command15runCommandSliceEv,"ax",%progbits
 1415              	 .align 2
 1416              	 .global _ZN7command15runCommandSliceEv
 1417              	 .thumb
 1418              	 .thumb_func
 1420              	_ZN7command15runCommandSliceEv:
 1421              	.LFB134:
 303:src/MightyBoard/Motherboard/Command.cc **** 
 304:src/MightyBoard/Motherboard/Command.cc **** 
 305:src/MightyBoard/Motherboard/Command.cc **** // A fast slice for processing commands and refilling the stepper queue, etc.
 306:src/MightyBoard/Motherboard/Command.cc **** void runCommandSlice() {
 1422              	 .loc 1 306 0
 1423              	 .cfi_startproc
 1424              	 
 1425              	 
 1426 0000 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
 1427              	.LCFI7:
 1428              	 .cfi_def_cfa_offset 24
 1429              	 .cfi_offset 14,-4
 1430              	 .cfi_offset 8,-8
 1431              	 .cfi_offset 7,-12
 1432              	 .cfi_offset 6,-16
 1433              	 .cfi_offset 5,-20
 1434              	 .cfi_offset 4,-24
 1435 0004 96B0     	 sub sp,sp,#88
 1436              	.LCFI8:
 1437              	 .cfi_def_cfa_offset 112
 1438              	.LBB413:
 307:src/MightyBoard/Motherboard/Command.cc ****     // get command from SD card if building from SD
 308:src/MightyBoard/Motherboard/Command.cc **** 	if (sdcard::isPlaying()) {
 1439              	 .loc 1 308 0
 1440 0006 FFF7FEFF 	 bl _ZN6sdcard9isPlayingEv
 1441 000a A0B9     	 cbnz r0,.L141
 1442 000c 63E0     	 b .L68
 1443              	.LVL108:
 1444              	.L71:
 1445              	.LBB414:
 1446              	.LBB415:
  59:src/MightyBoard/shared/CircularBuffer.hh **** 			operator[](length) = b;
 1447              	 .loc 2 59 0
 1448 000e 6188     	 ldrh r1,[r4,#2]
 1449 0010 89B2     	 uxth r1,r1
 1450              	.LVL109:
 1451              	.LBB416:
 1452              	.LBB417:
 105:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufSizeType actual_index = (index + start) % size;
 1453              	 .loc 2 105 0
 1454 0012 A288     	 ldrh r2,[r4,#4]
 1455 0014 92B2     	 uxth r2,r2
 1456              	.LVL110:
 1457 0016 8A18     	 adds r2,r1,r2
 1458              	.LVL111:
 1459 0018 92FBF3F1 	 sdiv r1,r2,r3
 1460              	.LVL112:
 1461 001c 03FB1123 	 mls r3,r3,r1,r2
 1462              	 .loc 2 106 0
 1463 0020 9BB2     	 uxth r3,r3
 1464              	.LBE417:
 1465              	.LBE416:
  59:src/MightyBoard/shared/CircularBuffer.hh **** 			operator[](length) = b;
 1466              	 .loc 2 59 0
 1467 0022 A268     	 ldr r2,[r4,#8]
 1468 0024 D054     	 strb r0,[r2,r3]
  60:src/MightyBoard/shared/CircularBuffer.hh **** 			length++;
 1469              	 .loc 2 60 0
 1470 0026 6388     	 ldrh r3,[r4,#2]
 1471 0028 03F10103 	 add r3,r3,#1
 1472 002c 9BB2     	 uxth r3,r3
 1473 002e 6380     	 strh r3,[r4,#2]
 1474 0030 0BE0     	 b .L145
 1475              	.LVL113:
 1476              	.L149:
  62:src/MightyBoard/shared/CircularBuffer.hh **** 			overflow = true;
 1477              	 .loc 2 62 0
 1478 0032 2673     	 strb r6,[r4,#12]
 1479 0034 09E0     	 b .L145
 1480              	.LVL114:
 1481              	.L141:
 1482              	.LBE415:
 1483              	.LBE414:
 1484              	.LBB420:
 1485              	.LBB421:
  96:src/MightyBoard/shared/CircularBuffer.hh **** 		return size - length;
 1486              	 .loc 2 96 0 discriminator 1
 1487 0036 40F20004 	 movw r4,#:lower16:.LANCHOR0
 1488 003a C0F20004 	 movt r4,#:upper16:.LANCHOR0
 1489              	.LBE421:
 1490              	.LBE420:
 309:src/MightyBoard/Motherboard/Command.cc **** 		while (command_buffer.getRemainingCapacity() > 0 && sdcard::playbackHasNext()) {
 310:src/MightyBoard/Motherboard/Command.cc **** 			sd_count++;
 1491              	 .loc 1 310 0 discriminator 1
 1492 003e 40F20005 	 movw r5,#:lower16:.LANCHOR6
 1493 0042 C0F20005 	 movt r5,#:upper16:.LANCHOR6
 1494              	.LBB423:
 1495              	.LBB418:
  62:src/MightyBoard/shared/CircularBuffer.hh **** 			overflow = true;
 1496              	 .loc 2 62 0 discriminator 1
 1497 0046 4FF00106 	 mov r6,#1
 1498              	.L145:
 1499              	.LVL115:
 1500              	.LBE418:
 1501              	.LBE423:
 1502              	.LBB424:
 1503              	.LBB422:
  96:src/MightyBoard/shared/CircularBuffer.hh **** 		return size - length;
 1504              	 .loc 2 96 0 discriminator 1
 1505 004a 6388     	 ldrh r3,[r4,#2]
 1506 004c 9BB2     	 uxth r3,r3
 1507              	.LBE422:
 1508              	.LBE424:
 309:src/MightyBoard/Motherboard/Command.cc **** 		while (command_buffer.getRemainingCapacity() > 0 && sdcard::playbackHasNext()) {
 1509              	 .loc 1 309 0 discriminator 1
 1510 004e 2288     	 ldrh r2,[r4,#0]
 1511 0050 9A42     	 cmp r2,r3
 1512 0052 00F08885 	 beq .L70
 309:src/MightyBoard/Motherboard/Command.cc **** 		while (command_buffer.getRemainingCapacity() > 0 && sdcard::playbackHasNext()) {
 1513              	 .loc 1 309 0 is_stmt 0 discriminator 2
 1514 0056 FFF7FEFF 	 bl _ZN6sdcard15playbackHasNextEv
 1515 005a 0028     	 cmp r0,#0
 1516 005c 00F08385 	 beq .L70
 1517              	 .loc 1 310 0 is_stmt 1 discriminator 5
 1518 0060 2B68     	 ldr r3,[r5,#0]
 1519 0062 03F10103 	 add r3,r3,#1
 1520 0066 2B60     	 str r3,[r5,#0]
 311:src/MightyBoard/Motherboard/Command.cc **** 			command_buffer.push(sdcard::playbackNext());
 1521              	 .loc 1 311 0 discriminator 5
 1522 0068 FFF7FEFF 	 bl _ZN6sdcard12playbackNextEv
 1523              	.LVL116:
 1524              	.LBB425:
 1525              	.LBB419:
  58:src/MightyBoard/shared/CircularBuffer.hh **** 		if (length < size) {
 1526              	 .loc 2 58 0 discriminator 5
 1527 006c 6288     	 ldrh r2,[r4,#2]
 1528 006e 92B2     	 uxth r2,r2
 1529 0070 2388     	 ldrh r3,[r4,#0]
 1530 0072 9A42     	 cmp r2,r3
 1531 0074 CBD3     	 bcc .L71
 1532 0076 DCE7     	 b .L149
 1533              	.LVL117:
 1534              	.L133:
 1535              	.LBE419:
 1536              	.LBE425:
 312:src/MightyBoard/Motherboard/Command.cc **** 		}
 313:src/MightyBoard/Motherboard/Command.cc **** 		if(!sdcard::playbackHasNext() && (sd_count < sdcard::getFileSize()) && !sdcard_reset){
 1537              	 .loc 1 313 0 discriminator 1
 1538 0078 FFF7FEFF 	 bl _ZN6sdcard11getFileSizeEv
 1539 007c 40F20003 	 movw r3,#:lower16:.LANCHOR6
 1540 0080 C0F20003 	 movt r3,#:upper16:.LANCHOR6
 1541 0084 1B68     	 ldr r3,[r3,#0]
 1542 0086 9842     	 cmp r0,r3
 1543 0088 40F27285 	 bls .L73
 1544              	 .loc 1 313 0 is_stmt 0 discriminator 3
 1545 008c 40F20003 	 movw r3,#:lower16:.LANCHOR7
 1546 0090 C0F20003 	 movt r3,#:upper16:.LANCHOR7
 1547 0094 1B78     	 ldrb r3,[r3,#0]
 1548 0096 002B     	 cmp r3,#0
 1549 0098 40F06A85 	 bne .L73
 314:src/MightyBoard/Motherboard/Command.cc **** 			
 315:src/MightyBoard/Motherboard/Command.cc **** //			Motherboard::getBoard().getInterfaceBoard().resetLCD();
 316:src/MightyBoard/Motherboard/Command.cc **** 			Motherboard::getBoard().errorResponse(STATICFAIL_MSG);
 1550              	 .loc 1 316 0 is_stmt 1 discriminator 5
 1551 009c 40F20000 	 movw r0,#:lower16:_ZN11Motherboard11motherboardE
 1552 00a0 C0F20000 	 movt r0,#:upper16:_ZN11Motherboard11motherboardE
 1553 00a4 40F20001 	 movw r1,#:lower16:.LC0
 1554 00a8 C0F20001 	 movt r1,#:upper16:.LC0
 1555 00ac 4FF00002 	 mov r2,#0
 1556 00b0 FFF7FEFF 	 bl _ZN11Motherboard13errorResponseEPcb
 317:src/MightyBoard/Motherboard/Command.cc **** 			sdcard_reset = true;
 1557              	 .loc 1 317 0 discriminator 5
 1558 00b4 40F20003 	 movw r3,#:lower16:.LANCHOR7
 1559 00b8 C0F20003 	 movt r3,#:upper16:.LANCHOR7
 1560 00bc 4FF00102 	 mov r2,#1
 1561 00c0 1A70     	 strb r2,[r3,#0]
 1562 00c2 08E0     	 b .L68
 1563              	.L134:
 1564              	.LVL118:
 1565              	.LBB426:
 1566              	.LBB427:
 101:src/MightyBoard/shared/CircularBuffer.hh **** 		return length == 0;
 1567              	 .loc 2 101 0
 1568 00c4 40F20003 	 movw r3,#:lower16:.LANCHOR0
 1569 00c8 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 1570 00cc 5B88     	 ldrh r3,[r3,#2]
 1571 00ce 9BB2     	 uxth r3,r3
 1572              	.LBE427:
 1573              	.LBE426:
 318:src/MightyBoard/Motherboard/Command.cc **** 			/// do the sd card initialization files
 319:src/MightyBoard/Motherboard/Command.cc **** 			//command_buffer.reset();
 320:src/MightyBoard/Motherboard/Command.cc **** 			//sdcard::startPlayback(host::getBuildName());
 321:src/MightyBoard/Motherboard/Command.cc **** 			//uint32_t count;
 322:src/MightyBoard/Motherboard/Command.cc **** 			//while(count < sd_count){
 323:src/MightyBoard/Motherboard/Command.cc **** 			//	sdcard::playbackNext();
 324:src/MightyBoard/Motherboard/Command.cc **** 			//}
 325:src/MightyBoard/Motherboard/Command.cc **** 		}else if(!sdcard::playbackHasNext() && command_buffer.isEmpty()){
 1574              	 .loc 1 325 0
 1575 00d0 0BB9     	 cbnz r3,.L68
 326:src/MightyBoard/Motherboard/Command.cc **** 			sdcard::finishPlayback();
 1576              	 .loc 1 326 0
 1577 00d2 FFF7FEFF 	 bl _ZN6sdcard14finishPlaybackEv
 1578              	.LVL119:
 1579              	.L68:
 327:src/MightyBoard/Motherboard/Command.cc **** 		}
 328:src/MightyBoard/Motherboard/Command.cc **** 	}
 329:src/MightyBoard/Motherboard/Command.cc ****     // get command from onboard script if building from onboard
 330:src/MightyBoard/Motherboard/Command.cc **** 	if(utility::isPlaying()){		
 1580              	 .loc 1 330 0
 1581 00d6 FFF7FEFF 	 bl _ZN7utility9isPlayingEv
 1582 00da A0B9     	 cbnz r0,.L140
 1583 00dc 35E0     	 b .L75
 1584              	.LVL120:
 1585              	.L78:
 1586              	.LBB428:
 1587              	.LBB429:
  59:src/MightyBoard/shared/CircularBuffer.hh **** 			operator[](length) = b;
 1588              	 .loc 2 59 0
 1589 00de 6188     	 ldrh r1,[r4,#2]
 1590 00e0 89B2     	 uxth r1,r1
 1591              	.LVL121:
 1592              	.LBB430:
 1593              	.LBB431:
 105:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufSizeType actual_index = (index + start) % size;
 1594              	 .loc 2 105 0
 1595 00e2 A288     	 ldrh r2,[r4,#4]
 1596 00e4 92B2     	 uxth r2,r2
 1597              	.LVL122:
 1598 00e6 8A18     	 adds r2,r1,r2
 1599              	.LVL123:
 1600 00e8 92FBF3F1 	 sdiv r1,r2,r3
 1601              	.LVL124:
 1602 00ec 03FB1123 	 mls r3,r3,r1,r2
 1603              	 .loc 2 106 0
 1604 00f0 9BB2     	 uxth r3,r3
 1605              	.LBE431:
 1606              	.LBE430:
  59:src/MightyBoard/shared/CircularBuffer.hh **** 			operator[](length) = b;
 1607              	 .loc 2 59 0
 1608 00f2 A268     	 ldr r2,[r4,#8]
 1609 00f4 D054     	 strb r0,[r2,r3]
  60:src/MightyBoard/shared/CircularBuffer.hh **** 			length++;
 1610              	 .loc 2 60 0
 1611 00f6 6388     	 ldrh r3,[r4,#2]
 1612 00f8 03F10103 	 add r3,r3,#1
 1613 00fc 9BB2     	 uxth r3,r3
 1614 00fe 6380     	 strh r3,[r4,#2]
 1615 0100 07E0     	 b .L147
 1616              	.LVL125:
 1617              	.L150:
  62:src/MightyBoard/shared/CircularBuffer.hh **** 			overflow = true;
 1618              	 .loc 2 62 0
 1619 0102 2573     	 strb r5,[r4,#12]
 1620 0104 05E0     	 b .L147
 1621              	.LVL126:
 1622              	.L140:
 1623              	.LBE429:
 1624              	.LBE428:
 1625              	.LBB434:
 1626              	.LBB435:
  96:src/MightyBoard/shared/CircularBuffer.hh **** 		return size - length;
 1627              	 .loc 2 96 0 discriminator 1
 1628 0106 40F20004 	 movw r4,#:lower16:.LANCHOR0
 1629 010a C0F20004 	 movt r4,#:upper16:.LANCHOR0
 1630              	.LBE435:
 1631              	.LBE434:
 1632              	.LBB437:
 1633              	.LBB432:
  62:src/MightyBoard/shared/CircularBuffer.hh **** 			overflow = true;
 1634              	 .loc 2 62 0 discriminator 1
 1635 010e 4FF00105 	 mov r5,#1
 1636              	.L147:
 1637              	.LVL127:
 1638              	.LBE432:
 1639              	.LBE437:
 1640              	.LBB438:
 1641              	.LBB436:
  96:src/MightyBoard/shared/CircularBuffer.hh **** 		return size - length;
 1642              	 .loc 2 96 0 discriminator 1
 1643 0112 6388     	 ldrh r3,[r4,#2]
 1644 0114 9BB2     	 uxth r3,r3
 1645              	.LBE436:
 1646              	.LBE438:
 331:src/MightyBoard/Motherboard/Command.cc **** 		while (command_buffer.getRemainingCapacity() > 0 && utility::playbackHasNext()){
 1647              	 .loc 1 331 0 discriminator 1
 1648 0116 2288     	 ldrh r2,[r4,#0]
 1649 0118 9A42     	 cmp r2,r3
 1650 011a 00F03085 	 beq .L77
 1651              	 .loc 1 331 0 is_stmt 0 discriminator 2
 1652 011e FFF7FEFF 	 bl _ZN7utility15playbackHasNextEv
 1653 0122 0028     	 cmp r0,#0
 1654 0124 00F02B85 	 beq .L77
 332:src/MightyBoard/Motherboard/Command.cc **** 			command_buffer.push(utility::playbackNext());
 1655              	 .loc 1 332 0 is_stmt 1 discriminator 5
 1656 0128 FFF7FEFF 	 bl _ZN7utility12playbackNextEv
 1657              	.LVL128:
 1658              	.LBB439:
 1659              	.LBB433:
  58:src/MightyBoard/shared/CircularBuffer.hh **** 		if (length < size) {
 1660              	 .loc 2 58 0 discriminator 5
 1661 012c 6288     	 ldrh r2,[r4,#2]
 1662 012e 92B2     	 uxth r2,r2
 1663 0130 2388     	 ldrh r3,[r4,#0]
 1664 0132 9A42     	 cmp r2,r3
 1665 0134 D3D3     	 bcc .L78
 1666 0136 E4E7     	 b .L150
 1667              	.LVL129:
 1668              	.L135:
 1669              	.LBE433:
 1670              	.LBE439:
 1671              	.LBB440:
 1672              	.LBB441:
 101:src/MightyBoard/shared/CircularBuffer.hh **** 		return length == 0;
 1673              	 .loc 2 101 0
 1674 0138 40F20003 	 movw r3,#:lower16:.LANCHOR0
 1675 013c C0F20003 	 movt r3,#:upper16:.LANCHOR0
 1676 0140 5B88     	 ldrh r3,[r3,#2]
 1677 0142 9BB2     	 uxth r3,r3
 1678              	.LBE441:
 1679              	.LBE440:
 333:src/MightyBoard/Motherboard/Command.cc **** 		}
 334:src/MightyBoard/Motherboard/Command.cc **** 		if(!utility::playbackHasNext() && command_buffer.isEmpty()){
 1680              	 .loc 1 334 0
 1681 0144 0BB9     	 cbnz r3,.L75
 335:src/MightyBoard/Motherboard/Command.cc **** 			utility::finishPlayback();
 1682              	 .loc 1 335 0
 1683 0146 FFF7FEFF 	 bl _ZN7utility14finishPlaybackEv
 1684              	.LVL130:
 1685              	.L75:
 336:src/MightyBoard/Motherboard/Command.cc **** 		}
 337:src/MightyBoard/Motherboard/Command.cc **** 	}
 338:src/MightyBoard/Motherboard/Command.cc **** 	
 339:src/MightyBoard/Motherboard/Command.cc **** 	// if printer is not waiting for tool or platform to heat, we need to make
 340:src/MightyBoard/Motherboard/Command.cc **** 	// sure the extruders are not in a paused state.  this is relevant when 
 341:src/MightyBoard/Motherboard/Command.cc **** 	// heating using the control panel in desktop software
 342:src/MightyBoard/Motherboard/Command.cc **** 	if(check_temp_state){
 1686              	 .loc 1 342 0
 1687 014a 40F20003 	 movw r3,#:lower16:.LANCHOR5
 1688 014e C0F20003 	 movt r3,#:upper16:.LANCHOR5
 1689 0152 1B78     	 ldrb r3,[r3,#0]
 1690 0154 B3B1     	 cbz r3,.L80
 1691              	.LVL131:
 343:src/MightyBoard/Motherboard/Command.cc **** 		if (Motherboard::getBoard().getPlatformHeater().has_reached_target_temperature()){
 1692              	 .loc 1 343 0
 1693 0156 B248     	 ldr r0,.L151
 1694 0158 FFF7FEFF 	 bl _ZN6Heater30has_reached_target_temperatureEv
 1695 015c 90B1     	 cbz r0,.L80
 1696              	.LVL132:
 344:src/MightyBoard/Motherboard/Command.cc **** 			// unpause extruder heaters in case they are paused
 345:src/MightyBoard/Motherboard/Command.cc **** 			Motherboard::getBoard().getExtruderBoard(0).getExtruderHeater().Pause(false);
 1697              	 .loc 1 345 0
 1698 015e B14C     	 ldr r4,.L151+4
 1699 0160 2046     	 mov r0,r4
 1700 0162 4FF00001 	 mov r1,#0
 1701 0166 FFF7FEFF 	 bl _ZN6Heater5PauseEb
 1702              	.LVL133:
 346:src/MightyBoard/Motherboard/Command.cc **** 			Motherboard::getBoard().getExtruderBoard(1).getExtruderHeater().Pause(false);
 1703              	 .loc 1 346 0
 1704 016a 04F1E000 	 add r0,r4,#224
 1705 016e 4FF00001 	 mov r1,#0
 1706 0172 FFF7FEFF 	 bl _ZN6Heater5PauseEb
 347:src/MightyBoard/Motherboard/Command.cc **** 			check_temp_state = false;
 1707              	 .loc 1 347 0
 1708 0176 40F20003 	 movw r3,#:lower16:.LANCHOR5
 1709 017a C0F20003 	 movt r3,#:upper16:.LANCHOR5
 1710 017e 4FF00002 	 mov r2,#0
 1711 0182 1A70     	 strb r2,[r3,#0]
 1712              	.LVL134:
 1713              	.L80:
 348:src/MightyBoard/Motherboard/Command.cc **** 		}
 349:src/MightyBoard/Motherboard/Command.cc **** 	}
 350:src/MightyBoard/Motherboard/Command.cc **** 	// don't execute commands if paused or shutdown because of heater failure
 351:src/MightyBoard/Motherboard/Command.cc **** 	if (paused || heat_shutdown) {	return; }
 1714              	 .loc 1 351 0
 1715 0184 40F20003 	 movw r3,#:lower16:.LANCHOR1
 1716 0188 C0F20003 	 movt r3,#:upper16:.LANCHOR1
 1717 018c 1B78     	 ldrb r3,[r3,#0]
 1718 018e 002B     	 cmp r3,#0
 1719 0190 40F0FC84 	 bne .L66
 1720              	 .loc 1 351 0 is_stmt 0 discriminator 2
 1721 0194 40F20003 	 movw r3,#:lower16:.LANCHOR2
 1722 0198 C0F20003 	 movt r3,#:upper16:.LANCHOR2
 1723 019c 1B78     	 ldrb r3,[r3,#0]
 1724 019e 002B     	 cmp r3,#0
 1725 01a0 40F0F484 	 bne .L66
 352:src/MightyBoard/Motherboard/Command.cc ****     
 353:src/MightyBoard/Motherboard/Command.cc **** 	if (mode == HOMING) {
 1726              	 .loc 1 353 0 is_stmt 1
 1727 01a4 40F20003 	 movw r3,#:lower16:.LANCHOR3
 1728 01a8 C0F20003 	 movt r3,#:upper16:.LANCHOR3
 1729 01ac 1B78     	 ldrb r3,[r3,#0]
 1730 01ae 032B     	 cmp r3,#3
 1731 01b0 1BD1     	 bne .L82
 354:src/MightyBoard/Motherboard/Command.cc **** 		if (!steppers::isRunning()) {
 1732              	 .loc 1 354 0
 1733 01b2 FFF7FEFF 	 bl _ZN8steppers9isRunningEv
 1734 01b6 38B9     	 cbnz r0,.L83
 355:src/MightyBoard/Motherboard/Command.cc **** 			mode = READY;
 1735              	 .loc 1 355 0
 1736 01b8 40F20003 	 movw r3,#:lower16:.LANCHOR3
 1737 01bc C0F20003 	 movt r3,#:upper16:.LANCHOR3
 1738 01c0 4FF00002 	 mov r2,#0
 1739 01c4 1A70     	 strb r2,[r3,#0]
 1740 01c6 60E0     	 b .L85
 1741              	.L83:
 356:src/MightyBoard/Motherboard/Command.cc **** 		} else if (homing_timeout.hasElapsed()) {
 1742              	 .loc 1 356 0
 1743 01c8 40F20000 	 movw r0,#:lower16:.LANCHOR8
 1744 01cc C0F20000 	 movt r0,#:upper16:.LANCHOR8
 1745 01d0 FFF7FEFF 	 bl _ZN7Timeout10hasElapsedEv
 1746 01d4 48B1     	 cbz r0,.L82
 357:src/MightyBoard/Motherboard/Command.cc **** 			planner::abort();
 1747              	 .loc 1 357 0
 1748 01d6 FFF7FEFF 	 bl _ZN7planner5abortEv
 358:src/MightyBoard/Motherboard/Command.cc **** 			mode = READY;
 1749              	 .loc 1 358 0
 1750 01da 40F20003 	 movw r3,#:lower16:.LANCHOR3
 1751 01de C0F20003 	 movt r3,#:upper16:.LANCHOR3
 1752 01e2 4FF00002 	 mov r2,#0
 1753 01e6 1A70     	 strb r2,[r3,#0]
 1754 01e8 4FE0     	 b .L85
 1755              	.L82:
 1756              	.LBB442:
 359:src/MightyBoard/Motherboard/Command.cc **** 		}
 360:src/MightyBoard/Motherboard/Command.cc **** 	}
 361:src/MightyBoard/Motherboard/Command.cc **** 	if (mode == MOVING) {
 1757              	 .loc 1 361 0
 1758 01ea 40F20003 	 movw r3,#:lower16:.LANCHOR3
 1759 01ee C0F20003 	 movt r3,#:upper16:.LANCHOR3
 1760 01f2 1B78     	 ldrb r3,[r3,#0]
 1761 01f4 012B     	 cmp r3,#1
 1762 01f6 48D1     	 bne .L85
 1763              	.LBB443:
 362:src/MightyBoard/Motherboard/Command.cc **** //		xprintf("1");
 363:src/MightyBoard/Motherboard/Command.cc **** //		xprintf("12" " (%s:%d)\n",_F_,_L_);
 364:src/MightyBoard/Motherboard/Command.cc **** //		_delay_us(10000);
 365:src/MightyBoard/Motherboard/Command.cc **** 		if (!steppers::isRunning()) {
 1764              	 .loc 1 365 0
 1765 01f8 FFF7FEFF 	 bl _ZN8steppers9isRunningEv
 1766 01fc 38B9     	 cbnz r0,.L86
 366:src/MightyBoard/Motherboard/Command.cc **** //			xprintf("2");
 367:src/MightyBoard/Motherboard/Command.cc **** //			xprintf("13" " (%s:%d)\n",_F_,_L_);
 368:src/MightyBoard/Motherboard/Command.cc **** //			_delay_us(10000);
 369:src/MightyBoard/Motherboard/Command.cc **** 			mode = READY;
 1767              	 .loc 1 369 0
 1768 01fe 40F20003 	 movw r3,#:lower16:.LANCHOR3
 1769 0202 C0F20003 	 movt r3,#:upper16:.LANCHOR3
 1770 0206 4FF00002 	 mov r2,#0
 1771 020a 1A70     	 strb r2,[r3,#0]
 1772 020c A7E0     	 b .L87
 1773              	.L86:
 1774              	.LVL135:
 1775              	.LBB444:
 1776              	.LBB445:
 1777              	.LBB446:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 1778              	 .loc 2 91 0
 1779 020e 40F20003 	 movw r3,#:lower16:.LANCHOR0
 1780 0212 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 1781 0216 5B88     	 ldrh r3,[r3,#2]
 1782 0218 9BB2     	 uxth r3,r3
 1783              	.LBE446:
 1784              	.LBE445:
 370:src/MightyBoard/Motherboard/Command.cc **** 		} else {
 371:src/MightyBoard/Motherboard/Command.cc **** //			xprintf("3");
 372:src/MightyBoard/Motherboard/Command.cc **** //			xprintf("13" " (%s:%d)\n",_F_,_L_);
 373:src/MightyBoard/Motherboard/Command.cc **** //			_delay_us(10000);
 374:src/MightyBoard/Motherboard/Command.cc **** 			if (command_buffer.getLength() > 0) {
 1785              	 .loc 1 374 0
 1786 021a 002B     	 cmp r3,#0
 1787 021c 35D0     	 beq .L85
 1788              	.LBB447:
 375:src/MightyBoard/Motherboard/Command.cc **** 				Motherboard::getBoard().resetUserInputTimeout();
 1789              	 .loc 1 375 0
 1790 021e 40F20000 	 movw r0,#:lower16:_ZN11Motherboard11motherboardE
 1791 0222 C0F20000 	 movt r0,#:upper16:_ZN11Motherboard11motherboardE
 1792 0226 FFF7FEFF 	 bl _ZN11Motherboard21resetUserInputTimeoutEv
 1793              	.LVL136:
 1794              	.LBB448:
 1795              	.LBB449:
 105:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufSizeType actual_index = (index + start) % size;
 1796              	 .loc 2 105 0
 1797 022a 40F20003 	 movw r3,#:lower16:.LANCHOR0
 1798 022e C0F20003 	 movt r3,#:upper16:.LANCHOR0
 1799 0232 9988     	 ldrh r1,[r3,#4]
 1800 0234 89B2     	 uxth r1,r1
 1801              	.LVL137:
 1802 0236 1A88     	 ldrh r2,[r3,#0]
 1803 0238 91FBF2F0 	 sdiv r0,r1,r2
 1804 023c 02FB1012 	 mls r2,r2,r0,r1
 1805              	 .loc 2 106 0
 1806 0240 92B2     	 uxth r2,r2
 1807              	.LBE449:
 1808              	.LBE448:
 376:src/MightyBoard/Motherboard/Command.cc **** 				uint8_t command = command_buffer[0];
 1809              	 .loc 1 376 0
 1810 0242 9B68     	 ldr r3,[r3,#8]
 1811 0244 9B5C     	 ldrb r3,[r3,r2]
 1812              	.LVL138:
 1813 0246 8DF81F30 	 strb r3,[sp,#31]
 1814              	.LBB450:
 377:src/MightyBoard/Motherboard/Command.cc **** 				if (command == HOST_CMD_QUEUE_POINT_EXT || command == HOST_CMD_QUEUE_POINT_NEW) {
 1815              	 .loc 1 377 0
 1816 024a 8E2B     	 cmp r3,#142
 1817 024c 14BF     	 ite ne
 1818 024e 0022     	 movne r2,#0
 1819 0250 0122     	 moveq r2,#1
 1820 0252 8B2B     	 cmp r3,#139
 1821 0254 08BF     	 it eq
 1822 0256 42F00102 	 orreq r2,r2,#1
 1823 025a 42B1     	 cbz r2,.L88
 378:src/MightyBoard/Motherboard/Command.cc **** //					xprintf("command == HOST_CMD_QUEUE_POINT_EXT || command == HOST_CMD_QUEUE_POINT_NEW" " (%s:%
 379:src/MightyBoard/Motherboard/Command.cc **** 					_delay_us(100);
 1824              	 .loc 1 379 0
 1825 025c 4FF06400 	 mov r0,#100
 1826 0260 FFF7FEFF 	 bl _delay_us
 1827              	.LVL139:
 380:src/MightyBoard/Motherboard/Command.cc **** 					handleMovementCommand(command);
 1828              	 .loc 1 380 0
 1829 0264 0DF11F00 	 add r0,sp,#31
 1830 0268 FFF7FEFF 	 bl _ZN7commandL21handleMovementCommandERKh
 1831 026c 0DE0     	 b .L85
 1832              	.LVL140:
 1833              	.L88:
 1834              	.LBB451:
 381:src/MightyBoard/Motherboard/Command.cc **** 				}
 382:src/MightyBoard/Motherboard/Command.cc **** 				else if (command == HOST_CMD_ENABLE_AXES) {
 1835              	 .loc 1 382 0
 1836 026e 892B     	 cmp r3,#137
 1837 0270 0BD1     	 bne .L85
 1838              	.LVL141:
 1839              	.LBB452:
 1840              	.LBB453:
 1841              	.LBB454:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 1842              	 .loc 2 91 0
 1843 0272 40F20003 	 movw r3,#:lower16:.LANCHOR0
 1844 0276 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 1845 027a 5B88     	 ldrh r3,[r3,#2]
 1846 027c 9BB2     	 uxth r3,r3
 1847              	.LBE454:
 1848              	.LBE453:
 383:src/MightyBoard/Motherboard/Command.cc **** 					if (command_buffer.getLength() >= 2) {
 1849              	 .loc 1 383 0
 1850 027e 012B     	 cmp r3,#1
 1851 0280 03D9     	 bls .L85
 1852              	.LBB455:
 384:src/MightyBoard/Motherboard/Command.cc **** 						pop8(); // remove the command code
 1853              	 .loc 1 384 0
 1854 0282 FFF7FEFF 	 bl _ZN7command4pop8Ev
 1855              	.LVL142:
 385:src/MightyBoard/Motherboard/Command.cc **** 						uint8_t axes = pop8();
 1856              	 .loc 1 385 0
 1857 0286 FFF7FEFF 	 bl _ZN7command4pop8Ev
 1858              	.LVL143:
 1859              	.L85:
 1860              	.LBE455:
 1861              	.LBE452:
 1862              	.LBE451:
 1863              	.LBE450:
 1864              	.LBE447:
 1865              	.LBE444:
 1866              	.LBE443:
 1867              	.LBE442:
 386:src/MightyBoard/Motherboard/Command.cc **** 						}
 387:src/MightyBoard/Motherboard/Command.cc **** 				}
 388:src/MightyBoard/Motherboard/Command.cc **** 			}
 389:src/MightyBoard/Motherboard/Command.cc **** 		}
 390:src/MightyBoard/Motherboard/Command.cc **** 	}
 391:src/MightyBoard/Motherboard/Command.cc **** 	if (mode == DELAY) {
 1868              	 .loc 1 391 0
 1869 028a 40F20003 	 movw r3,#:lower16:.LANCHOR3
 1870 028e C0F20003 	 movt r3,#:upper16:.LANCHOR3
 1871 0292 1B78     	 ldrb r3,[r3,#0]
 1872 0294 022B     	 cmp r3,#2
 1873 0296 0ED1     	 bne .L89
 392:src/MightyBoard/Motherboard/Command.cc **** 		// check timers
 393:src/MightyBoard/Motherboard/Command.cc **** 		if (delay_timeout.hasElapsed()) {
 1874              	 .loc 1 393 0
 1875 0298 40F20000 	 movw r0,#:lower16:.LANCHOR9
 1876 029c C0F20000 	 movt r0,#:upper16:.LANCHOR9
 1877 02a0 FFF7FEFF 	 bl _ZN7Timeout10hasElapsedEv
 1878 02a4 38B1     	 cbz r0,.L89
 394:src/MightyBoard/Motherboard/Command.cc **** 			mode = READY;
 1879              	 .loc 1 394 0
 1880 02a6 40F20003 	 movw r3,#:lower16:.LANCHOR3
 1881 02aa C0F20003 	 movt r3,#:upper16:.LANCHOR3
 1882 02ae 4FF00002 	 mov r2,#0
 1883 02b2 1A70     	 strb r2,[r3,#0]
 1884 02b4 8DE0     	 b .L90
 1885              	.L89:
 395:src/MightyBoard/Motherboard/Command.cc **** 		}
 396:src/MightyBoard/Motherboard/Command.cc **** 	}
 397:src/MightyBoard/Motherboard/Command.cc **** 	if (mode == WAIT_ON_TOOL) {
 1886              	 .loc 1 397 0
 1887 02b6 40F20003 	 movw r3,#:lower16:.LANCHOR3
 1888 02ba C0F20003 	 movt r3,#:upper16:.LANCHOR3
 1889 02be 1B78     	 ldrb r3,[r3,#0]
 1890 02c0 042B     	 cmp r3,#4
 1891 02c2 4CD1     	 bne .L87
 398:src/MightyBoard/Motherboard/Command.cc **** 		if(tool_wait_timeout.hasElapsed()){
 1892              	 .loc 1 398 0
 1893 02c4 40F20000 	 movw r0,#:lower16:.LANCHOR10
 1894 02c8 C0F20000 	 movt r0,#:upper16:.LANCHOR10
 1895 02cc FFF7FEFF 	 bl _ZN7Timeout10hasElapsedEv
 1896 02d0 98B1     	 cbz r0,.L91
 399:src/MightyBoard/Motherboard/Command.cc **** 			Motherboard::getBoard().errorResponse("I timed out while   attempting to heat  my extruder."); 
 1897              	 .loc 1 399 0
 1898 02d2 40F20000 	 movw r0,#:lower16:_ZN11Motherboard11motherboardE
 1899 02d6 C0F20000 	 movt r0,#:upper16:_ZN11Motherboard11motherboardE
 1900 02da 40F20001 	 movw r1,#:lower16:.LC1
 1901 02de C0F20001 	 movt r1,#:upper16:.LC1
 1902 02e2 4FF00002 	 mov r2,#0
 1903 02e6 FFF7FEFF 	 bl _ZN11Motherboard13errorResponseEPcb
 400:src/MightyBoard/Motherboard/Command.cc **** 			mode = READY;		
 1904              	 .loc 1 400 0
 1905 02ea 40F20003 	 movw r3,#:lower16:.LANCHOR3
 1906 02ee C0F20003 	 movt r3,#:upper16:.LANCHOR3
 1907 02f2 4FF00002 	 mov r2,#0
 1908 02f6 1A70     	 strb r2,[r3,#0]
 1909 02f8 6BE0     	 b .L90
 1910              	.L91:
 1911              	.LVL144:
 1912              	.LBB456:
 1913              	.LBB457:
 1914              	 .loc 3 62 0
 1915 02fa 40F20003 	 movw r3,#:lower16:.LANCHOR11
 1916 02fe C0F20003 	 movt r3,#:upper16:.LANCHOR11
 1917 0302 1878     	 ldrb r0,[r3,#0]
 1918 0304 484B     	 ldr r3,.L151+8
 1919 0306 A3F1E002 	 sub r2,r3,#224
 1920 030a 0128     	 cmp r0,#1
 1921 030c 14BF     	 ite ne
 1922 030e 1046     	 movne r0,r2
 1923 0310 1846     	 moveq r0,r3
 1924              	.LVL145:
 1925              	.LBE457:
 1926              	.LBE456:
 401:src/MightyBoard/Motherboard/Command.cc **** 		}
 402:src/MightyBoard/Motherboard/Command.cc **** 		else if(!Motherboard::getBoard().getExtruderBoard(currentToolIndex).getExtruderHeater().isHeating
 1927              	 .loc 1 402 0
 1928 0312 00F12800 	 add r0,r0,#40
 1929              	.LVL146:
 1930 0316 FFF7FEFF 	 bl _ZN6Heater9isHeatingEv
 1931              	.LVL147:
 1932 031a 38B9     	 cbnz r0,.L94
 403:src/MightyBoard/Motherboard/Command.cc **** 			mode = READY;
 1933              	 .loc 1 403 0
 1934 031c 40F20003 	 movw r3,#:lower16:.LANCHOR3
 1935 0320 C0F20003 	 movt r3,#:upper16:.LANCHOR3
 1936 0324 4FF00002 	 mov r2,#0
 1937 0328 1A70     	 strb r2,[r3,#0]
 1938 032a 52E0     	 b .L90
 1939              	.L94:
 1940              	.LVL148:
 1941              	.LBB458:
 1942              	.LBB459:
 1943              	 .loc 3 62 0
 1944 032c 40F20003 	 movw r3,#:lower16:.LANCHOR11
 1945 0330 C0F20003 	 movt r3,#:upper16:.LANCHOR11
 1946 0334 1878     	 ldrb r0,[r3,#0]
 1947 0336 3C4B     	 ldr r3,.L151+8
 1948 0338 A3F1E002 	 sub r2,r3,#224
 1949 033c 0128     	 cmp r0,#1
 1950 033e 14BF     	 ite ne
 1951 0340 1046     	 movne r0,r2
 1952 0342 1846     	 moveq r0,r3
 1953              	.LVL149:
 1954              	.LBE459:
 1955              	.LBE458:
 404:src/MightyBoard/Motherboard/Command.cc **** 		}else if( Motherboard::getBoard().getExtruderBoard(currentToolIndex).getExtruderHeater().has_reac
 1956              	 .loc 1 404 0
 1957 0344 00F12800 	 add r0,r0,#40
 1958              	.LVL150:
 1959 0348 FFF7FEFF 	 bl _ZN6Heater30has_reached_target_temperatureEv
 1960              	.LVL151:
 1961 034c 38B1     	 cbz r0,.L87
 405:src/MightyBoard/Motherboard/Command.cc ****             mode = READY;
 1962              	 .loc 1 405 0
 1963 034e 40F20003 	 movw r3,#:lower16:.LANCHOR3
 1964 0352 C0F20003 	 movt r3,#:upper16:.LANCHOR3
 1965 0356 4FF00002 	 mov r2,#0
 1966 035a 1A70     	 strb r2,[r3,#0]
 1967 035c 39E0     	 b .L90
 1968              	.LVL152:
 1969              	.L87:
 406:src/MightyBoard/Motherboard/Command.cc **** 		}
 407:src/MightyBoard/Motherboard/Command.cc **** 	}
 408:src/MightyBoard/Motherboard/Command.cc **** 	if (mode == WAIT_ON_PLATFORM) {
 1970              	 .loc 1 408 0
 1971 035e 40F20003 	 movw r3,#:lower16:.LANCHOR3
 1972 0362 C0F20003 	 movt r3,#:upper16:.LANCHOR3
 1973 0366 1B78     	 ldrb r3,[r3,#0]
 1974 0368 052B     	 cmp r3,#5
 1975 036a 32D1     	 bne .L90
 409:src/MightyBoard/Motherboard/Command.cc **** 		if(tool_wait_timeout.hasElapsed()){
 1976              	 .loc 1 409 0
 1977 036c 40F20000 	 movw r0,#:lower16:.LANCHOR10
 1978 0370 C0F20000 	 movt r0,#:upper16:.LANCHOR10
 1979 0374 FFF7FEFF 	 bl _ZN7Timeout10hasElapsedEv
 1980 0378 98B1     	 cbz r0,.L96
 410:src/MightyBoard/Motherboard/Command.cc **** 			Motherboard::getBoard().errorResponse("I timed out while   attempting to heat  my platform."); 
 1981              	 .loc 1 410 0
 1982 037a 40F20000 	 movw r0,#:lower16:_ZN11Motherboard11motherboardE
 1983 037e C0F20000 	 movt r0,#:upper16:_ZN11Motherboard11motherboardE
 1984 0382 40F20001 	 movw r1,#:lower16:.LC2
 1985 0386 C0F20001 	 movt r1,#:upper16:.LC2
 1986 038a 4FF00002 	 mov r2,#0
 1987 038e FFF7FEFF 	 bl _ZN11Motherboard13errorResponseEPcb
 411:src/MightyBoard/Motherboard/Command.cc **** 			mode = READY;		
 1988              	 .loc 1 411 0
 1989 0392 40F20003 	 movw r3,#:lower16:.LANCHOR3
 1990 0396 C0F20003 	 movt r3,#:upper16:.LANCHOR3
 1991 039a 4FF00002 	 mov r2,#0
 1992 039e 1A70     	 strb r2,[r3,#0]
 1993 03a0 44E0     	 b .L99
 1994              	.L96:
 1995              	.LVL153:
 412:src/MightyBoard/Motherboard/Command.cc **** 		} else if (!Motherboard::getBoard().getPlatformHeater().isHeating()){
 1996              	 .loc 1 412 0
 1997 03a2 1F48     	 ldr r0,.L151
 1998 03a4 FFF7FEFF 	 bl _ZN6Heater9isHeatingEv
 1999 03a8 38B9     	 cbnz r0,.L98
 413:src/MightyBoard/Motherboard/Command.cc **** 			mode = READY;
 2000              	 .loc 1 413 0
 2001 03aa 40F20003 	 movw r3,#:lower16:.LANCHOR3
 2002 03ae C0F20003 	 movt r3,#:upper16:.LANCHOR3
 2003 03b2 4FF00002 	 mov r2,#0
 2004 03b6 1A70     	 strb r2,[r3,#0]
 2005 03b8 38E0     	 b .L99
 2006              	.L98:
 2007              	.LVL154:
 414:src/MightyBoard/Motherboard/Command.cc **** 		}
 415:src/MightyBoard/Motherboard/Command.cc **** 		else if(Motherboard::getBoard().getPlatformHeater().has_reached_target_temperature()){
 2008              	 .loc 1 415 0
 2009 03ba 1948     	 ldr r0,.L151
 2010 03bc FFF7FEFF 	 bl _ZN6Heater30has_reached_target_temperatureEv
 2011 03c0 38B1     	 cbz r0,.L90
 416:src/MightyBoard/Motherboard/Command.cc ****             mode = READY;
 2012              	 .loc 1 416 0
 2013 03c2 40F20003 	 movw r3,#:lower16:.LANCHOR3
 2014 03c6 C0F20003 	 movt r3,#:upper16:.LANCHOR3
 2015 03ca 4FF00002 	 mov r2,#0
 2016 03ce 1A70     	 strb r2,[r3,#0]
 2017 03d0 2CE0     	 b .L99
 2018              	.LVL155:
 2019              	.L90:
 417:src/MightyBoard/Motherboard/Command.cc **** 		}
 418:src/MightyBoard/Motherboard/Command.cc **** 	}
 419:src/MightyBoard/Motherboard/Command.cc **** 	if (mode == WAIT_ON_BUTTON) {
 2020              	 .loc 1 419 0
 2021 03d2 40F20003 	 movw r3,#:lower16:.LANCHOR3
 2022 03d6 C0F20003 	 movt r3,#:upper16:.LANCHOR3
 2023 03da 1B78     	 ldrb r3,[r3,#0]
 2024 03dc 062B     	 cmp r3,#6
 2025 03de 25D1     	 bne .L99
 420:src/MightyBoard/Motherboard/Command.cc **** 		if (button_wait_timeout.hasElapsed()) {
 2026              	 .loc 1 420 0
 2027 03e0 40F20000 	 movw r0,#:lower16:.LANCHOR12
 2028 03e4 C0F20000 	 movt r0,#:upper16:.LANCHOR12
 2029 03e8 FFF7FEFF 	 bl _ZN7Timeout10hasElapsedEv
 2030 03ec F0B1     	 cbz r0,.L99
 421:src/MightyBoard/Motherboard/Command.cc **** 			if (button_timeout_behavior & (1 << BUTTON_TIMEOUT_ABORT)) {
 2031              	 .loc 1 421 0
 2032 03ee 40F20003 	 movw r3,#:lower16:.LANCHOR13
 2033 03f2 C0F20003 	 movt r3,#:upper16:.LANCHOR13
 2034 03f6 1B78     	 ldrb r3,[r3,#0]
 2035 03f8 13F0020F 	 tst r3,#2
 2036 03fc 08D0     	 beq .L100
 422:src/MightyBoard/Motherboard/Command.cc **** 				// Abort build!
 423:src/MightyBoard/Motherboard/Command.cc **** 				// We'll interpret this as a catastrophic situation
 424:src/MightyBoard/Motherboard/Command.cc **** 				// and do a full reset of the machine.
 425:src/MightyBoard/Motherboard/Command.cc **** 				Motherboard::getBoard().reset(false);
 2037              	 .loc 1 425 0
 2038 03fe 40F20000 	 movw r0,#:lower16:_ZN11Motherboard11motherboardE
 2039 0402 C0F20000 	 movt r0,#:upper16:_ZN11Motherboard11motherboardE
 2040 0406 4FF00001 	 mov r1,#0
 2041 040a FFF7FEFF 	 bl _ZN11Motherboard5resetEb
 2042 040e 0DE0     	 b .L99
 2043              	.L100:
 426:src/MightyBoard/Motherboard/Command.cc **** 
 427:src/MightyBoard/Motherboard/Command.cc **** 			} else {
 428:src/MightyBoard/Motherboard/Command.cc **** 				mode = READY;
 2044              	 .loc 1 428 0
 2045 0410 40F20003 	 movw r3,#:lower16:.LANCHOR3
 2046 0414 C0F20003 	 movt r3,#:upper16:.LANCHOR3
 2047 0418 4FF00002 	 mov r2,#0
 2048 041c 1A70     	 strb r2,[r3,#0]
 2049 041e 0DE0     	 b .L101
 2050              	.L152:
 2051              	 .align 2
 2052              	.L151:
 2053 0420 0C020000 	 .word _ZN11Motherboard11motherboardE+524
 2054 0424 50000000 	 .word _ZN11Motherboard11motherboardE+80
 2055 0428 08010000 	 .word _ZN11Motherboard11motherboardE+264
 2056              	.L99:
 2057              	.LBB460:
 429:src/MightyBoard/Motherboard/Command.cc **** 			//	Motherboard::getBoard().interfaceBlink(0,0);
 430:src/MightyBoard/Motherboard/Command.cc **** 			}
 431:src/MightyBoard/Motherboard/Command.cc **** 		} else {
 432:src/MightyBoard/Motherboard/Command.cc **** 			// Check buttons
 433:src/MightyBoard/Motherboard/Command.cc **** //			InterfaceBoard& ib = Motherboard::getBoard().getInterfaceBoard();
 434:src/MightyBoard/Motherboard/Command.cc **** //			if (ib.buttonPushed()) {
 435:src/MightyBoard/Motherboard/Command.cc **** //				if(button_timeout_behavior & (1 << BUTTON_CLEAR_SCREEN))
 436:src/MightyBoard/Motherboard/Command.cc **** //					ib.popScreen();
 437:src/MightyBoard/Motherboard/Command.cc **** //				Motherboard::getBoard().interfaceBlink(0,0);
 438:src/MightyBoard/Motherboard/Command.cc **** //				RGB_LED::setDefaultColor();
 439:src/MightyBoard/Motherboard/Command.cc **** //				mode = READY;
 440:src/MightyBoard/Motherboard/Command.cc **** //			}
 441:src/MightyBoard/Motherboard/Command.cc **** 		}
 442:src/MightyBoard/Motherboard/Command.cc **** 	}
 443:src/MightyBoard/Motherboard/Command.cc **** 
 444:src/MightyBoard/Motherboard/Command.cc **** 	if (mode == READY) {
 2058              	 .loc 1 444 0
 2059 042c 40F20003 	 movw r3,#:lower16:.LANCHOR3
 2060 0430 C0F20003 	 movt r3,#:upper16:.LANCHOR3
 2061 0434 1B78     	 ldrb r3,[r3,#0]
 2062 0436 002B     	 cmp r3,#0
 2063 0438 40F08083 	 bne .L102
 2064              	.L101:
 2065              	.LVL156:
 2066              	.LBB461:
 2067              	.LBB462:
 2068              	.LBB463:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2069              	 .loc 2 91 0
 2070 043c 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2071 0440 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2072 0444 5B88     	 ldrh r3,[r3,#2]
 2073 0446 9BB2     	 uxth r3,r3
 2074              	.LBE463:
 2075              	.LBE462:
 445:src/MightyBoard/Motherboard/Command.cc **** //		xprintf("mode == READY" " (%s:%d)\n",_F_,_L_);
 446:src/MightyBoard/Motherboard/Command.cc **** //		_delay_us(100);
 447:src/MightyBoard/Motherboard/Command.cc **** 		
 448:src/MightyBoard/Motherboard/Command.cc **** 		// process next command on the queue.
 449:src/MightyBoard/Motherboard/Command.cc **** 		if ((command_buffer.getLength() > 0)){
 2076              	 .loc 1 449 0
 2077 0448 002B     	 cmp r3,#0
 2078 044a 00F07783 	 beq .L102
 2079              	.LBB464:
 450:src/MightyBoard/Motherboard/Command.cc **** 			Motherboard::getBoard().resetUserInputTimeout();
 2080              	 .loc 1 450 0
 2081 044e 40F20000 	 movw r0,#:lower16:_ZN11Motherboard11motherboardE
 2082 0452 C0F20000 	 movt r0,#:upper16:_ZN11Motherboard11motherboardE
 2083 0456 FFF7FEFF 	 bl _ZN11Motherboard21resetUserInputTimeoutEv
 2084              	.LVL157:
 2085              	.LBB465:
 2086              	.LBB466:
 105:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufSizeType actual_index = (index + start) % size;
 2087              	 .loc 2 105 0
 2088 045a 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2089 045e C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2090 0462 9988     	 ldrh r1,[r3,#4]
 2091 0464 89B2     	 uxth r1,r1
 2092 0466 1A88     	 ldrh r2,[r3,#0]
 2093              	.LVL158:
 2094              	 .loc 2 106 0
 2095 0468 9868     	 ldr r0,[r3,#8]
 105:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufSizeType actual_index = (index + start) % size;
 2096              	 .loc 2 105 0
 2097 046a 91FBF2F3 	 sdiv r3,r1,r2
 2098 046e 02FB1313 	 mls r3,r2,r3,r1
 2099              	 .loc 2 106 0
 2100 0472 9BB2     	 uxth r3,r3
 2101              	.LBE466:
 2102              	.LBE465:
 451:src/MightyBoard/Motherboard/Command.cc **** 			
 452:src/MightyBoard/Motherboard/Command.cc **** 			uint8_t command = command_buffer[0];
 2103              	 .loc 1 452 0
 2104 0474 C35C     	 ldrb r3,[r0,r3]
 2105              	.LVL159:
 2106 0476 8DF81F30 	 strb r3,[sp,#31]
 2107              	.LBB467:
 453:src/MightyBoard/Motherboard/Command.cc **** 
 454:src/MightyBoard/Motherboard/Command.cc **** 		if (command == HOST_CMD_QUEUE_POINT_EXT || command == HOST_CMD_QUEUE_POINT_NEW) {
 2108              	 .loc 1 454 0
 2109 047a 8E2B     	 cmp r3,#142
 2110 047c 14BF     	 ite ne
 2111 047e 0021     	 movne r1,#0
 2112              	.LVL160:
 2113 0480 0121     	 moveq r1,#1
 2114 0482 8B2B     	 cmp r3,#139
 2115 0484 08BF     	 it eq
 2116 0486 41F00101 	 orreq r1,r1,#1
 2117 048a 21B1     	 cbz r1,.L103
 455:src/MightyBoard/Motherboard/Command.cc **** 					handleMovementCommand(command);
 2118              	 .loc 1 455 0
 2119 048c 0DF11F00 	 add r0,sp,#31
 2120 0490 FFF7FEFF 	 bl _ZN7commandL21handleMovementCommandERKh
 2121              	.LVL161:
 2122 0494 52E3     	 b .L102
 2123              	.L103:
 2124              	.LBB468:
 456:src/MightyBoard/Motherboard/Command.cc **** 			}  else if (command == HOST_CMD_CHANGE_TOOL) {
 2125              	 .loc 1 456 0
 2126 0496 862B     	 cmp r3,#134
 2127 0498 1CD1     	 bne .L104
 2128              	.LVL162:
 2129              	.LBB469:
 2130              	.LBB470:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2131              	 .loc 2 91 0
 2132 049a 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2133 049e C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2134 04a2 5B88     	 ldrh r3,[r3,#2]
 2135 04a4 9BB2     	 uxth r3,r3
 2136              	.LBE470:
 2137              	.LBE469:
 457:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 2) {
 2138              	 .loc 1 457 0
 2139 04a6 012B     	 cmp r3,#1
 2140 04a8 40F24883 	 bls .L102
 458:src/MightyBoard/Motherboard/Command.cc **** 					pop8(); // remove the command code
 2141              	 .loc 1 458 0
 2142 04ac FFF7FEFF 	 bl _ZN7command4pop8Ev
 459:src/MightyBoard/Motherboard/Command.cc ****                     currentToolIndex = pop8();
 2143              	 .loc 1 459 0
 2144 04b0 FFF7FEFF 	 bl _ZN7command4pop8Ev
 2145 04b4 40F20003 	 movw r3,#:lower16:.LANCHOR11
 2146 04b8 C0F20003 	 movt r3,#:upper16:.LANCHOR11
 2147 04bc 1870     	 strb r0,[r3,#0]
 460:src/MightyBoard/Motherboard/Command.cc ****                     line_number++;
 2148              	 .loc 1 460 0
 2149 04be 40F20003 	 movw r3,#:lower16:.LANCHOR4
 2150 04c2 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 2151 04c6 1A68     	 ldr r2,[r3,#0]
 2152 04c8 02F10102 	 add r2,r2,#1
 2153 04cc 1A60     	 str r2,[r3,#0]
 461:src/MightyBoard/Motherboard/Command.cc ****                     
 462:src/MightyBoard/Motherboard/Command.cc ****                     planner::changeToolIndex(currentToolIndex);
 2154              	 .loc 1 462 0
 2155 04ce FFF7FEFF 	 bl _ZN7planner15changeToolIndexEh
 2156 04d2 33E3     	 b .L102
 2157              	.LVL163:
 2158              	.L104:
 2159              	.LBB471:
 463:src/MightyBoard/Motherboard/Command.cc **** 				}
 464:src/MightyBoard/Motherboard/Command.cc **** 			} else if (command == HOST_CMD_ENABLE_AXES) {
 2160              	 .loc 1 464 0
 2161 04d4 892B     	 cmp r3,#137
 2162 04d6 27D1     	 bne .L105
 2163              	.LVL164:
 2164              	.LBB472:
 2165              	.LBB473:
 2166              	.LBB474:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2167              	 .loc 2 91 0
 2168 04d8 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2169 04dc C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2170 04e0 5B88     	 ldrh r3,[r3,#2]
 2171 04e2 9BB2     	 uxth r3,r3
 2172              	.LBE474:
 2173              	.LBE473:
 465:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 2) {
 2174              	 .loc 1 465 0
 2175 04e4 012B     	 cmp r3,#1
 2176 04e6 40F22983 	 bls .L102
 2177              	.LBB475:
 466:src/MightyBoard/Motherboard/Command.cc **** 					pop8(); // remove the command code
 2178              	 .loc 1 466 0
 2179 04ea FFF7FEFF 	 bl _ZN7command4pop8Ev
 467:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t axes = pop8();
 2180              	 .loc 1 467 0
 2181 04ee FFF7FEFF 	 bl _ZN7command4pop8Ev
 2182 04f2 0546     	 mov r5,r0
 2183              	.LVL165:
 468:src/MightyBoard/Motherboard/Command.cc **** 					line_number++;
 2184              	 .loc 1 468 0
 2185 04f4 40F20003 	 movw r3,#:lower16:.LANCHOR4
 2186 04f8 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 2187 04fc 1A68     	 ldr r2,[r3,#0]
 2188 04fe 02F10102 	 add r2,r2,#1
 2189 0502 1A60     	 str r2,[r3,#0]
 469:src/MightyBoard/Motherboard/Command.cc **** 					
 470:src/MightyBoard/Motherboard/Command.cc **** 					bool enable = (axes & 0x80) != 0;
 2190              	 .loc 1 470 0
 2191 0504 C0F3C016 	 ubfx r6,r0,#7,#1
 2192              	.LVL166:
 471:src/MightyBoard/Motherboard/Command.cc **** 					for (int i = 0; i < STEPPER_COUNT; i++) {
 2193              	 .loc 1 471 0
 2194 0508 4FF00004 	 mov r4,#0
 2195              	.LVL167:
 2196              	.L107:
 2197              	.LBB476:
 472:src/MightyBoard/Motherboard/Command.cc **** 						if ((axes & _BV(i)) != 0) {
 2198              	 .loc 1 472 0
 2199 050c 45FA04F3 	 asr r3,r5,r4
 2200 0510 13F0010F 	 tst r3,#1
 2201 0514 03D0     	 beq .L106
 473:src/MightyBoard/Motherboard/Command.cc **** 							steppers::enableAxis(i, enable);
 2202              	 .loc 1 473 0
 2203 0516 E0B2     	 uxtb r0,r4
 2204 0518 3146     	 mov r1,r6
 2205 051a FFF7FEFF 	 bl _ZN8steppers10enableAxisEhb
 2206              	.L106:
 471:src/MightyBoard/Motherboard/Command.cc **** 					for (int i = 0; i < STEPPER_COUNT; i++) {
 2207              	 .loc 1 471 0
 2208 051e 04F10104 	 add r4,r4,#1
 2209              	.LVL168:
 2210 0522 042C     	 cmp r4,#4
 2211 0524 F2D1     	 bne .L107
 2212 0526 09E3     	 b .L102
 2213              	.LVL169:
 2214              	.L105:
 2215              	.LBE476:
 2216              	.LBE475:
 2217              	.LBE472:
 2218              	.LBB477:
 474:src/MightyBoard/Motherboard/Command.cc **** 						}
 475:src/MightyBoard/Motherboard/Command.cc **** 					}
 476:src/MightyBoard/Motherboard/Command.cc **** 				}
 477:src/MightyBoard/Motherboard/Command.cc **** 			} else if (command == HOST_CMD_SET_POSITION_EXT) {
 2219              	 .loc 1 477 0
 2220 0528 8C2B     	 cmp r3,#140
 2221 052a 2CD1     	 bne .L108
 2222              	.LVL170:
 2223              	.LBB478:
 2224              	.LBB479:
 2225              	.LBB480:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2226              	 .loc 2 91 0
 2227 052c 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2228 0530 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2229 0534 5B88     	 ldrh r3,[r3,#2]
 2230 0536 9BB2     	 uxth r3,r3
 2231              	.LBE480:
 2232              	.LBE479:
 478:src/MightyBoard/Motherboard/Command.cc **** 				// check for completion
 479:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 21) {
 2233              	 .loc 1 479 0
 2234 0538 142B     	 cmp r3,#20
 2235 053a 40F2FF82 	 bls .L102
 2236              	.LBB481:
 480:src/MightyBoard/Motherboard/Command.cc **** 					pop8(); // remove the command code
 2237              	 .loc 1 480 0
 2238 053e FFF7FEFF 	 bl _ZN7command4pop8Ev
 481:src/MightyBoard/Motherboard/Command.cc **** 					int32_t x = pop32();
 2239              	 .loc 1 481 0
 2240 0542 FFF7FEFF 	 bl _ZN7command5pop32Ev
 2241 0546 0446     	 mov r4,r0
 2242              	.LVL171:
 482:src/MightyBoard/Motherboard/Command.cc **** 					int32_t y = pop32();
 2243              	 .loc 1 482 0
 2244 0548 FFF7FEFF 	 bl _ZN7command5pop32Ev
 2245              	.LVL172:
 2246 054c 0646     	 mov r6,r0
 2247              	.LVL173:
 483:src/MightyBoard/Motherboard/Command.cc **** 					int32_t z = pop32();
 2248              	 .loc 1 483 0
 2249 054e FFF7FEFF 	 bl _ZN7command5pop32Ev
 2250              	.LVL174:
 2251 0552 0746     	 mov r7,r0
 2252              	.LVL175:
 484:src/MightyBoard/Motherboard/Command.cc **** 					int32_t a = pop32();
 2253              	 .loc 1 484 0
 2254 0554 FFF7FEFF 	 bl _ZN7command5pop32Ev
 2255              	.LVL176:
 2256 0558 0546     	 mov r5,r0
 2257              	.LVL177:
 485:src/MightyBoard/Motherboard/Command.cc **** 					int32_t b = pop32();
 2258              	 .loc 1 485 0
 2259 055a FFF7FEFF 	 bl _ZN7command5pop32Ev
 2260              	.LVL178:
 486:src/MightyBoard/Motherboard/Command.cc **** 					line_number++;
 2261              	 .loc 1 486 0
 2262 055e 40F20003 	 movw r3,#:lower16:.LANCHOR4
 2263 0562 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 2264 0566 1A68     	 ldr r2,[r3,#0]
 2265 0568 02F10102 	 add r2,r2,#1
 2266 056c 1A60     	 str r2,[r3,#0]
 487:src/MightyBoard/Motherboard/Command.cc **** 					
 488:src/MightyBoard/Motherboard/Command.cc **** 					planner::definePosition(Point(x,y,z,a,b));
 2267              	 .loc 1 488 0
 2268 056e 0095     	 str r5,[sp,#0]
 2269 0570 0190     	 str r0,[sp,#4]
 2270 0572 08A8     	 add r0,sp,#32
 2271              	.LVL179:
 2272 0574 2146     	 mov r1,r4
 2273 0576 3246     	 mov r2,r6
 2274 0578 3B46     	 mov r3,r7
 2275 057a FFF7FEFF 	 bl _ZN5PointC1Elllll
 2276              	.LVL180:
 2277 057e 08A8     	 add r0,sp,#32
 2278 0580 FFF7FEFF 	 bl _ZN7planner14definePositionERK5Point
 2279 0584 DAE2     	 b .L102
 2280              	.LVL181:
 2281              	.L108:
 2282              	.LBE481:
 2283              	.LBE478:
 2284              	.LBB482:
 489:src/MightyBoard/Motherboard/Command.cc **** 				}
 490:src/MightyBoard/Motherboard/Command.cc **** 			} else if (command == HOST_CMD_DELAY) {
 2285              	 .loc 1 490 0
 2286 0586 852B     	 cmp r3,#133
 2287 0588 26D1     	 bne .L109
 2288              	.LVL182:
 2289              	.LBB483:
 2290              	.LBB484:
 2291              	.LBB485:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2292              	 .loc 2 91 0
 2293 058a 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2294 058e C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2295 0592 5B88     	 ldrh r3,[r3,#2]
 2296 0594 9BB2     	 uxth r3,r3
 2297              	.LBE485:
 2298              	.LBE484:
 491:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 5) {
 2299              	 .loc 1 491 0
 2300 0596 042B     	 cmp r3,#4
 2301 0598 40F2D082 	 bls .L102
 2302              	.LBB486:
 492:src/MightyBoard/Motherboard/Command.cc **** 					mode = DELAY;
 2303              	 .loc 1 492 0
 2304 059c 40F20003 	 movw r3,#:lower16:.LANCHOR3
 2305 05a0 C0F20003 	 movt r3,#:upper16:.LANCHOR3
 2306 05a4 4FF00202 	 mov r2,#2
 2307 05a8 1A70     	 strb r2,[r3,#0]
 493:src/MightyBoard/Motherboard/Command.cc **** 					pop8(); // remove the command code
 2308              	 .loc 1 493 0
 2309 05aa FFF7FEFF 	 bl _ZN7command4pop8Ev
 494:src/MightyBoard/Motherboard/Command.cc **** 					// parameter is in milliseconds; timeouts need microseconds
 495:src/MightyBoard/Motherboard/Command.cc **** 					uint32_t microseconds = pop32() * 1000L;
 2310              	 .loc 1 495 0
 2311 05ae FFF7FEFF 	 bl _ZN7command5pop32Ev
 2312              	.LVL183:
 496:src/MightyBoard/Motherboard/Command.cc **** 					line_number++;
 2313              	 .loc 1 496 0
 2314 05b2 40F20003 	 movw r3,#:lower16:.LANCHOR4
 2315 05b6 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 2316 05ba 1A68     	 ldr r2,[r3,#0]
 2317 05bc 02F10102 	 add r2,r2,#1
 2318 05c0 1A60     	 str r2,[r3,#0]
 495:src/MightyBoard/Motherboard/Command.cc **** 					uint32_t microseconds = pop32() * 1000L;
 2319              	 .loc 1 495 0
 2320 05c2 4FF47A71 	 mov r1,#1000
 2321 05c6 01FB00F1 	 mul r1,r1,r0
 497:src/MightyBoard/Motherboard/Command.cc **** 					
 498:src/MightyBoard/Motherboard/Command.cc **** 					delay_timeout.start(microseconds);
 2322              	 .loc 1 498 0
 2323 05ca 40F20000 	 movw r0,#:lower16:.LANCHOR9
 2324              	.LVL184:
 2325 05ce C0F20000 	 movt r0,#:upper16:.LANCHOR9
 2326 05d2 FFF7FEFF 	 bl _ZN7Timeout5startEm
 2327              	.LVL185:
 2328 05d6 B1E2     	 b .L102
 2329              	.LVL186:
 2330              	.L109:
 2331              	.LBE486:
 2332              	.LBE483:
 2333              	.LBB487:
 499:src/MightyBoard/Motherboard/Command.cc **** 				}
 500:src/MightyBoard/Motherboard/Command.cc **** 			} else if (command == HOST_CMD_PAUSE_FOR_BUTTON) {
 2334              	 .loc 1 500 0
 2335 05d8 942B     	 cmp r3,#148
 2336 05da 4FD1     	 bne .L110
 2337              	.LVL187:
 2338              	.LBB488:
 2339              	.LBB489:
 2340              	.LBB490:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2341              	 .loc 2 91 0
 2342 05dc 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2343 05e0 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2344 05e4 5B88     	 ldrh r3,[r3,#2]
 2345 05e6 9BB2     	 uxth r3,r3
 2346              	.LBE490:
 2347              	.LBE489:
 501:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 5) {
 2348              	 .loc 1 501 0
 2349 05e8 042B     	 cmp r3,#4
 2350 05ea 40F2A782 	 bls .L102
 2351              	.LBB491:
 502:src/MightyBoard/Motherboard/Command.cc **** 					pop8(); // remove the command code
 2352              	 .loc 1 502 0
 2353 05ee FFF7FEFF 	 bl _ZN7command4pop8Ev
 503:src/MightyBoard/Motherboard/Command.cc **** 					button_mask = pop8();
 2354              	 .loc 1 503 0
 2355 05f2 FFF7FEFF 	 bl _ZN7command4pop8Ev
 2356 05f6 40F20003 	 movw r3,#:lower16:.LANCHOR14
 2357 05fa C0F20003 	 movt r3,#:upper16:.LANCHOR14
 2358 05fe 1870     	 strb r0,[r3,#0]
 504:src/MightyBoard/Motherboard/Command.cc **** 					uint16_t timeout_seconds = pop16();
 2359              	 .loc 1 504 0
 2360 0600 FFF7FEFF 	 bl _ZN7command5pop16Ev
 2361 0604 84B2     	 uxth r4,r0
 2362              	.LVL188:
 505:src/MightyBoard/Motherboard/Command.cc **** 					button_timeout_behavior = pop8();
 2363              	 .loc 1 505 0
 2364 0606 FFF7FEFF 	 bl _ZN7command4pop8Ev
 2365 060a 40F20003 	 movw r3,#:lower16:.LANCHOR13
 2366 060e C0F20003 	 movt r3,#:upper16:.LANCHOR13
 2367 0612 1870     	 strb r0,[r3,#0]
 506:src/MightyBoard/Motherboard/Command.cc **** 					line_number++;
 2368              	 .loc 1 506 0
 2369 0614 40F20003 	 movw r3,#:lower16:.LANCHOR4
 2370 0618 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 2371 061c 1A68     	 ldr r2,[r3,#0]
 2372 061e 02F10102 	 add r2,r2,#1
 2373 0622 1A60     	 str r2,[r3,#0]
 507:src/MightyBoard/Motherboard/Command.cc **** 					
 508:src/MightyBoard/Motherboard/Command.cc **** 					if (timeout_seconds != 0) {
 2374              	 .loc 1 508 0
 2375 0624 64B1     	 cbz r4,.L111
 509:src/MightyBoard/Motherboard/Command.cc **** 						button_wait_timeout.start(timeout_seconds * 1000L * 1000L);
 2376              	 .loc 1 509 0
 2377 0626 44F24021 	 movw r1,#16960
 2378 062a C0F20F01 	 movt r1,15
 2379 062e 40F20000 	 movw r0,#:lower16:.LANCHOR12
 2380 0632 C0F20000 	 movt r0,#:upper16:.LANCHOR12
 2381 0636 01FB04F1 	 mul r1,r1,r4
 2382 063a FFF7FEFF 	 bl _ZN7Timeout5startEm
 2383 063e 0BE0     	 b .L112
 2384              	.L111:
 510:src/MightyBoard/Motherboard/Command.cc **** 					} else {
 511:src/MightyBoard/Motherboard/Command.cc **** 						button_wait_timeout = Timeout();
 2385              	 .loc 1 511 0
 2386 0640 0DAC     	 add r4,sp,#52
 2387              	.LVL189:
 2388 0642 2046     	 mov r0,r4
 2389 0644 FFF7FEFF 	 bl _ZN7TimeoutC1Ev
 2390 0648 40F20005 	 movw r5,#:lower16:.LANCHOR12
 2391 064c C0F20005 	 movt r5,#:upper16:.LANCHOR12
 2392 0650 94E80F00 	 ldmia r4,{r0,r1,r2,r3}
 2393 0654 85E80F00 	 stmia r5,{r0,r1,r2,r3}
 2394              	.L112:
 512:src/MightyBoard/Motherboard/Command.cc **** 					}
 513:src/MightyBoard/Motherboard/Command.cc ****                     // set button wait via interface board
 514:src/MightyBoard/Motherboard/Command.cc **** 					Motherboard::getBoard().interfaceBlink(25,15);
 2395              	 .loc 1 514 0
 2396 0658 40F20000 	 movw r0,#:lower16:_ZN11Motherboard11motherboardE
 2397 065c C0F20000 	 movt r0,#:upper16:_ZN11Motherboard11motherboardE
 2398 0660 4FF01901 	 mov r1,#25
 2399 0664 4FF00F02 	 mov r2,#15
 2400 0668 FFF7FEFF 	 bl _ZN11Motherboard14interfaceBlinkEii
 515:src/MightyBoard/Motherboard/Command.cc **** //					InterfaceBoard& ib = Motherboard::getBoard().getInterfaceBoard();
 516:src/MightyBoard/Motherboard/Command.cc **** //					ib.waitForButton(button_mask);
 517:src/MightyBoard/Motherboard/Command.cc **** 					mode = WAIT_ON_BUTTON;
 2401              	 .loc 1 517 0
 2402 066c 40F20003 	 movw r3,#:lower16:.LANCHOR3
 2403 0670 C0F20003 	 movt r3,#:upper16:.LANCHOR3
 2404 0674 4FF00602 	 mov r2,#6
 2405 0678 1A70     	 strb r2,[r3,#0]
 2406 067a 5FE2     	 b .L102
 2407              	.LVL190:
 2408              	.L110:
 2409              	.LBE491:
 2410              	.LBE488:
 2411              	.LBB492:
 518:src/MightyBoard/Motherboard/Command.cc **** 				}
 519:src/MightyBoard/Motherboard/Command.cc **** 			} else if (command == HOST_CMD_DISPLAY_MESSAGE) {
 2412              	 .loc 1 519 0
 2413 067c 952B     	 cmp r3,#149
 2414 067e 1BD1     	 bne .L113
 2415              	.LVL191:
 2416              	.LBB493:
 2417              	.LBB494:
 2418              	.LBB495:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2419              	 .loc 2 91 0
 2420 0680 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2421 0684 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2422 0688 5B88     	 ldrh r3,[r3,#2]
 2423 068a 9BB2     	 uxth r3,r3
 2424              	.LBE495:
 2425              	.LBE494:
 520:src/MightyBoard/Motherboard/Command.cc **** //				MessageScreen* scr = Motherboard::getBoard().getMessageScreen();
 521:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 6) {
 2426              	 .loc 1 521 0
 2427 068c 052B     	 cmp r3,#5
 2428 068e 40F25582 	 bls .L102
 2429              	.LBB496:
 522:src/MightyBoard/Motherboard/Command.cc **** 					pop8(); // remove the command code
 2430              	 .loc 1 522 0
 2431 0692 FFF7FEFF 	 bl _ZN7command4pop8Ev
 523:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t options = pop8();
 2432              	 .loc 1 523 0
 2433 0696 FFF7FEFF 	 bl _ZN7command4pop8Ev
 524:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t xpos = pop8();
 2434              	 .loc 1 524 0
 2435 069a FFF7FEFF 	 bl _ZN7command4pop8Ev
 525:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t ypos = pop8();
 2436              	 .loc 1 525 0
 2437 069e FFF7FEFF 	 bl _ZN7command4pop8Ev
 526:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t timeout_seconds = pop8();
 2438              	 .loc 1 526 0
 2439 06a2 FFF7FEFF 	 bl _ZN7command4pop8Ev
 527:src/MightyBoard/Motherboard/Command.cc **** 					line_number++;
 2440              	 .loc 1 527 0
 2441 06a6 40F20003 	 movw r3,#:lower16:.LANCHOR4
 2442 06aa C0F20003 	 movt r3,#:upper16:.LANCHOR4
 2443 06ae 1A68     	 ldr r2,[r3,#0]
 2444 06b0 02F10102 	 add r2,r2,#1
 2445 06b4 1A60     	 str r2,[r3,#0]
 2446 06b6 41E2     	 b .L102
 2447              	.LVL192:
 2448              	.L113:
 2449              	.LBE496:
 2450              	.LBE493:
 2451              	.LBB497:
 528:src/MightyBoard/Motherboard/Command.cc **** 					
 529:src/MightyBoard/Motherboard/Command.cc ****                     // check message clear bit
 530:src/MightyBoard/Motherboard/Command.cc **** //					if ( (options & (1 << 0)) == 0 ) { scr->clearMessage(); }
 531:src/MightyBoard/Motherboard/Command.cc **** 					// set position and add message
 532:src/MightyBoard/Motherboard/Command.cc **** //					scr->setXY(xpos,ypos);
 533:src/MightyBoard/Motherboard/Command.cc **** //					scr->addMessage(command_buffer);
 534:src/MightyBoard/Motherboard/Command.cc **** 
 535:src/MightyBoard/Motherboard/Command.cc **** 					// push message screen if the full message has been recieved
 536:src/MightyBoard/Motherboard/Command.cc **** //					if((options & (1 << 1))){
 537:src/MightyBoard/Motherboard/Command.cc **** //						InterfaceBoard& ib = Motherboard::getBoard().getInterfaceBoard();
 538:src/MightyBoard/Motherboard/Command.cc **** //						if (ib.getCurrentScreen() != scr) {
 539:src/MightyBoard/Motherboard/Command.cc **** //							ib.pushScreen(scr);
 540:src/MightyBoard/Motherboard/Command.cc **** //						} else {
 541:src/MightyBoard/Motherboard/Command.cc **** //							scr->refreshScreen();
 542:src/MightyBoard/Motherboard/Command.cc **** //						}
 543:src/MightyBoard/Motherboard/Command.cc **** 						// set message timeout if not a buttonWait call
 544:src/MightyBoard/Motherboard/Command.cc **** //						if ((timeout_seconds != 0) && (!(options & (1 <<2)))) {
 545:src/MightyBoard/Motherboard/Command.cc **** //								scr->setTimeout(timeout_seconds);//, true);
 546:src/MightyBoard/Motherboard/Command.cc **** //						}
 547:src/MightyBoard/Motherboard/Command.cc **** 
 548:src/MightyBoard/Motherboard/Command.cc **** //						if (options & (1 << 2)) { // button wait bit --> start button wait
 549:src/MightyBoard/Motherboard/Command.cc **** //							if (timeout_seconds != 0) {
 550:src/MightyBoard/Motherboard/Command.cc **** //								button_wait_timeout.start(timeout_seconds * 1000L * 1000L);
 551:src/MightyBoard/Motherboard/Command.cc **** //							} else {
 552:src/MightyBoard/Motherboard/Command.cc **** //								button_wait_timeout = Timeout();
 553:src/MightyBoard/Motherboard/Command.cc **** //							}
 554:src/MightyBoard/Motherboard/Command.cc **** //							button_mask = (1 << ButtonArray::CENTER);  // center button
 555:src/MightyBoard/Motherboard/Command.cc **** //							button_timeout_behavior &= (1 << BUTTON_CLEAR_SCREEN);
 556:src/MightyBoard/Motherboard/Command.cc **** //							Motherboard::getBoard().interfaceBlink(25,15);
 557:src/MightyBoard/Motherboard/Command.cc **** //							InterfaceBoard& ib = Motherboard::getBoard().getInterfaceBoard();
 558:src/MightyBoard/Motherboard/Command.cc **** //							ib.waitForButton(button_mask);
 559:src/MightyBoard/Motherboard/Command.cc **** //							mode = WAIT_ON_BUTTON;
 560:src/MightyBoard/Motherboard/Command.cc **** //						}
 561:src/MightyBoard/Motherboard/Command.cc **** //					}
 562:src/MightyBoard/Motherboard/Command.cc **** 				}
 563:src/MightyBoard/Motherboard/Command.cc **** 					
 564:src/MightyBoard/Motherboard/Command.cc **** 			} else if (command == HOST_CMD_FIND_AXES_MINIMUM ||
 2452              	 .loc 1 564 0
 2453 06b8 03F17D01 	 add r1,r3,#125
 2454 06bc C9B2     	 uxtb r1,r1
 2455 06be 0129     	 cmp r1,#1
 2456 06c0 39D8     	 bhi .L114
 2457              	.LVL193:
 2458              	.LBB498:
 2459              	.LBB499:
 2460              	.LBB500:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2461              	 .loc 2 91 0
 2462 06c2 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2463 06c6 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2464 06ca 5B88     	 ldrh r3,[r3,#2]
 2465 06cc 9BB2     	 uxth r3,r3
 2466              	.LBE500:
 2467              	.LBE499:
 565:src/MightyBoard/Motherboard/Command.cc **** 					command == HOST_CMD_FIND_AXES_MAXIMUM) {
 566:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 8) {
 2468              	 .loc 1 566 0
 2469 06ce 072B     	 cmp r3,#7
 2470 06d0 40F23482 	 bls .L102
 2471              	.LBB501:
 567:src/MightyBoard/Motherboard/Command.cc **** 					pop8(); // remove the command
 2472              	 .loc 1 567 0
 2473 06d4 FFF7FEFF 	 bl _ZN7command4pop8Ev
 568:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t flags = pop8();
 2474              	 .loc 1 568 0
 2475 06d8 FFF7FEFF 	 bl _ZN7command4pop8Ev
 2476 06dc 0546     	 mov r5,r0
 2477              	.LVL194:
 569:src/MightyBoard/Motherboard/Command.cc **** 					uint32_t feedrate = pop32(); // feedrate in us per step
 2478              	 .loc 1 569 0
 2479 06de FFF7FEFF 	 bl _ZN7command5pop32Ev
 2480              	.LVL195:
 2481 06e2 0446     	 mov r4,r0
 2482              	.LVL196:
 570:src/MightyBoard/Motherboard/Command.cc **** 					uint16_t timeout_s = pop16();
 2483              	 .loc 1 570 0
 2484 06e4 FFF7FEFF 	 bl _ZN7command5pop16Ev
 2485              	.LVL197:
 571:src/MightyBoard/Motherboard/Command.cc **** 					line_number++;
 2486              	 .loc 1 571 0
 2487 06e8 40F20003 	 movw r3,#:lower16:.LANCHOR4
 2488 06ec C0F20003 	 movt r3,#:upper16:.LANCHOR4
 2489 06f0 1A68     	 ldr r2,[r3,#0]
 2490 06f2 02F10102 	 add r2,r2,#1
 2491 06f6 1A60     	 str r2,[r3,#0]
 2492              	.LVL198:
 572:src/MightyBoard/Motherboard/Command.cc **** 					
 573:src/MightyBoard/Motherboard/Command.cc **** 					bool direction = command == HOST_CMD_FIND_AXES_MAXIMUM;
 574:src/MightyBoard/Motherboard/Command.cc **** 					mode = HOMING;
 2493              	 .loc 1 574 0
 2494 06f8 40F20003 	 movw r3,#:lower16:.LANCHOR3
 2495 06fc C0F20003 	 movt r3,#:upper16:.LANCHOR3
 2496 0700 4FF00302 	 mov r2,#3
 2497 0704 1A70     	 strb r2,[r3,#0]
 575:src/MightyBoard/Motherboard/Command.cc **** 					homing_timeout.start(timeout_s * 1000L * 1000L);
 2498              	 .loc 1 575 0
 2499 0706 81B2     	 uxth r1,r0
 2500 0708 44F24023 	 movw r3,#16960
 2501 070c C0F20F03 	 movt r3,15
 2502 0710 40F20000 	 movw r0,#:lower16:.LANCHOR8
 2503              	.LVL199:
 2504 0714 C0F20000 	 movt r0,#:upper16:.LANCHOR8
 2505 0718 03FB01F1 	 mul r1,r3,r1
 2506              	.LVL200:
 2507 071c FFF7FEFF 	 bl _ZN7Timeout5startEm
 2508              	.LVL201:
 576:src/MightyBoard/Motherboard/Command.cc **** 					steppers::startHoming(command==HOST_CMD_FIND_AXES_MAXIMUM,
 577:src/MightyBoard/Motherboard/Command.cc **** 							flags,
 578:src/MightyBoard/Motherboard/Command.cc **** 							feedrate);
 2509              	 .loc 1 578 0
 2510 0720 9DF81F00 	 ldrb r0,[sp,#31]
 2511              	.LVL202:
 2512 0724 8428     	 cmp r0,#132
 2513              	.LVL203:
 2514 0726 14BF     	 ite ne
 2515 0728 0020     	 movne r0,#0
 2516              	.LVL204:
 2517 072a 0120     	 moveq r0,#1
 2518 072c 2946     	 mov r1,r5
 2519 072e 2246     	 mov r2,r4
 2520 0730 FFF7FEFF 	 bl _ZN8steppers11startHomingEbhm
 2521 0734 02E2     	 b .L102
 2522              	.LVL205:
 2523              	.L114:
 2524              	.LBE501:
 2525              	.LBE498:
 2526              	.LBB502:
 579:src/MightyBoard/Motherboard/Command.cc **** 				}
 580:src/MightyBoard/Motherboard/Command.cc **** 			} else if (command == HOST_CMD_WAIT_FOR_TOOL) {
 2527              	 .loc 1 580 0
 2528 0736 872B     	 cmp r3,#135
 2529 0738 32D1     	 bne .L115
 2530              	.LVL206:
 2531              	.LBB503:
 2532              	.LBB504:
 2533              	.LBB505:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2534              	 .loc 2 91 0
 2535 073a 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2536              	.LVL207:
 2537 073e C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2538 0742 5B88     	 ldrh r3,[r3,#2]
 2539 0744 9BB2     	 uxth r3,r3
 2540              	.LBE505:
 2541              	.LBE504:
 581:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 6) {
 2542              	 .loc 1 581 0
 2543 0746 052B     	 cmp r3,#5
 2544 0748 40F2F881 	 bls .L102
 2545              	.LBB506:
 582:src/MightyBoard/Motherboard/Command.cc **** 					mode = WAIT_ON_TOOL;
 2546              	 .loc 1 582 0
 2547 074c 40F20003 	 movw r3,#:lower16:.LANCHOR3
 2548 0750 C0F20003 	 movt r3,#:upper16:.LANCHOR3
 2549 0754 4FF00402 	 mov r2,#4
 2550 0758 1A70     	 strb r2,[r3,#0]
 583:src/MightyBoard/Motherboard/Command.cc **** 					pop8();
 2551              	 .loc 1 583 0
 2552 075a FFF7FEFF 	 bl _ZN7command4pop8Ev
 584:src/MightyBoard/Motherboard/Command.cc **** 					currentToolIndex = pop8();
 2553              	 .loc 1 584 0
 2554 075e FFF7FEFF 	 bl _ZN7command4pop8Ev
 2555 0762 40F20003 	 movw r3,#:lower16:.LANCHOR11
 2556 0766 C0F20003 	 movt r3,#:upper16:.LANCHOR11
 2557 076a 1870     	 strb r0,[r3,#0]
 585:src/MightyBoard/Motherboard/Command.cc **** 					uint16_t toolPingDelay = (uint16_t)pop16();
 2558              	 .loc 1 585 0
 2559 076c FFF7FEFF 	 bl _ZN7command5pop16Ev
 586:src/MightyBoard/Motherboard/Command.cc **** 					uint16_t toolTimeout = (uint16_t)pop16();
 2560              	 .loc 1 586 0
 2561 0770 FFF7FEFF 	 bl _ZN7command5pop16Ev
 2562              	.LVL208:
 587:src/MightyBoard/Motherboard/Command.cc **** 					line_number++;
 2563              	 .loc 1 587 0
 2564 0774 40F20003 	 movw r3,#:lower16:.LANCHOR4
 2565 0778 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 2566 077c 1A68     	 ldr r2,[r3,#0]
 2567 077e 02F10102 	 add r2,r2,#1
 2568 0782 1A60     	 str r2,[r3,#0]
 588:src/MightyBoard/Motherboard/Command.cc **** 					
 589:src/MightyBoard/Motherboard/Command.cc **** 					// if we re-add handling of toolTimeout, we need to make sure
 590:src/MightyBoard/Motherboard/Command.cc **** 					// that values that overflow our counter will not be passed)
 591:src/MightyBoard/Motherboard/Command.cc **** 					tool_wait_timeout.start(toolTimeout*1000000L);
 2569              	 .loc 1 591 0
 2570 0784 81B2     	 uxth r1,r0
 2571 0786 44F24023 	 movw r3,#16960
 2572 078a C0F20F03 	 movt r3,15
 2573 078e 40F20000 	 movw r0,#:lower16:.LANCHOR10
 2574              	.LVL209:
 2575 0792 C0F20000 	 movt r0,#:upper16:.LANCHOR10
 2576 0796 03FB01F1 	 mul r1,r3,r1
 2577              	.LVL210:
 2578 079a FFF7FEFF 	 bl _ZN7Timeout5startEm
 2579 079e CDE1     	 b .L102
 2580              	.LVL211:
 2581              	.L115:
 2582              	.LBE506:
 2583              	.LBE503:
 2584              	.LBB507:
 592:src/MightyBoard/Motherboard/Command.cc **** 				}
 593:src/MightyBoard/Motherboard/Command.cc **** 			} else if (command == HOST_CMD_WAIT_FOR_PLATFORM) {
 2585              	 .loc 1 593 0
 2586 07a0 8D2B     	 cmp r3,#141
 2587 07a2 2DD1     	 bne .L116
 2588              	.LVL212:
 2589              	.LBB508:
 2590              	.LBB509:
 2591              	.LBB510:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2592              	 .loc 2 91 0
 2593 07a4 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2594 07a8 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2595 07ac 5B88     	 ldrh r3,[r3,#2]
 2596 07ae 9BB2     	 uxth r3,r3
 2597              	.LBE510:
 2598              	.LBE509:
 594:src/MightyBoard/Motherboard/Command.cc ****         // FIXME: Almost equivalent to WAIT_FOR_TOOL
 595:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 6) {
 2599              	 .loc 1 595 0
 2600 07b0 052B     	 cmp r3,#5
 2601 07b2 40F2C381 	 bls .L102
 2602              	.LBB511:
 596:src/MightyBoard/Motherboard/Command.cc **** 					mode = WAIT_ON_PLATFORM;
 2603              	 .loc 1 596 0
 2604 07b6 40F20003 	 movw r3,#:lower16:.LANCHOR3
 2605 07ba C0F20003 	 movt r3,#:upper16:.LANCHOR3
 2606 07be 4FF00502 	 mov r2,#5
 2607 07c2 1A70     	 strb r2,[r3,#0]
 597:src/MightyBoard/Motherboard/Command.cc **** 					pop8();
 2608              	 .loc 1 597 0
 2609 07c4 FFF7FEFF 	 bl _ZN7command4pop8Ev
 598:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t currentToolIndex = pop8();
 2610              	 .loc 1 598 0
 2611 07c8 FFF7FEFF 	 bl _ZN7command4pop8Ev
 599:src/MightyBoard/Motherboard/Command.cc **** 					uint16_t toolPingDelay = (uint16_t)pop16();
 2612              	 .loc 1 599 0
 2613 07cc FFF7FEFF 	 bl _ZN7command5pop16Ev
 600:src/MightyBoard/Motherboard/Command.cc **** 					uint16_t toolTimeout = (uint16_t)pop16();
 2614              	 .loc 1 600 0
 2615 07d0 FFF7FEFF 	 bl _ZN7command5pop16Ev
 2616              	.LVL213:
 601:src/MightyBoard/Motherboard/Command.cc **** 					line_number++;
 2617              	 .loc 1 601 0
 2618 07d4 40F20003 	 movw r3,#:lower16:.LANCHOR4
 2619 07d8 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 2620 07dc 1A68     	 ldr r2,[r3,#0]
 2621 07de 02F10102 	 add r2,r2,#1
 2622 07e2 1A60     	 str r2,[r3,#0]
 602:src/MightyBoard/Motherboard/Command.cc **** 					
 603:src/MightyBoard/Motherboard/Command.cc **** 					// if we re-add handling of toolTimeout, we need to make sure
 604:src/MightyBoard/Motherboard/Command.cc **** 					// that values that overflow our counter will not be passed)
 605:src/MightyBoard/Motherboard/Command.cc **** 					tool_wait_timeout.start(toolTimeout*1000000L);
 2623              	 .loc 1 605 0
 2624 07e4 81B2     	 uxth r1,r0
 2625 07e6 44F24023 	 movw r3,#16960
 2626 07ea C0F20F03 	 movt r3,15
 2627 07ee 40F20000 	 movw r0,#:lower16:.LANCHOR10
 2628              	.LVL214:
 2629 07f2 C0F20000 	 movt r0,#:upper16:.LANCHOR10
 2630 07f6 03FB01F1 	 mul r1,r3,r1
 2631              	.LVL215:
 2632 07fa FFF7FEFF 	 bl _ZN7Timeout5startEm
 2633 07fe 9DE1     	 b .L102
 2634              	.LVL216:
 2635              	.L116:
 2636              	.LBE511:
 2637              	.LBE508:
 2638              	.LBB512:
 606:src/MightyBoard/Motherboard/Command.cc **** 				}
 607:src/MightyBoard/Motherboard/Command.cc **** 			} else if (command == HOST_CMD_STORE_HOME_POSITION) {
 2639              	 .loc 1 607 0
 2640 0800 8F2B     	 cmp r3,#143
 2641 0802 31D1     	 bne .L117
 2642              	.LVL217:
 2643              	.LBB513:
 2644              	.LBB514:
 2645              	.LBB515:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2646              	 .loc 2 91 0
 2647 0804 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2648 0808 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2649 080c 5B88     	 ldrh r3,[r3,#2]
 2650 080e 9BB2     	 uxth r3,r3
 2651              	.LBE515:
 2652              	.LBE514:
 608:src/MightyBoard/Motherboard/Command.cc **** 
 609:src/MightyBoard/Motherboard/Command.cc **** 				// check for completion
 610:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 2) {
 2653              	 .loc 1 610 0
 2654 0810 012B     	 cmp r3,#1
 2655 0812 40F29381 	 bls .L102
 2656              	.LBB516:
 611:src/MightyBoard/Motherboard/Command.cc **** 					pop8();
 2657              	 .loc 1 611 0
 2658 0816 FFF7FEFF 	 bl _ZN7command4pop8Ev
 612:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t axes = pop8();
 2659              	 .loc 1 612 0
 2660 081a FFF7FEFF 	 bl _ZN7command4pop8Ev
 2661 081e 0646     	 mov r6,r0
 2662              	.LVL218:
 613:src/MightyBoard/Motherboard/Command.cc **** 					line_number++;
 2663              	 .loc 1 613 0
 2664 0820 40F20003 	 movw r3,#:lower16:.LANCHOR4
 2665 0824 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 2666 0828 1A68     	 ldr r2,[r3,#0]
 2667 082a 02F10102 	 add r2,r2,#1
 2668 082e 1A60     	 str r2,[r3,#0]
 2669              	.LVL219:
 2670 0830 4FF00E05 	 mov r5,#14
 2671 0834 4FF00004 	 mov r4,#0
 2672              	.LVL220:
 2673              	.L119:
 2674              	.LBB517:
 614:src/MightyBoard/Motherboard/Command.cc **** 					
 615:src/MightyBoard/Motherboard/Command.cc **** 					// Go through each axis, and if that axis is specified, read it's value,
 616:src/MightyBoard/Motherboard/Command.cc **** 					// then record it to the eeprom.
 617:src/MightyBoard/Motherboard/Command.cc **** 					for (uint8_t i = 0; i < STEPPER_COUNT; i++) {
 618:src/MightyBoard/Motherboard/Command.cc **** 						if ( axes & (1 << i) ) {
 2675              	 .loc 1 618 0
 2676 0838 46FA04F3 	 asr r3,r6,r4
 2677 083c 13F0010F 	 tst r3,#1
 2678 0840 0AD0     	 beq .L118
 619:src/MightyBoard/Motherboard/Command.cc **** 							eeprom::setEeprom32(eeprom_offsets::AXIS_HOME_POSITIONS_STEPS + (i*4), steppers::getPosition
 2679              	 .loc 1 619 0
 2680 0842 11A8     	 add r0,sp,#68
 2681 0844 FFF7FEFF 	 bl _ZN8steppers11getPositionEv
 2682 0848 11A8     	 add r0,sp,#68
 2683 084a 2146     	 mov r1,r4
 2684 084c FFF7FEFF 	 bl _ZNK5PointixEj
 2685 0850 0168     	 ldr r1,[r0,#0]
 2686 0852 2846     	 mov r0,r5
 2687 0854 FFF7FEFF 	 bl _ZN6eeprom11setEeprom32Etm
 2688              	.L118:
 2689 0858 04F10104 	 add r4,r4,#1
 2690 085c 05F10405 	 add r5,r5,#4
 2691 0860 ADB2     	 uxth r5,r5
 617:src/MightyBoard/Motherboard/Command.cc **** 					for (uint8_t i = 0; i < STEPPER_COUNT; i++) {
 2692              	 .loc 1 617 0
 2693 0862 042C     	 cmp r4,#4
 2694 0864 E8D1     	 bne .L119
 2695 0866 69E1     	 b .L102
 2696              	.LVL221:
 2697              	.L117:
 2698              	.LBE517:
 2699              	.LBE516:
 2700              	.LBE513:
 2701              	.LBB518:
 620:src/MightyBoard/Motherboard/Command.cc **** //							xprintf("%x" " (%s:%d)\n",eeprom_offsets::AXIS_HOME_POSITIONS_STEPS + (i*4),_F_,_L_);
 621:src/MightyBoard/Motherboard/Command.cc **** //							xprintf("%x" " (%s:%d)\n",steppers::getPosition()[i],_F_,_L_);
 622:src/MightyBoard/Motherboard/Command.cc **** //							uint16_t offset = eeprom_offsets::AXIS_HOME_POSITIONS_STEPS + 4*i;
 623:src/MightyBoard/Motherboard/Command.cc **** //							uint32_t position = steppers::getPosition()[i];
 624:src/MightyBoard/Motherboard/Command.cc **** //							cli();
 625:src/MightyBoard/Motherboard/Command.cc **** //							eeprom_write_block(&position, (void*) offset, 4);
 626:src/MightyBoard/Motherboard/Command.cc **** //							sei();
 627:src/MightyBoard/Motherboard/Command.cc **** 						}
 628:src/MightyBoard/Motherboard/Command.cc **** 						//eeprom::save_to_flash();
 629:src/MightyBoard/Motherboard/Command.cc **** 					}
 630:src/MightyBoard/Motherboard/Command.cc **** 				}
 631:src/MightyBoard/Motherboard/Command.cc **** 			} else if (command == HOST_CMD_RECALL_HOME_POSITION) {
 2702              	 .loc 1 631 0
 2703 0868 902B     	 cmp r3,#144
 2704 086a 37D1     	 bne .L120
 2705              	.LVL222:
 2706              	.LBB519:
 2707              	.LBB520:
 2708              	.LBB521:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2709              	 .loc 2 91 0
 2710 086c 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2711 0870 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2712 0874 5B88     	 ldrh r3,[r3,#2]
 2713 0876 9BB2     	 uxth r3,r3
 2714              	.LBE521:
 2715              	.LBE520:
 632:src/MightyBoard/Motherboard/Command.cc **** 				// check for completion
 633:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 2) {
 2716              	 .loc 1 633 0
 2717 0878 012B     	 cmp r3,#1
 2718 087a 40F25F81 	 bls .L102
 2719              	.LBB522:
 634:src/MightyBoard/Motherboard/Command.cc **** 					pop8();
 2720              	 .loc 1 634 0
 2721 087e FFF7FEFF 	 bl _ZN7command4pop8Ev
 635:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t axes = pop8();
 2722              	 .loc 1 635 0
 2723 0882 FFF7FEFF 	 bl _ZN7command4pop8Ev
 2724 0886 0746     	 mov r7,r0
 2725              	.LVL223:
 636:src/MightyBoard/Motherboard/Command.cc **** 					line_number++;
 2726              	 .loc 1 636 0
 2727 0888 40F20003 	 movw r3,#:lower16:.LANCHOR4
 2728 088c C0F20003 	 movt r3,#:upper16:.LANCHOR4
 2729 0890 1A68     	 ldr r2,[r3,#0]
 2730 0892 02F10102 	 add r2,r2,#1
 2731 0896 1A60     	 str r2,[r3,#0]
 637:src/MightyBoard/Motherboard/Command.cc **** 
 638:src/MightyBoard/Motherboard/Command.cc **** 					Point newPoint = steppers::getPosition();
 2732              	 .loc 1 638 0
 2733 0898 02A8     	 add r0,sp,#8
 2734              	.LVL224:
 2735 089a FFF7FEFF 	 bl _ZN8steppers11getPositionEv
 2736              	.LVL225:
 2737 089e 4FF00E06 	 mov r6,#14
 2738 08a2 4FF00004 	 mov r4,#0
 2739              	.LBB523:
 639:src/MightyBoard/Motherboard/Command.cc **** 
 640:src/MightyBoard/Motherboard/Command.cc **** 					for (uint8_t i = 0; i < STEPPER_COUNT; i++) {
 641:src/MightyBoard/Motherboard/Command.cc **** 						if ( axes & (1 << i) ) {
 642:src/MightyBoard/Motherboard/Command.cc **** 							newPoint[i] = eeprom::getEeprom32(eeprom_offsets::AXIS_HOME_POSITIONS_STEPS + (i*4),0);
 2740              	 .loc 1 642 0
 2741 08a6 A046     	 mov r8,r4
 2742              	.LVL226:
 2743              	.L122:
 641:src/MightyBoard/Motherboard/Command.cc **** 						if ( axes & (1 << i) ) {
 2744              	 .loc 1 641 0
 2745 08a8 47FA04F3 	 asr r3,r7,r4
 2746 08ac 13F0010F 	 tst r3,#1
 2747 08b0 09D0     	 beq .L121
 2748              	 .loc 1 642 0
 2749 08b2 02A8     	 add r0,sp,#8
 2750 08b4 2146     	 mov r1,r4
 2751 08b6 FFF7FEFF 	 bl _ZN5PointixEj
 2752 08ba 0546     	 mov r5,r0
 2753 08bc 3046     	 mov r0,r6
 2754 08be 4146     	 mov r1,r8
 2755 08c0 FFF7FEFF 	 bl _ZN6eeprom11getEeprom32Etm
 2756 08c4 2860     	 str r0,[r5,#0]
 2757              	.L121:
 2758 08c6 04F10104 	 add r4,r4,#1
 2759 08ca 06F10406 	 add r6,r6,#4
 2760 08ce B6B2     	 uxth r6,r6
 640:src/MightyBoard/Motherboard/Command.cc **** 					for (uint8_t i = 0; i < STEPPER_COUNT; i++) {
 2761              	 .loc 1 640 0
 2762 08d0 042C     	 cmp r4,#4
 2763 08d2 E9D1     	 bne .L122
 2764              	.LBE523:
 643:src/MightyBoard/Motherboard/Command.cc **** //							xprintf("%x %d" " (%s:%d)\n",EEPROM_START_ADDRESS + (eeprom_offsets::AXIS_HOME_POSITIONS_S
 644:src/MightyBoard/Motherboard/Command.cc **** //							uint16_t offset = eeprom_offsets::AXIS_HOME_POSITIONS_STEPS + 4*i;
 645:src/MightyBoard/Motherboard/Command.cc **** //							cli();
 646:src/MightyBoard/Motherboard/Command.cc **** //							eeprom_read_block(&(newPoint[i]), (void*) offset, 4);
 647:src/MightyBoard/Motherboard/Command.cc **** //							sei();
 648:src/MightyBoard/Motherboard/Command.cc **** 						}
 649:src/MightyBoard/Motherboard/Command.cc **** 					}
 650:src/MightyBoard/Motherboard/Command.cc **** 
 651:src/MightyBoard/Motherboard/Command.cc **** 					planner::definePosition(newPoint);
 2765              	 .loc 1 651 0
 2766 08d4 02A8     	 add r0,sp,#8
 2767 08d6 FFF7FEFF 	 bl _ZN7planner14definePositionERK5Point
 2768 08da 2FE1     	 b .L102
 2769              	.LVL227:
 2770              	.L120:
 2771              	.LBE522:
 2772              	.LBE519:
 2773              	.LBB524:
 652:src/MightyBoard/Motherboard/Command.cc **** 				}
 653:src/MightyBoard/Motherboard/Command.cc **** 
 654:src/MightyBoard/Motherboard/Command.cc **** 			}else if (command == HOST_CMD_SET_POT_VALUE){
 2774              	 .loc 1 654 0
 2775 08dc 912B     	 cmp r3,#145
 2776 08de 1CD1     	 bne .L123
 2777              	.LVL228:
 2778              	.LBB525:
 2779              	.LBB526:
 2780              	.LBB527:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2781              	 .loc 2 91 0
 2782 08e0 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2783 08e4 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2784 08e8 5B88     	 ldrh r3,[r3,#2]
 2785 08ea 9BB2     	 uxth r3,r3
 2786              	.LBE527:
 2787              	.LBE526:
 655:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 3) {
 2788              	 .loc 1 655 0
 2789 08ec 022B     	 cmp r3,#2
 2790 08ee 40F22581 	 bls .L102
 2791              	.LBB528:
 656:src/MightyBoard/Motherboard/Command.cc **** 					pop8(); // remove the command code
 2792              	 .loc 1 656 0
 2793 08f2 FFF7FEFF 	 bl _ZN7command4pop8Ev
 657:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t axis = pop8();
 2794              	 .loc 1 657 0
 2795 08f6 FFF7FEFF 	 bl _ZN7command4pop8Ev
 2796 08fa 0446     	 mov r4,r0
 2797              	.LVL229:
 658:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t value = pop8();
 2798              	 .loc 1 658 0
 2799 08fc FFF7FEFF 	 bl _ZN7command4pop8Ev
 2800              	.LVL230:
 2801 0900 0146     	 mov r1,r0
 2802              	.LVL231:
 659:src/MightyBoard/Motherboard/Command.cc **** 					line_number++;
 2803              	 .loc 1 659 0
 2804 0902 40F20003 	 movw r3,#:lower16:.LANCHOR4
 2805 0906 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 2806 090a 1A68     	 ldr r2,[r3,#0]
 2807 090c 02F10102 	 add r2,r2,#1
 2808 0910 1A60     	 str r2,[r3,#0]
 660:src/MightyBoard/Motherboard/Command.cc ****                     steppers::setAxisPotValue(axis, value);
 2809              	 .loc 1 660 0
 2810 0912 2046     	 mov r0,r4
 2811              	.LVL232:
 2812 0914 FFF7FEFF 	 bl _ZN8steppers15setAxisPotValueEhh
 2813              	.LVL233:
 2814 0918 10E1     	 b .L102
 2815              	.LVL234:
 2816              	.L123:
 2817              	.LBE528:
 2818              	.LBE525:
 2819              	.LBB529:
 661:src/MightyBoard/Motherboard/Command.cc **** 				}
 662:src/MightyBoard/Motherboard/Command.cc **** 			}else if (command == HOST_CMD_SET_RGB_LED){
 2820              	 .loc 1 662 0
 2821 091a 922B     	 cmp r3,#146
 2822 091c 29D1     	 bne .L124
 2823              	.LVL235:
 2824              	.LBB530:
 2825              	.LBB531:
 2826              	.LBB532:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2827              	 .loc 2 91 0
 2828 091e 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2829 0922 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2830 0926 5B88     	 ldrh r3,[r3,#2]
 2831 0928 9BB2     	 uxth r3,r3
 2832              	.LBE532:
 2833              	.LBE531:
 663:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 6) {
 2834              	 .loc 1 663 0
 2835 092a 052B     	 cmp r3,#5
 2836 092c 40F20681 	 bls .L102
 2837              	.LBB533:
 664:src/MightyBoard/Motherboard/Command.cc **** 					pop8(); // remove the command code
 2838              	 .loc 1 664 0
 2839 0930 FFF7FEFF 	 bl _ZN7command4pop8Ev
 665:src/MightyBoard/Motherboard/Command.cc **** 
 666:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t red = pop8();
 2840              	 .loc 1 666 0
 2841 0934 FFF7FEFF 	 bl _ZN7command4pop8Ev
 2842 0938 0446     	 mov r4,r0
 2843              	.LVL236:
 667:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t green = pop8();
 2844              	 .loc 1 667 0
 2845 093a FFF7FEFF 	 bl _ZN7command4pop8Ev
 2846              	.LVL237:
 2847 093e 0646     	 mov r6,r0
 2848              	.LVL238:
 668:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t blue = pop8();
 2849              	 .loc 1 668 0
 2850 0940 FFF7FEFF 	 bl _ZN7command4pop8Ev
 2851              	.LVL239:
 2852 0944 0746     	 mov r7,r0
 2853              	.LVL240:
 669:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t blink_rate = pop8();
 2854              	 .loc 1 669 0
 2855 0946 FFF7FEFF 	 bl _ZN7command4pop8Ev
 2856              	.LVL241:
 2857 094a 0546     	 mov r5,r0
 2858              	.LVL242:
 670:src/MightyBoard/Motherboard/Command.cc **** 
 671:src/MightyBoard/Motherboard/Command.cc ****                     uint8_t effect = pop8();
 2859              	 .loc 1 671 0
 2860 094c FFF7FEFF 	 bl _ZN7command4pop8Ev
 2861              	.LVL243:
 672:src/MightyBoard/Motherboard/Command.cc ****                     line_number++;
 2862              	 .loc 1 672 0
 2863 0950 40F20003 	 movw r3,#:lower16:.LANCHOR4
 2864 0954 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 2865 0958 1A68     	 ldr r2,[r3,#0]
 2866 095a 02F10102 	 add r2,r2,#1
 2867 095e 1A60     	 str r2,[r3,#0]
 673:src/MightyBoard/Motherboard/Command.cc ****                     RGB_LED::setLEDBlink(blink_rate);
 2868              	 .loc 1 673 0
 2869 0960 2846     	 mov r0,r5
 2870 0962 FFF7FEFF 	 bl _ZN7RGB_LED11setLEDBlinkEh
 674:src/MightyBoard/Motherboard/Command.cc ****                     RGB_LED::setCustomColor(red, green, blue);
 2871              	 .loc 1 674 0
 2872 0966 2046     	 mov r0,r4
 2873 0968 3146     	 mov r1,r6
 2874 096a 3A46     	 mov r2,r7
 2875 096c FFF7FEFF 	 bl _ZN7RGB_LED14setCustomColorEhhh
 2876 0970 E4E0     	 b .L102
 2877              	.LVL244:
 2878              	.L124:
 2879              	.LBE533:
 2880              	.LBE530:
 2881              	.LBB534:
 675:src/MightyBoard/Motherboard/Command.cc **** 
 676:src/MightyBoard/Motherboard/Command.cc **** 				}
 677:src/MightyBoard/Motherboard/Command.cc **** 			}else if (command == HOST_CMD_SET_BEEP){
 2882              	 .loc 1 677 0
 2883 0972 932B     	 cmp r3,#147
 2884 0974 1FD1     	 bne .L125
 2885              	.LVL245:
 2886              	.LBB535:
 2887              	.LBB536:
 2888              	.LBB537:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2889              	 .loc 2 91 0
 2890 0976 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2891 097a C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2892 097e 5B88     	 ldrh r3,[r3,#2]
 2893 0980 9BB2     	 uxth r3,r3
 2894              	.LBE537:
 2895              	.LBE536:
 678:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 6) {
 2896              	 .loc 1 678 0
 2897 0982 052B     	 cmp r3,#5
 2898 0984 40F2DA80 	 bls .L102
 2899              	.LBB538:
 679:src/MightyBoard/Motherboard/Command.cc **** 					pop8(); // remove the command code
 2900              	 .loc 1 679 0
 2901 0988 FFF7FEFF 	 bl _ZN7command4pop8Ev
 680:src/MightyBoard/Motherboard/Command.cc **** 					uint16_t frequency= pop16();
 2902              	 .loc 1 680 0
 2903 098c FFF7FEFF 	 bl _ZN7command5pop16Ev
 2904 0990 0546     	 mov r5,r0
 2905              	.LVL246:
 681:src/MightyBoard/Motherboard/Command.cc **** 					uint16_t beep_length = pop16();
 2906              	 .loc 1 681 0
 2907 0992 FFF7FEFF 	 bl _ZN7command5pop16Ev
 2908              	.LVL247:
 2909 0996 0446     	 mov r4,r0
 2910              	.LVL248:
 682:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t effect = pop8();
 2911              	 .loc 1 682 0
 2912 0998 FFF7FEFF 	 bl _ZN7command4pop8Ev
 2913              	.LVL249:
 683:src/MightyBoard/Motherboard/Command.cc **** 					line_number++;
 2914              	 .loc 1 683 0
 2915 099c 40F20003 	 movw r3,#:lower16:.LANCHOR4
 2916 09a0 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 2917 09a4 1A68     	 ldr r2,[r3,#0]
 2918 09a6 02F10102 	 add r2,r2,#1
 2919 09aa 1A60     	 str r2,[r3,#0]
 684:src/MightyBoard/Motherboard/Command.cc ****                     Piezo::setTone(frequency, beep_length);
 2920              	 .loc 1 684 0
 2921 09ac A8B2     	 uxth r0,r5
 2922 09ae A1B2     	 uxth r1,r4
 2923 09b0 FFF7FEFF 	 bl _ZN5Piezo7setToneEtt
 2924 09b4 C2E0     	 b .L102
 2925              	.LVL250:
 2926              	.L125:
 2927              	.LBE538:
 2928              	.LBE535:
 2929              	.LBB539:
 685:src/MightyBoard/Motherboard/Command.cc **** 
 686:src/MightyBoard/Motherboard/Command.cc **** 				}			
 687:src/MightyBoard/Motherboard/Command.cc **** 			}else if (command == HOST_CMD_TOOL_COMMAND) {
 2930              	 .loc 1 687 0
 2931 09b6 882B     	 cmp r3,#136
 2932 09b8 2AD1     	 bne .L126
 2933              	.LVL251:
 2934              	.LBB540:
 2935              	.LBB541:
 2936              	.LBB542:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2937              	 .loc 2 91 0
 2938 09ba 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2939 09be C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2940 09c2 5B88     	 ldrh r3,[r3,#2]
 2941 09c4 9BB2     	 uxth r3,r3
 2942              	.LBE542:
 2943              	.LBE541:
 688:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 4) { // needs a payload
 2944              	 .loc 1 688 0
 2945 09c6 032B     	 cmp r3,#3
 2946 09c8 40F2B880 	 bls .L102
 2947              	.LVL252:
 2948              	.LBB543:
 2949              	.LBB544:
 2950              	.LBB545:
 105:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufSizeType actual_index = (index + start) % size;
 2951              	 .loc 2 105 0
 2952 09cc 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2953 09d0 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2954 09d4 9C88     	 ldrh r4,[r3,#4]
 2955 09d6 A4B2     	 uxth r4,r4
 2956              	.LVL253:
 2957              	.LBE545:
 2958              	.LBE544:
 2959              	.LBB547:
 2960              	.LBB548:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2961              	 .loc 2 91 0
 2962 09d8 5988     	 ldrh r1,[r3,#2]
 2963 09da 89B2     	 uxth r1,r1
 2964              	.LBE548:
 2965              	.LBE547:
 2966              	.LBB549:
 2967              	.LBB546:
 105:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufSizeType actual_index = (index + start) % size;
 2968              	 .loc 2 105 0
 2969 09dc 04F10303 	 add r3,r4,#3
 2970 09e0 93FBF2F4 	 sdiv r4,r3,r2
 2971              	.LVL254:
 2972 09e4 02FB1433 	 mls r3,r2,r4,r3
 2973              	.LVL255:
 2974              	 .loc 2 106 0
 2975 09e8 9BB2     	 uxth r3,r3
 2976              	.LBE546:
 2977              	.LBE549:
 689:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t payload_length = command_buffer[3];
 690:src/MightyBoard/Motherboard/Command.cc **** 					if (command_buffer.getLength() >= 4+payload_length) {
 2978              	 .loc 1 690 0
 2979 09ea C35C     	 ldrb r3,[r0,r3]
 2980 09ec 03F10403 	 add r3,r3,#4
 2981 09f0 9942     	 cmp r1,r3
 2982 09f2 C0F2A380 	 blt .L102
 691:src/MightyBoard/Motherboard/Command.cc **** 							pop8(); // remove the command code
 2983              	 .loc 1 691 0
 2984 09f6 FFF7FEFF 	 bl _ZN7command4pop8Ev
 692:src/MightyBoard/Motherboard/Command.cc **** 							line_number++;
 2985              	 .loc 1 692 0
 2986 09fa 40F20003 	 movw r3,#:lower16:.LANCHOR4
 2987 09fe C0F20003 	 movt r3,#:upper16:.LANCHOR4
 2988 0a02 1A68     	 ldr r2,[r3,#0]
 2989 0a04 02F10102 	 add r2,r2,#1
 2990 0a08 1A60     	 str r2,[r3,#0]
 693:src/MightyBoard/Motherboard/Command.cc **** 							processExtruderCommandPacket();
 2991              	 .loc 1 693 0
 2992 0a0a FFF7FEFF 	 bl _ZN7command28processExtruderCommandPacketEv
 2993 0a0e 95E0     	 b .L102
 2994              	.LVL256:
 2995              	.L126:
 2996              	.LBE543:
 2997              	.LBE540:
 2998              	.LBB550:
 694:src/MightyBoard/Motherboard/Command.cc **** 				}
 695:src/MightyBoard/Motherboard/Command.cc **** 			}
 696:src/MightyBoard/Motherboard/Command.cc **** 			} else if (command == HOST_CMD_SET_BUILD_PERCENT){
 2999              	 .loc 1 696 0
 3000 0a10 962B     	 cmp r3,#150
 3001 0a12 17D1     	 bne .L127
 3002              	.LVL257:
 3003              	.LBB551:
 3004              	.LBB552:
 3005              	.LBB553:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 3006              	 .loc 2 91 0
 3007 0a14 40F20003 	 movw r3,#:lower16:.LANCHOR0
 3008 0a18 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 3009 0a1c 5B88     	 ldrh r3,[r3,#2]
 3010 0a1e 9BB2     	 uxth r3,r3
 3011              	.LBE553:
 3012              	.LBE552:
 697:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 3){
 3013              	 .loc 1 697 0
 3014 0a20 022B     	 cmp r3,#2
 3015 0a22 40F28B80 	 bls .L102
 3016              	.LBB554:
 698:src/MightyBoard/Motherboard/Command.cc **** 					pop8(); // remove the command code
 3017              	 .loc 1 698 0
 3018 0a26 FFF7FEFF 	 bl _ZN7command4pop8Ev
 699:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t percent = pop8();
 3019              	 .loc 1 699 0
 3020 0a2a FFF7FEFF 	 bl _ZN7command4pop8Ev
 700:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t ignore = pop8(); // remove the reserved byte
 3021              	 .loc 1 700 0
 3022 0a2e FFF7FEFF 	 bl _ZN7command4pop8Ev
 701:src/MightyBoard/Motherboard/Command.cc **** 					line_number++;
 3023              	 .loc 1 701 0
 3024 0a32 40F20003 	 movw r3,#:lower16:.LANCHOR4
 3025 0a36 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 3026 0a3a 1A68     	 ldr r2,[r3,#0]
 3027 0a3c 02F10102 	 add r2,r2,#1
 3028 0a40 1A60     	 str r2,[r3,#0]
 3029 0a42 7BE0     	 b .L102
 3030              	.LVL258:
 3031              	.L127:
 3032              	.LBE554:
 3033              	.LBE551:
 3034              	.LBB555:
 702:src/MightyBoard/Motherboard/Command.cc **** //					interface::setBuildPercentage(percent);
 703:src/MightyBoard/Motherboard/Command.cc **** 				}
 704:src/MightyBoard/Motherboard/Command.cc **** 			} else if (command == HOST_CMD_QUEUE_SONG ) //queue a song for playing
 3035              	 .loc 1 704 0
 3036 0a44 972B     	 cmp r3,#151
 3037 0a46 23D1     	 bne .L128
 3038              	.LVL259:
 3039              	.LBB556:
 3040              	.LBB557:
 3041              	.LBB558:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 3042              	 .loc 2 91 0
 3043 0a48 40F20003 	 movw r3,#:lower16:.LANCHOR0
 3044 0a4c C0F20003 	 movt r3,#:upper16:.LANCHOR0
 3045 0a50 5B88     	 ldrh r3,[r3,#2]
 3046 0a52 9BB2     	 uxth r3,r3
 3047              	.LBE558:
 3048              	.LBE557:
 705:src/MightyBoard/Motherboard/Command.cc ****  			{
 706:src/MightyBoard/Motherboard/Command.cc **** 				/// Error tone is 0,
 707:src/MightyBoard/Motherboard/Command.cc **** 				/// End tone is 1,
 708:src/MightyBoard/Motherboard/Command.cc **** 				/// all other tones user-defined (defaults to end-tone)
 709:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 2){
 3049              	 .loc 1 709 0
 3050 0a54 012B     	 cmp r3,#1
 3051 0a56 71D9     	 bls .L102
 3052              	.LBB559:
 710:src/MightyBoard/Motherboard/Command.cc **** 					pop8(); // remove the command code
 3053              	 .loc 1 710 0
 3054 0a58 FFF7FEFF 	 bl _ZN7command4pop8Ev
 711:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t songId = pop8();
 3055              	 .loc 1 711 0
 3056 0a5c FFF7FEFF 	 bl _ZN7command4pop8Ev
 3057              	.LVL260:
 712:src/MightyBoard/Motherboard/Command.cc **** 					line_number++;
 3058              	 .loc 1 712 0
 3059 0a60 40F20003 	 movw r3,#:lower16:.LANCHOR4
 3060 0a64 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 3061 0a68 1A68     	 ldr r2,[r3,#0]
 3062 0a6a 02F10102 	 add r2,r2,#1
 3063 0a6e 1A60     	 str r2,[r3,#0]
 713:src/MightyBoard/Motherboard/Command.cc **** 					if(songId == 0)
 3064              	 .loc 1 713 0
 3065 0a70 20B9     	 cbnz r0,.L129
 714:src/MightyBoard/Motherboard/Command.cc **** 						Piezo::errorTone(4);
 3066              	 .loc 1 714 0
 3067 0a72 4FF00400 	 mov r0,#4
 3068              	.LVL261:
 3069 0a76 FFF7FEFF 	 bl _ZN5Piezo9errorToneEh
 3070 0a7a 5FE0     	 b .L102
 3071              	.LVL262:
 3072              	.L129:
 715:src/MightyBoard/Motherboard/Command.cc **** 					else if (songId == 1 )
 3073              	 .loc 1 715 0
 3074 0a7c 0128     	 cmp r0,#1
 3075 0a7e 02D1     	 bne .L130
 716:src/MightyBoard/Motherboard/Command.cc **** 						Piezo::doneTone();
 3076              	 .loc 1 716 0
 3077 0a80 FFF7FEFF 	 bl _ZN5Piezo8doneToneEv
 3078              	.LVL263:
 3079 0a84 5AE0     	 b .L102
 3080              	.LVL264:
 3081              	.L130:
 717:src/MightyBoard/Motherboard/Command.cc **** 					else
 718:src/MightyBoard/Motherboard/Command.cc **** 						Piezo::errorTone(2);
 3082              	 .loc 1 718 0
 3083 0a86 4FF00200 	 mov r0,#2
 3084              	.LVL265:
 3085 0a8a FFF7FEFF 	 bl _ZN5Piezo9errorToneEh
 3086 0a8e 55E0     	 b .L102
 3087              	.LVL266:
 3088              	.L128:
 3089              	.LBE559:
 3090              	.LBE556:
 3091              	.LBB560:
 719:src/MightyBoard/Motherboard/Command.cc **** 				}
 720:src/MightyBoard/Motherboard/Command.cc **** 
 721:src/MightyBoard/Motherboard/Command.cc **** 			} else if ( command == HOST_CMD_RESET_TO_FACTORY) {
 3092              	 .loc 1 721 0
 3093 0a90 982B     	 cmp r3,#152
 3094 0a92 1ED1     	 bne .L131
 3095              	.LVL267:
 3096              	.LBB561:
 3097              	.LBB562:
 3098              	.LBB563:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 3099              	 .loc 2 91 0
 3100 0a94 40F20003 	 movw r3,#:lower16:.LANCHOR0
 3101 0a98 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 3102 0a9c 5B88     	 ldrh r3,[r3,#2]
 3103 0a9e 9BB2     	 uxth r3,r3
 3104              	.LBE563:
 3105              	.LBE562:
 722:src/MightyBoard/Motherboard/Command.cc **** 				/// reset EEPROM settings to the factory value. Reboot bot.
 723:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 2){
 3106              	 .loc 1 723 0
 3107 0aa0 012B     	 cmp r3,#1
 3108 0aa2 4BD9     	 bls .L102
 3109              	.LBB564:
 724:src/MightyBoard/Motherboard/Command.cc **** 				pop8(); // remove the command code
 3110              	 .loc 1 724 0
 3111 0aa4 FFF7FEFF 	 bl _ZN7command4pop8Ev
 725:src/MightyBoard/Motherboard/Command.cc **** 				uint8_t options = pop8();
 3112              	 .loc 1 725 0
 3113 0aa8 FFF7FEFF 	 bl _ZN7command4pop8Ev
 726:src/MightyBoard/Motherboard/Command.cc **** 				line_number++;
 3114              	 .loc 1 726 0
 3115 0aac 40F20003 	 movw r3,#:lower16:.LANCHOR4
 3116 0ab0 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 3117 0ab4 1A68     	 ldr r2,[r3,#0]
 3118 0ab6 02F10102 	 add r2,r2,#1
 3119 0aba 1A60     	 str r2,[r3,#0]
 727:src/MightyBoard/Motherboard/Command.cc **** 				eeprom::factoryResetEEPROM();
 3120              	 .loc 1 727 0
 3121 0abc FFF7FEFF 	 bl _ZN6eeprom18factoryResetEEPROMEv
 728:src/MightyBoard/Motherboard/Command.cc **** 				Motherboard::getBoard().reset(false);
 3122              	 .loc 1 728 0
 3123 0ac0 40F20000 	 movw r0,#:lower16:_ZN11Motherboard11motherboardE
 3124 0ac4 C0F20000 	 movt r0,#:upper16:_ZN11Motherboard11motherboardE
 3125 0ac8 4FF00001 	 mov r1,#0
 3126 0acc FFF7FEFF 	 bl _ZN11Motherboard5resetEb
 3127 0ad0 34E0     	 b .L102
 3128              	.LVL268:
 3129              	.L131:
 3130              	.LBE564:
 3131              	.LBE561:
 3132              	.LBB565:
 729:src/MightyBoard/Motherboard/Command.cc **** 				}
 730:src/MightyBoard/Motherboard/Command.cc **** 			} else if ( command == HOST_CMD_BUILD_START_NOTIFICATION) {
 3133              	 .loc 1 730 0
 3134 0ad2 992B     	 cmp r3,#153
 3135 0ad4 1AD1     	 bne .L132
 3136              	.LVL269:
 3137              	.LBB566:
 3138              	.LBB567:
 3139              	.LBB568:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 3140              	 .loc 2 91 0
 3141 0ad6 40F20003 	 movw r3,#:lower16:.LANCHOR0
 3142 0ada C0F20003 	 movt r3,#:upper16:.LANCHOR0
 3143 0ade 5B88     	 ldrh r3,[r3,#2]
 3144 0ae0 9BB2     	 uxth r3,r3
 3145              	.LBE568:
 3146              	.LBE567:
 731:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 5){
 3147              	 .loc 1 731 0
 3148 0ae2 042B     	 cmp r3,#4
 3149 0ae4 2AD9     	 bls .L102
 3150              	.LBB569:
 732:src/MightyBoard/Motherboard/Command.cc **** 					pop8(); // remove the command code
 3151              	 .loc 1 732 0
 3152 0ae6 FFF7FEFF 	 bl _ZN7command4pop8Ev
 733:src/MightyBoard/Motherboard/Command.cc **** 					int buildSteps = pop32();
 3153              	 .loc 1 733 0
 3154 0aea FFF7FEFF 	 bl _ZN7command5pop32Ev
 734:src/MightyBoard/Motherboard/Command.cc **** 					line_number++;
 3155              	 .loc 1 734 0
 3156 0aee 40F20003 	 movw r3,#:lower16:.LANCHOR4
 3157 0af2 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 3158 0af6 1A68     	 ldr r2,[r3,#0]
 3159 0af8 02F10102 	 add r2,r2,#1
 3160 0afc 1A60     	 str r2,[r3,#0]
 735:src/MightyBoard/Motherboard/Command.cc **** 					host::handleBuildStartNotification(command_buffer);		
 3161              	 .loc 1 735 0
 3162 0afe 40F20000 	 movw r0,#:lower16:.LANCHOR0
 3163 0b02 C0F20000 	 movt r0,#:upper16:.LANCHOR0
 3164 0b06 FFF7FEFF 	 bl _ZN4host28handleBuildStartNotificationER19CircularBufferTemplIhE
 3165 0b0a 17E0     	 b .L102
 3166              	.LVL270:
 3167              	.L132:
 3168              	.LBE569:
 3169              	.LBE566:
 3170              	.LBB570:
 736:src/MightyBoard/Motherboard/Command.cc **** 				}
 737:src/MightyBoard/Motherboard/Command.cc **** 			 } else if ( command == HOST_CMD_BUILD_END_NOTIFICATION) {
 3171              	 .loc 1 737 0
 3172 0b0c 9A2B     	 cmp r3,#154
 3173 0b0e 15D1     	 bne .L102
 3174              	.LVL271:
 3175              	.LBB571:
 3176              	.LBB572:
 3177              	.LBB573:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 3178              	 .loc 2 91 0
 3179 0b10 40F20003 	 movw r3,#:lower16:.LANCHOR0
 3180 0b14 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 3181 0b18 5B88     	 ldrh r3,[r3,#2]
 3182 0b1a 9BB2     	 uxth r3,r3
 3183              	.LBE573:
 3184              	.LBE572:
 738:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 2){
 3185              	 .loc 1 738 0
 3186 0b1c 012B     	 cmp r3,#1
 3187 0b1e 0DD9     	 bls .L102
 3188              	.LBB574:
 739:src/MightyBoard/Motherboard/Command.cc **** 					pop8(); // remove the command code
 3189              	 .loc 1 739 0
 3190 0b20 FFF7FEFF 	 bl _ZN7command4pop8Ev
 740:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t flags = pop8();
 3191              	 .loc 1 740 0
 3192 0b24 FFF7FEFF 	 bl _ZN7command4pop8Ev
 3193              	.LVL272:
 741:src/MightyBoard/Motherboard/Command.cc **** 					line_number++;
 3194              	 .loc 1 741 0
 3195 0b28 40F20003 	 movw r3,#:lower16:.LANCHOR4
 3196 0b2c C0F20003 	 movt r3,#:upper16:.LANCHOR4
 3197 0b30 1A68     	 ldr r2,[r3,#0]
 3198 0b32 02F10102 	 add r2,r2,#1
 3199 0b36 1A60     	 str r2,[r3,#0]
 742:src/MightyBoard/Motherboard/Command.cc **** 					host::handleBuildStopNotification(flags);
 3200              	 .loc 1 742 0
 3201 0b38 FFF7FEFF 	 bl _ZN4host27handleBuildStopNotificationEh
 3202              	.LVL273:
 3203              	.L102:
 3204              	.LBE574:
 3205              	.LBE571:
 3206              	.LBE570:
 3207              	.LBE565:
 3208              	.LBE560:
 3209              	.LBE555:
 3210              	.LBE550:
 3211              	.LBE539:
 3212              	.LBE534:
 3213              	.LBE529:
 3214              	.LBE524:
 3215              	.LBE518:
 3216              	.LBE512:
 3217              	.LBE507:
 3218              	.LBE502:
 3219              	.LBE497:
 3220              	.LBE492:
 3221              	.LBE487:
 3222              	.LBE482:
 3223              	.LBE477:
 3224              	.LBE471:
 3225              	.LBE468:
 3226              	.LBE467:
 3227              	.LBE464:
 3228              	.LBE461:
 3229              	.LBE460:
 743:src/MightyBoard/Motherboard/Command.cc **** 				}
 744:src/MightyBoard/Motherboard/Command.cc **** 			
 745:src/MightyBoard/Motherboard/Command.cc **** 			} else {
 746:src/MightyBoard/Motherboard/Command.cc **** 			}
 747:src/MightyBoard/Motherboard/Command.cc **** 		}
 748:src/MightyBoard/Motherboard/Command.cc **** 	}
 749:src/MightyBoard/Motherboard/Command.cc **** 	
 750:src/MightyBoard/Motherboard/Command.cc **** 	/// we're not handling overflows in the line counter.  Possibly implement this later.
 751:src/MightyBoard/Motherboard/Command.cc **** 	if(line_number > MAX_LINE_COUNT){
 3230              	 .loc 1 751 0
 3231 0b3c 40F20003 	 movw r3,#:lower16:.LANCHOR4
 3232 0b40 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 3233 0b44 4FF44A42 	 mov r2,#51712
 3234 0b48 C3F69A32 	 movt r2,15258
 3235 0b4c 1B68     	 ldr r3,[r3,#0]
 3236 0b4e 9342     	 cmp r3,r2
 3237 0b50 1CD9     	 bls .L66
 752:src/MightyBoard/Motherboard/Command.cc **** 		line_number = MAX_LINE_COUNT + 1;
 3238              	 .loc 1 752 0
 3239 0b52 40F20003 	 movw r3,#:lower16:.LANCHOR4
 3240 0b56 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 3241 0b5a 4CF60122 	 movw r2,#51713
 3242 0b5e C3F69A32 	 movt r2,15258
 3243 0b62 1A60     	 str r2,[r3,#0]
 3244 0b64 12E0     	 b .L66
 3245              	.LVL274:
 3246              	.L70:
 313:src/MightyBoard/Motherboard/Command.cc **** 		if(!sdcard::playbackHasNext() && (sd_count < sdcard::getFileSize()) && !sdcard_reset){
 3247              	 .loc 1 313 0
 3248 0b66 FFF7FEFF 	 bl _ZN6sdcard15playbackHasNextEv
 3249 0b6a 0028     	 cmp r0,#0
 3250 0b6c 3FF484AA 	 beq .L133
 3251              	.L73:
 325:src/MightyBoard/Motherboard/Command.cc **** 		}else if(!sdcard::playbackHasNext() && command_buffer.isEmpty()){
 3252              	 .loc 1 325 0
 3253 0b70 FFF7FEFF 	 bl _ZN6sdcard15playbackHasNextEv
 3254 0b74 0028     	 cmp r0,#0
 3255 0b76 3FF4A5AA 	 beq .L134
 3256 0b7a FFF7ACBA 	 b .L68
 3257              	.LVL275:
 3258              	.L77:
 334:src/MightyBoard/Motherboard/Command.cc **** 		if(!utility::playbackHasNext() && command_buffer.isEmpty()){
 3259              	 .loc 1 334 0
 3260 0b7e FFF7FEFF 	 bl _ZN7utility15playbackHasNextEv
 3261 0b82 0028     	 cmp r0,#0
 3262 0b84 3FF4D8AA 	 beq .L135
 3263 0b88 FFF7DFBA 	 b .L75
 3264              	.LVL276:
 3265              	.L66:
 3266              	.LBE413:
 753:src/MightyBoard/Motherboard/Command.cc **** 	}
 754:src/MightyBoard/Motherboard/Command.cc **** }
 3267              	 .loc 1 754 0
 3268 0b8c 16B0     	 add sp,sp,#88
 3269 0b8e BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 3270              	 .cfi_endproc
 3271              	.LFE134:
 3273 0b92 00BF     	 .section .text._GLOBAL__sub_I__ZN7command11buffer_dataE,"ax",%progbits
 3274              	 .align 2
 3275              	 .thumb
 3276              	 .thumb_func
 3278              	_GLOBAL__sub_I__ZN7command11buffer_dataE:
 3279              	.LFB146:
 755:src/MightyBoard/Motherboard/Command.cc **** }
 3280              	 .loc 1 755 0
 3281              	 .cfi_startproc
 3282              	 
 3283              	 
 3284 0000 10B5     	 push {r4,lr}
 3285              	.LCFI9:
 3286              	 .cfi_def_cfa_offset 8
 3287              	 .cfi_offset 14,-4
 3288              	 .cfi_offset 4,-8
 3289              	.LVL277:
 3290              	.LBB580:
 3291              	.LBB581:
 3292              	 .file 4 "src/MightyBoard/shared/LPCPort.hh"
   1:src/MightyBoard/shared/LPCPort.hh **** /*
   2:src/MightyBoard/shared/LPCPort.hh **** * Copyright 2010 by Adam Mayer	 <adam@makerbot.com>
   3:src/MightyBoard/shared/LPCPort.hh **** *
   4:src/MightyBoard/shared/LPCPort.hh **** * This program is free software: you can redistribute it and/or modify
   5:src/MightyBoard/shared/LPCPort.hh **** * it under the terms of the GNU General Public License as published by
   6:src/MightyBoard/shared/LPCPort.hh **** * the Free Software Foundation, either version 3 of the License, or
   7:src/MightyBoard/shared/LPCPort.hh **** * (at your option) any later version.
   8:src/MightyBoard/shared/LPCPort.hh **** *
   9:src/MightyBoard/shared/LPCPort.hh **** * This program is distributed in the hope that it will be useful,
  10:src/MightyBoard/shared/LPCPort.hh **** * but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:src/MightyBoard/shared/LPCPort.hh **** * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:src/MightyBoard/shared/LPCPort.hh **** * GNU General Public License for more details.
  13:src/MightyBoard/shared/LPCPort.hh **** *
  14:src/MightyBoard/shared/LPCPort.hh **** * You should have received a copy of the GNU General Public License
  15:src/MightyBoard/shared/LPCPort.hh **** * along with this program.  If not, see <http://www.gnu.org/licenses/>
  16:src/MightyBoard/shared/LPCPort.hh **** */
  17:src/MightyBoard/shared/LPCPort.hh **** 
  18:src/MightyBoard/shared/LPCPort.hh **** #ifndef SHARED_AVR_PORT_HH_
  19:src/MightyBoard/shared/LPCPort.hh **** #define SHARED_AVR_PORT_HH_
  20:src/MightyBoard/shared/LPCPort.hh **** 
  21:src/MightyBoard/shared/LPCPort.hh **** #define __STDC_LIMIT_MACROS
  22:src/MightyBoard/shared/LPCPort.hh **** //#include <stdint.h>
  23:src/MightyBoard/shared/LPCPort.hh **** //#include <util/atomic.h>
  24:src/MightyBoard/shared/LPCPort.hh **** 
  25:src/MightyBoard/shared/LPCPort.hh **** extern "C" {
  26:src/MightyBoard/shared/LPCPort.hh **** 	#include "lpc_types.h"
  27:src/MightyBoard/shared/LPCPort.hh **** 	#include "lpc17xx_gpio.h"
  28:src/MightyBoard/shared/LPCPort.hh **** }
  29:src/MightyBoard/shared/LPCPort.hh **** 
  30:src/MightyBoard/shared/LPCPort.hh **** 
  31:src/MightyBoard/shared/LPCPort.hh **** #define NULL_PORT 0xff
  32:src/MightyBoard/shared/LPCPort.hh **** 
  33:src/MightyBoard/shared/LPCPort.hh **** class LPCPort {
  34:src/MightyBoard/shared/LPCPort.hh **** private:
  35:src/MightyBoard/shared/LPCPort.hh **** 	const uint8_t port_base;
  36:src/MightyBoard/shared/LPCPort.hh **** 	friend class Pin;
  37:src/MightyBoard/shared/LPCPort.hh **** public:
  38:src/MightyBoard/shared/LPCPort.hh **** 	LPCPort();
  39:src/MightyBoard/shared/LPCPort.hh **** 	LPCPort(uint8_t port_base_in);
  40:src/MightyBoard/shared/LPCPort.hh **** 	bool isNull() const;
  41:src/MightyBoard/shared/LPCPort.hh **** 	void setPinDirectionOut(uint8_t pin_index) const;
  42:src/MightyBoard/shared/LPCPort.hh **** 	void setPinDirectionIn(uint8_t pin_index) const;
  43:src/MightyBoard/shared/LPCPort.hh **** 	bool getPin(uint8_t pin_index) const;
  44:src/MightyBoard/shared/LPCPort.hh **** 	void setPinOn(uint8_t pin_index) const;
  45:src/MightyBoard/shared/LPCPort.hh **** 	void setPinOff(uint8_t pin_index) const;
  46:src/MightyBoard/shared/LPCPort.hh **** };
  47:src/MightyBoard/shared/LPCPort.hh **** 
  48:src/MightyBoard/shared/LPCPort.hh **** 
  49:src/MightyBoard/shared/LPCPort.hh **** const LPCPort Port0(0);
 3293              	 .loc 4 49 0
 3294 0002 40F20000 	 movw r0,#:lower16:.LANCHOR15
 3295 0006 C0F20000 	 movt r0,#:upper16:.LANCHOR15
 3296 000a 4FF00001 	 mov r1,#0
 3297 000e FFF7FEFF 	 bl _ZN7LPCPortC1Eh
  50:src/MightyBoard/shared/LPCPort.hh **** const LPCPort Port1(1);
 3298              	 .loc 4 50 0
 3299 0012 40F20000 	 movw r0,#:lower16:.LANCHOR16
 3300 0016 C0F20000 	 movt r0,#:upper16:.LANCHOR16
 3301 001a 4FF00101 	 mov r1,#1
 3302 001e FFF7FEFF 	 bl _ZN7LPCPortC1Eh
  51:src/MightyBoard/shared/LPCPort.hh **** const LPCPort Port2(2);
 3303              	 .loc 4 51 0
 3304 0022 40F20000 	 movw r0,#:lower16:.LANCHOR17
 3305 0026 C0F20000 	 movt r0,#:upper16:.LANCHOR17
 3306 002a 4FF00201 	 mov r1,#2
 3307 002e FFF7FEFF 	 bl _ZN7LPCPortC1Eh
  52:src/MightyBoard/shared/LPCPort.hh **** const LPCPort Port3(3);
 3308              	 .loc 4 52 0
 3309 0032 40F20000 	 movw r0,#:lower16:.LANCHOR18
 3310 0036 C0F20000 	 movt r0,#:upper16:.LANCHOR18
 3311 003a 4FF00301 	 mov r1,#3
 3312 003e FFF7FEFF 	 bl _ZN7LPCPortC1Eh
  53:src/MightyBoard/shared/LPCPort.hh **** const LPCPort Port4(4);
 3313              	 .loc 4 53 0
 3314 0042 40F20000 	 movw r0,#:lower16:.LANCHOR19
 3315 0046 C0F20000 	 movt r0,#:upper16:.LANCHOR19
 3316 004a 4FF00401 	 mov r1,#4
 3317 004e FFF7FEFF 	 bl _ZN7LPCPortC1Eh
  54:src/MightyBoard/shared/LPCPort.hh **** 
  55:src/MightyBoard/shared/LPCPort.hh **** const LPCPort NullPort(0xff);
 3318              	 .loc 4 55 0
 3319 0052 40F20004 	 movw r4,#:lower16:.LANCHOR20
 3320 0056 C0F20004 	 movt r4,#:upper16:.LANCHOR20
 3321 005a 2046     	 mov r0,r4
 3322 005c 4FF0FF01 	 mov r1,#255
 3323 0060 FFF7FEFF 	 bl _ZN7LPCPortC1Eh
 3324              	 .file 5 "src/MightyBoard/shared/Pin.hh"
   1:src/MightyBoard/shared/Pin.hh **** #ifndef PIN_HH
   2:src/MightyBoard/shared/Pin.hh **** #define PIN_HH
   3:src/MightyBoard/shared/Pin.hh **** 
   4:src/MightyBoard/shared/Pin.hh **** #include "LPCPort.hh"
   5:src/MightyBoard/shared/Pin.hh **** #include "Pin.hh"
   6:src/MightyBoard/shared/Pin.hh **** extern "C" {
   7:src/MightyBoard/shared/Pin.hh **** 	#include "lpc17xx_gpio.h"
   8:src/MightyBoard/shared/Pin.hh **** 	#include "lpc17xx_pinsel.h"
   9:src/MightyBoard/shared/Pin.hh **** 	#include "comm.h"
  10:src/MightyBoard/shared/Pin.hh **** }
  11:src/MightyBoard/shared/Pin.hh **** 
  12:src/MightyBoard/shared/Pin.hh **** /// \ingroup HardwareLibraries
  13:src/MightyBoard/shared/Pin.hh **** class Pin {
  14:src/MightyBoard/shared/Pin.hh **** private:
  15:src/MightyBoard/shared/Pin.hh **** 	uint8_t port_base;
  16:src/MightyBoard/shared/Pin.hh **** 	bool is_null;
  17:src/MightyBoard/shared/Pin.hh **** 	uint8_t pin_index;
  18:src/MightyBoard/shared/Pin.hh **** 	uint8_t pin_mask;
  19:src/MightyBoard/shared/Pin.hh **** 	uint8_t pin_mask_inverted;
  20:src/MightyBoard/shared/Pin.hh **** 
  21:src/MightyBoard/shared/Pin.hh **** public:
  22:src/MightyBoard/shared/Pin.hh **** 	Pin();
  23:src/MightyBoard/shared/Pin.hh **** 	Pin(const LPCPort& port_in, uint8_t pin_index_in);
  24:src/MightyBoard/shared/Pin.hh **** 	Pin(const Pin& other_pin);
  25:src/MightyBoard/shared/Pin.hh **** 	bool isNull() const;
  26:src/MightyBoard/shared/Pin.hh **** 	void setDirection(bool out) const;
  27:src/MightyBoard/shared/Pin.hh **** 	bool /*Pin::*/getValue() const {
  28:src/MightyBoard/shared/Pin.hh **** 		if (is_null)
  29:src/MightyBoard/shared/Pin.hh **** 			return false; // null pin is always low ... ?
  30:src/MightyBoard/shared/Pin.hh **** 		return ((uint8_t)(FIO_ReadValue(port_base) & _BV(pin_index))?1:0);
  31:src/MightyBoard/shared/Pin.hh **** //		return (uint8_t)((uint8_t)PINx & (uint8_t)pin_mask) != 0;
  32:src/MightyBoard/shared/Pin.hh **** 	};
  33:src/MightyBoard/shared/Pin.hh **** 
  34:src/MightyBoard/shared/Pin.hh **** 	void /*Pin::*/setValue(bool on) const {
  35:src/MightyBoard/shared/Pin.hh **** 		if (is_null)
  36:src/MightyBoard/shared/Pin.hh **** 		 	return;
  37:src/MightyBoard/shared/Pin.hh **** 		// uint8_t oldSREG = SREG;
  38:src/MightyBoard/shared/Pin.hh **** 
  39:src/MightyBoard/shared/Pin.hh **** //		xprintf("on:%d port_base:%d pi_index:%d" " (%s:%d)\n",on,port_base,pin_index,_F_,_L_);
  40:src/MightyBoard/shared/Pin.hh **** 		// cli();
  41:src/MightyBoard/shared/Pin.hh **** 		if (on) {
  42:src/MightyBoard/shared/Pin.hh **** //			PORTx |= pin_mask;
  43:src/MightyBoard/shared/Pin.hh **** //			xprintf("%x (%s:%d)\n",&GPIO_SetValue,_F_,_L_);
  44:src/MightyBoard/shared/Pin.hh **** 			GPIO_SetValue(port_base, _BV(pin_index));
  45:src/MightyBoard/shared/Pin.hh **** 		} else {
  46:src/MightyBoard/shared/Pin.hh **** //			PORTx &= pin_mask_inverted;
  47:src/MightyBoard/shared/Pin.hh **** //			xprintf("%x (%s:%d)\n",&GPIO_ClearValue,_F_,_L_);
  48:src/MightyBoard/shared/Pin.hh **** 			GPIO_ClearValue(port_base, _BV(pin_index));
  49:src/MightyBoard/shared/Pin.hh **** 		}
  50:src/MightyBoard/shared/Pin.hh **** 		// SREG = oldSREG;
  51:src/MightyBoard/shared/Pin.hh **** 	};
  52:src/MightyBoard/shared/Pin.hh **** 
  53:src/MightyBoard/shared/Pin.hh **** 	void /*Pin::*/setValueOn() const {
  54:src/MightyBoard/shared/Pin.hh **** 		if (is_null)
  55:src/MightyBoard/shared/Pin.hh **** 		 	return;
  56:src/MightyBoard/shared/Pin.hh **** 		// uint8_t oldSREG = SREG;
  57:src/MightyBoard/shared/Pin.hh **** 		// cli();
  58:src/MightyBoard/shared/Pin.hh **** //		PORTx |= pin_mask;
  59:src/MightyBoard/shared/Pin.hh **** 		GPIO_SetValue(port_base, _BV(pin_index));
  60:src/MightyBoard/shared/Pin.hh **** 		// SREG = oldSREG;
  61:src/MightyBoard/shared/Pin.hh **** 	};
  62:src/MightyBoard/shared/Pin.hh **** 
  63:src/MightyBoard/shared/Pin.hh **** 	void /*Pin::*/setValueOff() const {
  64:src/MightyBoard/shared/Pin.hh **** 		// if (is_null)
  65:src/MightyBoard/shared/Pin.hh **** 		// 	return;
  66:src/MightyBoard/shared/Pin.hh **** 		// uint8_t oldSREG = SREG;
  67:src/MightyBoard/shared/Pin.hh **** 		// cli();
  68:src/MightyBoard/shared/Pin.hh **** //		PORTx &= pin_mask_inverted;
  69:src/MightyBoard/shared/Pin.hh **** 		GPIO_ClearValue(port_base, _BV(pin_index));
  70:src/MightyBoard/shared/Pin.hh **** 		// SREG = oldSREG;
  71:src/MightyBoard/shared/Pin.hh **** 	};
  72:src/MightyBoard/shared/Pin.hh **** 	// currently not used:
  73:src/MightyBoard/shared/Pin.hh **** 	//const uint8_t getPinIndex() const { return pin_index; }
  74:src/MightyBoard/shared/Pin.hh **** };
  75:src/MightyBoard/shared/Pin.hh **** 
  76:src/MightyBoard/shared/Pin.hh **** static const Pin NullPin(NullPort, 0);
 3325              	 .loc 5 76 0
 3326 0064 40F20000 	 movw r0,#:lower16:.LANCHOR21
 3327 0068 C0F20000 	 movt r0,#:upper16:.LANCHOR21
 3328 006c 2146     	 mov r1,r4
 3329 006e 4FF00002 	 mov r2,#0
 3330 0072 FFF7FEFF 	 bl _ZN3PinC1ERK7LPCPorth
 3331              	.LVL278:
 3332              	.LBB582:
 3333              	.LBB583:
 3334              	.LBB584:
  45:src/MightyBoard/shared/CircularBuffer.hh **** 				underflow(false) {
 3335              	 .loc 2 45 0
 3336 0076 40F20003 	 movw r3,#:lower16:.LANCHOR0
 3337 007a C0F20003 	 movt r3,#:upper16:.LANCHOR0
 3338 007e 4FF48052 	 mov r2,#4096
 3339 0082 1A80     	 strh r2,[r3,#0]
 3340 0084 4FF00002 	 mov r2,#0
 3341 0088 1146     	 mov r1,r2
 3342 008a 5A80     	 strh r2,[r3,#2]
 3343 008c 9A80     	 strh r2,[r3,#4]
 3344 008e 40F20002 	 movw r2,#:lower16:.LANCHOR22
 3345 0092 C0F20002 	 movt r2,#:upper16:.LANCHOR22
 3346 0096 9A60     	 str r2,[r3,#8]
 3347 0098 1973     	 strb r1,[r3,#12]
 3348 009a 5973     	 strb r1,[r3,#13]
 3349              	.LBE584:
 3350              	.LBE583:
 3351              	.LBE582:
 134:src/MightyBoard/Motherboard/Command.cc **** Timeout delay_timeout;
 3352              	 .loc 1 134 0
 3353 009c 40F20000 	 movw r0,#:lower16:.LANCHOR9
 3354 00a0 C0F20000 	 movt r0,#:upper16:.LANCHOR9
 3355 00a4 FFF7FEFF 	 bl _ZN7TimeoutC1Ev
 135:src/MightyBoard/Motherboard/Command.cc **** Timeout homing_timeout;
 3356              	 .loc 1 135 0
 3357 00a8 40F20000 	 movw r0,#:lower16:.LANCHOR8
 3358 00ac C0F20000 	 movt r0,#:upper16:.LANCHOR8
 3359 00b0 FFF7FEFF 	 bl _ZN7TimeoutC1Ev
 136:src/MightyBoard/Motherboard/Command.cc **** Timeout tool_wait_timeout;
 3360              	 .loc 1 136 0
 3361 00b4 40F20000 	 movw r0,#:lower16:.LANCHOR10
 3362 00b8 C0F20000 	 movt r0,#:upper16:.LANCHOR10
 3363 00bc FFF7FEFF 	 bl _ZN7TimeoutC1Ev
 137:src/MightyBoard/Motherboard/Command.cc **** Timeout button_wait_timeout;
 3364              	 .loc 1 137 0
 3365 00c0 40F20000 	 movw r0,#:lower16:.LANCHOR12
 3366 00c4 C0F20000 	 movt r0,#:upper16:.LANCHOR12
 3367 00c8 FFF7FEFF 	 bl _ZN7TimeoutC1Ev
 3368              	.LBE581:
 3369              	.LBE580:
 3370              	 .loc 1 755 0
 3371 00cc 10BD     	 pop {r4,pc}
 3372              	 .cfi_endproc
 3373              	.LFE146:
 3375 00ce 00BF     	 .section .init_array,"aw",%init_array
 3376              	 .align 2
 3377 0000 00000000 	 .word _GLOBAL__sub_I__ZN7command11buffer_dataE(target1)
 3378              	 .global _ZN7command12sdcard_resetE
 3379              	 .global _ZN7command23button_timeout_behaviorE
 3380              	 .global _ZN7command11button_maskE
 3381              	 .global _ZN7command19button_wait_timeoutE
 3382              	 .global _ZN7command17tool_wait_timeoutE
 3383              	 .global _ZN7command14homing_timeoutE
 3384              	 .global _ZN7command13delay_timeoutE
 3385              	 .global _ZN7command4modeE
 3386              	 .global _ZN7command8sd_countE
 3387              	 .global _ZN7command13heat_shutdownE
 3388              	 .global _ZN7command6pausedE
 3389              	 .global _ZN7command16check_temp_stateE
 3390              	 .global _ZN7command24outstanding_tool_commandE
 3391              	 .global _ZN7command11line_numberE
 3392              	 .global _ZN7command16currentToolIndexE
 3393              	 .global _ZN7command14command_bufferE
 3394              	 .global _ZN7command11buffer_dataE
 3395              	 .section .bss._ZN7command16check_temp_stateE,"aw",%nobits
 3396              	 .set .LANCHOR5,.+0
 3399              	_ZN7command16check_temp_stateE:
 3400 0000 00       	 .space 1
 3401              	 .section .bss._ZN7command16currentToolIndexE,"aw",%nobits
 3402              	 .set .LANCHOR11,.+0
 3405              	_ZN7command16currentToolIndexE:
 3406 0000 00       	 .space 1
 3407              	 .section .bss._ZN7command4modeE,"aw",%nobits
 3408              	 .set .LANCHOR3,.+0
 3411              	_ZN7command4modeE:
 3412 0000 00       	 .space 1
 3413              	 .section .bss._ZL5Port0,"aw",%nobits
 3414              	 .align 2
 3415              	 .set .LANCHOR15,.+0
 3418              	_ZL5Port0:
 3419 0000 00       	 .space 1
 3420 0001 000000   	 .section .bss._ZL5Port1,"aw",%nobits
 3421              	 .align 2
 3422              	 .set .LANCHOR16,.+0
 3425              	_ZL5Port1:
 3426 0000 00       	 .space 1
 3427 0001 000000   	 .section .bss._ZL5Port2,"aw",%nobits
 3428              	 .align 2
 3429              	 .set .LANCHOR17,.+0
 3432              	_ZL5Port2:
 3433 0000 00       	 .space 1
 3434 0001 000000   	 .section .bss._ZL5Port3,"aw",%nobits
 3435              	 .align 2
 3436              	 .set .LANCHOR18,.+0
 3439              	_ZL5Port3:
 3440 0000 00       	 .space 1
 3441 0001 000000   	 .section .bss._ZN7command8sd_countE,"aw",%nobits
 3442              	 .align 2
 3443              	 .set .LANCHOR6,.+0
 3446              	_ZN7command8sd_countE:
 3447 0000 00000000 	 .space 4
 3448              	 .section .bss._ZL5Port4,"aw",%nobits
 3449              	 .align 2
 3450              	 .set .LANCHOR19,.+0
 3453              	_ZL5Port4:
 3454 0000 00       	 .space 1
 3455 0001 000000   	 .section .bss._ZN7command11buffer_dataE,"aw",%nobits
 3456              	 .align 2
 3457              	 .set .LANCHOR22,.+0
 3460              	_ZN7command11buffer_dataE:
 3461 0000 00000000 	 .space 4096
 3461      00000000 
 3461      00000000 
 3461      00000000 
 3461      00000000 
 3462              	 .section .bss._ZN7command17tool_wait_timeoutE,"aw",%nobits
 3463              	 .align 2
 3464              	 .set .LANCHOR10,.+0
 3467              	_ZN7command17tool_wait_timeoutE:
 3468 0000 00000000 	 .space 16
 3468      00000000 
 3468      00000000 
 3468      00000000 
 3469              	 .section .bss._ZL7NullPin,"aw",%nobits
 3470              	 .align 2
 3471              	 .set .LANCHOR21,.+0
 3474              	_ZL7NullPin:
 3475 0000 00000000 	 .space 5
 3475      00
 3476 0005 000000   	 .section .rodata.str1.4,"aMS",%progbits,1
 3477              	 .align 2
 3478              	.LC0:
 3479 0000 49207361 	 .ascii "I saw a glitch in mySD card file.SomedayI'll be sma"
 3479      77206120 
 3479      676C6974 
 3479      63682069 
 3479      6E206D79 
 3480 0033 72742065 	 .ascii "rt enoughto restart printing.\000"
 3480      6E6F7567 
 3480      68746F20 
 3480      72657374 
 3480      61727420 
 3481 0051 000000   	 .space 3
 3482              	.LC1:
 3483 0054 49207469 	 .ascii "I timed out while   attempting to heat  my extruder"
 3483      6D656420 
 3483      6F757420 
 3483      7768696C 
 3483      65202020 
 3484 0087 2E00     	 .ascii ".\000"
 3485 0089 000000   	 .space 3
 3486              	.LC2:
 3487 008c 49207469 	 .ascii "I timed out while   attempting to heat  my platform"
 3487      6D656420 
 3487      6F757420 
 3487      7768696C 
 3487      65202020 
 3488 00bf 2E00     	 .ascii ".\000"
 3489 00c1 000000   	 .section .bss._ZL8NullPort,"aw",%nobits
 3490              	 .align 2
 3491              	 .set .LANCHOR20,.+0
 3494              	_ZL8NullPort:
 3495 0000 00       	 .space 1
 3496 0001 000000   	 .section .bss._ZN7command19button_wait_timeoutE,"aw",%nobits
 3497              	 .align 2
 3498              	 .set .LANCHOR12,.+0
 3501              	_ZN7command19button_wait_timeoutE:
 3502 0000 00000000 	 .space 16
 3502      00000000 
 3502      00000000 
 3502      00000000 
 3503              	 .section .bss._ZN7command14homing_timeoutE,"aw",%nobits
 3504              	 .align 2
 3505              	 .set .LANCHOR8,.+0
 3508              	_ZN7command14homing_timeoutE:
 3509 0000 00000000 	 .space 16
 3509      00000000 
 3509      00000000 
 3509      00000000 
 3510              	 .section .bss._ZN7command13heat_shutdownE,"aw",%nobits
 3511              	 .set .LANCHOR2,.+0
 3514              	_ZN7command13heat_shutdownE:
 3515 0000 00       	 .space 1
 3516              	 .section .bss._ZN7command14command_bufferE,"aw",%nobits
 3517              	 .align 2
 3518              	 .set .LANCHOR0,.+0
 3521              	_ZN7command14command_bufferE:
 3522 0000 00000000 	 .space 16
 3522      00000000 
 3522      00000000 
 3522      00000000 
 3523              	 .section .bss._ZN7command11line_numberE,"aw",%nobits
 3524              	 .align 2
 3525              	 .set .LANCHOR4,.+0
 3528              	_ZN7command11line_numberE:
 3529 0000 00000000 	 .space 4
 3530              	 .section .bss._ZN7command12sdcard_resetE,"aw",%nobits
 3531              	 .set .LANCHOR7,.+0
 3534              	_ZN7command12sdcard_resetE:
 3535 0000 00       	 .space 1
 3536              	 .section .bss._ZN7command11button_maskE,"aw",%nobits
 3537              	 .set .LANCHOR14,.+0
 3540              	_ZN7command11button_maskE:
 3541 0000 00       	 .space 1
 3542              	 .section .bss._ZN7command13delay_timeoutE,"aw",%nobits
 3543              	 .align 2
 3544              	 .set .LANCHOR9,.+0
 3547              	_ZN7command13delay_timeoutE:
 3548 0000 00000000 	 .space 16
 3548      00000000 
 3548      00000000 
 3548      00000000 
 3549              	 .section .bss._ZN7command24outstanding_tool_commandE,"aw",%nobits
 3552              	_ZN7command24outstanding_tool_commandE:
 3553 0000 00       	 .space 1
 3554              	 .section .bss._ZN7command6pausedE,"aw",%nobits
 3555              	 .set .LANCHOR1,.+0
 3558              	_ZN7command6pausedE:
 3559 0000 00       	 .space 1
 3560              	 .section .bss._ZN7command23button_timeout_behaviorE,"aw",%nobits
 3561              	 .set .LANCHOR13,.+0
 3564              	_ZN7command23button_timeout_behaviorE:
 3565 0000 00       	 .space 1
 3566              	 .text
 3567              	.Letext0:
 3568              	 .file 6 "c:\\program files\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/gcc/arm-none-eabi/4.6.3/../../../../arm-none-eabi/include/stdint.h"
 3569              	 .file 7 "src/MightyBoard/shared/Types.hh"
 3570              	 .file 8 "src/MightyBoard/Motherboard/Point.hh"
 3571              	 .file 9 "src/MightyBoard/Motherboard/Planner.hh"
 3572              	 .file 10 "src/MightyBoard/shared/Packet.hh"
 3573              	 .file 11 "src/MightyBoard/shared/Timeout.hh"
 3574              	 .file 12 "src/MightyBoard/shared/TemperatureSensor.hh"
 3575              	 .file 13 "src/MightyBoard/shared/PID.hh"
 3576              	 .file 14 "src/MightyBoard/shared/Heater.hh"
 3577              	 .file 15 "src/MightyBoard/shared/HeatingElement.hh"
 3578              	 .file 16 "src/MightyBoard/Motherboard/EepromMap.hh"
 3579              	 .file 17 "src/MightyBoard/shared/CoolingFan.hh"
 3580              	 .file 18 "src/MightyBoard/Motherboard/ExtruderBoard.hh"
 3581              	 .file 19 "src/MightyBoard/Motherboard/Cutoff.hh"
 3582              	 .file 20 "src/MightyBoard/Motherboard/SDCard.hh"
 3583              	 .file 21 "src/MightyBoard/Motherboard/UtilityScripts.hh"
 3584              	 .file 22 "src/MightyBoard/Motherboard/Host.hh"
 3585              	 .file 23 "src/MightyBoard/Motherboard/Command.hh"
 3586              	 .file 24 "src/MightyBoard/Motherboard/system/core_cm3.h"
 3587              	 .file 25 "src/MightyBoard/shared/Menu_locales.hh"
DEFINED SYMBOLS
                            *ABS*:00000000 Command.cc
    {standard input}:19     .text._ZN7command20getRemainingCapacityEv:00000000 $t
    {standard input}:24     .text._ZN7command20getRemainingCapacityEv:00000000 _ZN7command20getRemainingCapacityEv
    {standard input}:3518   .bss._ZN7command14command_bufferE:00000000 .LANCHOR0
    {standard input}:53     .text._ZN7command5pauseEb:00000000 $t
    {standard input}:58     .text._ZN7command5pauseEb:00000000 _ZN7command5pauseEb
    {standard input}:3555   .bss._ZN7command6pausedE:00000000 .LANCHOR1
    {standard input}:76     .text._ZN7command12heatShutdownEv:00000000 $t
    {standard input}:81     .text._ZN7command12heatShutdownEv:00000000 _ZN7command12heatShutdownEv
    {standard input}:3511   .bss._ZN7command13heat_shutdownE:00000000 .LANCHOR2
    {standard input}:99     .text._ZN7command8isPausedEv:00000000 $t
    {standard input}:104    .text._ZN7command8isPausedEv:00000000 _ZN7command8isPausedEv
    {standard input}:121    .text._ZN7command7isEmptyEv:00000000 $t
    {standard input}:126    .text._ZN7command7isEmptyEv:00000000 _ZN7command7isEmptyEv
    {standard input}:152    .text._ZN7command4pushEh:00000000 $t
    {standard input}:157    .text._ZN7command4pushEh:00000000 _ZN7command4pushEh
    {standard input}:227    .text._ZN7command4pop8Ev:00000000 $t
    {standard input}:232    .text._ZN7command4pop8Ev:00000000 _ZN7command4pop8Ev
    {standard input}:311    .text._ZN7command5pop16Ev:00000000 $t
    {standard input}:316    .text._ZN7command5pop16Ev:00000000 _ZN7command5pop16Ev
    {standard input}:466    .text._ZN7command5pop32Ev:00000000 $t
    {standard input}:471    .text._ZN7command5pop32Ev:00000000 _ZN7command5pop32Ev
    {standard input}:744    .text._ZN7commandL21handleMovementCommandERKh:00000000 $t
    {standard input}:748    .text._ZN7commandL21handleMovementCommandERKh:00000000 _ZN7commandL21handleMovementCommandERKh
    {standard input}:3408   .bss._ZN7command4modeE:00000000 .LANCHOR3
    {standard input}:3525   .bss._ZN7command11line_numberE:00000000 .LANCHOR4
    {standard input}:953    .text._ZN7command5resetEv:00000000 $t
    {standard input}:958    .text._ZN7command5resetEv:00000000 _ZN7command5resetEv
    {standard input}:3396   .bss._ZN7command16check_temp_stateE:00000000 .LANCHOR5
    {standard input}:3443   .bss._ZN7command8sd_countE:00000000 .LANCHOR6
    {standard input}:3531   .bss._ZN7command12sdcard_resetE:00000000 .LANCHOR7
    {standard input}:1011   .text._ZN7command9isWaitingEv:00000000 $t
    {standard input}:1016   .text._ZN7command9isWaitingEv:00000000 _ZN7command9isWaitingEv
    {standard input}:1037   .text._ZN7command7isReadyEv:00000000 $t
    {standard input}:1042   .text._ZN7command7isReadyEv:00000000 _ZN7command7isReadyEv
    {standard input}:1062   .text._ZN7command13getLineNumberEv:00000000 $t
    {standard input}:1067   .text._ZN7command13getLineNumberEv:00000000 _ZN7command13getLineNumberEv
    {standard input}:1084   .text._ZN7command15clearLineNumberEv:00000000 $t
    {standard input}:1089   .text._ZN7command15clearLineNumberEv:00000000 _ZN7command15clearLineNumberEv
    {standard input}:1107   .text._ZN7command28processExtruderCommandPacketEv:00000000 $t
    {standard input}:1112   .text._ZN7command28processExtruderCommandPacketEv:00000000 _ZN7command28processExtruderCommandPacketEv
    {standard input}:1146   .text._ZN7command28processExtruderCommandPacketEv:00000020 $d
    {standard input}:1182   .text._ZN7command28processExtruderCommandPacketEv:0000005a $t
    {standard input}:1406   .text._ZN7command28processExtruderCommandPacketEv:000001e4 $d
    {standard input}:1415   .text._ZN7command15runCommandSliceEv:00000000 $t
    {standard input}:1420   .text._ZN7command15runCommandSliceEv:00000000 _ZN7command15runCommandSliceEv
    {standard input}:3478   .rodata.str1.4:00000000 .LC0
    {standard input}:3505   .bss._ZN7command14homing_timeoutE:00000000 .LANCHOR8
    {standard input}:3544   .bss._ZN7command13delay_timeoutE:00000000 .LANCHOR9
    {standard input}:3464   .bss._ZN7command17tool_wait_timeoutE:00000000 .LANCHOR10
    {standard input}:3482   .rodata.str1.4:00000054 .LC1
    {standard input}:3402   .bss._ZN7command16currentToolIndexE:00000000 .LANCHOR11
    {standard input}:3486   .rodata.str1.4:0000008c .LC2
    {standard input}:3498   .bss._ZN7command19button_wait_timeoutE:00000000 .LANCHOR12
    {standard input}:3561   .bss._ZN7command23button_timeout_behaviorE:00000000 .LANCHOR13
    {standard input}:2053   .text._ZN7command15runCommandSliceEv:00000420 $d
    {standard input}:2059   .text._ZN7command15runCommandSliceEv:0000042c $t
    {standard input}:3537   .bss._ZN7command11button_maskE:00000000 .LANCHOR14
    {standard input}:3274   .text._GLOBAL__sub_I__ZN7command11buffer_dataE:00000000 $t
    {standard input}:3278   .text._GLOBAL__sub_I__ZN7command11buffer_dataE:00000000 _GLOBAL__sub_I__ZN7command11buffer_dataE
    {standard input}:3415   .bss._ZL5Port0:00000000 .LANCHOR15
    {standard input}:3422   .bss._ZL5Port1:00000000 .LANCHOR16
    {standard input}:3429   .bss._ZL5Port2:00000000 .LANCHOR17
    {standard input}:3436   .bss._ZL5Port3:00000000 .LANCHOR18
    {standard input}:3450   .bss._ZL5Port4:00000000 .LANCHOR19
    {standard input}:3491   .bss._ZL8NullPort:00000000 .LANCHOR20
    {standard input}:3471   .bss._ZL7NullPin:00000000 .LANCHOR21
    {standard input}:3457   .bss._ZN7command11buffer_dataE:00000000 .LANCHOR22
    {standard input}:3376   .init_array:00000000 $d
    {standard input}:3534   .bss._ZN7command12sdcard_resetE:00000000 _ZN7command12sdcard_resetE
    {standard input}:3564   .bss._ZN7command23button_timeout_behaviorE:00000000 _ZN7command23button_timeout_behaviorE
    {standard input}:3540   .bss._ZN7command11button_maskE:00000000 _ZN7command11button_maskE
    {standard input}:3501   .bss._ZN7command19button_wait_timeoutE:00000000 _ZN7command19button_wait_timeoutE
    {standard input}:3467   .bss._ZN7command17tool_wait_timeoutE:00000000 _ZN7command17tool_wait_timeoutE
    {standard input}:3508   .bss._ZN7command14homing_timeoutE:00000000 _ZN7command14homing_timeoutE
    {standard input}:3547   .bss._ZN7command13delay_timeoutE:00000000 _ZN7command13delay_timeoutE
    {standard input}:3411   .bss._ZN7command4modeE:00000000 _ZN7command4modeE
    {standard input}:3446   .bss._ZN7command8sd_countE:00000000 _ZN7command8sd_countE
    {standard input}:3514   .bss._ZN7command13heat_shutdownE:00000000 _ZN7command13heat_shutdownE
    {standard input}:3558   .bss._ZN7command6pausedE:00000000 _ZN7command6pausedE
    {standard input}:3399   .bss._ZN7command16check_temp_stateE:00000000 _ZN7command16check_temp_stateE
    {standard input}:3552   .bss._ZN7command24outstanding_tool_commandE:00000000 _ZN7command24outstanding_tool_commandE
    {standard input}:3528   .bss._ZN7command11line_numberE:00000000 _ZN7command11line_numberE
    {standard input}:3405   .bss._ZN7command16currentToolIndexE:00000000 _ZN7command16currentToolIndexE
    {standard input}:3521   .bss._ZN7command14command_bufferE:00000000 _ZN7command14command_bufferE
    {standard input}:3460   .bss._ZN7command11buffer_dataE:00000000 _ZN7command11buffer_dataE
    {standard input}:3400   .bss._ZN7command16check_temp_stateE:00000000 $d
    {standard input}:3406   .bss._ZN7command16currentToolIndexE:00000000 $d
    {standard input}:3412   .bss._ZN7command4modeE:00000000 $d
    {standard input}:3414   .bss._ZL5Port0:00000000 $d
    {standard input}:3418   .bss._ZL5Port0:00000000 _ZL5Port0
    {standard input}:3421   .bss._ZL5Port1:00000000 $d
    {standard input}:3425   .bss._ZL5Port1:00000000 _ZL5Port1
    {standard input}:3428   .bss._ZL5Port2:00000000 $d
    {standard input}:3432   .bss._ZL5Port2:00000000 _ZL5Port2
    {standard input}:3435   .bss._ZL5Port3:00000000 $d
    {standard input}:3439   .bss._ZL5Port3:00000000 _ZL5Port3
    {standard input}:3442   .bss._ZN7command8sd_countE:00000000 $d
    {standard input}:3449   .bss._ZL5Port4:00000000 $d
    {standard input}:3453   .bss._ZL5Port4:00000000 _ZL5Port4
    {standard input}:3456   .bss._ZN7command11buffer_dataE:00000000 $d
    {standard input}:3463   .bss._ZN7command17tool_wait_timeoutE:00000000 $d
    {standard input}:3470   .bss._ZL7NullPin:00000000 $d
    {standard input}:3474   .bss._ZL7NullPin:00000000 _ZL7NullPin
    {standard input}:3477   .rodata.str1.4:00000000 $d
    {standard input}:3490   .bss._ZL8NullPort:00000000 $d
    {standard input}:3494   .bss._ZL8NullPort:00000000 _ZL8NullPort
    {standard input}:3497   .bss._ZN7command19button_wait_timeoutE:00000000 $d
    {standard input}:3504   .bss._ZN7command14homing_timeoutE:00000000 $d
    {standard input}:3515   .bss._ZN7command13heat_shutdownE:00000000 $d
    {standard input}:3517   .bss._ZN7command14command_bufferE:00000000 $d
    {standard input}:3524   .bss._ZN7command11line_numberE:00000000 $d
    {standard input}:3535   .bss._ZN7command12sdcard_resetE:00000000 $d
    {standard input}:3541   .bss._ZN7command11button_maskE:00000000 $d
    {standard input}:3543   .bss._ZN7command13delay_timeoutE:00000000 $d
    {standard input}:3553   .bss._ZN7command24outstanding_tool_commandE:00000000 $d
    {standard input}:3559   .bss._ZN7command6pausedE:00000000 $d
    {standard input}:3565   .bss._ZN7command23button_timeout_behaviorE:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
_ZN7planner12isBufferFullEv
_ZN11Motherboard11motherboardE
_ZN11Motherboard21resetUserInputTimeoutEv
_ZN5PointC1Elllll
_ZN7planner15addMoveToBufferERK5PointRKl
_ZN7planner23addMoveToBufferRelativeERK5PointRKla
_ZN6Heater22set_target_temperatureEi
_ZN6Heater9isHeatingEv
_ZN6Heater9isCoolingEv
_ZN6Heater5PauseEb
_ZN4host10pauseBuildEb
_ZN13ExtruderBoard6setFanEh
_ZN11Motherboard8setValveEb
_ZN11Motherboard16setUsingPlatformEb
_ZN6sdcard9isPlayingEv
_ZN6sdcard15playbackHasNextEv
_ZN6sdcard12playbackNextEv
_ZN6sdcard11getFileSizeEv
_ZN11Motherboard13errorResponseEPcb
_ZN6sdcard14finishPlaybackEv
_ZN7utility9isPlayingEv
_ZN7utility15playbackHasNextEv
_ZN7utility12playbackNextEv
_ZN7utility14finishPlaybackEv
_ZN6Heater30has_reached_target_temperatureEv
_ZN8steppers9isRunningEv
_ZN7Timeout10hasElapsedEv
_ZN7planner5abortEv
_delay_us
_ZN11Motherboard5resetEb
_ZN7planner15changeToolIndexEh
_ZN8steppers10enableAxisEhb
_ZN7planner14definePositionERK5Point
_ZN7Timeout5startEm
_ZN7TimeoutC1Ev
_ZN11Motherboard14interfaceBlinkEii
_ZN8steppers11startHomingEbhm
_ZN8steppers11getPositionEv
_ZNK5PointixEj
_ZN6eeprom11setEeprom32Etm
_ZN5PointixEj
_ZN6eeprom11getEeprom32Etm
_ZN8steppers15setAxisPotValueEhh
_ZN7RGB_LED11setLEDBlinkEh
_ZN7RGB_LED14setCustomColorEhhh
_ZN5Piezo7setToneEtt
_ZN5Piezo9errorToneEh
_ZN5Piezo8doneToneEv
_ZN6eeprom18factoryResetEEPROMEv
_ZN4host28handleBuildStartNotificationER19CircularBufferTemplIhE
_ZN4host27handleBuildStopNotificationEh
_ZN7LPCPortC1Eh
_ZN3PinC1ERK7LPCPorth
