   1              	 .syntax unified
   2              	 .cpu cortex-m3
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,1
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "Command.cc"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text._ZN7command20getRemainingCapacityEv,"ax",%progbits
  19              	 .align 2
  20              	 .global _ZN7command20getRemainingCapacityEv
  21              	 .thumb
  22              	 .thumb_func
  24              	_ZN7command20getRemainingCapacityEv:
  25              	.LFB118:
  26              	 .file 1 "src/MightyBoard/Motherboard/Command.cc"
   1:src/MightyBoard/Motherboard/Command.cc **** /*
   2:src/MightyBoard/Motherboard/Command.cc ****  * Copyright 2010 by Adam Mayer	 <adam@makerbot.com>
   3:src/MightyBoard/Motherboard/Command.cc ****  *
   4:src/MightyBoard/Motherboard/Command.cc ****  * This program is free software: you can redistribute it and/or modify
   5:src/MightyBoard/Motherboard/Command.cc ****  * it under the terms of the GNU General Public License as published by
   6:src/MightyBoard/Motherboard/Command.cc ****  * the Free Software Foundation, either version 3 of the License, or
   7:src/MightyBoard/Motherboard/Command.cc ****  * (at your option) any later version.
   8:src/MightyBoard/Motherboard/Command.cc ****  *
   9:src/MightyBoard/Motherboard/Command.cc ****  * This program is distributed in the hope that it will be useful,
  10:src/MightyBoard/Motherboard/Command.cc ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:src/MightyBoard/Motherboard/Command.cc ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:src/MightyBoard/Motherboard/Command.cc ****  * GNU General Public License for more details.
  13:src/MightyBoard/Motherboard/Command.cc ****  *
  14:src/MightyBoard/Motherboard/Command.cc ****  * You should have received a copy of the GNU General Public License
  15:src/MightyBoard/Motherboard/Command.cc ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>
  16:src/MightyBoard/Motherboard/Command.cc ****  */
  17:src/MightyBoard/Motherboard/Command.cc **** 
  18:src/MightyBoard/Motherboard/Command.cc **** #include "Command.hh"
  19:src/MightyBoard/Motherboard/Command.cc **** #include "Steppers.hh"
  20:src/MightyBoard/Motherboard/Command.cc **** #include "Commands.hh"
  21:src/MightyBoard/Motherboard/Command.cc **** #include "Configuration.hh"
  22:src/MightyBoard/Motherboard/Command.cc **** #include "Timeout.hh"
  23:src/MightyBoard/Motherboard/Command.cc **** #include "CircularBuffer.hh"
  24:src/MightyBoard/Motherboard/Command.cc **** //#include <util/atomic.h>
  25:src/MightyBoard/Motherboard/Command.cc **** //#include <avr/eeprom.h>
  26:src/MightyBoard/Motherboard/Command.cc **** #include "EepromMap.hh"
  27:src/MightyBoard/Motherboard/Command.cc **** #include "SDCard.hh"
  28:src/MightyBoard/Motherboard/Command.cc **** #include "Pin.hh"
  29:src/MightyBoard/Motherboard/Command.cc **** //#include <util/delay.h>
  30:src/MightyBoard/Motherboard/Command.cc **** #include "Piezo.hh"
  31:src/MightyBoard/Motherboard/Command.cc **** #include "RGB_LED.hh"
  32:src/MightyBoard/Motherboard/Command.cc **** //#include "Interface.hh"
  33:src/MightyBoard/Motherboard/Command.cc **** #include "UtilityScripts.hh"
  34:src/MightyBoard/Motherboard/Command.cc **** #include "Planner.hh"
  35:src/MightyBoard/Motherboard/Command.cc **** #include "stdio.h"
  36:src/MightyBoard/Motherboard/Command.cc **** #include "Menu_locales.hh"
  37:src/MightyBoard/Motherboard/Command.cc **** 
  38:src/MightyBoard/Motherboard/Command.cc **** #include "Host.hh"
  39:src/MightyBoard/Motherboard/Command.cc **** #include "Delay.hh"
  40:src/MightyBoard/Motherboard/Command.cc **** #include "Eeprom.hh"
  41:src/MightyBoard/Motherboard/Command.cc **** 
  42:src/MightyBoard/Motherboard/Command.cc **** extern "C" {
  43:src/MightyBoard/Motherboard/Command.cc **** 	#include "lpc_types.h"
  44:src/MightyBoard/Motherboard/Command.cc **** #include "comm.h"
  45:src/MightyBoard/Motherboard/Command.cc **** }
  46:src/MightyBoard/Motherboard/Command.cc **** 
  47:src/MightyBoard/Motherboard/Command.cc **** namespace command {
  48:src/MightyBoard/Motherboard/Command.cc **** 
  49:src/MightyBoard/Motherboard/Command.cc **** #define COMMAND_BUFFER_SIZE 512
  50:src/MightyBoard/Motherboard/Command.cc **** uint8_t buffer_data[COMMAND_BUFFER_SIZE];
  51:src/MightyBoard/Motherboard/Command.cc **** CircularBuffer command_buffer(COMMAND_BUFFER_SIZE, buffer_data);
  52:src/MightyBoard/Motherboard/Command.cc **** uint8_t currentToolIndex = 0;
  53:src/MightyBoard/Motherboard/Command.cc **** 
  54:src/MightyBoard/Motherboard/Command.cc **** uint32_t line_number;
  55:src/MightyBoard/Motherboard/Command.cc **** 
  56:src/MightyBoard/Motherboard/Command.cc **** bool outstanding_tool_command = false;
  57:src/MightyBoard/Motherboard/Command.cc **** bool check_temp_state = false;
  58:src/MightyBoard/Motherboard/Command.cc **** bool paused = false;
  59:src/MightyBoard/Motherboard/Command.cc **** bool heat_shutdown = false;
  60:src/MightyBoard/Motherboard/Command.cc **** uint32_t sd_count = 0;
  61:src/MightyBoard/Motherboard/Command.cc **** 
  62:src/MightyBoard/Motherboard/Command.cc **** uint16_t getRemainingCapacity() {
  27              	 .loc 1 62 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32              	.LVL0:
  33              	.LBB335:
  34              	.LBB336:
  35              	.LBB337:
  36              	 .file 2 "src/MightyBoard/shared/CircularBuffer.hh"
   1:src/MightyBoard/shared/CircularBuffer.hh **** /*
   2:src/MightyBoard/shared/CircularBuffer.hh ****  * Copyright 2010 by Adam Mayer	 <adam@makerbot.com>
   3:src/MightyBoard/shared/CircularBuffer.hh ****  *
   4:src/MightyBoard/shared/CircularBuffer.hh ****  * This program is free software: you can redistribute it and/or modify
   5:src/MightyBoard/shared/CircularBuffer.hh ****  * it under the terms of the GNU General Public License as published by
   6:src/MightyBoard/shared/CircularBuffer.hh ****  * the Free Software Foundation, either version 3 of the License, or
   7:src/MightyBoard/shared/CircularBuffer.hh ****  * (at your option) any later version.
   8:src/MightyBoard/shared/CircularBuffer.hh ****  *
   9:src/MightyBoard/shared/CircularBuffer.hh ****  * This program is distributed in the hope that it will be useful,
  10:src/MightyBoard/shared/CircularBuffer.hh ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:src/MightyBoard/shared/CircularBuffer.hh ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:src/MightyBoard/shared/CircularBuffer.hh ****  * GNU General Public License for more details.
  13:src/MightyBoard/shared/CircularBuffer.hh ****  *
  14:src/MightyBoard/shared/CircularBuffer.hh ****  * You should have received a copy of the GNU General Public License
  15:src/MightyBoard/shared/CircularBuffer.hh ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>
  16:src/MightyBoard/shared/CircularBuffer.hh ****  */
  17:src/MightyBoard/shared/CircularBuffer.hh **** 
  18:src/MightyBoard/shared/CircularBuffer.hh **** 
  19:src/MightyBoard/shared/CircularBuffer.hh **** #ifndef SHARED_CIRCULAR_BUFFER_HH_
  20:src/MightyBoard/shared/CircularBuffer.hh **** #define SHARED_CIRCULAR_BUFFER_HH_
  21:src/MightyBoard/shared/CircularBuffer.hh **** 
  22:src/MightyBoard/shared/CircularBuffer.hh **** #include <stdint.h>
  23:src/MightyBoard/shared/CircularBuffer.hh **** 
  24:src/MightyBoard/shared/CircularBuffer.hh **** typedef uint16_t BufSizeType;
  25:src/MightyBoard/shared/CircularBuffer.hh **** 
  26:src/MightyBoard/shared/CircularBuffer.hh **** /// A simple, reliable circular buffer implementation.
  27:src/MightyBoard/shared/CircularBuffer.hh **** /// This implementation does not offer any protection from
  28:src/MightyBoard/shared/CircularBuffer.hh **** /// interrupts and code writing over each other!  You must
  29:src/MightyBoard/shared/CircularBuffer.hh **** /// disable interrupts before all accesses and writes to
  30:src/MightyBoard/shared/CircularBuffer.hh **** /// a circular buffer that is updated in an interrupt.
  31:src/MightyBoard/shared/CircularBuffer.hh **** template<typename T>
  32:src/MightyBoard/shared/CircularBuffer.hh **** class CircularBufferTempl {
  33:src/MightyBoard/shared/CircularBuffer.hh **** public:
  34:src/MightyBoard/shared/CircularBuffer.hh **** 	typedef T BufDataType;
  35:src/MightyBoard/shared/CircularBuffer.hh **** private:
  36:src/MightyBoard/shared/CircularBuffer.hh **** 	const BufSizeType size; /// Size of this buffer
  37:src/MightyBoard/shared/CircularBuffer.hh **** 	volatile BufSizeType length; /// Current length of valid buffer data
  38:src/MightyBoard/shared/CircularBuffer.hh **** 	volatile BufSizeType start; /// Current start point of valid bufffer data
  39:src/MightyBoard/shared/CircularBuffer.hh **** 	BufDataType* const data; /// Pointer to buffer data
  40:src/MightyBoard/shared/CircularBuffer.hh **** 	volatile bool overflow; /// Overflow indicator
  41:src/MightyBoard/shared/CircularBuffer.hh **** 	volatile bool underflow; /// Underflow indicator
  42:src/MightyBoard/shared/CircularBuffer.hh **** public:
  43:src/MightyBoard/shared/CircularBuffer.hh **** 	CircularBufferTempl(BufSizeType size_in, BufDataType* data_in) :
  44:src/MightyBoard/shared/CircularBuffer.hh **** 		size(size_in), length(0), start(0), data(data_in), overflow(false),
  45:src/MightyBoard/shared/CircularBuffer.hh **** 				underflow(false) {
  46:src/MightyBoard/shared/CircularBuffer.hh **** 	}
  47:src/MightyBoard/shared/CircularBuffer.hh **** 
  48:src/MightyBoard/shared/CircularBuffer.hh **** 	/// Reset the buffer to its empty state.  All data in
  49:src/MightyBoard/shared/CircularBuffer.hh **** 	/// the buffer will be (effectively) lost.
  50:src/MightyBoard/shared/CircularBuffer.hh **** 	inline void reset() {
  51:src/MightyBoard/shared/CircularBuffer.hh **** 		length = 0;
  52:src/MightyBoard/shared/CircularBuffer.hh **** 		start = 0;
  53:src/MightyBoard/shared/CircularBuffer.hh **** 		overflow = false;
  54:src/MightyBoard/shared/CircularBuffer.hh **** 		underflow = false;
  55:src/MightyBoard/shared/CircularBuffer.hh **** 	}
  56:src/MightyBoard/shared/CircularBuffer.hh **** 	/// Append a byte to the tail of the buffer
  57:src/MightyBoard/shared/CircularBuffer.hh **** 	inline void push(BufDataType b) {
  58:src/MightyBoard/shared/CircularBuffer.hh **** 		if (length < size) {
  59:src/MightyBoard/shared/CircularBuffer.hh **** 			operator[](length) = b;
  60:src/MightyBoard/shared/CircularBuffer.hh **** 			length++;
  61:src/MightyBoard/shared/CircularBuffer.hh **** 		} else {
  62:src/MightyBoard/shared/CircularBuffer.hh **** 			overflow = true;
  63:src/MightyBoard/shared/CircularBuffer.hh **** 		}
  64:src/MightyBoard/shared/CircularBuffer.hh **** 	}
  65:src/MightyBoard/shared/CircularBuffer.hh **** 	/// Pop a byte off the head of the buffer
  66:src/MightyBoard/shared/CircularBuffer.hh **** 	inline BufDataType pop() {
  67:src/MightyBoard/shared/CircularBuffer.hh **** 		if (isEmpty()) {
  68:src/MightyBoard/shared/CircularBuffer.hh **** 			underflow = true;
  69:src/MightyBoard/shared/CircularBuffer.hh **** 			return BufDataType();
  70:src/MightyBoard/shared/CircularBuffer.hh **** 		}
  71:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufDataType& popped_byte = operator[](0);
  72:src/MightyBoard/shared/CircularBuffer.hh **** 		start = (start + 1) % size;
  73:src/MightyBoard/shared/CircularBuffer.hh **** 		length--;
  74:src/MightyBoard/shared/CircularBuffer.hh **** 		return popped_byte;
  75:src/MightyBoard/shared/CircularBuffer.hh **** 	}
  76:src/MightyBoard/shared/CircularBuffer.hh **** 
  77:src/MightyBoard/shared/CircularBuffer.hh **** 	/// Pop a number of bytes off the head of the buffer.  If there
  78:src/MightyBoard/shared/CircularBuffer.hh **** 	/// are not enough bytes to complete the pop, pop what we can and
  79:src/MightyBoard/shared/CircularBuffer.hh **** 	/// set the underflow flag.
  80:src/MightyBoard/shared/CircularBuffer.hh **** 	inline void pop(BufSizeType sz) {
  81:src/MightyBoard/shared/CircularBuffer.hh **** 		if (length < sz) {
  82:src/MightyBoard/shared/CircularBuffer.hh **** 			underflow = true;
  83:src/MightyBoard/shared/CircularBuffer.hh **** 			sz = length;
  84:src/MightyBoard/shared/CircularBuffer.hh **** 		}
  85:src/MightyBoard/shared/CircularBuffer.hh **** 		start = (start + sz) % size;
  86:src/MightyBoard/shared/CircularBuffer.hh **** 		length -= sz;
  87:src/MightyBoard/shared/CircularBuffer.hh **** 	}
  88:src/MightyBoard/shared/CircularBuffer.hh **** 
  89:src/MightyBoard/shared/CircularBuffer.hh **** 	/// Get the length of the buffer
  90:src/MightyBoard/shared/CircularBuffer.hh **** 	inline const BufSizeType getLength() const {
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
  92:src/MightyBoard/shared/CircularBuffer.hh **** 	}
  93:src/MightyBoard/shared/CircularBuffer.hh **** 
  94:src/MightyBoard/shared/CircularBuffer.hh **** 	/// Get the remaining capacity of this buffer
  95:src/MightyBoard/shared/CircularBuffer.hh **** 	inline const BufSizeType getRemainingCapacity() const {
  96:src/MightyBoard/shared/CircularBuffer.hh **** 		return size - length;
  37              	 .loc 2 96 0
  38 0000 40F20003 	 movw r3,#:lower16:.LANCHOR0
  39 0004 C0F20003 	 movt r3,#:upper16:.LANCHOR0
  40 0008 5A88     	 ldrh r2,[r3,#2]
  41 000a 1888     	 ldrh r0,[r3,#0]
  42 000c 801A     	 subs r0,r0,r2
  43              	.LBE337:
  44              	.LBE336:
  45              	.LBE335:
  63:src/MightyBoard/Motherboard/Command.cc **** 	uint16_t sz;
  64:src/MightyBoard/Motherboard/Command.cc **** //	ATOMIC_BLOCK(ATOMIC_FORCEON) {
  65:src/MightyBoard/Motherboard/Command.cc **** 		sz = command_buffer.getRemainingCapacity();
  66:src/MightyBoard/Motherboard/Command.cc **** //	}
  67:src/MightyBoard/Motherboard/Command.cc **** 	return sz;
  68:src/MightyBoard/Motherboard/Command.cc **** }
  46              	 .loc 1 68 0
  47 000e 80B2     	 uxth r0,r0
  48 0010 7047     	 bx lr
  49              	 .cfi_endproc
  50              	.LFE118:
  52 0012 00BF     	 .section .text._ZN7command5pauseEb,"ax",%progbits
  53              	 .align 2
  54              	 .global _ZN7command5pauseEb
  55              	 .thumb
  56              	 .thumb_func
  58              	_ZN7command5pauseEb:
  59              	.LFB119:
  69:src/MightyBoard/Motherboard/Command.cc **** 
  70:src/MightyBoard/Motherboard/Command.cc **** void pause(bool pause) {
  60              	 .loc 1 70 0
  61              	 .cfi_startproc
  62              	 
  63              	 
  64              	 
  65              	.LVL1:
  71:src/MightyBoard/Motherboard/Command.cc **** 	paused = pause;
  66              	 .loc 1 71 0
  67 0000 40F20003 	 movw r3,#:lower16:.LANCHOR1
  68 0004 C0F20003 	 movt r3,#:upper16:.LANCHOR1
  69 0008 1870     	 strb r0,[r3,#0]
  72:src/MightyBoard/Motherboard/Command.cc **** }
  70              	 .loc 1 72 0
  71 000a 7047     	 bx lr
  72              	 .cfi_endproc
  73              	.LFE119:
  75              	 .section .text._ZN7command12heatShutdownEv,"ax",%progbits
  76              	 .align 2
  77              	 .global _ZN7command12heatShutdownEv
  78              	 .thumb
  79              	 .thumb_func
  81              	_ZN7command12heatShutdownEv:
  82              	.LFB120:
  73:src/MightyBoard/Motherboard/Command.cc **** void heatShutdown(){
  83              	 .loc 1 73 0
  84              	 .cfi_startproc
  85              	 
  86              	 
  87              	 
  74:src/MightyBoard/Motherboard/Command.cc **** 	heat_shutdown = true;
  88              	 .loc 1 74 0
  89 0000 40F20003 	 movw r3,#:lower16:.LANCHOR2
  90 0004 C0F20003 	 movt r3,#:upper16:.LANCHOR2
  91 0008 4FF00102 	 mov r2,#1
  92 000c 1A70     	 strb r2,[r3,#0]
  75:src/MightyBoard/Motherboard/Command.cc **** }
  93              	 .loc 1 75 0
  94 000e 7047     	 bx lr
  95              	 .cfi_endproc
  96              	.LFE120:
  98              	 .section .text._ZN7command8isPausedEv,"ax",%progbits
  99              	 .align 2
 100              	 .global _ZN7command8isPausedEv
 101              	 .thumb
 102              	 .thumb_func
 104              	_ZN7command8isPausedEv:
 105              	.LFB121:
  76:src/MightyBoard/Motherboard/Command.cc **** 
  77:src/MightyBoard/Motherboard/Command.cc **** bool isPaused() {
 106              	 .loc 1 77 0
 107              	 .cfi_startproc
 108              	 
 109              	 
 110              	 
  78:src/MightyBoard/Motherboard/Command.cc **** 	return paused;
 111              	 .loc 1 78 0
 112 0000 40F20003 	 movw r3,#:lower16:.LANCHOR1
 113 0004 C0F20003 	 movt r3,#:upper16:.LANCHOR1
  79:src/MightyBoard/Motherboard/Command.cc **** }
 114              	 .loc 1 79 0
 115 0008 1878     	 ldrb r0,[r3,#0]
 116 000a 7047     	 bx lr
 117              	 .cfi_endproc
 118              	.LFE121:
 120              	 .section .text._ZN7command7isEmptyEv,"ax",%progbits
 121              	 .align 2
 122              	 .global _ZN7command7isEmptyEv
 123              	 .thumb
 124              	 .thumb_func
 126              	_ZN7command7isEmptyEv:
 127              	.LFB122:
  80:src/MightyBoard/Motherboard/Command.cc **** 
  81:src/MightyBoard/Motherboard/Command.cc **** bool isEmpty() {
 128              	 .loc 1 81 0
 129              	 .cfi_startproc
 130              	 
 131              	 
 132              	 
 133              	.LVL2:
 134              	.LBB338:
 135              	.LBB339:
  97:src/MightyBoard/shared/CircularBuffer.hh **** 	}
  98:src/MightyBoard/shared/CircularBuffer.hh **** 
  99:src/MightyBoard/shared/CircularBuffer.hh **** 	/// Check if the buffer is empty
 100:src/MightyBoard/shared/CircularBuffer.hh **** 	inline const bool isEmpty() const {
 101:src/MightyBoard/shared/CircularBuffer.hh **** 		return length == 0;
 136              	 .loc 2 101 0
 137 0000 40F20003 	 movw r3,#:lower16:.LANCHOR0
 138 0004 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 139 0008 5888     	 ldrh r0,[r3,#2]
 140 000a 80B2     	 uxth r0,r0
 141              	.LBE339:
 142              	.LBE338:
  82:src/MightyBoard/Motherboard/Command.cc **** 	return command_buffer.isEmpty();
  83:src/MightyBoard/Motherboard/Command.cc **** }
 143              	 .loc 1 83 0
 144 000c D0F10100 	 rsbs r0,r0,#1
 145 0010 38BF     	 it cc
 146 0012 0020     	 movcc r0,#0
 147 0014 7047     	 bx lr
 148              	 .cfi_endproc
 149              	.LFE122:
 151 0016 00BF     	 .section .text._ZN7command4pushEh,"ax",%progbits
 152              	 .align 2
 153              	 .global _ZN7command4pushEh
 154              	 .thumb
 155              	 .thumb_func
 157              	_ZN7command4pushEh:
 158              	.LFB123:
  84:src/MightyBoard/Motherboard/Command.cc **** 
  85:src/MightyBoard/Motherboard/Command.cc **** void push(uint8_t byte) {
 159              	 .loc 1 85 0
 160              	 .cfi_startproc
 161              	 
 162              	 
 163              	 
 164              	.LVL3:
 165 0000 10B4     	 push {r4}
 166              	.LCFI0:
 167              	 .cfi_def_cfa_offset 4
 168              	 .cfi_offset 4,-4
 169              	.LVL4:
 170              	.LBB340:
 171              	.LBB341:
  58:src/MightyBoard/shared/CircularBuffer.hh **** 		if (length < size) {
 172              	 .loc 2 58 0
 173 0002 40F20003 	 movw r3,#:lower16:.LANCHOR0
 174 0006 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 175 000a 5988     	 ldrh r1,[r3,#2]
 176 000c 89B2     	 uxth r1,r1
 177 000e 1A88     	 ldrh r2,[r3,#0]
 178 0010 9142     	 cmp r1,r2
 179 0012 15D2     	 bcs .L7
  59:src/MightyBoard/shared/CircularBuffer.hh **** 			operator[](length) = b;
 180              	 .loc 2 59 0
 181 0014 40F20003 	 movw r3,#:lower16:.LANCHOR0
 182 0018 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 183 001c 5C88     	 ldrh r4,[r3,#2]
 184 001e A4B2     	 uxth r4,r4
 185              	.LVL5:
 186              	.LBB342:
 187              	.LBB343:
 102:src/MightyBoard/shared/CircularBuffer.hh **** 	}
 103:src/MightyBoard/shared/CircularBuffer.hh **** 	/// Read the buffer directly
 104:src/MightyBoard/shared/CircularBuffer.hh **** 	inline BufDataType& operator[](BufSizeType index) {
 105:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufSizeType actual_index = (index + start) % size;
 188              	 .loc 2 105 0
 189 0020 9988     	 ldrh r1,[r3,#4]
 190 0022 89B2     	 uxth r1,r1
 191              	.LVL6:
 192 0024 6118     	 adds r1,r4,r1
 193              	.LVL7:
 194 0026 91FBF2F4 	 sdiv r4,r1,r2
 195              	.LVL8:
 196 002a 02FB1412 	 mls r2,r2,r4,r1
 106:src/MightyBoard/shared/CircularBuffer.hh **** 		return data[actual_index];
 197              	 .loc 2 106 0
 198 002e 92B2     	 uxth r2,r2
 199              	.LBE343:
 200              	.LBE342:
  59:src/MightyBoard/shared/CircularBuffer.hh **** 			operator[](length) = b;
 201              	 .loc 2 59 0
 202 0030 9968     	 ldr r1,[r3,#8]
 203 0032 8854     	 strb r0,[r1,r2]
  60:src/MightyBoard/shared/CircularBuffer.hh **** 			length++;
 204              	 .loc 2 60 0
 205 0034 5A88     	 ldrh r2,[r3,#2]
 206 0036 02F10102 	 add r2,r2,#1
 207 003a 92B2     	 uxth r2,r2
 208 003c 5A80     	 strh r2,[r3,#2]
 209 003e 06E0     	 b .L6
 210              	.LVL9:
 211              	.L7:
  62:src/MightyBoard/shared/CircularBuffer.hh **** 			overflow = true;
 212              	 .loc 2 62 0
 213 0040 40F20003 	 movw r3,#:lower16:.LANCHOR0
 214 0044 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 215 0048 4FF00102 	 mov r2,#1
 216 004c 1A73     	 strb r2,[r3,#12]
 217              	.L6:
 218              	.LBE341:
 219              	.LBE340:
  86:src/MightyBoard/Motherboard/Command.cc **** 	command_buffer.push(byte);
  87:src/MightyBoard/Motherboard/Command.cc **** }
 220              	 .loc 1 87 0
 221 004e 10BC     	 pop {r4}
 222 0050 7047     	 bx lr
 223              	 .cfi_endproc
 224              	.LFE123:
 226 0052 00BF     	 .section .text._ZN7command4pop8Ev,"ax",%progbits
 227              	 .align 2
 228              	 .global _ZN7command4pop8Ev
 229              	 .thumb
 230              	 .thumb_func
 232              	_ZN7command4pop8Ev:
 233              	.LFB124:
  88:src/MightyBoard/Motherboard/Command.cc **** 
  89:src/MightyBoard/Motherboard/Command.cc **** uint8_t pop8() {
 234              	 .loc 1 89 0
 235              	 .cfi_startproc
 236              	 
 237              	 
 238              	 
 239 0000 30B4     	 push {r4,r5}
 240              	.LCFI1:
 241              	 .cfi_def_cfa_offset 8
 242              	 .cfi_offset 5,-4
 243              	 .cfi_offset 4,-8
 244              	.LVL10:
 245              	.LBB344:
 246              	.LBB345:
 247              	.LBB346:
 248              	.LBB347:
 101:src/MightyBoard/shared/CircularBuffer.hh **** 		return length == 0;
 249              	 .loc 2 101 0
 250 0002 40F20003 	 movw r3,#:lower16:.LANCHOR0
 251 0006 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 252 000a 5B88     	 ldrh r3,[r3,#2]
 253 000c 9BB2     	 uxth r3,r3
 254              	.LBE347:
 255              	.LBE346:
  67:src/MightyBoard/shared/CircularBuffer.hh **** 		if (isEmpty()) {
 256              	 .loc 2 67 0
 257 000e 4BB9     	 cbnz r3,.L10
  68:src/MightyBoard/shared/CircularBuffer.hh **** 			underflow = true;
 258              	 .loc 2 68 0
 259 0010 40F20003 	 movw r3,#:lower16:.LANCHOR0
 260 0014 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 261 0018 4FF00102 	 mov r2,#1
 262 001c 5A73     	 strb r2,[r3,#13]
  69:src/MightyBoard/shared/CircularBuffer.hh **** 			return BufDataType();
 263              	 .loc 2 69 0
 264 001e 4FF00000 	 mov r0,#0
 265 0022 1CE0     	 b .L11
 266              	.L10:
 267              	.LVL11:
 268              	.LBB348:
 269              	.LBB349:
 105:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufSizeType actual_index = (index + start) % size;
 270              	 .loc 2 105 0
 271 0024 40F20003 	 movw r3,#:lower16:.LANCHOR0
 272 0028 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 273 002c 9988     	 ldrh r1,[r3,#4]
 274 002e 89B2     	 uxth r1,r1
 275 0030 1A88     	 ldrh r2,[r3,#0]
 276              	.LVL12:
 277 0032 91FBF2F0 	 sdiv r0,r1,r2
 278 0036 02FB1011 	 mls r1,r2,r0,r1
 279              	.LVL13:
 280              	 .loc 2 106 0
 281 003a 88B2     	 uxth r0,r1
 282 003c 9C68     	 ldr r4,[r3,#8]
 283              	.LBE349:
 284              	.LBE348:
  72:src/MightyBoard/shared/CircularBuffer.hh **** 		start = (start + 1) % size;
 285              	 .loc 2 72 0
 286 003e 9988     	 ldrh r1,[r3,#4]
 287 0040 89B2     	 uxth r1,r1
 288 0042 01F10101 	 add r1,r1,#1
 289 0046 91FBF2F5 	 sdiv r5,r1,r2
 290 004a 02FB1512 	 mls r2,r2,r5,r1
 291 004e 92B2     	 uxth r2,r2
 292 0050 9A80     	 strh r2,[r3,#4]
  73:src/MightyBoard/shared/CircularBuffer.hh **** 		length--;
 293              	 .loc 2 73 0
 294 0052 5A88     	 ldrh r2,[r3,#2]
 295 0054 02F1FF32 	 add r2,r2,#-1
 296 0058 92B2     	 uxth r2,r2
 297 005a 5A80     	 strh r2,[r3,#2]
  74:src/MightyBoard/shared/CircularBuffer.hh **** 		return popped_byte;
 298              	 .loc 2 74 0
 299 005c 205C     	 ldrb r0,[r4,r0]
 300              	.LVL14:
 301              	.L11:
 302              	.LBE345:
 303              	.LBE344:
  90:src/MightyBoard/Motherboard/Command.cc **** //	sd_count ++;
  91:src/MightyBoard/Motherboard/Command.cc **** 	return command_buffer.pop();
  92:src/MightyBoard/Motherboard/Command.cc **** }
 304              	 .loc 1 92 0
 305 005e 30BC     	 pop {r4,r5}
 306 0060 7047     	 bx lr
 307              	 .cfi_endproc
 308              	.LFE124:
 310 0062 00BF     	 .section .text._ZN7command5pop16Ev,"ax",%progbits
 311              	 .align 2
 312              	 .global _ZN7command5pop16Ev
 313              	 .thumb
 314              	 .thumb_func
 316              	_ZN7command5pop16Ev:
 317              	.LFB125:
  93:src/MightyBoard/Motherboard/Command.cc **** 
  94:src/MightyBoard/Motherboard/Command.cc **** int16_t pop16() {
 318              	 .loc 1 94 0
 319              	 .cfi_startproc
 320              	 
 321              	 
 322              	 
 323 0000 70B4     	 push {r4,r5,r6}
 324              	.LCFI2:
 325              	 .cfi_def_cfa_offset 12
 326              	 .cfi_offset 6,-4
 327              	 .cfi_offset 5,-8
 328              	 .cfi_offset 4,-12
 329              	.LVL15:
 330              	.LBB350:
 331              	.LBB351:
 332              	.LBB352:
 333              	.LBB353:
 334              	.LBB354:
 101:src/MightyBoard/shared/CircularBuffer.hh **** 		return length == 0;
 335              	 .loc 2 101 0
 336 0002 40F20003 	 movw r3,#:lower16:.LANCHOR0
 337 0006 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 338 000a 5B88     	 ldrh r3,[r3,#2]
 339 000c 9BB2     	 uxth r3,r3
 340              	.LBE354:
 341              	.LBE353:
  67:src/MightyBoard/shared/CircularBuffer.hh **** 		if (isEmpty()) {
 342              	 .loc 2 67 0
 343 000e 4BB9     	 cbnz r3,.L13
  68:src/MightyBoard/shared/CircularBuffer.hh **** 			underflow = true;
 344              	 .loc 2 68 0
 345 0010 40F20003 	 movw r3,#:lower16:.LANCHOR0
 346 0014 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 347 0018 4FF00102 	 mov r2,#1
 348 001c 5A73     	 strb r2,[r3,#13]
  69:src/MightyBoard/shared/CircularBuffer.hh **** 			return BufDataType();
 349              	 .loc 2 69 0
 350 001e 4FF00003 	 mov r3,#0
 351 0022 1CE0     	 b .L14
 352              	.L13:
 353              	.LVL16:
 354              	.LBB355:
 355              	.LBB356:
 105:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufSizeType actual_index = (index + start) % size;
 356              	 .loc 2 105 0
 357 0024 40F20003 	 movw r3,#:lower16:.LANCHOR0
 358 0028 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 359 002c 9988     	 ldrh r1,[r3,#4]
 360 002e 89B2     	 uxth r1,r1
 361 0030 1A88     	 ldrh r2,[r3,#0]
 362              	.LVL17:
 363 0032 91FBF2F0 	 sdiv r0,r1,r2
 364 0036 02FB1011 	 mls r1,r2,r0,r1
 365              	.LVL18:
 366              	 .loc 2 106 0
 367 003a 88B2     	 uxth r0,r1
 368 003c 9C68     	 ldr r4,[r3,#8]
 369              	.LBE356:
 370              	.LBE355:
  72:src/MightyBoard/shared/CircularBuffer.hh **** 		start = (start + 1) % size;
 371              	 .loc 2 72 0
 372 003e 9988     	 ldrh r1,[r3,#4]
 373 0040 89B2     	 uxth r1,r1
 374 0042 01F10101 	 add r1,r1,#1
 375 0046 91FBF2F5 	 sdiv r5,r1,r2
 376 004a 02FB1512 	 mls r2,r2,r5,r1
 377 004e 92B2     	 uxth r2,r2
 378 0050 9A80     	 strh r2,[r3,#4]
  73:src/MightyBoard/shared/CircularBuffer.hh **** 		length--;
 379              	 .loc 2 73 0
 380 0052 5A88     	 ldrh r2,[r3,#2]
 381 0054 02F1FF32 	 add r2,r2,#-1
 382 0058 92B2     	 uxth r2,r2
 383 005a 5A80     	 strh r2,[r3,#2]
  74:src/MightyBoard/shared/CircularBuffer.hh **** 		return popped_byte;
 384              	 .loc 2 74 0
 385 005c 235C     	 ldrb r3,[r4,r0]
 386              	.LVL19:
 387              	.L14:
 388              	.LBE352:
 389              	.LBE351:
  95:src/MightyBoard/Motherboard/Command.cc **** 	union {
  96:src/MightyBoard/Motherboard/Command.cc **** 		// AVR is little-endian
  97:src/MightyBoard/Motherboard/Command.cc **** 		int16_t a;
  98:src/MightyBoard/Motherboard/Command.cc **** 		struct {
  99:src/MightyBoard/Motherboard/Command.cc **** 			uint8_t data[2];
 100:src/MightyBoard/Motherboard/Command.cc **** 		} b;
 101:src/MightyBoard/Motherboard/Command.cc **** 	} shared;
 102:src/MightyBoard/Motherboard/Command.cc **** 	shared.b.data[0] = command_buffer.pop();
 390              	 .loc 1 102 0
 391 005e 4FF00000 	 mov r0,#0
 392              	.LVL20:
 393 0062 63F30700 	 bfi r0,r3,#0,#8
 394              	.LVL21:
 395              	.LBB357:
 396              	.LBB358:
 397              	.LBB359:
 398              	.LBB360:
 101:src/MightyBoard/shared/CircularBuffer.hh **** 		return length == 0;
 399              	 .loc 2 101 0
 400 0066 40F20003 	 movw r3,#:lower16:.LANCHOR0
 401 006a C0F20003 	 movt r3,#:upper16:.LANCHOR0
 402 006e 5B88     	 ldrh r3,[r3,#2]
 403 0070 9BB2     	 uxth r3,r3
 404              	.LBE360:
 405              	.LBE359:
  67:src/MightyBoard/shared/CircularBuffer.hh **** 		if (isEmpty()) {
 406              	 .loc 2 67 0
 407 0072 4BB9     	 cbnz r3,.L15
  68:src/MightyBoard/shared/CircularBuffer.hh **** 			underflow = true;
 408              	 .loc 2 68 0
 409 0074 40F20003 	 movw r3,#:lower16:.LANCHOR0
 410 0078 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 411 007c 4FF00102 	 mov r2,#1
 412 0080 5A73     	 strb r2,[r3,#13]
  69:src/MightyBoard/shared/CircularBuffer.hh **** 			return BufDataType();
 413              	 .loc 2 69 0
 414 0082 4FF00003 	 mov r3,#0
 415 0086 1CE0     	 b .L16
 416              	.L15:
 417              	.LVL22:
 418              	.LBB361:
 419              	.LBB362:
 105:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufSizeType actual_index = (index + start) % size;
 420              	 .loc 2 105 0
 421 0088 40F20003 	 movw r3,#:lower16:.LANCHOR0
 422 008c C0F20003 	 movt r3,#:upper16:.LANCHOR0
 423 0090 9988     	 ldrh r1,[r3,#4]
 424 0092 89B2     	 uxth r1,r1
 425 0094 1A88     	 ldrh r2,[r3,#0]
 426              	.LVL23:
 427 0096 91FBF2F4 	 sdiv r4,r1,r2
 428 009a 02FB1411 	 mls r1,r2,r4,r1
 429              	.LVL24:
 430              	 .loc 2 106 0
 431 009e 8CB2     	 uxth r4,r1
 432 00a0 9D68     	 ldr r5,[r3,#8]
 433              	.LBE362:
 434              	.LBE361:
  72:src/MightyBoard/shared/CircularBuffer.hh **** 		start = (start + 1) % size;
 435              	 .loc 2 72 0
 436 00a2 9988     	 ldrh r1,[r3,#4]
 437 00a4 89B2     	 uxth r1,r1
 438 00a6 01F10101 	 add r1,r1,#1
 439 00aa 91FBF2F6 	 sdiv r6,r1,r2
 440 00ae 02FB1612 	 mls r2,r2,r6,r1
 441 00b2 92B2     	 uxth r2,r2
 442 00b4 9A80     	 strh r2,[r3,#4]
  73:src/MightyBoard/shared/CircularBuffer.hh **** 		length--;
 443              	 .loc 2 73 0
 444 00b6 5A88     	 ldrh r2,[r3,#2]
 445 00b8 02F1FF32 	 add r2,r2,#-1
 446 00bc 92B2     	 uxth r2,r2
 447 00be 5A80     	 strh r2,[r3,#2]
  74:src/MightyBoard/shared/CircularBuffer.hh **** 		return popped_byte;
 448              	 .loc 2 74 0
 449 00c0 2B5D     	 ldrb r3,[r5,r4]
 450              	.LVL25:
 451              	.L16:
 452              	.LBE358:
 453              	.LBE357:
 103:src/MightyBoard/Motherboard/Command.cc **** 	shared.b.data[1] = command_buffer.pop();
 454              	 .loc 1 103 0
 455 00c2 63F30F20 	 bfi r0,r3,#8,#8
 456              	.LBE350:
 104:src/MightyBoard/Motherboard/Command.cc **** //	sd_count+=2;
 105:src/MightyBoard/Motherboard/Command.cc **** 	return shared.a;
 106:src/MightyBoard/Motherboard/Command.cc **** }
 457              	 .loc 1 106 0
 458 00c6 00B2     	 sxth r0,r0
 459              	.LVL26:
 460 00c8 70BC     	 pop {r4,r5,r6}
 461 00ca 7047     	 bx lr
 462              	 .cfi_endproc
 463              	.LFE125:
 465              	 .section .text._ZN7command5pop32Ev,"ax",%progbits
 466              	 .align 2
 467              	 .global _ZN7command5pop32Ev
 468              	 .thumb
 469              	 .thumb_func
 471              	_ZN7command5pop32Ev:
 472              	.LFB126:
 107:src/MightyBoard/Motherboard/Command.cc **** 
 108:src/MightyBoard/Motherboard/Command.cc **** int32_t pop32() {
 473              	 .loc 1 108 0
 474              	 .cfi_startproc
 475              	 
 476              	 
 477              	 
 478 0000 70B4     	 push {r4,r5,r6}
 479              	.LCFI3:
 480              	 .cfi_def_cfa_offset 12
 481              	 .cfi_offset 6,-4
 482              	 .cfi_offset 5,-8
 483              	 .cfi_offset 4,-12
 484              	.LVL27:
 485              	.LBB363:
 486              	.LBB364:
 487              	.LBB365:
 488              	.LBB366:
 489              	.LBB367:
 101:src/MightyBoard/shared/CircularBuffer.hh **** 		return length == 0;
 490              	 .loc 2 101 0
 491 0002 40F20003 	 movw r3,#:lower16:.LANCHOR0
 492 0006 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 493 000a 5B88     	 ldrh r3,[r3,#2]
 494 000c 9BB2     	 uxth r3,r3
 495              	.LBE367:
 496              	.LBE366:
  67:src/MightyBoard/shared/CircularBuffer.hh **** 		if (isEmpty()) {
 497              	 .loc 2 67 0
 498 000e 4BB9     	 cbnz r3,.L18
  68:src/MightyBoard/shared/CircularBuffer.hh **** 			underflow = true;
 499              	 .loc 2 68 0
 500 0010 40F20003 	 movw r3,#:lower16:.LANCHOR0
 501 0014 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 502 0018 4FF00102 	 mov r2,#1
 503 001c 5A73     	 strb r2,[r3,#13]
  69:src/MightyBoard/shared/CircularBuffer.hh **** 			return BufDataType();
 504              	 .loc 2 69 0
 505 001e 4FF00003 	 mov r3,#0
 506 0022 1CE0     	 b .L19
 507              	.L18:
 508              	.LVL28:
 509              	.LBB368:
 510              	.LBB369:
 105:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufSizeType actual_index = (index + start) % size;
 511              	 .loc 2 105 0
 512 0024 40F20003 	 movw r3,#:lower16:.LANCHOR0
 513 0028 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 514 002c 9988     	 ldrh r1,[r3,#4]
 515 002e 89B2     	 uxth r1,r1
 516 0030 1A88     	 ldrh r2,[r3,#0]
 517              	.LVL29:
 518 0032 91FBF2F0 	 sdiv r0,r1,r2
 519 0036 02FB1011 	 mls r1,r2,r0,r1
 520              	.LVL30:
 521              	 .loc 2 106 0
 522 003a 88B2     	 uxth r0,r1
 523 003c 9C68     	 ldr r4,[r3,#8]
 524              	.LBE369:
 525              	.LBE368:
  72:src/MightyBoard/shared/CircularBuffer.hh **** 		start = (start + 1) % size;
 526              	 .loc 2 72 0
 527 003e 9988     	 ldrh r1,[r3,#4]
 528 0040 89B2     	 uxth r1,r1
 529 0042 01F10101 	 add r1,r1,#1
 530 0046 91FBF2F5 	 sdiv r5,r1,r2
 531 004a 02FB1512 	 mls r2,r2,r5,r1
 532 004e 92B2     	 uxth r2,r2
 533 0050 9A80     	 strh r2,[r3,#4]
  73:src/MightyBoard/shared/CircularBuffer.hh **** 		length--;
 534              	 .loc 2 73 0
 535 0052 5A88     	 ldrh r2,[r3,#2]
 536 0054 02F1FF32 	 add r2,r2,#-1
 537 0058 92B2     	 uxth r2,r2
 538 005a 5A80     	 strh r2,[r3,#2]
  74:src/MightyBoard/shared/CircularBuffer.hh **** 		return popped_byte;
 539              	 .loc 2 74 0
 540 005c 235C     	 ldrb r3,[r4,r0]
 541              	.LVL31:
 542              	.L19:
 543              	.LBE365:
 544              	.LBE364:
 109:src/MightyBoard/Motherboard/Command.cc **** 	union {
 110:src/MightyBoard/Motherboard/Command.cc **** 		// AVR is little-endian
 111:src/MightyBoard/Motherboard/Command.cc **** 		int32_t a;
 112:src/MightyBoard/Motherboard/Command.cc **** 		struct {
 113:src/MightyBoard/Motherboard/Command.cc **** 			uint8_t data[4];
 114:src/MightyBoard/Motherboard/Command.cc **** 		} b;
 115:src/MightyBoard/Motherboard/Command.cc **** 	} shared;
 116:src/MightyBoard/Motherboard/Command.cc **** 	shared.b.data[0] = command_buffer.pop();
 545              	 .loc 1 116 0
 546 005e 4FF00000 	 mov r0,#0
 547              	.LVL32:
 548 0062 63F30700 	 bfi r0,r3,#0,#8
 549              	.LVL33:
 550              	.LBB370:
 551              	.LBB371:
 552              	.LBB372:
 553              	.LBB373:
 101:src/MightyBoard/shared/CircularBuffer.hh **** 		return length == 0;
 554              	 .loc 2 101 0
 555 0066 40F20003 	 movw r3,#:lower16:.LANCHOR0
 556 006a C0F20003 	 movt r3,#:upper16:.LANCHOR0
 557 006e 5B88     	 ldrh r3,[r3,#2]
 558 0070 9BB2     	 uxth r3,r3
 559              	.LBE373:
 560              	.LBE372:
  67:src/MightyBoard/shared/CircularBuffer.hh **** 		if (isEmpty()) {
 561              	 .loc 2 67 0
 562 0072 4BB9     	 cbnz r3,.L20
  68:src/MightyBoard/shared/CircularBuffer.hh **** 			underflow = true;
 563              	 .loc 2 68 0
 564 0074 40F20003 	 movw r3,#:lower16:.LANCHOR0
 565 0078 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 566 007c 4FF00102 	 mov r2,#1
 567 0080 5A73     	 strb r2,[r3,#13]
  69:src/MightyBoard/shared/CircularBuffer.hh **** 			return BufDataType();
 568              	 .loc 2 69 0
 569 0082 4FF00003 	 mov r3,#0
 570 0086 1CE0     	 b .L21
 571              	.L20:
 572              	.LVL34:
 573              	.LBB374:
 574              	.LBB375:
 105:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufSizeType actual_index = (index + start) % size;
 575              	 .loc 2 105 0
 576 0088 40F20003 	 movw r3,#:lower16:.LANCHOR0
 577 008c C0F20003 	 movt r3,#:upper16:.LANCHOR0
 578 0090 9988     	 ldrh r1,[r3,#4]
 579 0092 89B2     	 uxth r1,r1
 580 0094 1A88     	 ldrh r2,[r3,#0]
 581              	.LVL35:
 582 0096 91FBF2F4 	 sdiv r4,r1,r2
 583 009a 02FB1411 	 mls r1,r2,r4,r1
 584              	.LVL36:
 585              	 .loc 2 106 0
 586 009e 8CB2     	 uxth r4,r1
 587 00a0 9D68     	 ldr r5,[r3,#8]
 588              	.LBE375:
 589              	.LBE374:
  72:src/MightyBoard/shared/CircularBuffer.hh **** 		start = (start + 1) % size;
 590              	 .loc 2 72 0
 591 00a2 9988     	 ldrh r1,[r3,#4]
 592 00a4 89B2     	 uxth r1,r1
 593 00a6 01F10101 	 add r1,r1,#1
 594 00aa 91FBF2F6 	 sdiv r6,r1,r2
 595 00ae 02FB1612 	 mls r2,r2,r6,r1
 596 00b2 92B2     	 uxth r2,r2
 597 00b4 9A80     	 strh r2,[r3,#4]
  73:src/MightyBoard/shared/CircularBuffer.hh **** 		length--;
 598              	 .loc 2 73 0
 599 00b6 5A88     	 ldrh r2,[r3,#2]
 600 00b8 02F1FF32 	 add r2,r2,#-1
 601 00bc 92B2     	 uxth r2,r2
 602 00be 5A80     	 strh r2,[r3,#2]
  74:src/MightyBoard/shared/CircularBuffer.hh **** 		return popped_byte;
 603              	 .loc 2 74 0
 604 00c0 2B5D     	 ldrb r3,[r5,r4]
 605              	.LVL37:
 606              	.L21:
 607              	.LBE371:
 608              	.LBE370:
 117:src/MightyBoard/Motherboard/Command.cc **** 	shared.b.data[1] = command_buffer.pop();
 609              	 .loc 1 117 0
 610 00c2 63F30F20 	 bfi r0,r3,#8,#8
 611              	.LVL38:
 612              	.LBB376:
 613              	.LBB377:
 614              	.LBB378:
 615              	.LBB379:
 101:src/MightyBoard/shared/CircularBuffer.hh **** 		return length == 0;
 616              	 .loc 2 101 0
 617 00c6 40F20003 	 movw r3,#:lower16:.LANCHOR0
 618 00ca C0F20003 	 movt r3,#:upper16:.LANCHOR0
 619 00ce 5B88     	 ldrh r3,[r3,#2]
 620 00d0 9BB2     	 uxth r3,r3
 621              	.LBE379:
 622              	.LBE378:
  67:src/MightyBoard/shared/CircularBuffer.hh **** 		if (isEmpty()) {
 623              	 .loc 2 67 0
 624 00d2 4BB9     	 cbnz r3,.L22
  68:src/MightyBoard/shared/CircularBuffer.hh **** 			underflow = true;
 625              	 .loc 2 68 0
 626 00d4 40F20003 	 movw r3,#:lower16:.LANCHOR0
 627 00d8 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 628 00dc 4FF00102 	 mov r2,#1
 629 00e0 5A73     	 strb r2,[r3,#13]
  69:src/MightyBoard/shared/CircularBuffer.hh **** 			return BufDataType();
 630              	 .loc 2 69 0
 631 00e2 4FF00003 	 mov r3,#0
 632 00e6 1CE0     	 b .L23
 633              	.L22:
 634              	.LVL39:
 635              	.LBB380:
 636              	.LBB381:
 105:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufSizeType actual_index = (index + start) % size;
 637              	 .loc 2 105 0
 638 00e8 40F20003 	 movw r3,#:lower16:.LANCHOR0
 639 00ec C0F20003 	 movt r3,#:upper16:.LANCHOR0
 640 00f0 9988     	 ldrh r1,[r3,#4]
 641 00f2 89B2     	 uxth r1,r1
 642 00f4 1A88     	 ldrh r2,[r3,#0]
 643              	.LVL40:
 644 00f6 91FBF2F4 	 sdiv r4,r1,r2
 645 00fa 02FB1411 	 mls r1,r2,r4,r1
 646              	.LVL41:
 647              	 .loc 2 106 0
 648 00fe 8CB2     	 uxth r4,r1
 649 0100 9D68     	 ldr r5,[r3,#8]
 650              	.LBE381:
 651              	.LBE380:
  72:src/MightyBoard/shared/CircularBuffer.hh **** 		start = (start + 1) % size;
 652              	 .loc 2 72 0
 653 0102 9988     	 ldrh r1,[r3,#4]
 654 0104 89B2     	 uxth r1,r1
 655 0106 01F10101 	 add r1,r1,#1
 656 010a 91FBF2F6 	 sdiv r6,r1,r2
 657 010e 02FB1612 	 mls r2,r2,r6,r1
 658 0112 92B2     	 uxth r2,r2
 659 0114 9A80     	 strh r2,[r3,#4]
  73:src/MightyBoard/shared/CircularBuffer.hh **** 		length--;
 660              	 .loc 2 73 0
 661 0116 5A88     	 ldrh r2,[r3,#2]
 662 0118 02F1FF32 	 add r2,r2,#-1
 663 011c 92B2     	 uxth r2,r2
 664 011e 5A80     	 strh r2,[r3,#2]
  74:src/MightyBoard/shared/CircularBuffer.hh **** 		return popped_byte;
 665              	 .loc 2 74 0
 666 0120 2B5D     	 ldrb r3,[r5,r4]
 667              	.LVL42:
 668              	.L23:
 669              	.LBE377:
 670              	.LBE376:
 118:src/MightyBoard/Motherboard/Command.cc **** 	shared.b.data[2] = command_buffer.pop();
 671              	 .loc 1 118 0
 672 0122 63F31740 	 bfi r0,r3,#16,#8
 673              	.LVL43:
 674              	.LBB382:
 675              	.LBB383:
 676              	.LBB384:
 677              	.LBB385:
 101:src/MightyBoard/shared/CircularBuffer.hh **** 		return length == 0;
 678              	 .loc 2 101 0
 679 0126 40F20003 	 movw r3,#:lower16:.LANCHOR0
 680 012a C0F20003 	 movt r3,#:upper16:.LANCHOR0
 681 012e 5B88     	 ldrh r3,[r3,#2]
 682 0130 9BB2     	 uxth r3,r3
 683              	.LBE385:
 684              	.LBE384:
  67:src/MightyBoard/shared/CircularBuffer.hh **** 		if (isEmpty()) {
 685              	 .loc 2 67 0
 686 0132 4BB9     	 cbnz r3,.L24
  68:src/MightyBoard/shared/CircularBuffer.hh **** 			underflow = true;
 687              	 .loc 2 68 0
 688 0134 40F20003 	 movw r3,#:lower16:.LANCHOR0
 689 0138 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 690 013c 4FF00102 	 mov r2,#1
 691 0140 5A73     	 strb r2,[r3,#13]
  69:src/MightyBoard/shared/CircularBuffer.hh **** 			return BufDataType();
 692              	 .loc 2 69 0
 693 0142 4FF00003 	 mov r3,#0
 694 0146 1CE0     	 b .L25
 695              	.L24:
 696              	.LVL44:
 697              	.LBB386:
 698              	.LBB387:
 105:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufSizeType actual_index = (index + start) % size;
 699              	 .loc 2 105 0
 700 0148 40F20003 	 movw r3,#:lower16:.LANCHOR0
 701 014c C0F20003 	 movt r3,#:upper16:.LANCHOR0
 702 0150 9988     	 ldrh r1,[r3,#4]
 703 0152 89B2     	 uxth r1,r1
 704 0154 1A88     	 ldrh r2,[r3,#0]
 705              	.LVL45:
 706 0156 91FBF2F4 	 sdiv r4,r1,r2
 707 015a 02FB1411 	 mls r1,r2,r4,r1
 708              	.LVL46:
 709              	 .loc 2 106 0
 710 015e 8CB2     	 uxth r4,r1
 711 0160 9D68     	 ldr r5,[r3,#8]
 712              	.LBE387:
 713              	.LBE386:
  72:src/MightyBoard/shared/CircularBuffer.hh **** 		start = (start + 1) % size;
 714              	 .loc 2 72 0
 715 0162 9988     	 ldrh r1,[r3,#4]
 716 0164 89B2     	 uxth r1,r1
 717 0166 01F10101 	 add r1,r1,#1
 718 016a 91FBF2F6 	 sdiv r6,r1,r2
 719 016e 02FB1612 	 mls r2,r2,r6,r1
 720 0172 92B2     	 uxth r2,r2
 721 0174 9A80     	 strh r2,[r3,#4]
  73:src/MightyBoard/shared/CircularBuffer.hh **** 		length--;
 722              	 .loc 2 73 0
 723 0176 5A88     	 ldrh r2,[r3,#2]
 724 0178 02F1FF32 	 add r2,r2,#-1
 725 017c 92B2     	 uxth r2,r2
 726 017e 5A80     	 strh r2,[r3,#2]
  74:src/MightyBoard/shared/CircularBuffer.hh **** 		return popped_byte;
 727              	 .loc 2 74 0
 728 0180 2B5D     	 ldrb r3,[r5,r4]
 729              	.LVL47:
 730              	.L25:
 731              	.LBE383:
 732              	.LBE382:
 119:src/MightyBoard/Motherboard/Command.cc **** 	shared.b.data[3] = command_buffer.pop();
 733              	 .loc 1 119 0
 734 0182 63F31F60 	 bfi r0,r3,#24,#8
 735              	.LVL48:
 736              	.LBE363:
 120:src/MightyBoard/Motherboard/Command.cc **** //	sd_count+=4;
 121:src/MightyBoard/Motherboard/Command.cc **** 	return shared.a;
 122:src/MightyBoard/Motherboard/Command.cc **** }
 737              	 .loc 1 122 0
 738 0186 70BC     	 pop {r4,r5,r6}
 739 0188 7047     	 bx lr
 740              	 .cfi_endproc
 741              	.LFE126:
 743 018a 00BF     	 .section .text._ZN7commandL21handleMovementCommandERKh,"ax",%progbits
 744              	 .align 2
 745              	 .thumb
 746              	 .thumb_func
 748              	_ZN7commandL21handleMovementCommandERKh:
 749              	.LFB132:
 123:src/MightyBoard/Motherboard/Command.cc **** 
 124:src/MightyBoard/Motherboard/Command.cc **** enum {
 125:src/MightyBoard/Motherboard/Command.cc **** 	READY,
 126:src/MightyBoard/Motherboard/Command.cc **** 	MOVING,
 127:src/MightyBoard/Motherboard/Command.cc **** 	DELAY,
 128:src/MightyBoard/Motherboard/Command.cc **** 	HOMING,
 129:src/MightyBoard/Motherboard/Command.cc **** 	WAIT_ON_TOOL,
 130:src/MightyBoard/Motherboard/Command.cc **** 	WAIT_ON_PLATFORM,
 131:src/MightyBoard/Motherboard/Command.cc **** 	WAIT_ON_BUTTON
 132:src/MightyBoard/Motherboard/Command.cc **** } mode = READY;
 133:src/MightyBoard/Motherboard/Command.cc **** 
 134:src/MightyBoard/Motherboard/Command.cc **** Timeout delay_timeout;
 135:src/MightyBoard/Motherboard/Command.cc **** Timeout homing_timeout;
 136:src/MightyBoard/Motherboard/Command.cc **** Timeout tool_wait_timeout;
 137:src/MightyBoard/Motherboard/Command.cc **** Timeout button_wait_timeout;
 138:src/MightyBoard/Motherboard/Command.cc **** /// Bitmap of button pushes to wait for
 139:src/MightyBoard/Motherboard/Command.cc **** uint8_t button_mask;
 140:src/MightyBoard/Motherboard/Command.cc **** enum {
 141:src/MightyBoard/Motherboard/Command.cc **** 	BUTTON_TIMEOUT_CONTINUE = 0,
 142:src/MightyBoard/Motherboard/Command.cc **** 	BUTTON_TIMEOUT_ABORT = 1,
 143:src/MightyBoard/Motherboard/Command.cc **** 	BUTTON_CLEAR_SCREEN = 2
 144:src/MightyBoard/Motherboard/Command.cc **** };
 145:src/MightyBoard/Motherboard/Command.cc **** /// Action to take when button times out
 146:src/MightyBoard/Motherboard/Command.cc **** uint8_t button_timeout_behavior;
 147:src/MightyBoard/Motherboard/Command.cc **** 
 148:src/MightyBoard/Motherboard/Command.cc **** 
 149:src/MightyBoard/Motherboard/Command.cc **** bool sdcard_reset = false;
 150:src/MightyBoard/Motherboard/Command.cc **** 
 151:src/MightyBoard/Motherboard/Command.cc **** void reset() {
 152:src/MightyBoard/Motherboard/Command.cc **** 	command_buffer.reset();
 153:src/MightyBoard/Motherboard/Command.cc **** 	line_number = 0;
 154:src/MightyBoard/Motherboard/Command.cc **** 	check_temp_state = false;
 155:src/MightyBoard/Motherboard/Command.cc **** 	paused = false;
 156:src/MightyBoard/Motherboard/Command.cc **** 	sd_count = 0;
 157:src/MightyBoard/Motherboard/Command.cc **** 	sdcard_reset = false;
 158:src/MightyBoard/Motherboard/Command.cc **** 	mode = READY;
 159:src/MightyBoard/Motherboard/Command.cc **** }
 160:src/MightyBoard/Motherboard/Command.cc **** 
 161:src/MightyBoard/Motherboard/Command.cc **** bool isWaiting(){
 162:src/MightyBoard/Motherboard/Command.cc **** 	return (mode == WAIT_ON_BUTTON);
 163:src/MightyBoard/Motherboard/Command.cc **** }
 164:src/MightyBoard/Motherboard/Command.cc ****     
 165:src/MightyBoard/Motherboard/Command.cc **** bool isReady() {
 166:src/MightyBoard/Motherboard/Command.cc ****     return (mode == READY);
 167:src/MightyBoard/Motherboard/Command.cc **** }
 168:src/MightyBoard/Motherboard/Command.cc **** 
 169:src/MightyBoard/Motherboard/Command.cc **** uint32_t getLineNumber() {
 170:src/MightyBoard/Motherboard/Command.cc **** 	return line_number;	
 171:src/MightyBoard/Motherboard/Command.cc **** }
 172:src/MightyBoard/Motherboard/Command.cc **** 
 173:src/MightyBoard/Motherboard/Command.cc **** void clearLineNumber() {
 174:src/MightyBoard/Motherboard/Command.cc **** 	line_number = 0;
 175:src/MightyBoard/Motherboard/Command.cc **** }
 176:src/MightyBoard/Motherboard/Command.cc **** 
 177:src/MightyBoard/Motherboard/Command.cc **** 
 178:src/MightyBoard/Motherboard/Command.cc **** // Handle movement comands -- called from a few places
 179:src/MightyBoard/Motherboard/Command.cc **** static void handleMovementCommand(const uint8_t &command) {
 750              	 .loc 1 179 0
 751              	 .cfi_startproc
 752              	 
 753              	 
 754              	.LVL49:
 755 0000 2DE9F043 	 push {r4,r5,r6,r7,r8,r9,lr}
 756              	.LCFI4:
 757              	 .cfi_def_cfa_offset 28
 758              	 .cfi_offset 14,-4
 759              	 .cfi_offset 9,-8
 760              	 .cfi_offset 8,-12
 761              	 .cfi_offset 7,-16
 762              	 .cfi_offset 6,-20
 763              	 .cfi_offset 5,-24
 764              	 .cfi_offset 4,-28
 765 0004 8FB0     	 sub sp,sp,#60
 766              	.LCFI5:
 767              	 .cfi_def_cfa_offset 88
 768 0006 0446     	 mov r4,r0
 769              	.LBB388:
 180:src/MightyBoard/Motherboard/Command.cc **** 	// if we're already moving, check to make sure the buffer isn't full
 181:src/MightyBoard/Motherboard/Command.cc **** 	if (/*mode == MOVING && */planner::isBufferFull()) {
 770              	 .loc 1 181 0
 771 0008 FFF7FEFF 	 bl _ZN7planner12isBufferFullEv
 772              	.LVL50:
 773 000c 0028     	 cmp r0,#0
 774 000e 40F08580 	 bne .L26
 775              	.LBB389:
 182:src/MightyBoard/Motherboard/Command.cc **** 		return; // we'll be back!
 183:src/MightyBoard/Motherboard/Command.cc **** 	}
 184:src/MightyBoard/Motherboard/Command.cc **** 	if (command == HOST_CMD_QUEUE_POINT_EXT) {
 776              	 .loc 1 184 0
 777 0012 2378     	 ldrb r3,[r4,#0]
 778 0014 8B2B     	 cmp r3,#139
 779 0016 3DD1     	 bne .L28
 780              	.LVL51:
 781              	.LBB390:
 782              	.LBB391:
 783              	.LBB392:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 784              	 .loc 2 91 0
 785 0018 40F20003 	 movw r3,#:lower16:.LANCHOR0
 786 001c C0F20003 	 movt r3,#:upper16:.LANCHOR0
 787 0020 5B88     	 ldrh r3,[r3,#2]
 788 0022 9BB2     	 uxth r3,r3
 789              	.LBE392:
 790              	.LBE391:
 185:src/MightyBoard/Motherboard/Command.cc **** 		// check for completion
 186:src/MightyBoard/Motherboard/Command.cc **** 		if (command_buffer.getLength() >= 25) {
 791              	 .loc 1 186 0
 792 0024 182B     	 cmp r3,#24
 793 0026 79D9     	 bls .L26
 794              	.LBB393:
 187:src/MightyBoard/Motherboard/Command.cc **** 			Motherboard::getBoard().resetUserInputTimeout();
 795              	 .loc 1 187 0
 796 0028 40F20000 	 movw r0,#:lower16:_ZN11Motherboard11motherboardE
 797 002c C0F20000 	 movt r0,#:upper16:_ZN11Motherboard11motherboardE
 798 0030 FFF7FEFF 	 bl _ZN11Motherboard21resetUserInputTimeoutEv
 188:src/MightyBoard/Motherboard/Command.cc **** 			pop8(); // remove the command code
 799              	 .loc 1 188 0
 800 0034 FFF7FEFF 	 bl _ZN7command4pop8Ev
 189:src/MightyBoard/Motherboard/Command.cc **** 			mode = MOVING;
 801              	 .loc 1 189 0
 802 0038 40F20003 	 movw r3,#:lower16:.LANCHOR3
 803 003c C0F20003 	 movt r3,#:upper16:.LANCHOR3
 804 0040 4FF00102 	 mov r2,#1
 805 0044 1A70     	 strb r2,[r3,#0]
 190:src/MightyBoard/Motherboard/Command.cc **** 
 191:src/MightyBoard/Motherboard/Command.cc **** 			int32_t x = pop32();
 806              	 .loc 1 191 0
 807 0046 FFF7FEFF 	 bl _ZN7command5pop32Ev
 808 004a 0646     	 mov r6,r0
 809              	.LVL52:
 192:src/MightyBoard/Motherboard/Command.cc **** 			int32_t y = pop32();
 810              	 .loc 1 192 0
 811 004c FFF7FEFF 	 bl _ZN7command5pop32Ev
 812              	.LVL53:
 813 0050 0746     	 mov r7,r0
 814              	.LVL54:
 193:src/MightyBoard/Motherboard/Command.cc **** 			int32_t z = pop32();
 815              	 .loc 1 193 0
 816 0052 FFF7FEFF 	 bl _ZN7command5pop32Ev
 817              	.LVL55:
 818 0056 8046     	 mov r8,r0
 819              	.LVL56:
 194:src/MightyBoard/Motherboard/Command.cc **** 			int32_t a = pop32();
 820              	 .loc 1 194 0
 821 0058 FFF7FEFF 	 bl _ZN7command5pop32Ev
 822              	.LVL57:
 823 005c 0546     	 mov r5,r0
 824              	.LVL58:
 195:src/MightyBoard/Motherboard/Command.cc **** 			int32_t b = pop32();
 825              	 .loc 1 195 0
 826 005e FFF7FEFF 	 bl _ZN7command5pop32Ev
 827              	.LVL59:
 828 0062 0446     	 mov r4,r0
 829              	.LVL60:
 196:src/MightyBoard/Motherboard/Command.cc **** 			int32_t dda = pop32();
 830              	 .loc 1 196 0
 831 0064 FFF7FEFF 	 bl _ZN7command5pop32Ev
 832              	.LVL61:
 833 0068 0390     	 str r0,[sp,#12]
 834              	.LVL62:
 197:src/MightyBoard/Motherboard/Command.cc **** 
 198:src/MightyBoard/Motherboard/Command.cc **** 			line_number++;
 835              	 .loc 1 198 0
 836 006a 40F20003 	 movw r3,#:lower16:.LANCHOR4
 837 006e C0F20003 	 movt r3,#:upper16:.LANCHOR4
 838 0072 1A68     	 ldr r2,[r3,#0]
 839 0074 02F10102 	 add r2,r2,#1
 840 0078 1A60     	 str r2,[r3,#0]
 199:src/MightyBoard/Motherboard/Command.cc **** 		
 200:src/MightyBoard/Motherboard/Command.cc **** 			planner::addMoveToBuffer(Point(x,y,z,a,b), dda);
 841              	 .loc 1 200 0
 842 007a 0095     	 str r5,[sp,#0]
 843 007c 0194     	 str r4,[sp,#4]
 844 007e 04A8     	 add r0,sp,#16
 845 0080 3146     	 mov r1,r6
 846 0082 3A46     	 mov r2,r7
 847 0084 4346     	 mov r3,r8
 848 0086 FFF7FEFF 	 bl _ZN5PointC1Elllll
 849 008a 04A8     	 add r0,sp,#16
 850 008c 03A9     	 add r1,sp,#12
 851 008e FFF7FEFF 	 bl _ZN7planner15addMoveToBufferERK5PointRKl
 852 0092 43E0     	 b .L26
 853              	.LVL63:
 854              	.L28:
 855              	.LBE393:
 856              	.LBE390:
 857              	.LBB394:
 201:src/MightyBoard/Motherboard/Command.cc **** 		}
 202:src/MightyBoard/Motherboard/Command.cc **** 	}
 203:src/MightyBoard/Motherboard/Command.cc **** 	 else if (command == HOST_CMD_QUEUE_POINT_NEW) {
 858              	 .loc 1 203 0
 859 0094 8E2B     	 cmp r3,#142
 860 0096 41D1     	 bne .L26
 861              	.LVL64:
 862              	.LBB395:
 863              	.LBB396:
 864              	.LBB397:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 865              	 .loc 2 91 0
 866 0098 40F20003 	 movw r3,#:lower16:.LANCHOR0
 867 009c C0F20003 	 movt r3,#:upper16:.LANCHOR0
 868 00a0 5B88     	 ldrh r3,[r3,#2]
 869 00a2 9BB2     	 uxth r3,r3
 870              	.LBE397:
 871              	.LBE396:
 204:src/MightyBoard/Motherboard/Command.cc **** 		// check for completion
 205:src/MightyBoard/Motherboard/Command.cc **** 		if (command_buffer.getLength() >= 26) {
 872              	 .loc 1 205 0
 873 00a4 192B     	 cmp r3,#25
 874 00a6 39D9     	 bls .L26
 875              	.LBB398:
 206:src/MightyBoard/Motherboard/Command.cc **** 			Motherboard::getBoard().resetUserInputTimeout();
 876              	 .loc 1 206 0
 877 00a8 40F20000 	 movw r0,#:lower16:_ZN11Motherboard11motherboardE
 878 00ac C0F20000 	 movt r0,#:upper16:_ZN11Motherboard11motherboardE
 879 00b0 FFF7FEFF 	 bl _ZN11Motherboard21resetUserInputTimeoutEv
 207:src/MightyBoard/Motherboard/Command.cc **** 			pop8(); // remove the command code
 880              	 .loc 1 207 0
 881 00b4 FFF7FEFF 	 bl _ZN7command4pop8Ev
 208:src/MightyBoard/Motherboard/Command.cc **** 			mode = MOVING;
 882              	 .loc 1 208 0
 883 00b8 40F20003 	 movw r3,#:lower16:.LANCHOR3
 884 00bc C0F20003 	 movt r3,#:upper16:.LANCHOR3
 885 00c0 4FF00102 	 mov r2,#1
 886 00c4 1A70     	 strb r2,[r3,#0]
 209:src/MightyBoard/Motherboard/Command.cc **** 			
 210:src/MightyBoard/Motherboard/Command.cc **** 			int32_t x = pop32();
 887              	 .loc 1 210 0
 888 00c6 FFF7FEFF 	 bl _ZN7command5pop32Ev
 889 00ca 0646     	 mov r6,r0
 890              	.LVL65:
 211:src/MightyBoard/Motherboard/Command.cc **** 			int32_t y = pop32();
 891              	 .loc 1 211 0
 892 00cc FFF7FEFF 	 bl _ZN7command5pop32Ev
 893              	.LVL66:
 894 00d0 0746     	 mov r7,r0
 895              	.LVL67:
 212:src/MightyBoard/Motherboard/Command.cc **** 			int32_t z = pop32();
 896              	 .loc 1 212 0
 897 00d2 FFF7FEFF 	 bl _ZN7command5pop32Ev
 898              	.LVL68:
 899 00d6 8046     	 mov r8,r0
 900              	.LVL69:
 213:src/MightyBoard/Motherboard/Command.cc **** 			int32_t a = pop32();
 901              	 .loc 1 213 0
 902 00d8 FFF7FEFF 	 bl _ZN7command5pop32Ev
 903              	.LVL70:
 904 00dc 0546     	 mov r5,r0
 905              	.LVL71:
 214:src/MightyBoard/Motherboard/Command.cc **** 			int32_t b = pop32();
 906              	 .loc 1 214 0
 907 00de FFF7FEFF 	 bl _ZN7command5pop32Ev
 908              	.LVL72:
 909 00e2 0446     	 mov r4,r0
 910              	.LVL73:
 215:src/MightyBoard/Motherboard/Command.cc **** 			int32_t us = pop32();
 911              	 .loc 1 215 0
 912 00e4 FFF7FEFF 	 bl _ZN7command5pop32Ev
 913              	.LVL74:
 914 00e8 0390     	 str r0,[sp,#12]
 915              	.LVL75:
 216:src/MightyBoard/Motherboard/Command.cc **** 			int32_t relative = pop8();
 916              	 .loc 1 216 0
 917 00ea FFF7FEFF 	 bl _ZN7command4pop8Ev
 918 00ee 8146     	 mov r9,r0
 919              	.LVL76:
 217:src/MightyBoard/Motherboard/Command.cc **** 
 218:src/MightyBoard/Motherboard/Command.cc **** 			line_number++;
 920              	 .loc 1 218 0
 921 00f0 40F20003 	 movw r3,#:lower16:.LANCHOR4
 922 00f4 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 923 00f8 1A68     	 ldr r2,[r3,#0]
 924 00fa 02F10102 	 add r2,r2,#1
 925 00fe 1A60     	 str r2,[r3,#0]
 219:src/MightyBoard/Motherboard/Command.cc **** 			
 220:src/MightyBoard/Motherboard/Command.cc **** 			planner::addMoveToBufferRelative(Point(x,y,z,a,b), us, relative);
 926              	 .loc 1 220 0
 927 0100 0095     	 str r5,[sp,#0]
 928 0102 0194     	 str r4,[sp,#4]
 929 0104 09A8     	 add r0,sp,#36
 930              	.LVL77:
 931 0106 3146     	 mov r1,r6
 932 0108 3A46     	 mov r2,r7
 933 010a 4346     	 mov r3,r8
 934 010c FFF7FEFF 	 bl _ZN5PointC1Elllll
 935 0110 09A8     	 add r0,sp,#36
 936 0112 03A9     	 add r1,sp,#12
 937 0114 4FFA89F2 	 sxtb r2,r9
 938 0118 FFF7FEFF 	 bl _ZN7planner23addMoveToBufferRelativeERK5PointRKla
 939              	.LVL78:
 940              	.L26:
 941              	.LBE398:
 942              	.LBE395:
 943              	.LBE394:
 944              	.LBE389:
 945              	.LBE388:
 221:src/MightyBoard/Motherboard/Command.cc **** 		}
 222:src/MightyBoard/Motherboard/Command.cc **** 	}
 223:src/MightyBoard/Motherboard/Command.cc **** 	
 224:src/MightyBoard/Motherboard/Command.cc **** }
 946              	 .loc 1 224 0
 947 011c 0FB0     	 add sp,sp,#60
 948 011e BDE8F083 	 pop {r4,r5,r6,r7,r8,r9,pc}
 949              	 .cfi_endproc
 950              	.LFE132:
 952 0122 00BF     	 .section .text._ZN7command5resetEv,"ax",%progbits
 953              	 .align 2
 954              	 .global _ZN7command5resetEv
 955              	 .thumb
 956              	 .thumb_func
 958              	_ZN7command5resetEv:
 959              	.LFB127:
 151:src/MightyBoard/Motherboard/Command.cc **** void reset() {
 960              	 .loc 1 151 0
 961              	 .cfi_startproc
 962              	 
 963              	 
 964              	 
 965              	.LVL79:
 966              	.LBB399:
 967              	.LBB400:
  51:src/MightyBoard/shared/CircularBuffer.hh **** 		length = 0;
 968              	 .loc 2 51 0
 969 0000 40F20002 	 movw r2,#:lower16:.LANCHOR0
 970 0004 C0F20002 	 movt r2,#:upper16:.LANCHOR0
 971 0008 4FF00001 	 mov r1,#0
 972 000c 5180     	 strh r1,[r2,#2]
  52:src/MightyBoard/shared/CircularBuffer.hh **** 		start = 0;
 973              	 .loc 2 52 0
 974 000e 9180     	 strh r1,[r2,#4]
  53:src/MightyBoard/shared/CircularBuffer.hh **** 		overflow = false;
 975              	 .loc 2 53 0
 976 0010 1173     	 strb r1,[r2,#12]
  54:src/MightyBoard/shared/CircularBuffer.hh **** 		underflow = false;
 977              	 .loc 2 54 0
 978 0012 5173     	 strb r1,[r2,#13]
 979              	.LBE400:
 980              	.LBE399:
 153:src/MightyBoard/Motherboard/Command.cc **** 	line_number = 0;
 981              	 .loc 1 153 0
 982 0014 40F20002 	 movw r2,#:lower16:.LANCHOR4
 983 0018 C0F20002 	 movt r2,#:upper16:.LANCHOR4
 984 001c 1160     	 str r1,[r2,#0]
 154:src/MightyBoard/Motherboard/Command.cc **** 	check_temp_state = false;
 985              	 .loc 1 154 0
 986 001e 40F20002 	 movw r2,#:lower16:.LANCHOR5
 987 0022 C0F20002 	 movt r2,#:upper16:.LANCHOR5
 988 0026 1170     	 strb r1,[r2,#0]
 155:src/MightyBoard/Motherboard/Command.cc **** 	paused = false;
 989              	 .loc 1 155 0
 990 0028 40F20002 	 movw r2,#:lower16:.LANCHOR1
 991 002c C0F20002 	 movt r2,#:upper16:.LANCHOR1
 992 0030 1170     	 strb r1,[r2,#0]
 156:src/MightyBoard/Motherboard/Command.cc **** 	sd_count = 0;
 993              	 .loc 1 156 0
 994 0032 40F20002 	 movw r2,#:lower16:.LANCHOR6
 995 0036 C0F20002 	 movt r2,#:upper16:.LANCHOR6
 996 003a 1160     	 str r1,[r2,#0]
 157:src/MightyBoard/Motherboard/Command.cc **** 	sdcard_reset = false;
 997              	 .loc 1 157 0
 998 003c 40F20002 	 movw r2,#:lower16:.LANCHOR7
 999 0040 C0F20002 	 movt r2,#:upper16:.LANCHOR7
 1000 0044 1170     	 strb r1,[r2,#0]
 158:src/MightyBoard/Motherboard/Command.cc **** 	mode = READY;
 1001              	 .loc 1 158 0
 1002 0046 40F20002 	 movw r2,#:lower16:.LANCHOR3
 1003 004a C0F20002 	 movt r2,#:upper16:.LANCHOR3
 1004 004e 1170     	 strb r1,[r2,#0]
 159:src/MightyBoard/Motherboard/Command.cc **** }
 1005              	 .loc 1 159 0
 1006 0050 7047     	 bx lr
 1007              	 .cfi_endproc
 1008              	.LFE127:
 1010 0052 00BF     	 .section .text._ZN7command9isWaitingEv,"ax",%progbits
 1011              	 .align 2
 1012              	 .global _ZN7command9isWaitingEv
 1013              	 .thumb
 1014              	 .thumb_func
 1016              	_ZN7command9isWaitingEv:
 1017              	.LFB128:
 161:src/MightyBoard/Motherboard/Command.cc **** bool isWaiting(){
 1018              	 .loc 1 161 0
 1019              	 .cfi_startproc
 1020              	 
 1021              	 
 1022              	 
 162:src/MightyBoard/Motherboard/Command.cc **** 	return (mode == WAIT_ON_BUTTON);
 1023              	 .loc 1 162 0
 1024 0000 40F20003 	 movw r3,#:lower16:.LANCHOR3
 1025 0004 C0F20003 	 movt r3,#:upper16:.LANCHOR3
 1026 0008 1878     	 ldrb r0,[r3,#0]
 163:src/MightyBoard/Motherboard/Command.cc **** }
 1027              	 .loc 1 163 0
 1028 000a 0628     	 cmp r0,#6
 1029 000c 14BF     	 ite ne
 1030 000e 0020     	 movne r0,#0
 1031 0010 0120     	 moveq r0,#1
 1032 0012 7047     	 bx lr
 1033              	 .cfi_endproc
 1034              	.LFE128:
 1036              	 .section .text._ZN7command7isReadyEv,"ax",%progbits
 1037              	 .align 2
 1038              	 .global _ZN7command7isReadyEv
 1039              	 .thumb
 1040              	 .thumb_func
 1042              	_ZN7command7isReadyEv:
 1043              	.LFB129:
 165:src/MightyBoard/Motherboard/Command.cc **** bool isReady() {
 1044              	 .loc 1 165 0
 1045              	 .cfi_startproc
 1046              	 
 1047              	 
 1048              	 
 166:src/MightyBoard/Motherboard/Command.cc ****     return (mode == READY);
 1049              	 .loc 1 166 0
 1050 0000 40F20003 	 movw r3,#:lower16:.LANCHOR3
 1051 0004 C0F20003 	 movt r3,#:upper16:.LANCHOR3
 1052 0008 1878     	 ldrb r0,[r3,#0]
 167:src/MightyBoard/Motherboard/Command.cc **** }
 1053              	 .loc 1 167 0
 1054 000a D0F10100 	 rsbs r0,r0,#1
 1055 000e 38BF     	 it cc
 1056 0010 0020     	 movcc r0,#0
 1057 0012 7047     	 bx lr
 1058              	 .cfi_endproc
 1059              	.LFE129:
 1061              	 .section .text._ZN7command13getLineNumberEv,"ax",%progbits
 1062              	 .align 2
 1063              	 .global _ZN7command13getLineNumberEv
 1064              	 .thumb
 1065              	 .thumb_func
 1067              	_ZN7command13getLineNumberEv:
 1068              	.LFB130:
 169:src/MightyBoard/Motherboard/Command.cc **** uint32_t getLineNumber() {
 1069              	 .loc 1 169 0
 1070              	 .cfi_startproc
 1071              	 
 1072              	 
 1073              	 
 170:src/MightyBoard/Motherboard/Command.cc **** 	return line_number;	
 1074              	 .loc 1 170 0
 1075 0000 40F20003 	 movw r3,#:lower16:.LANCHOR4
 1076 0004 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 171:src/MightyBoard/Motherboard/Command.cc **** }
 1077              	 .loc 1 171 0
 1078 0008 1868     	 ldr r0,[r3,#0]
 1079 000a 7047     	 bx lr
 1080              	 .cfi_endproc
 1081              	.LFE130:
 1083              	 .section .text._ZN7command15clearLineNumberEv,"ax",%progbits
 1084              	 .align 2
 1085              	 .global _ZN7command15clearLineNumberEv
 1086              	 .thumb
 1087              	 .thumb_func
 1089              	_ZN7command15clearLineNumberEv:
 1090              	.LFB131:
 173:src/MightyBoard/Motherboard/Command.cc **** void clearLineNumber() {
 1091              	 .loc 1 173 0
 1092              	 .cfi_startproc
 1093              	 
 1094              	 
 1095              	 
 174:src/MightyBoard/Motherboard/Command.cc **** 	line_number = 0;
 1096              	 .loc 1 174 0
 1097 0000 40F20003 	 movw r3,#:lower16:.LANCHOR4
 1098 0004 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 1099 0008 4FF00002 	 mov r2,#0
 1100 000c 1A60     	 str r2,[r3,#0]
 175:src/MightyBoard/Motherboard/Command.cc **** }
 1101              	 .loc 1 175 0
 1102 000e 7047     	 bx lr
 1103              	 .cfi_endproc
 1104              	.LFE131:
 1106              	 .section .text._ZN7command28processExtruderCommandPacketEv,"ax",%progbits
 1107              	 .align 2
 1108              	 .global _ZN7command28processExtruderCommandPacketEv
 1109              	 .thumb
 1110              	 .thumb_func
 1112              	_ZN7command28processExtruderCommandPacketEv:
 1113              	.LFB133:
 225:src/MightyBoard/Motherboard/Command.cc **** 
 226:src/MightyBoard/Motherboard/Command.cc **** bool processExtruderCommandPacket() {
 1114              	 .loc 1 226 0
 1115              	 .cfi_startproc
 1116              	 
 1117              	 
 1118 0000 38B5     	 push {r3,r4,r5,lr}
 1119              	.LCFI6:
 1120              	 .cfi_def_cfa_offset 16
 1121              	 .cfi_offset 14,-4
 1122              	 .cfi_offset 5,-8
 1123              	 .cfi_offset 4,-12
 1124              	 .cfi_offset 3,-16
 1125              	.LBB401:
 227:src/MightyBoard/Motherboard/Command.cc **** 	Motherboard& board = Motherboard::getBoard();
 228:src/MightyBoard/Motherboard/Command.cc ****         uint8_t	id = pop8();
 1126              	 .loc 1 228 0
 1127 0002 FFF7FEFF 	 bl _ZN7command4pop8Ev
 1128 0006 0546     	 mov r5,r0
 1129              	.LVL80:
 229:src/MightyBoard/Motherboard/Command.cc **** 		uint8_t command = pop8();
 1130              	 .loc 1 229 0
 1131 0008 FFF7FEFF 	 bl _ZN7command4pop8Ev
 1132              	.LVL81:
 1133 000c 0446     	 mov r4,r0
 1134              	.LVL82:
 230:src/MightyBoard/Motherboard/Command.cc **** 		uint8_t length = pop8();
 1135              	 .loc 1 230 0
 1136 000e FFF7FEFF 	 bl _ZN7command4pop8Ev
 1137              	.LVL83:
 1138              	.LBB402:
 231:src/MightyBoard/Motherboard/Command.cc **** 
 232:src/MightyBoard/Motherboard/Command.cc **** 		switch (command) {
 1139              	 .loc 1 232 0
 1140 0012 A4F10304 	 sub r4,r4,#3
 1141              	.LVL84:
 1142 0016 1C2C     	 cmp r4,#28
 1143 0018 00F2D180 	 bhi .L58
 1144 001c DFE814F0 	 tbh [pc,r4,lsl#1]
 1145              	.L51:
 1146 0020 1D00     	 .2byte (.L36-.L51)/2
 1147 0022 A700     	 .2byte (.L37-.L51)/2
 1148 0024 AC00     	 .2byte (.L38-.L51)/2
 1149 0026 BB00     	 .2byte (.L39-.L51)/2
 1150 0028 C000     	 .2byte (.L40-.L51)/2
 1151 002a B100     	 .2byte (.L41-.L51)/2
 1152 002c B600     	 .2byte (.L42-.L51)/2
 1153 002e 9D00     	 .2byte (.L43-.L51)/2
 1154 0030 A200     	 .2byte (.L44-.L51)/2
 1155 0032 5600     	 .2byte (.L45-.L51)/2
 1156 0034 6700     	 .2byte (.L46-.L51)/2
 1157 0036 C500     	 .2byte (.L47-.L51)/2
 1158 0038 CA00     	 .2byte (.L48-.L51)/2
 1159 003a CF00     	 .2byte (.L58-.L51)/2
 1160 003c CF00     	 .2byte (.L58-.L51)/2
 1161 003e CF00     	 .2byte (.L58-.L51)/2
 1162 0040 CF00     	 .2byte (.L58-.L51)/2
 1163 0042 CF00     	 .2byte (.L58-.L51)/2
 1164 0044 CF00     	 .2byte (.L58-.L51)/2
 1165 0046 CF00     	 .2byte (.L58-.L51)/2
 1166 0048 4C00     	 .2byte (.L49-.L51)/2
 1167 004a CF00     	 .2byte (.L58-.L51)/2
 1168 004c CF00     	 .2byte (.L58-.L51)/2
 1169 004e CF00     	 .2byte (.L58-.L51)/2
 1170 0050 CF00     	 .2byte (.L58-.L51)/2
 1171 0052 CF00     	 .2byte (.L58-.L51)/2
 1172 0054 CF00     	 .2byte (.L58-.L51)/2
 1173 0056 CF00     	 .2byte (.L58-.L51)/2
 1174 0058 7400     	 .2byte (.L50-.L51)/2
 1175              	.L36:
 1176              	.LVL85:
 1177              	.LBB403:
 1178              	.LBB404:
 1179              	.LBB405:
 1180              	 .file 3 "src/MightyBoard/Motherboard/Motherboard.hh"
   1:src/MightyBoard/Motherboard/Motherboard.hh **** /*
   2:src/MightyBoard/Motherboard/Motherboard.hh ****  * Copyright 2010 by Adam Mayer	 <adam@makerbot.com>
   3:src/MightyBoard/Motherboard/Motherboard.hh ****  *
   4:src/MightyBoard/Motherboard/Motherboard.hh ****  * This program is free software: you can redistribute it and/or modify
   5:src/MightyBoard/Motherboard/Motherboard.hh ****  * it under the terms of the GNU General Public License as published by
   6:src/MightyBoard/Motherboard/Motherboard.hh ****  * the Free Software Foundation, either version 3 of the License, or
   7:src/MightyBoard/Motherboard/Motherboard.hh ****  * (at your option) any later version.
   8:src/MightyBoard/Motherboard/Motherboard.hh ****  *
   9:src/MightyBoard/Motherboard/Motherboard.hh ****  * This program is distributed in the hope that it will be useful,
  10:src/MightyBoard/Motherboard/Motherboard.hh ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:src/MightyBoard/Motherboard/Motherboard.hh ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:src/MightyBoard/Motherboard/Motherboard.hh ****  * GNU General Public License for more details.
  13:src/MightyBoard/Motherboard/Motherboard.hh ****  *
  14:src/MightyBoard/Motherboard/Motherboard.hh ****  * You should have received a copy of the GNU General Public License
  15:src/MightyBoard/Motherboard/Motherboard.hh ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>
  16:src/MightyBoard/Motherboard/Motherboard.hh ****  */
  17:src/MightyBoard/Motherboard/Motherboard.hh **** 
  18:src/MightyBoard/Motherboard/Motherboard.hh **** #ifndef BOARDS_MB40_MOTHERBOARD_HH_
  19:src/MightyBoard/Motherboard/Motherboard.hh **** #define BOARDS_MB40_MOTHERBOARD_HH_
  20:src/MightyBoard/Motherboard/Motherboard.hh **** 
  21:src/MightyBoard/Motherboard/Motherboard.hh **** #include "UART.hh"
  22:src/MightyBoard/Motherboard/Motherboard.hh **** #include "DigiPots.hh"
  23:src/MightyBoard/Motherboard/Motherboard.hh **** #include "Types.hh"
  24:src/MightyBoard/Motherboard/Motherboard.hh **** #include "PSU.hh"
  25:src/MightyBoard/Motherboard/Motherboard.hh **** #include "Configuration.hh"
  26:src/MightyBoard/Motherboard/Motherboard.hh **** #include "Timeout.hh"
  27:src/MightyBoard/Motherboard/Motherboard.hh **** //#include "Menu.hh"
  28:src/MightyBoard/Motherboard/Motherboard.hh **** //#include "InterfaceBoard.hh"
  29:src/MightyBoard/Motherboard/Motherboard.hh **** //#include "LiquidCrystalSerial.hh"
  30:src/MightyBoard/Motherboard/Motherboard.hh **** //#include "ButtonArray.hh"
  31:src/MightyBoard/Motherboard/Motherboard.hh **** #include "Thermistor.hh"
  32:src/MightyBoard/Motherboard/Motherboard.hh **** #include "HeatingElement.hh"
  33:src/MightyBoard/Motherboard/Motherboard.hh **** #include "Heater.hh"
  34:src/MightyBoard/Motherboard/Motherboard.hh **** #include "ExtruderBoard.hh"
  35:src/MightyBoard/Motherboard/Motherboard.hh **** #include "Cutoff.hh"
  36:src/MightyBoard/Motherboard/Motherboard.hh **** 
  37:src/MightyBoard/Motherboard/Motherboard.hh **** enum status_states{
  38:src/MightyBoard/Motherboard/Motherboard.hh **** 	STATUS_NONE = 0,
  39:src/MightyBoard/Motherboard/Motherboard.hh **** 	STATUS_HEAT_INACTIVE_SHUTDOWN = 0x40
  40:src/MightyBoard/Motherboard/Motherboard.hh **** };
  41:src/MightyBoard/Motherboard/Motherboard.hh **** 
  42:src/MightyBoard/Motherboard/Motherboard.hh **** 
  43:src/MightyBoard/Motherboard/Motherboard.hh **** /// Build platform heating element on v34 Extruder controller
  44:src/MightyBoard/Motherboard/Motherboard.hh **** /// \ingroup ECv34
  45:src/MightyBoard/Motherboard/Motherboard.hh **** class BuildPlatformHeatingElement : public HeatingElement {
  46:src/MightyBoard/Motherboard/Motherboard.hh **** public:
  47:src/MightyBoard/Motherboard/Motherboard.hh **** 	void setHeatingElement(uint8_t value);
  48:src/MightyBoard/Motherboard/Motherboard.hh **** };
  49:src/MightyBoard/Motherboard/Motherboard.hh **** 
  50:src/MightyBoard/Motherboard/Motherboard.hh **** /// Main class for Motherboard version 4.0+ (Gen4 electronics)
  51:src/MightyBoard/Motherboard/Motherboard.hh **** /// \ingroup HardwareLibraries
  52:src/MightyBoard/Motherboard/Motherboard.hh **** /// \ingroup MBv40
  53:src/MightyBoard/Motherboard/Motherboard.hh **** class Motherboard {
  54:src/MightyBoard/Motherboard/Motherboard.hh **** private:
  55:src/MightyBoard/Motherboard/Motherboard.hh ****         // TODO: Declare this in main, drop the singleton.
  56:src/MightyBoard/Motherboard/Motherboard.hh ****         /// Static instance of the motherboard
  57:src/MightyBoard/Motherboard/Motherboard.hh ****         static Motherboard motherboard;
  58:src/MightyBoard/Motherboard/Motherboard.hh **** 
  59:src/MightyBoard/Motherboard/Motherboard.hh **** public:
  60:src/MightyBoard/Motherboard/Motherboard.hh ****         /// Get the motherboard instance.
  61:src/MightyBoard/Motherboard/Motherboard.hh ****         static Motherboard& getBoard() { return motherboard; }
  62:src/MightyBoard/Motherboard/Motherboard.hh ****        ExtruderBoard& getExtruderBoard(uint8_t id) { if(id == 1){ return Extruder_Two;} else  { ret
 1181              	 .loc 3 62 0
 1182 005a 624B     	 ldr r3,.L64
 1183 005c A3F1E004 	 sub r4,r3,#224
 1184              	.LVL86:
 1185 0060 012D     	 cmp r5,#1
 1186 0062 08BF     	 it eq
 1187 0064 1C46     	 moveq r4,r3
 1188              	.LVL87:
 1189              	.LBE405:
 1190              	.LBE404:
 233:src/MightyBoard/Motherboard/Command.cc **** 		case SLAVE_CMD_SET_TEMP:
 234:src/MightyBoard/Motherboard/Command.cc **** //			xprintf("SLAVE_CMD_SET_TEMP" " (%s:%d)\n",_F_,_L_);
 235:src/MightyBoard/Motherboard/Command.cc **** 			board.getExtruderBoard(id).getExtruderHeater().set_target_temperature(pop16());
 1191              	 .loc 1 235 0
 1192 0066 FFF7FEFF 	 bl _ZN7command5pop16Ev
 1193 006a 0146     	 mov r1,r0
 1194 006c 04F12800 	 add r0,r4,#40
 1195 0070 FFF7FEFF 	 bl _ZN6Heater22set_target_temperatureEi
 1196              	.LVL88:
 236:src/MightyBoard/Motherboard/Command.cc **** 			/// if platform is actively heating and extruder is not cooling down, pause extruder
 237:src/MightyBoard/Motherboard/Command.cc **** 			if(board.getPlatformHeater().isHeating() && !board.getPlatformHeater().isCooling() && !board.get
 1197              	 .loc 1 237 0
 1198 0074 5C48     	 ldr r0,.L64+4
 1199 0076 FFF7FEFF 	 bl _ZN6Heater9isHeatingEv
 1200 007a 0028     	 cmp r0,#0
 1201 007c 00F0A280 	 beq .L53
 1202              	.LVL89:
 1203 0080 5948     	 ldr r0,.L64+4
 1204 0082 FFF7FEFF 	 bl _ZN6Heater9isCoolingEv
 1205 0086 0028     	 cmp r0,#0
 1206 0088 40F09C80 	 bne .L53
 1207              	.LVL90:
 1208 008c 04F12800 	 add r0,r4,#40
 1209 0090 FFF7FEFF 	 bl _ZN6Heater9isCoolingEv
 1210 0094 0028     	 cmp r0,#0
 1211 0096 40F09580 	 bne .L53
 238:src/MightyBoard/Motherboard/Command.cc **** 				check_temp_state = true;
 1212              	 .loc 1 238 0 discriminator 5
 1213 009a 40F20003 	 movw r3,#:lower16:.LANCHOR5
 1214 009e C0F20003 	 movt r3,#:upper16:.LANCHOR5
 1215 00a2 4FF00102 	 mov r2,#1
 1216 00a6 1A70     	 strb r2,[r3,#0]
 1217              	.LVL91:
 239:src/MightyBoard/Motherboard/Command.cc **** 				board.getExtruderBoard(id).getExtruderHeater().Pause(true);
 1218              	 .loc 1 239 0 discriminator 5
 1219 00a8 04F12800 	 add r0,r4,#40
 1220 00ac 1146     	 mov r1,r2
 1221 00ae FFF7FEFF 	 bl _ZN6Heater5PauseEb
 240:src/MightyBoard/Motherboard/Command.cc **** 			}  /// else ensure extruder is not paused  
 241:src/MightyBoard/Motherboard/Command.cc **** 			else {
 242:src/MightyBoard/Motherboard/Command.cc **** 				board.getExtruderBoard(id).getExtruderHeater().Pause(false);
 243:src/MightyBoard/Motherboard/Command.cc **** 			}
 244:src/MightyBoard/Motherboard/Command.cc **** 			return true;
 1222              	 .loc 1 244 0 discriminator 5
 1223 00b2 4FF00100 	 mov r0,#1
 1224 00b6 38BD     	 pop {r3,r4,r5,pc}
 1225              	.LVL92:
 1226              	.L49:
 245:src/MightyBoard/Motherboard/Command.cc **** 		// can be removed in process via host query works OK
 246:src/MightyBoard/Motherboard/Command.cc ****  		case SLAVE_CMD_PAUSE_UNPAUSE:
 247:src/MightyBoard/Motherboard/Command.cc **** 			host::pauseBuild(!command::isPaused());
 1227              	 .loc 1 247 0
 1228 00b8 FFF7FEFF 	 bl _ZN7command8isPausedEv
 1229 00bc 80F00100 	 eor r0,r0,#1
 1230 00c0 C0B2     	 uxtb r0,r0
 1231 00c2 FFF7FEFF 	 bl _ZN4host10pauseBuildEb
 248:src/MightyBoard/Motherboard/Command.cc **** 			return true;
 1232              	 .loc 1 248 0
 1233 00c6 4FF00100 	 mov r0,#1
 1234 00ca 38BD     	 pop {r3,r4,r5,pc}
 1235              	.L45:
 1236              	.LVL93:
 1237              	.LBB406:
 1238              	.LBB407:
 1239              	 .loc 3 62 0
 1240 00cc 454B     	 ldr r3,.L64
 1241 00ce A3F1E002 	 sub r2,r3,#224
 1242 00d2 012D     	 cmp r5,#1
 1243 00d4 14BF     	 ite ne
 1244 00d6 1546     	 movne r5,r2
 1245 00d8 1D46     	 moveq r5,r3
 1246              	.LVL94:
 1247              	.LBE407:
 1248              	.LBE406:
 249:src/MightyBoard/Motherboard/Command.cc **** 		case SLAVE_CMD_TOGGLE_FAN:
 250:src/MightyBoard/Motherboard/Command.cc **** 			board.getExtruderBoard(id).setFan((pop8() & 0x01) != 0);
 1249              	 .loc 1 250 0
 1250 00da FFF7FEFF 	 bl _ZN7command4pop8Ev
 1251 00de 00F00101 	 and r1,r0,#1
 1252 00e2 2846     	 mov r0,r5
 1253 00e4 FFF7FEFF 	 bl _ZN13ExtruderBoard6setFanEh
 251:src/MightyBoard/Motherboard/Command.cc **** 			return true;
 1254              	 .loc 1 251 0
 1255 00e8 4FF00100 	 mov r0,#1
 1256 00ec 38BD     	 pop {r3,r4,r5,pc}
 1257              	.LVL95:
 1258              	.L46:
 252:src/MightyBoard/Motherboard/Command.cc **** 		case SLAVE_CMD_TOGGLE_VALVE:
 253:src/MightyBoard/Motherboard/Command.cc **** 			board.setValve((pop8() & 0x01) != 0);
 1259              	 .loc 1 253 0
 1260 00ee FFF7FEFF 	 bl _ZN7command4pop8Ev
 1261 00f2 00F00101 	 and r1,r0,#1
 1262 00f6 40F20000 	 movw r0,#:lower16:_ZN11Motherboard11motherboardE
 1263 00fa C0F20000 	 movt r0,#:upper16:_ZN11Motherboard11motherboardE
 1264 00fe FFF7FEFF 	 bl _ZN11Motherboard8setValveEb
 254:src/MightyBoard/Motherboard/Command.cc **** 			return true;
 1265              	 .loc 1 254 0
 1266 0102 4FF00100 	 mov r0,#1
 1267 0106 38BD     	 pop {r3,r4,r5,pc}
 1268              	.L50:
 255:src/MightyBoard/Motherboard/Command.cc **** 		case SLAVE_CMD_SET_PLATFORM_TEMP:
 256:src/MightyBoard/Motherboard/Command.cc **** //			xprintf("SLAVE_CMD_SET_PLATFORM_TEMP" " (%s:%d)\n",_F_,_L_);
 257:src/MightyBoard/Motherboard/Command.cc **** 			board.setUsingPlatform(true);
 1269              	 .loc 1 257 0
 1270 0108 40F20004 	 movw r4,#:lower16:_ZN11Motherboard11motherboardE
 1271              	.LVL96:
 1272 010c C0F20004 	 movt r4,#:upper16:_ZN11Motherboard11motherboardE
 1273 0110 2046     	 mov r0,r4
 1274 0112 4FF00101 	 mov r1,#1
 1275 0116 FFF7FEFF 	 bl _ZN11Motherboard16setUsingPlatformEb
 1276              	.LVL97:
 258:src/MightyBoard/Motherboard/Command.cc **** 			board.getPlatformHeater().set_target_temperature(pop16());
 1277              	 .loc 1 258 0
 1278 011a FFF7FEFF 	 bl _ZN7command5pop16Ev
 1279 011e 0146     	 mov r1,r0
 1280 0120 04F50375 	 add r5,r4,#524
 1281              	.LVL98:
 1282 0124 2846     	 mov r0,r5
 1283 0126 FFF7FEFF 	 bl _ZN6Heater22set_target_temperatureEi
 1284              	.LVL99:
 259:src/MightyBoard/Motherboard/Command.cc **** 			// pause extruder heaters platform is heating up
 260:src/MightyBoard/Motherboard/Command.cc **** 			bool pause_state; /// avr-gcc doesn't allow cross-initializtion of variables within a switch sta
 261:src/MightyBoard/Motherboard/Command.cc **** 			pause_state = false;
 262:src/MightyBoard/Motherboard/Command.cc **** 			if(!board.getPlatformHeater().isCooling()){
 1285              	 .loc 1 262 0
 1286 012a 2846     	 mov r0,r5
 1287 012c FFF7FEFF 	 bl _ZN6Heater9isCoolingEv
 226:src/MightyBoard/Motherboard/Command.cc **** bool processExtruderCommandPacket() {
 1288              	 .loc 1 226 0
 1289 0130 80F00100 	 eor r0,r0,#1
 1290 0134 C5B2     	 uxtb r5,r0
 1291              	.LVL100:
 263:src/MightyBoard/Motherboard/Command.cc **** 				pause_state = true;
 264:src/MightyBoard/Motherboard/Command.cc **** 			}
 265:src/MightyBoard/Motherboard/Command.cc **** 			check_temp_state = pause_state;
 1292              	 .loc 1 265 0
 1293 0136 40F20003 	 movw r3,#:lower16:.LANCHOR5
 1294 013a C0F20003 	 movt r3,#:upper16:.LANCHOR5
 1295 013e 1D70     	 strb r5,[r3,#0]
 1296              	.LVL101:
 266:src/MightyBoard/Motherboard/Command.cc **** 			board.getExtruderBoard(0).getExtruderHeater().Pause(pause_state);
 1297              	 .loc 1 266 0
 1298 0140 04F15000 	 add r0,r4,#80
 1299 0144 2946     	 mov r1,r5
 1300 0146 FFF7FEFF 	 bl _ZN6Heater5PauseEb
 1301              	.LVL102:
 267:src/MightyBoard/Motherboard/Command.cc **** 			board.getExtruderBoard(1).getExtruderHeater().Pause(pause_state);
 1302              	 .loc 1 267 0
 1303 014a 04F59870 	 add r0,r4,#304
 1304 014e 2946     	 mov r1,r5
 1305 0150 FFF7FEFF 	 bl _ZN6Heater5PauseEb
 268:src/MightyBoard/Motherboard/Command.cc **** 			
 269:src/MightyBoard/Motherboard/Command.cc **** 			return true;
 1306              	 .loc 1 269 0
 1307 0154 4FF00100 	 mov r0,#1
 1308 0158 38BD     	 pop {r3,r4,r5,pc}
 1309              	.LVL103:
 1310              	.L43:
 270:src/MightyBoard/Motherboard/Command.cc ****         // not being used with 5D
 271:src/MightyBoard/Motherboard/Command.cc **** 		case SLAVE_CMD_TOGGLE_MOTOR_1:
 272:src/MightyBoard/Motherboard/Command.cc **** 			pop8();
 1311              	 .loc 1 272 0
 1312 015a FFF7FEFF 	 bl _ZN7command4pop8Ev
 273:src/MightyBoard/Motherboard/Command.cc **** 			return true;
 1313              	 .loc 1 273 0
 1314 015e 4FF00100 	 mov r0,#1
 1315 0162 38BD     	 pop {r3,r4,r5,pc}
 1316              	.L44:
 274:src/MightyBoard/Motherboard/Command.cc ****         // not being used with 5D
 275:src/MightyBoard/Motherboard/Command.cc **** 		case SLAVE_CMD_TOGGLE_MOTOR_2: 
 276:src/MightyBoard/Motherboard/Command.cc **** 			pop8();
 1317              	 .loc 1 276 0
 1318 0164 FFF7FEFF 	 bl _ZN7command4pop8Ev
 277:src/MightyBoard/Motherboard/Command.cc **** 			return true;
 1319              	 .loc 1 277 0
 1320 0168 4FF00100 	 mov r0,#1
 1321 016c 38BD     	 pop {r3,r4,r5,pc}
 1322              	.L37:
 278:src/MightyBoard/Motherboard/Command.cc **** 		case SLAVE_CMD_SET_MOTOR_1_PWM:
 279:src/MightyBoard/Motherboard/Command.cc **** //			xprintf("SLAVE_CMD_SET_MOTOR_1_PWM" " (%s:%d)\n",_F_,_L_);
 280:src/MightyBoard/Motherboard/Command.cc **** 			pop8();
 1323              	 .loc 1 280 0
 1324 016e FFF7FEFF 	 bl _ZN7command4pop8Ev
 281:src/MightyBoard/Motherboard/Command.cc **** 			return true;
 1325              	 .loc 1 281 0
 1326 0172 4FF00100 	 mov r0,#1
 1327 0176 38BD     	 pop {r3,r4,r5,pc}
 1328              	.L38:
 282:src/MightyBoard/Motherboard/Command.cc **** 		case SLAVE_CMD_SET_MOTOR_2_PWM:
 283:src/MightyBoard/Motherboard/Command.cc **** 			pop8();
 1329              	 .loc 1 283 0
 1330 0178 FFF7FEFF 	 bl _ZN7command4pop8Ev
 284:src/MightyBoard/Motherboard/Command.cc **** 			return true;
 1331              	 .loc 1 284 0
 1332 017c 4FF00100 	 mov r0,#1
 1333 0180 38BD     	 pop {r3,r4,r5,pc}
 1334              	.L41:
 285:src/MightyBoard/Motherboard/Command.cc **** 		case SLAVE_CMD_SET_MOTOR_1_DIR:
 286:src/MightyBoard/Motherboard/Command.cc **** 			pop8();
 1335              	 .loc 1 286 0
 1336 0182 FFF7FEFF 	 bl _ZN7command4pop8Ev
 287:src/MightyBoard/Motherboard/Command.cc **** 			return true;
 1337              	 .loc 1 287 0
 1338 0186 4FF00100 	 mov r0,#1
 1339 018a 38BD     	 pop {r3,r4,r5,pc}
 1340              	.L42:
 288:src/MightyBoard/Motherboard/Command.cc **** 		case SLAVE_CMD_SET_MOTOR_2_DIR:
 289:src/MightyBoard/Motherboard/Command.cc **** 			pop8();
 1341              	 .loc 1 289 0
 1342 018c FFF7FEFF 	 bl _ZN7command4pop8Ev
 290:src/MightyBoard/Motherboard/Command.cc **** 			return true;
 1343              	 .loc 1 290 0
 1344 0190 4FF00100 	 mov r0,#1
 1345 0194 38BD     	 pop {r3,r4,r5,pc}
 1346              	.L39:
 291:src/MightyBoard/Motherboard/Command.cc **** 		case SLAVE_CMD_SET_MOTOR_1_RPM:
 292:src/MightyBoard/Motherboard/Command.cc **** 			pop32();
 1347              	 .loc 1 292 0
 1348 0196 FFF7FEFF 	 bl _ZN7command5pop32Ev
 293:src/MightyBoard/Motherboard/Command.cc **** 			return true;
 1349              	 .loc 1 293 0
 1350 019a 4FF00100 	 mov r0,#1
 1351 019e 38BD     	 pop {r3,r4,r5,pc}
 1352              	.L40:
 294:src/MightyBoard/Motherboard/Command.cc **** 		case SLAVE_CMD_SET_MOTOR_2_RPM:
 295:src/MightyBoard/Motherboard/Command.cc **** 			pop32();
 1353              	 .loc 1 295 0
 1354 01a0 FFF7FEFF 	 bl _ZN7command5pop32Ev
 296:src/MightyBoard/Motherboard/Command.cc **** 			return true;
 1355              	 .loc 1 296 0
 1356 01a4 4FF00100 	 mov r0,#1
 1357 01a8 38BD     	 pop {r3,r4,r5,pc}
 1358              	.L47:
 297:src/MightyBoard/Motherboard/Command.cc **** 		case SLAVE_CMD_SET_SERVO_1_POS:
 298:src/MightyBoard/Motherboard/Command.cc **** 			pop8();
 1359              	 .loc 1 298 0
 1360 01aa FFF7FEFF 	 bl _ZN7command4pop8Ev
 299:src/MightyBoard/Motherboard/Command.cc **** 			return true;
 1361              	 .loc 1 299 0
 1362 01ae 4FF00100 	 mov r0,#1
 1363 01b2 38BD     	 pop {r3,r4,r5,pc}
 1364              	.L48:
 300:src/MightyBoard/Motherboard/Command.cc **** 		case SLAVE_CMD_SET_SERVO_2_POS:
 301:src/MightyBoard/Motherboard/Command.cc **** 			pop8();
 1365              	 .loc 1 301 0
 1366 01b4 FFF7FEFF 	 bl _ZN7command4pop8Ev
 302:src/MightyBoard/Motherboard/Command.cc **** 			return true;
 1367              	 .loc 1 302 0
 1368 01b8 4FF00100 	 mov r0,#1
 1369 01bc 38BD     	 pop {r3,r4,r5,pc}
 1370              	.L58:
 1371              	.LBE403:
 303:src/MightyBoard/Motherboard/Command.cc **** 		}
 304:src/MightyBoard/Motherboard/Command.cc **** 	return false;
 1372              	 .loc 1 304 0
 1373 01be 4FF00000 	 mov r0,#0
 1374              	.LBE402:
 1375              	.LBE401:
 305:src/MightyBoard/Motherboard/Command.cc **** }
 1376              	 .loc 1 305 0
 1377 01c2 38BD     	 pop {r3,r4,r5,pc}
 1378              	.LVL104:
 1379              	.L53:
 1380              	.LBB412:
 1381              	.LBB411:
 1382              	.LBB410:
 1383              	.LBB408:
 1384              	.LBB409:
 1385              	 .loc 3 62 0
 1386 01c4 074B     	 ldr r3,.L64
 1387 01c6 A3F1E000 	 sub r0,r3,#224
 1388 01ca 012D     	 cmp r5,#1
 1389 01cc 08BF     	 it eq
 1390 01ce 1846     	 moveq r0,r3
 1391              	.LVL105:
 1392              	.LBE409:
 1393              	.LBE408:
 242:src/MightyBoard/Motherboard/Command.cc **** 				board.getExtruderBoard(id).getExtruderHeater().Pause(false);
 1394              	 .loc 1 242 0
 1395 01d0 00F12800 	 add r0,r0,#40
 1396              	.LVL106:
 1397 01d4 4FF00001 	 mov r1,#0
 1398 01d8 FFF7FEFF 	 bl _ZN6Heater5PauseEb
 1399              	.LVL107:
 244:src/MightyBoard/Motherboard/Command.cc **** 			return true;
 1400              	 .loc 1 244 0
 1401 01dc 4FF00100 	 mov r0,#1
 1402 01e0 38BD     	 pop {r3,r4,r5,pc}
 1403              	.L65:
 1404 01e2 00BF     	 .align 2
 1405              	.L64:
 1406 01e4 08010000 	 .word _ZN11Motherboard11motherboardE+264
 1407 01e8 0C020000 	 .word _ZN11Motherboard11motherboardE+524
 1408              	.LBE410:
 1409              	.LBE411:
 1410              	.LBE412:
 1411              	 .cfi_endproc
 1412              	.LFE133:
 1414              	 .section .text._ZN7command15runCommandSliceEv,"ax",%progbits
 1415              	 .align 2
 1416              	 .global _ZN7command15runCommandSliceEv
 1417              	 .thumb
 1418              	 .thumb_func
 1420              	_ZN7command15runCommandSliceEv:
 1421              	.LFB134:
 306:src/MightyBoard/Motherboard/Command.cc **** 
 307:src/MightyBoard/Motherboard/Command.cc **** 
 308:src/MightyBoard/Motherboard/Command.cc **** // A fast slice for processing commands and refilling the stepper queue, etc.
 309:src/MightyBoard/Motherboard/Command.cc **** void runCommandSlice() {
 1422              	 .loc 1 309 0
 1423              	 .cfi_startproc
 1424              	 
 1425              	 
 1426 0000 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
 1427              	.LCFI7:
 1428              	 .cfi_def_cfa_offset 24
 1429              	 .cfi_offset 14,-4
 1430              	 .cfi_offset 8,-8
 1431              	 .cfi_offset 7,-12
 1432              	 .cfi_offset 6,-16
 1433              	 .cfi_offset 5,-20
 1434              	 .cfi_offset 4,-24
 1435 0004 96B0     	 sub sp,sp,#88
 1436              	.LCFI8:
 1437              	 .cfi_def_cfa_offset 112
 1438              	.LBB413:
 310:src/MightyBoard/Motherboard/Command.cc ****     // get command from SD card if building from SD
 311:src/MightyBoard/Motherboard/Command.cc **** 	if (sdcard::isPlaying()) {
 1439              	 .loc 1 311 0
 1440 0006 FFF7FEFF 	 bl _ZN6sdcard9isPlayingEv
 1441 000a A0B9     	 cbnz r0,.L141
 1442 000c 63E0     	 b .L68
 1443              	.LVL108:
 1444              	.L71:
 1445              	.LBB414:
 1446              	.LBB415:
  59:src/MightyBoard/shared/CircularBuffer.hh **** 			operator[](length) = b;
 1447              	 .loc 2 59 0
 1448 000e 6188     	 ldrh r1,[r4,#2]
 1449 0010 89B2     	 uxth r1,r1
 1450              	.LVL109:
 1451              	.LBB416:
 1452              	.LBB417:
 105:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufSizeType actual_index = (index + start) % size;
 1453              	 .loc 2 105 0
 1454 0012 A288     	 ldrh r2,[r4,#4]
 1455 0014 92B2     	 uxth r2,r2
 1456              	.LVL110:
 1457 0016 8A18     	 adds r2,r1,r2
 1458              	.LVL111:
 1459 0018 92FBF3F1 	 sdiv r1,r2,r3
 1460              	.LVL112:
 1461 001c 03FB1123 	 mls r3,r3,r1,r2
 1462              	 .loc 2 106 0
 1463 0020 9BB2     	 uxth r3,r3
 1464              	.LBE417:
 1465              	.LBE416:
  59:src/MightyBoard/shared/CircularBuffer.hh **** 			operator[](length) = b;
 1466              	 .loc 2 59 0
 1467 0022 A268     	 ldr r2,[r4,#8]
 1468 0024 D054     	 strb r0,[r2,r3]
  60:src/MightyBoard/shared/CircularBuffer.hh **** 			length++;
 1469              	 .loc 2 60 0
 1470 0026 6388     	 ldrh r3,[r4,#2]
 1471 0028 03F10103 	 add r3,r3,#1
 1472 002c 9BB2     	 uxth r3,r3
 1473 002e 6380     	 strh r3,[r4,#2]
 1474 0030 0BE0     	 b .L145
 1475              	.LVL113:
 1476              	.L149:
  62:src/MightyBoard/shared/CircularBuffer.hh **** 			overflow = true;
 1477              	 .loc 2 62 0
 1478 0032 2673     	 strb r6,[r4,#12]
 1479 0034 09E0     	 b .L145
 1480              	.LVL114:
 1481              	.L141:
 1482              	.LBE415:
 1483              	.LBE414:
 1484              	.LBB420:
 1485              	.LBB421:
  96:src/MightyBoard/shared/CircularBuffer.hh **** 		return size - length;
 1486              	 .loc 2 96 0 discriminator 1
 1487 0036 40F20004 	 movw r4,#:lower16:.LANCHOR0
 1488 003a C0F20004 	 movt r4,#:upper16:.LANCHOR0
 1489              	.LBE421:
 1490              	.LBE420:
 312:src/MightyBoard/Motherboard/Command.cc **** 		while (command_buffer.getRemainingCapacity() > 0 && sdcard::playbackHasNext()) {
 313:src/MightyBoard/Motherboard/Command.cc **** 			sd_count++;
 1491              	 .loc 1 313 0 discriminator 1
 1492 003e 40F20005 	 movw r5,#:lower16:.LANCHOR6
 1493 0042 C0F20005 	 movt r5,#:upper16:.LANCHOR6
 1494              	.LBB423:
 1495              	.LBB418:
  62:src/MightyBoard/shared/CircularBuffer.hh **** 			overflow = true;
 1496              	 .loc 2 62 0 discriminator 1
 1497 0046 4FF00106 	 mov r6,#1
 1498              	.L145:
 1499              	.LVL115:
 1500              	.LBE418:
 1501              	.LBE423:
 1502              	.LBB424:
 1503              	.LBB422:
  96:src/MightyBoard/shared/CircularBuffer.hh **** 		return size - length;
 1504              	 .loc 2 96 0 discriminator 1
 1505 004a 6388     	 ldrh r3,[r4,#2]
 1506 004c 9BB2     	 uxth r3,r3
 1507              	.LBE422:
 1508              	.LBE424:
 312:src/MightyBoard/Motherboard/Command.cc **** 		while (command_buffer.getRemainingCapacity() > 0 && sdcard::playbackHasNext()) {
 1509              	 .loc 1 312 0 discriminator 1
 1510 004e 2288     	 ldrh r2,[r4,#0]
 1511 0050 9A42     	 cmp r2,r3
 1512 0052 00F08485 	 beq .L70
 312:src/MightyBoard/Motherboard/Command.cc **** 		while (command_buffer.getRemainingCapacity() > 0 && sdcard::playbackHasNext()) {
 1513              	 .loc 1 312 0 is_stmt 0 discriminator 2
 1514 0056 FFF7FEFF 	 bl _ZN6sdcard15playbackHasNextEv
 1515 005a 0028     	 cmp r0,#0
 1516 005c 00F07F85 	 beq .L70
 1517              	 .loc 1 313 0 is_stmt 1 discriminator 5
 1518 0060 2B68     	 ldr r3,[r5,#0]
 1519 0062 03F10103 	 add r3,r3,#1
 1520 0066 2B60     	 str r3,[r5,#0]
 314:src/MightyBoard/Motherboard/Command.cc **** 			command_buffer.push(sdcard::playbackNext());
 1521              	 .loc 1 314 0 discriminator 5
 1522 0068 FFF7FEFF 	 bl _ZN6sdcard12playbackNextEv
 1523              	.LVL116:
 1524              	.LBB425:
 1525              	.LBB419:
  58:src/MightyBoard/shared/CircularBuffer.hh **** 		if (length < size) {
 1526              	 .loc 2 58 0 discriminator 5
 1527 006c 6288     	 ldrh r2,[r4,#2]
 1528 006e 92B2     	 uxth r2,r2
 1529 0070 2388     	 ldrh r3,[r4,#0]
 1530 0072 9A42     	 cmp r2,r3
 1531 0074 CBD3     	 bcc .L71
 1532 0076 DCE7     	 b .L149
 1533              	.LVL117:
 1534              	.L133:
 1535              	.LBE419:
 1536              	.LBE425:
 315:src/MightyBoard/Motherboard/Command.cc **** 		}
 316:src/MightyBoard/Motherboard/Command.cc **** 		if(!sdcard::playbackHasNext() && (sd_count < sdcard::getFileSize()) && !sdcard_reset){
 1537              	 .loc 1 316 0 discriminator 1
 1538 0078 FFF7FEFF 	 bl _ZN6sdcard11getFileSizeEv
 1539 007c 40F20003 	 movw r3,#:lower16:.LANCHOR6
 1540 0080 C0F20003 	 movt r3,#:upper16:.LANCHOR6
 1541 0084 1B68     	 ldr r3,[r3,#0]
 1542 0086 9842     	 cmp r0,r3
 1543 0088 40F26E85 	 bls .L73
 1544              	 .loc 1 316 0 is_stmt 0 discriminator 3
 1545 008c 40F20003 	 movw r3,#:lower16:.LANCHOR7
 1546 0090 C0F20003 	 movt r3,#:upper16:.LANCHOR7
 1547 0094 1B78     	 ldrb r3,[r3,#0]
 1548 0096 002B     	 cmp r3,#0
 1549 0098 40F06685 	 bne .L73
 317:src/MightyBoard/Motherboard/Command.cc **** 			
 318:src/MightyBoard/Motherboard/Command.cc **** //			Motherboard::getBoard().getInterfaceBoard().resetLCD();
 319:src/MightyBoard/Motherboard/Command.cc **** 			Motherboard::getBoard().errorResponse(STATICFAIL_MSG);
 1550              	 .loc 1 319 0 is_stmt 1 discriminator 5
 1551 009c 40F20000 	 movw r0,#:lower16:_ZN11Motherboard11motherboardE
 1552 00a0 C0F20000 	 movt r0,#:upper16:_ZN11Motherboard11motherboardE
 1553 00a4 40F20001 	 movw r1,#:lower16:.LC0
 1554 00a8 C0F20001 	 movt r1,#:upper16:.LC0
 1555 00ac 4FF00002 	 mov r2,#0
 1556 00b0 FFF7FEFF 	 bl _ZN11Motherboard13errorResponseEPcb
 320:src/MightyBoard/Motherboard/Command.cc **** 			sdcard_reset = true;
 1557              	 .loc 1 320 0 discriminator 5
 1558 00b4 40F20003 	 movw r3,#:lower16:.LANCHOR7
 1559 00b8 C0F20003 	 movt r3,#:upper16:.LANCHOR7
 1560 00bc 4FF00102 	 mov r2,#1
 1561 00c0 1A70     	 strb r2,[r3,#0]
 1562 00c2 08E0     	 b .L68
 1563              	.L134:
 1564              	.LVL118:
 1565              	.LBB426:
 1566              	.LBB427:
 101:src/MightyBoard/shared/CircularBuffer.hh **** 		return length == 0;
 1567              	 .loc 2 101 0
 1568 00c4 40F20003 	 movw r3,#:lower16:.LANCHOR0
 1569 00c8 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 1570 00cc 5B88     	 ldrh r3,[r3,#2]
 1571 00ce 9BB2     	 uxth r3,r3
 1572              	.LBE427:
 1573              	.LBE426:
 321:src/MightyBoard/Motherboard/Command.cc **** 			/// do the sd card initialization files
 322:src/MightyBoard/Motherboard/Command.cc **** 			//command_buffer.reset();
 323:src/MightyBoard/Motherboard/Command.cc **** 			//sdcard::startPlayback(host::getBuildName());
 324:src/MightyBoard/Motherboard/Command.cc **** 			//uint32_t count;
 325:src/MightyBoard/Motherboard/Command.cc **** 			//while(count < sd_count){
 326:src/MightyBoard/Motherboard/Command.cc **** 			//	sdcard::playbackNext();
 327:src/MightyBoard/Motherboard/Command.cc **** 			//}
 328:src/MightyBoard/Motherboard/Command.cc **** 		}else if(!sdcard::playbackHasNext() && command_buffer.isEmpty()){
 1574              	 .loc 1 328 0
 1575 00d0 0BB9     	 cbnz r3,.L68
 329:src/MightyBoard/Motherboard/Command.cc **** 			sdcard::finishPlayback();
 1576              	 .loc 1 329 0
 1577 00d2 FFF7FEFF 	 bl _ZN6sdcard14finishPlaybackEv
 1578              	.LVL119:
 1579              	.L68:
 330:src/MightyBoard/Motherboard/Command.cc **** 		}
 331:src/MightyBoard/Motherboard/Command.cc **** 	}
 332:src/MightyBoard/Motherboard/Command.cc ****     // get command from onboard script if building from onboard
 333:src/MightyBoard/Motherboard/Command.cc **** 	if(utility::isPlaying()){		
 1580              	 .loc 1 333 0
 1581 00d6 FFF7FEFF 	 bl _ZN7utility9isPlayingEv
 1582 00da A0B9     	 cbnz r0,.L140
 1583 00dc 35E0     	 b .L75
 1584              	.LVL120:
 1585              	.L78:
 1586              	.LBB428:
 1587              	.LBB429:
  59:src/MightyBoard/shared/CircularBuffer.hh **** 			operator[](length) = b;
 1588              	 .loc 2 59 0
 1589 00de 6188     	 ldrh r1,[r4,#2]
 1590 00e0 89B2     	 uxth r1,r1
 1591              	.LVL121:
 1592              	.LBB430:
 1593              	.LBB431:
 105:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufSizeType actual_index = (index + start) % size;
 1594              	 .loc 2 105 0
 1595 00e2 A288     	 ldrh r2,[r4,#4]
 1596 00e4 92B2     	 uxth r2,r2
 1597              	.LVL122:
 1598 00e6 8A18     	 adds r2,r1,r2
 1599              	.LVL123:
 1600 00e8 92FBF3F1 	 sdiv r1,r2,r3
 1601              	.LVL124:
 1602 00ec 03FB1123 	 mls r3,r3,r1,r2
 1603              	 .loc 2 106 0
 1604 00f0 9BB2     	 uxth r3,r3
 1605              	.LBE431:
 1606              	.LBE430:
  59:src/MightyBoard/shared/CircularBuffer.hh **** 			operator[](length) = b;
 1607              	 .loc 2 59 0
 1608 00f2 A268     	 ldr r2,[r4,#8]
 1609 00f4 D054     	 strb r0,[r2,r3]
  60:src/MightyBoard/shared/CircularBuffer.hh **** 			length++;
 1610              	 .loc 2 60 0
 1611 00f6 6388     	 ldrh r3,[r4,#2]
 1612 00f8 03F10103 	 add r3,r3,#1
 1613 00fc 9BB2     	 uxth r3,r3
 1614 00fe 6380     	 strh r3,[r4,#2]
 1615 0100 07E0     	 b .L147
 1616              	.LVL125:
 1617              	.L150:
  62:src/MightyBoard/shared/CircularBuffer.hh **** 			overflow = true;
 1618              	 .loc 2 62 0
 1619 0102 2573     	 strb r5,[r4,#12]
 1620 0104 05E0     	 b .L147
 1621              	.LVL126:
 1622              	.L140:
 1623              	.LBE429:
 1624              	.LBE428:
 1625              	.LBB434:
 1626              	.LBB435:
  96:src/MightyBoard/shared/CircularBuffer.hh **** 		return size - length;
 1627              	 .loc 2 96 0 discriminator 1
 1628 0106 40F20004 	 movw r4,#:lower16:.LANCHOR0
 1629 010a C0F20004 	 movt r4,#:upper16:.LANCHOR0
 1630              	.LBE435:
 1631              	.LBE434:
 1632              	.LBB437:
 1633              	.LBB432:
  62:src/MightyBoard/shared/CircularBuffer.hh **** 			overflow = true;
 1634              	 .loc 2 62 0 discriminator 1
 1635 010e 4FF00105 	 mov r5,#1
 1636              	.L147:
 1637              	.LVL127:
 1638              	.LBE432:
 1639              	.LBE437:
 1640              	.LBB438:
 1641              	.LBB436:
  96:src/MightyBoard/shared/CircularBuffer.hh **** 		return size - length;
 1642              	 .loc 2 96 0 discriminator 1
 1643 0112 6388     	 ldrh r3,[r4,#2]
 1644 0114 9BB2     	 uxth r3,r3
 1645              	.LBE436:
 1646              	.LBE438:
 334:src/MightyBoard/Motherboard/Command.cc **** 		while (command_buffer.getRemainingCapacity() > 0 && utility::playbackHasNext()){
 1647              	 .loc 1 334 0 discriminator 1
 1648 0116 2288     	 ldrh r2,[r4,#0]
 1649 0118 9A42     	 cmp r2,r3
 1650 011a 00F02C85 	 beq .L77
 1651              	 .loc 1 334 0 is_stmt 0 discriminator 2
 1652 011e FFF7FEFF 	 bl _ZN7utility15playbackHasNextEv
 1653 0122 0028     	 cmp r0,#0
 1654 0124 00F02785 	 beq .L77
 335:src/MightyBoard/Motherboard/Command.cc **** 			command_buffer.push(utility::playbackNext());
 1655              	 .loc 1 335 0 is_stmt 1 discriminator 5
 1656 0128 FFF7FEFF 	 bl _ZN7utility12playbackNextEv
 1657              	.LVL128:
 1658              	.LBB439:
 1659              	.LBB433:
  58:src/MightyBoard/shared/CircularBuffer.hh **** 		if (length < size) {
 1660              	 .loc 2 58 0 discriminator 5
 1661 012c 6288     	 ldrh r2,[r4,#2]
 1662 012e 92B2     	 uxth r2,r2
 1663 0130 2388     	 ldrh r3,[r4,#0]
 1664 0132 9A42     	 cmp r2,r3
 1665 0134 D3D3     	 bcc .L78
 1666 0136 E4E7     	 b .L150
 1667              	.LVL129:
 1668              	.L135:
 1669              	.LBE433:
 1670              	.LBE439:
 1671              	.LBB440:
 1672              	.LBB441:
 101:src/MightyBoard/shared/CircularBuffer.hh **** 		return length == 0;
 1673              	 .loc 2 101 0
 1674 0138 40F20003 	 movw r3,#:lower16:.LANCHOR0
 1675 013c C0F20003 	 movt r3,#:upper16:.LANCHOR0
 1676 0140 5B88     	 ldrh r3,[r3,#2]
 1677 0142 9BB2     	 uxth r3,r3
 1678              	.LBE441:
 1679              	.LBE440:
 336:src/MightyBoard/Motherboard/Command.cc **** 		}
 337:src/MightyBoard/Motherboard/Command.cc **** 		if(!utility::playbackHasNext() && command_buffer.isEmpty()){
 1680              	 .loc 1 337 0
 1681 0144 0BB9     	 cbnz r3,.L75
 338:src/MightyBoard/Motherboard/Command.cc **** 			utility::finishPlayback();
 1682              	 .loc 1 338 0
 1683 0146 FFF7FEFF 	 bl _ZN7utility14finishPlaybackEv
 1684              	.LVL130:
 1685              	.L75:
 339:src/MightyBoard/Motherboard/Command.cc **** 		}
 340:src/MightyBoard/Motherboard/Command.cc **** 	}
 341:src/MightyBoard/Motherboard/Command.cc **** 	
 342:src/MightyBoard/Motherboard/Command.cc **** 	// if printer is not waiting for tool or platform to heat, we need to make
 343:src/MightyBoard/Motherboard/Command.cc **** 	// sure the extruders are not in a paused state.  this is relevant when 
 344:src/MightyBoard/Motherboard/Command.cc **** 	// heating using the control panel in desktop software
 345:src/MightyBoard/Motherboard/Command.cc **** 	if(check_temp_state){
 1686              	 .loc 1 345 0
 1687 014a 40F20003 	 movw r3,#:lower16:.LANCHOR5
 1688 014e C0F20003 	 movt r3,#:upper16:.LANCHOR5
 1689 0152 1B78     	 ldrb r3,[r3,#0]
 1690 0154 B3B1     	 cbz r3,.L80
 1691              	.LVL131:
 346:src/MightyBoard/Motherboard/Command.cc **** 		if (Motherboard::getBoard().getPlatformHeater().has_reached_target_temperature()){
 1692              	 .loc 1 346 0
 1693 0156 B048     	 ldr r0,.L151
 1694 0158 FFF7FEFF 	 bl _ZN6Heater30has_reached_target_temperatureEv
 1695 015c 90B1     	 cbz r0,.L80
 1696              	.LVL132:
 347:src/MightyBoard/Motherboard/Command.cc **** 			// unpause extruder heaters in case they are paused
 348:src/MightyBoard/Motherboard/Command.cc **** 			Motherboard::getBoard().getExtruderBoard(0).getExtruderHeater().Pause(false);
 1697              	 .loc 1 348 0
 1698 015e AF4C     	 ldr r4,.L151+4
 1699 0160 2046     	 mov r0,r4
 1700 0162 4FF00001 	 mov r1,#0
 1701 0166 FFF7FEFF 	 bl _ZN6Heater5PauseEb
 1702              	.LVL133:
 349:src/MightyBoard/Motherboard/Command.cc **** 			Motherboard::getBoard().getExtruderBoard(1).getExtruderHeater().Pause(false);
 1703              	 .loc 1 349 0
 1704 016a 04F1E000 	 add r0,r4,#224
 1705 016e 4FF00001 	 mov r1,#0
 1706 0172 FFF7FEFF 	 bl _ZN6Heater5PauseEb
 350:src/MightyBoard/Motherboard/Command.cc **** 			check_temp_state = false;
 1707              	 .loc 1 350 0
 1708 0176 40F20003 	 movw r3,#:lower16:.LANCHOR5
 1709 017a C0F20003 	 movt r3,#:upper16:.LANCHOR5
 1710 017e 4FF00002 	 mov r2,#0
 1711 0182 1A70     	 strb r2,[r3,#0]
 1712              	.LVL134:
 1713              	.L80:
 351:src/MightyBoard/Motherboard/Command.cc **** 		}
 352:src/MightyBoard/Motherboard/Command.cc **** 	}
 353:src/MightyBoard/Motherboard/Command.cc **** 	// don't execute commands if paused or shutdown because of heater failure
 354:src/MightyBoard/Motherboard/Command.cc **** 	if (paused || heat_shutdown) {	return; }
 1714              	 .loc 1 354 0
 1715 0184 40F20003 	 movw r3,#:lower16:.LANCHOR1
 1716 0188 C0F20003 	 movt r3,#:upper16:.LANCHOR1
 1717 018c 1B78     	 ldrb r3,[r3,#0]
 1718 018e 002B     	 cmp r3,#0
 1719 0190 40F0F884 	 bne .L66
 1720              	 .loc 1 354 0 is_stmt 0 discriminator 2
 1721 0194 40F20003 	 movw r3,#:lower16:.LANCHOR2
 1722 0198 C0F20003 	 movt r3,#:upper16:.LANCHOR2
 1723 019c 1B78     	 ldrb r3,[r3,#0]
 1724 019e 002B     	 cmp r3,#0
 1725 01a0 40F0F084 	 bne .L66
 355:src/MightyBoard/Motherboard/Command.cc ****     
 356:src/MightyBoard/Motherboard/Command.cc **** 	if (mode == HOMING) {
 1726              	 .loc 1 356 0 is_stmt 1
 1727 01a4 40F20003 	 movw r3,#:lower16:.LANCHOR3
 1728 01a8 C0F20003 	 movt r3,#:upper16:.LANCHOR3
 1729 01ac 1B78     	 ldrb r3,[r3,#0]
 1730 01ae 032B     	 cmp r3,#3
 1731 01b0 1BD1     	 bne .L82
 357:src/MightyBoard/Motherboard/Command.cc **** //		xprintf("HOMING" " (%s:%d)\n",_F_,_L_);
 358:src/MightyBoard/Motherboard/Command.cc **** 		if (!steppers::isRunning()) {
 1732              	 .loc 1 358 0
 1733 01b2 FFF7FEFF 	 bl _ZN8steppers9isRunningEv
 1734 01b6 38B9     	 cbnz r0,.L83
 359:src/MightyBoard/Motherboard/Command.cc **** 			mode = READY;
 1735              	 .loc 1 359 0
 1736 01b8 40F20003 	 movw r3,#:lower16:.LANCHOR3
 1737 01bc C0F20003 	 movt r3,#:upper16:.LANCHOR3
 1738 01c0 4FF00002 	 mov r2,#0
 1739 01c4 1A70     	 strb r2,[r3,#0]
 1740 01c6 5CE0     	 b .L85
 1741              	.L83:
 360:src/MightyBoard/Motherboard/Command.cc **** 		} else if (homing_timeout.hasElapsed()) {
 1742              	 .loc 1 360 0
 1743 01c8 40F20000 	 movw r0,#:lower16:.LANCHOR8
 1744 01cc C0F20000 	 movt r0,#:upper16:.LANCHOR8
 1745 01d0 FFF7FEFF 	 bl _ZN7Timeout10hasElapsedEv
 1746 01d4 48B1     	 cbz r0,.L82
 361:src/MightyBoard/Motherboard/Command.cc **** 			planner::abort();
 1747              	 .loc 1 361 0
 1748 01d6 FFF7FEFF 	 bl _ZN7planner5abortEv
 362:src/MightyBoard/Motherboard/Command.cc **** 			mode = READY;
 1749              	 .loc 1 362 0
 1750 01da 40F20003 	 movw r3,#:lower16:.LANCHOR3
 1751 01de C0F20003 	 movt r3,#:upper16:.LANCHOR3
 1752 01e2 4FF00002 	 mov r2,#0
 1753 01e6 1A70     	 strb r2,[r3,#0]
 1754 01e8 4BE0     	 b .L85
 1755              	.L82:
 1756              	.LBB442:
 363:src/MightyBoard/Motherboard/Command.cc **** 		}
 364:src/MightyBoard/Motherboard/Command.cc **** 	}
 365:src/MightyBoard/Motherboard/Command.cc **** 	if (mode == MOVING) {
 1757              	 .loc 1 365 0
 1758 01ea 40F20003 	 movw r3,#:lower16:.LANCHOR3
 1759 01ee C0F20003 	 movt r3,#:upper16:.LANCHOR3
 1760 01f2 1B78     	 ldrb r3,[r3,#0]
 1761 01f4 012B     	 cmp r3,#1
 1762 01f6 44D1     	 bne .L85
 1763              	.LBB443:
 366:src/MightyBoard/Motherboard/Command.cc **** //		xprintf("1");
 367:src/MightyBoard/Motherboard/Command.cc **** //		xprintf("12" " (%s:%d)\n",_F_,_L_);
 368:src/MightyBoard/Motherboard/Command.cc **** 		if (!steppers::isRunning()) {
 1764              	 .loc 1 368 0
 1765 01f8 FFF7FEFF 	 bl _ZN8steppers9isRunningEv
 1766 01fc 38B9     	 cbnz r0,.L86
 369:src/MightyBoard/Motherboard/Command.cc **** //			xprintf("2");
 370:src/MightyBoard/Motherboard/Command.cc **** //			xprintf("13" " (%s:%d)\n",_F_,_L_);
 371:src/MightyBoard/Motherboard/Command.cc **** 			mode = READY;
 1767              	 .loc 1 371 0
 1768 01fe 40F20003 	 movw r3,#:lower16:.LANCHOR3
 1769 0202 C0F20003 	 movt r3,#:upper16:.LANCHOR3
 1770 0206 4FF00002 	 mov r2,#0
 1771 020a 1A70     	 strb r2,[r3,#0]
 1772 020c A3E0     	 b .L87
 1773              	.L86:
 1774              	.LVL135:
 1775              	.LBB444:
 1776              	.LBB445:
 1777              	.LBB446:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 1778              	 .loc 2 91 0
 1779 020e 40F20003 	 movw r3,#:lower16:.LANCHOR0
 1780 0212 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 1781 0216 5B88     	 ldrh r3,[r3,#2]
 1782 0218 9BB2     	 uxth r3,r3
 1783              	.LBE446:
 1784              	.LBE445:
 372:src/MightyBoard/Motherboard/Command.cc **** 		} else {
 373:src/MightyBoard/Motherboard/Command.cc **** //			xprintf("3");
 374:src/MightyBoard/Motherboard/Command.cc **** //			xprintf("13" " (%s:%d)\n",_F_,_L_);
 375:src/MightyBoard/Motherboard/Command.cc **** 			if (command_buffer.getLength() > 0) {
 1785              	 .loc 1 375 0
 1786 021a 002B     	 cmp r3,#0
 1787 021c 31D0     	 beq .L85
 1788              	.LBB447:
 376:src/MightyBoard/Motherboard/Command.cc **** 				Motherboard::getBoard().resetUserInputTimeout();
 1789              	 .loc 1 376 0
 1790 021e 40F20000 	 movw r0,#:lower16:_ZN11Motherboard11motherboardE
 1791 0222 C0F20000 	 movt r0,#:upper16:_ZN11Motherboard11motherboardE
 1792 0226 FFF7FEFF 	 bl _ZN11Motherboard21resetUserInputTimeoutEv
 1793              	.LVL136:
 1794              	.LBB448:
 1795              	.LBB449:
 105:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufSizeType actual_index = (index + start) % size;
 1796              	 .loc 2 105 0
 1797 022a 40F20003 	 movw r3,#:lower16:.LANCHOR0
 1798 022e C0F20003 	 movt r3,#:upper16:.LANCHOR0
 1799 0232 9988     	 ldrh r1,[r3,#4]
 1800 0234 89B2     	 uxth r1,r1
 1801              	.LVL137:
 1802 0236 1A88     	 ldrh r2,[r3,#0]
 1803 0238 91FBF2F0 	 sdiv r0,r1,r2
 1804 023c 02FB1012 	 mls r2,r2,r0,r1
 1805              	 .loc 2 106 0
 1806 0240 92B2     	 uxth r2,r2
 1807              	.LBE449:
 1808              	.LBE448:
 377:src/MightyBoard/Motherboard/Command.cc **** 				uint8_t command = command_buffer[0];
 1809              	 .loc 1 377 0
 1810 0242 9B68     	 ldr r3,[r3,#8]
 1811 0244 9B5C     	 ldrb r3,[r3,r2]
 1812              	.LVL138:
 1813 0246 8DF81F30 	 strb r3,[sp,#31]
 1814              	.LBB450:
 378:src/MightyBoard/Motherboard/Command.cc **** 				if (command == HOST_CMD_QUEUE_POINT_EXT || command == HOST_CMD_QUEUE_POINT_NEW) {
 1815              	 .loc 1 378 0
 1816 024a 8E2B     	 cmp r3,#142
 1817 024c 14BF     	 ite ne
 1818 024e 0022     	 movne r2,#0
 1819 0250 0122     	 moveq r2,#1
 1820 0252 8B2B     	 cmp r3,#139
 1821 0254 08BF     	 it eq
 1822 0256 42F00102 	 orreq r2,r2,#1
 1823 025a 22B1     	 cbz r2,.L88
 379:src/MightyBoard/Motherboard/Command.cc **** //					xprintf("command == HOST_CMD_QUEUE_POINT_EXT || command == HOST_CMD_QUEUE_POINT_NEW" " (%s:%
 380:src/MightyBoard/Motherboard/Command.cc **** 					handleMovementCommand(command);
 1824              	 .loc 1 380 0
 1825 025c 0DF11F00 	 add r0,sp,#31
 1826 0260 FFF7FEFF 	 bl _ZN7commandL21handleMovementCommandERKh
 1827              	.LVL139:
 1828 0264 0DE0     	 b .L85
 1829              	.LVL140:
 1830              	.L88:
 1831              	.LBB451:
 381:src/MightyBoard/Motherboard/Command.cc **** 				}
 382:src/MightyBoard/Motherboard/Command.cc **** 				else if (command == HOST_CMD_ENABLE_AXES) {
 1832              	 .loc 1 382 0
 1833 0266 892B     	 cmp r3,#137
 1834 0268 0BD1     	 bne .L85
 1835              	.LVL141:
 1836              	.LBB452:
 1837              	.LBB453:
 1838              	.LBB454:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 1839              	 .loc 2 91 0
 1840 026a 40F20003 	 movw r3,#:lower16:.LANCHOR0
 1841 026e C0F20003 	 movt r3,#:upper16:.LANCHOR0
 1842 0272 5B88     	 ldrh r3,[r3,#2]
 1843 0274 9BB2     	 uxth r3,r3
 1844              	.LBE454:
 1845              	.LBE453:
 383:src/MightyBoard/Motherboard/Command.cc **** 					if (command_buffer.getLength() >= 2) {
 1846              	 .loc 1 383 0
 1847 0276 012B     	 cmp r3,#1
 1848 0278 03D9     	 bls .L85
 1849              	.LBB455:
 384:src/MightyBoard/Motherboard/Command.cc **** 						pop8(); // remove the command code
 1850              	 .loc 1 384 0
 1851 027a FFF7FEFF 	 bl _ZN7command4pop8Ev
 1852              	.LVL142:
 385:src/MightyBoard/Motherboard/Command.cc **** 						uint8_t axes = pop8();
 1853              	 .loc 1 385 0
 1854 027e FFF7FEFF 	 bl _ZN7command4pop8Ev
 1855              	.LVL143:
 1856              	.L85:
 1857              	.LBE455:
 1858              	.LBE452:
 1859              	.LBE451:
 1860              	.LBE450:
 1861              	.LBE447:
 1862              	.LBE444:
 1863              	.LBE443:
 1864              	.LBE442:
 386:src/MightyBoard/Motherboard/Command.cc **** 						}
 387:src/MightyBoard/Motherboard/Command.cc **** 				}
 388:src/MightyBoard/Motherboard/Command.cc **** 			}
 389:src/MightyBoard/Motherboard/Command.cc **** 		}
 390:src/MightyBoard/Motherboard/Command.cc **** 	}
 391:src/MightyBoard/Motherboard/Command.cc **** 	if (mode == DELAY) {
 1865              	 .loc 1 391 0
 1866 0282 40F20003 	 movw r3,#:lower16:.LANCHOR3
 1867 0286 C0F20003 	 movt r3,#:upper16:.LANCHOR3
 1868 028a 1B78     	 ldrb r3,[r3,#0]
 1869 028c 022B     	 cmp r3,#2
 1870 028e 0ED1     	 bne .L89
 392:src/MightyBoard/Motherboard/Command.cc **** 		// check timers
 393:src/MightyBoard/Motherboard/Command.cc **** 		if (delay_timeout.hasElapsed()) {
 1871              	 .loc 1 393 0
 1872 0290 40F20000 	 movw r0,#:lower16:.LANCHOR9
 1873 0294 C0F20000 	 movt r0,#:upper16:.LANCHOR9
 1874 0298 FFF7FEFF 	 bl _ZN7Timeout10hasElapsedEv
 1875 029c 38B1     	 cbz r0,.L89
 394:src/MightyBoard/Motherboard/Command.cc **** 			mode = READY;
 1876              	 .loc 1 394 0
 1877 029e 40F20003 	 movw r3,#:lower16:.LANCHOR3
 1878 02a2 C0F20003 	 movt r3,#:upper16:.LANCHOR3
 1879 02a6 4FF00002 	 mov r2,#0
 1880 02aa 1A70     	 strb r2,[r3,#0]
 1881 02ac 8DE0     	 b .L90
 1882              	.L89:
 395:src/MightyBoard/Motherboard/Command.cc **** 		}
 396:src/MightyBoard/Motherboard/Command.cc **** 	}
 397:src/MightyBoard/Motherboard/Command.cc **** 	if (mode == WAIT_ON_TOOL) {
 1883              	 .loc 1 397 0
 1884 02ae 40F20003 	 movw r3,#:lower16:.LANCHOR3
 1885 02b2 C0F20003 	 movt r3,#:upper16:.LANCHOR3
 1886 02b6 1B78     	 ldrb r3,[r3,#0]
 1887 02b8 042B     	 cmp r3,#4
 1888 02ba 4CD1     	 bne .L87
 398:src/MightyBoard/Motherboard/Command.cc **** 		if(tool_wait_timeout.hasElapsed()){
 1889              	 .loc 1 398 0
 1890 02bc 40F20000 	 movw r0,#:lower16:.LANCHOR10
 1891 02c0 C0F20000 	 movt r0,#:upper16:.LANCHOR10
 1892 02c4 FFF7FEFF 	 bl _ZN7Timeout10hasElapsedEv
 1893 02c8 98B1     	 cbz r0,.L91
 399:src/MightyBoard/Motherboard/Command.cc **** 			Motherboard::getBoard().errorResponse("I timed out while   attempting to heat  my extruder."); 
 1894              	 .loc 1 399 0
 1895 02ca 40F20000 	 movw r0,#:lower16:_ZN11Motherboard11motherboardE
 1896 02ce C0F20000 	 movt r0,#:upper16:_ZN11Motherboard11motherboardE
 1897 02d2 40F20001 	 movw r1,#:lower16:.LC1
 1898 02d6 C0F20001 	 movt r1,#:upper16:.LC1
 1899 02da 4FF00002 	 mov r2,#0
 1900 02de FFF7FEFF 	 bl _ZN11Motherboard13errorResponseEPcb
 400:src/MightyBoard/Motherboard/Command.cc **** 			mode = READY;		
 1901              	 .loc 1 400 0
 1902 02e2 40F20003 	 movw r3,#:lower16:.LANCHOR3
 1903 02e6 C0F20003 	 movt r3,#:upper16:.LANCHOR3
 1904 02ea 4FF00002 	 mov r2,#0
 1905 02ee 1A70     	 strb r2,[r3,#0]
 1906 02f0 6BE0     	 b .L90
 1907              	.L91:
 1908              	.LVL144:
 1909              	.LBB456:
 1910              	.LBB457:
 1911              	 .loc 3 62 0
 1912 02f2 40F20003 	 movw r3,#:lower16:.LANCHOR11
 1913 02f6 C0F20003 	 movt r3,#:upper16:.LANCHOR11
 1914 02fa 1878     	 ldrb r0,[r3,#0]
 1915 02fc 484B     	 ldr r3,.L151+8
 1916 02fe A3F1E002 	 sub r2,r3,#224
 1917 0302 0128     	 cmp r0,#1
 1918 0304 14BF     	 ite ne
 1919 0306 1046     	 movne r0,r2
 1920 0308 1846     	 moveq r0,r3
 1921              	.LVL145:
 1922              	.LBE457:
 1923              	.LBE456:
 401:src/MightyBoard/Motherboard/Command.cc **** 		}
 402:src/MightyBoard/Motherboard/Command.cc **** 		else if(!Motherboard::getBoard().getExtruderBoard(currentToolIndex).getExtruderHeater().isHeating
 1924              	 .loc 1 402 0
 1925 030a 00F12800 	 add r0,r0,#40
 1926              	.LVL146:
 1927 030e FFF7FEFF 	 bl _ZN6Heater9isHeatingEv
 1928              	.LVL147:
 1929 0312 38B9     	 cbnz r0,.L94
 403:src/MightyBoard/Motherboard/Command.cc **** 			mode = READY;
 1930              	 .loc 1 403 0
 1931 0314 40F20003 	 movw r3,#:lower16:.LANCHOR3
 1932 0318 C0F20003 	 movt r3,#:upper16:.LANCHOR3
 1933 031c 4FF00002 	 mov r2,#0
 1934 0320 1A70     	 strb r2,[r3,#0]
 1935 0322 52E0     	 b .L90
 1936              	.L94:
 1937              	.LVL148:
 1938              	.LBB458:
 1939              	.LBB459:
 1940              	 .loc 3 62 0
 1941 0324 40F20003 	 movw r3,#:lower16:.LANCHOR11
 1942 0328 C0F20003 	 movt r3,#:upper16:.LANCHOR11
 1943 032c 1878     	 ldrb r0,[r3,#0]
 1944 032e 3C4B     	 ldr r3,.L151+8
 1945 0330 A3F1E002 	 sub r2,r3,#224
 1946 0334 0128     	 cmp r0,#1
 1947 0336 14BF     	 ite ne
 1948 0338 1046     	 movne r0,r2
 1949 033a 1846     	 moveq r0,r3
 1950              	.LVL149:
 1951              	.LBE459:
 1952              	.LBE458:
 404:src/MightyBoard/Motherboard/Command.cc **** 		}else if( Motherboard::getBoard().getExtruderBoard(currentToolIndex).getExtruderHeater().has_reac
 1953              	 .loc 1 404 0
 1954 033c 00F12800 	 add r0,r0,#40
 1955              	.LVL150:
 1956 0340 FFF7FEFF 	 bl _ZN6Heater30has_reached_target_temperatureEv
 1957              	.LVL151:
 1958 0344 38B1     	 cbz r0,.L87
 405:src/MightyBoard/Motherboard/Command.cc ****             mode = READY;
 1959              	 .loc 1 405 0
 1960 0346 40F20003 	 movw r3,#:lower16:.LANCHOR3
 1961 034a C0F20003 	 movt r3,#:upper16:.LANCHOR3
 1962 034e 4FF00002 	 mov r2,#0
 1963 0352 1A70     	 strb r2,[r3,#0]
 1964 0354 39E0     	 b .L90
 1965              	.LVL152:
 1966              	.L87:
 406:src/MightyBoard/Motherboard/Command.cc **** 		}
 407:src/MightyBoard/Motherboard/Command.cc **** 	}
 408:src/MightyBoard/Motherboard/Command.cc **** 	if (mode == WAIT_ON_PLATFORM) {
 1967              	 .loc 1 408 0
 1968 0356 40F20003 	 movw r3,#:lower16:.LANCHOR3
 1969 035a C0F20003 	 movt r3,#:upper16:.LANCHOR3
 1970 035e 1B78     	 ldrb r3,[r3,#0]
 1971 0360 052B     	 cmp r3,#5
 1972 0362 32D1     	 bne .L90
 409:src/MightyBoard/Motherboard/Command.cc **** 		if(tool_wait_timeout.hasElapsed()){
 1973              	 .loc 1 409 0
 1974 0364 40F20000 	 movw r0,#:lower16:.LANCHOR10
 1975 0368 C0F20000 	 movt r0,#:upper16:.LANCHOR10
 1976 036c FFF7FEFF 	 bl _ZN7Timeout10hasElapsedEv
 1977 0370 98B1     	 cbz r0,.L96
 410:src/MightyBoard/Motherboard/Command.cc **** 			Motherboard::getBoard().errorResponse("I timed out while   attempting to heat  my platform."); 
 1978              	 .loc 1 410 0
 1979 0372 40F20000 	 movw r0,#:lower16:_ZN11Motherboard11motherboardE
 1980 0376 C0F20000 	 movt r0,#:upper16:_ZN11Motherboard11motherboardE
 1981 037a 40F20001 	 movw r1,#:lower16:.LC2
 1982 037e C0F20001 	 movt r1,#:upper16:.LC2
 1983 0382 4FF00002 	 mov r2,#0
 1984 0386 FFF7FEFF 	 bl _ZN11Motherboard13errorResponseEPcb
 411:src/MightyBoard/Motherboard/Command.cc **** 			mode = READY;		
 1985              	 .loc 1 411 0
 1986 038a 40F20003 	 movw r3,#:lower16:.LANCHOR3
 1987 038e C0F20003 	 movt r3,#:upper16:.LANCHOR3
 1988 0392 4FF00002 	 mov r2,#0
 1989 0396 1A70     	 strb r2,[r3,#0]
 1990 0398 44E0     	 b .L99
 1991              	.L96:
 1992              	.LVL153:
 412:src/MightyBoard/Motherboard/Command.cc **** 		} else if (!Motherboard::getBoard().getPlatformHeater().isHeating()){
 1993              	 .loc 1 412 0
 1994 039a 1F48     	 ldr r0,.L151
 1995 039c FFF7FEFF 	 bl _ZN6Heater9isHeatingEv
 1996 03a0 38B9     	 cbnz r0,.L98
 413:src/MightyBoard/Motherboard/Command.cc **** 			mode = READY;
 1997              	 .loc 1 413 0
 1998 03a2 40F20003 	 movw r3,#:lower16:.LANCHOR3
 1999 03a6 C0F20003 	 movt r3,#:upper16:.LANCHOR3
 2000 03aa 4FF00002 	 mov r2,#0
 2001 03ae 1A70     	 strb r2,[r3,#0]
 2002 03b0 38E0     	 b .L99
 2003              	.L98:
 2004              	.LVL154:
 414:src/MightyBoard/Motherboard/Command.cc **** 		}
 415:src/MightyBoard/Motherboard/Command.cc **** 		else if(Motherboard::getBoard().getPlatformHeater().has_reached_target_temperature()){
 2005              	 .loc 1 415 0
 2006 03b2 1948     	 ldr r0,.L151
 2007 03b4 FFF7FEFF 	 bl _ZN6Heater30has_reached_target_temperatureEv
 2008 03b8 38B1     	 cbz r0,.L90
 416:src/MightyBoard/Motherboard/Command.cc ****             mode = READY;
 2009              	 .loc 1 416 0
 2010 03ba 40F20003 	 movw r3,#:lower16:.LANCHOR3
 2011 03be C0F20003 	 movt r3,#:upper16:.LANCHOR3
 2012 03c2 4FF00002 	 mov r2,#0
 2013 03c6 1A70     	 strb r2,[r3,#0]
 2014 03c8 2CE0     	 b .L99
 2015              	.LVL155:
 2016              	.L90:
 417:src/MightyBoard/Motherboard/Command.cc **** 		}
 418:src/MightyBoard/Motherboard/Command.cc **** 	}
 419:src/MightyBoard/Motherboard/Command.cc **** 	if (mode == WAIT_ON_BUTTON) {
 2017              	 .loc 1 419 0
 2018 03ca 40F20003 	 movw r3,#:lower16:.LANCHOR3
 2019 03ce C0F20003 	 movt r3,#:upper16:.LANCHOR3
 2020 03d2 1B78     	 ldrb r3,[r3,#0]
 2021 03d4 062B     	 cmp r3,#6
 2022 03d6 25D1     	 bne .L99
 420:src/MightyBoard/Motherboard/Command.cc **** 		if (button_wait_timeout.hasElapsed()) {
 2023              	 .loc 1 420 0
 2024 03d8 40F20000 	 movw r0,#:lower16:.LANCHOR12
 2025 03dc C0F20000 	 movt r0,#:upper16:.LANCHOR12
 2026 03e0 FFF7FEFF 	 bl _ZN7Timeout10hasElapsedEv
 2027 03e4 F0B1     	 cbz r0,.L99
 421:src/MightyBoard/Motherboard/Command.cc **** 			if (button_timeout_behavior & (1 << BUTTON_TIMEOUT_ABORT)) {
 2028              	 .loc 1 421 0
 2029 03e6 40F20003 	 movw r3,#:lower16:.LANCHOR13
 2030 03ea C0F20003 	 movt r3,#:upper16:.LANCHOR13
 2031 03ee 1B78     	 ldrb r3,[r3,#0]
 2032 03f0 13F0020F 	 tst r3,#2
 2033 03f4 08D0     	 beq .L100
 422:src/MightyBoard/Motherboard/Command.cc **** 				// Abort build!
 423:src/MightyBoard/Motherboard/Command.cc **** 				// We'll interpret this as a catastrophic situation
 424:src/MightyBoard/Motherboard/Command.cc **** 				// and do a full reset of the machine.
 425:src/MightyBoard/Motherboard/Command.cc **** 				Motherboard::getBoard().reset(false);
 2034              	 .loc 1 425 0
 2035 03f6 40F20000 	 movw r0,#:lower16:_ZN11Motherboard11motherboardE
 2036 03fa C0F20000 	 movt r0,#:upper16:_ZN11Motherboard11motherboardE
 2037 03fe 4FF00001 	 mov r1,#0
 2038 0402 FFF7FEFF 	 bl _ZN11Motherboard5resetEb
 2039 0406 0DE0     	 b .L99
 2040              	.L100:
 426:src/MightyBoard/Motherboard/Command.cc **** 
 427:src/MightyBoard/Motherboard/Command.cc **** 			} else {
 428:src/MightyBoard/Motherboard/Command.cc **** 				mode = READY;
 2041              	 .loc 1 428 0
 2042 0408 40F20003 	 movw r3,#:lower16:.LANCHOR3
 2043 040c C0F20003 	 movt r3,#:upper16:.LANCHOR3
 2044 0410 4FF00002 	 mov r2,#0
 2045 0414 1A70     	 strb r2,[r3,#0]
 2046 0416 0DE0     	 b .L101
 2047              	.L152:
 2048              	 .align 2
 2049              	.L151:
 2050 0418 0C020000 	 .word _ZN11Motherboard11motherboardE+524
 2051 041c 50000000 	 .word _ZN11Motherboard11motherboardE+80
 2052 0420 08010000 	 .word _ZN11Motherboard11motherboardE+264
 2053              	.L99:
 2054              	.LBB460:
 429:src/MightyBoard/Motherboard/Command.cc **** 			//	Motherboard::getBoard().interfaceBlink(0,0);
 430:src/MightyBoard/Motherboard/Command.cc **** 			}
 431:src/MightyBoard/Motherboard/Command.cc **** 		} else {
 432:src/MightyBoard/Motherboard/Command.cc **** 			// Check buttons
 433:src/MightyBoard/Motherboard/Command.cc **** //			InterfaceBoard& ib = Motherboard::getBoard().getInterfaceBoard();
 434:src/MightyBoard/Motherboard/Command.cc **** //			if (ib.buttonPushed()) {
 435:src/MightyBoard/Motherboard/Command.cc **** //				if(button_timeout_behavior & (1 << BUTTON_CLEAR_SCREEN))
 436:src/MightyBoard/Motherboard/Command.cc **** //					ib.popScreen();
 437:src/MightyBoard/Motherboard/Command.cc **** //				Motherboard::getBoard().interfaceBlink(0,0);
 438:src/MightyBoard/Motherboard/Command.cc **** //				RGB_LED::setDefaultColor();
 439:src/MightyBoard/Motherboard/Command.cc **** //				mode = READY;
 440:src/MightyBoard/Motherboard/Command.cc **** //			}
 441:src/MightyBoard/Motherboard/Command.cc **** 		}
 442:src/MightyBoard/Motherboard/Command.cc **** 	}
 443:src/MightyBoard/Motherboard/Command.cc **** 
 444:src/MightyBoard/Motherboard/Command.cc **** 	if (mode == READY) {
 2055              	 .loc 1 444 0
 2056 0424 40F20003 	 movw r3,#:lower16:.LANCHOR3
 2057 0428 C0F20003 	 movt r3,#:upper16:.LANCHOR3
 2058 042c 1B78     	 ldrb r3,[r3,#0]
 2059 042e 002B     	 cmp r3,#0
 2060 0430 40F08083 	 bne .L102
 2061              	.L101:
 2062              	.LVL156:
 2063              	.LBB461:
 2064              	.LBB462:
 2065              	.LBB463:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2066              	 .loc 2 91 0
 2067 0434 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2068 0438 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2069 043c 5B88     	 ldrh r3,[r3,#2]
 2070 043e 9BB2     	 uxth r3,r3
 2071              	.LBE463:
 2072              	.LBE462:
 445:src/MightyBoard/Motherboard/Command.cc **** //		xprintf("mode == READY" " (%s:%d)\n",_F_,_L_);
 446:src/MightyBoard/Motherboard/Command.cc **** 		
 447:src/MightyBoard/Motherboard/Command.cc **** 		// process next command on the queue.
 448:src/MightyBoard/Motherboard/Command.cc **** 		if ((command_buffer.getLength() > 0)){
 2073              	 .loc 1 448 0
 2074 0440 002B     	 cmp r3,#0
 2075 0442 00F07783 	 beq .L102
 2076              	.LBB464:
 449:src/MightyBoard/Motherboard/Command.cc **** //			xprintf("command_buffer.getLength() > 0" " (%s:%d)\n",_F_,_L_);
 450:src/MightyBoard/Motherboard/Command.cc **** 			Motherboard::getBoard().resetUserInputTimeout();
 2077              	 .loc 1 450 0
 2078 0446 40F20000 	 movw r0,#:lower16:_ZN11Motherboard11motherboardE
 2079 044a C0F20000 	 movt r0,#:upper16:_ZN11Motherboard11motherboardE
 2080 044e FFF7FEFF 	 bl _ZN11Motherboard21resetUserInputTimeoutEv
 2081              	.LVL157:
 2082              	.LBB465:
 2083              	.LBB466:
 105:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufSizeType actual_index = (index + start) % size;
 2084              	 .loc 2 105 0
 2085 0452 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2086 0456 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2087 045a 9988     	 ldrh r1,[r3,#4]
 2088 045c 89B2     	 uxth r1,r1
 2089 045e 1A88     	 ldrh r2,[r3,#0]
 2090              	.LVL158:
 2091              	 .loc 2 106 0
 2092 0460 9868     	 ldr r0,[r3,#8]
 105:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufSizeType actual_index = (index + start) % size;
 2093              	 .loc 2 105 0
 2094 0462 91FBF2F3 	 sdiv r3,r1,r2
 2095 0466 02FB1313 	 mls r3,r2,r3,r1
 2096              	 .loc 2 106 0
 2097 046a 9BB2     	 uxth r3,r3
 2098              	.LBE466:
 2099              	.LBE465:
 451:src/MightyBoard/Motherboard/Command.cc **** 			
 452:src/MightyBoard/Motherboard/Command.cc **** 			uint8_t command = command_buffer[0];
 2100              	 .loc 1 452 0
 2101 046c C35C     	 ldrb r3,[r0,r3]
 2102              	.LVL159:
 2103 046e 8DF81F30 	 strb r3,[sp,#31]
 2104              	.LBB467:
 453:src/MightyBoard/Motherboard/Command.cc **** 
 454:src/MightyBoard/Motherboard/Command.cc **** 		if (command == HOST_CMD_QUEUE_POINT_EXT || command == HOST_CMD_QUEUE_POINT_NEW) {
 2105              	 .loc 1 454 0
 2106 0472 8E2B     	 cmp r3,#142
 2107 0474 14BF     	 ite ne
 2108 0476 0021     	 movne r1,#0
 2109              	.LVL160:
 2110 0478 0121     	 moveq r1,#1
 2111 047a 8B2B     	 cmp r3,#139
 2112 047c 08BF     	 it eq
 2113 047e 41F00101 	 orreq r1,r1,#1
 2114 0482 21B1     	 cbz r1,.L103
 455:src/MightyBoard/Motherboard/Command.cc **** 					handleMovementCommand(command);
 2115              	 .loc 1 455 0
 2116 0484 0DF11F00 	 add r0,sp,#31
 2117 0488 FFF7FEFF 	 bl _ZN7commandL21handleMovementCommandERKh
 2118              	.LVL161:
 2119 048c 52E3     	 b .L102
 2120              	.L103:
 2121              	.LBB468:
 456:src/MightyBoard/Motherboard/Command.cc **** 			}  else if (command == HOST_CMD_CHANGE_TOOL) {
 2122              	 .loc 1 456 0
 2123 048e 862B     	 cmp r3,#134
 2124 0490 1CD1     	 bne .L104
 2125              	.LVL162:
 2126              	.LBB469:
 2127              	.LBB470:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2128              	 .loc 2 91 0
 2129 0492 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2130 0496 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2131 049a 5B88     	 ldrh r3,[r3,#2]
 2132 049c 9BB2     	 uxth r3,r3
 2133              	.LBE470:
 2134              	.LBE469:
 457:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 2) {
 2135              	 .loc 1 457 0
 2136 049e 012B     	 cmp r3,#1
 2137 04a0 40F24883 	 bls .L102
 458:src/MightyBoard/Motherboard/Command.cc **** 					pop8(); // remove the command code
 2138              	 .loc 1 458 0
 2139 04a4 FFF7FEFF 	 bl _ZN7command4pop8Ev
 459:src/MightyBoard/Motherboard/Command.cc ****                     currentToolIndex = pop8();
 2140              	 .loc 1 459 0
 2141 04a8 FFF7FEFF 	 bl _ZN7command4pop8Ev
 2142 04ac 40F20003 	 movw r3,#:lower16:.LANCHOR11
 2143 04b0 C0F20003 	 movt r3,#:upper16:.LANCHOR11
 2144 04b4 1870     	 strb r0,[r3,#0]
 460:src/MightyBoard/Motherboard/Command.cc ****                     line_number++;
 2145              	 .loc 1 460 0
 2146 04b6 40F20003 	 movw r3,#:lower16:.LANCHOR4
 2147 04ba C0F20003 	 movt r3,#:upper16:.LANCHOR4
 2148 04be 1A68     	 ldr r2,[r3,#0]
 2149 04c0 02F10102 	 add r2,r2,#1
 2150 04c4 1A60     	 str r2,[r3,#0]
 461:src/MightyBoard/Motherboard/Command.cc ****                     
 462:src/MightyBoard/Motherboard/Command.cc ****                     planner::changeToolIndex(currentToolIndex);
 2151              	 .loc 1 462 0
 2152 04c6 FFF7FEFF 	 bl _ZN7planner15changeToolIndexEh
 2153 04ca 33E3     	 b .L102
 2154              	.LVL163:
 2155              	.L104:
 2156              	.LBB471:
 463:src/MightyBoard/Motherboard/Command.cc **** 				}
 464:src/MightyBoard/Motherboard/Command.cc **** 			} else if (command == HOST_CMD_ENABLE_AXES) {
 2157              	 .loc 1 464 0
 2158 04cc 892B     	 cmp r3,#137
 2159 04ce 27D1     	 bne .L105
 2160              	.LVL164:
 2161              	.LBB472:
 2162              	.LBB473:
 2163              	.LBB474:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2164              	 .loc 2 91 0
 2165 04d0 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2166 04d4 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2167 04d8 5B88     	 ldrh r3,[r3,#2]
 2168 04da 9BB2     	 uxth r3,r3
 2169              	.LBE474:
 2170              	.LBE473:
 465:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 2) {
 2171              	 .loc 1 465 0
 2172 04dc 012B     	 cmp r3,#1
 2173 04de 40F22983 	 bls .L102
 2174              	.LBB475:
 466:src/MightyBoard/Motherboard/Command.cc **** 					pop8(); // remove the command code
 2175              	 .loc 1 466 0
 2176 04e2 FFF7FEFF 	 bl _ZN7command4pop8Ev
 467:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t axes = pop8();
 2177              	 .loc 1 467 0
 2178 04e6 FFF7FEFF 	 bl _ZN7command4pop8Ev
 2179 04ea 0546     	 mov r5,r0
 2180              	.LVL165:
 468:src/MightyBoard/Motherboard/Command.cc **** 					line_number++;
 2181              	 .loc 1 468 0
 2182 04ec 40F20003 	 movw r3,#:lower16:.LANCHOR4
 2183 04f0 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 2184 04f4 1A68     	 ldr r2,[r3,#0]
 2185 04f6 02F10102 	 add r2,r2,#1
 2186 04fa 1A60     	 str r2,[r3,#0]
 469:src/MightyBoard/Motherboard/Command.cc **** 					
 470:src/MightyBoard/Motherboard/Command.cc **** 					bool enable = (axes & 0x80) != 0;
 2187              	 .loc 1 470 0
 2188 04fc C0F3C016 	 ubfx r6,r0,#7,#1
 2189              	.LVL166:
 471:src/MightyBoard/Motherboard/Command.cc **** 					for (int i = 0; i < STEPPER_COUNT; i++) {
 2190              	 .loc 1 471 0
 2191 0500 4FF00004 	 mov r4,#0
 2192              	.LVL167:
 2193              	.L107:
 2194              	.LBB476:
 472:src/MightyBoard/Motherboard/Command.cc **** 						if ((axes & _BV(i)) != 0) {
 2195              	 .loc 1 472 0
 2196 0504 45FA04F3 	 asr r3,r5,r4
 2197 0508 13F0010F 	 tst r3,#1
 2198 050c 03D0     	 beq .L106
 473:src/MightyBoard/Motherboard/Command.cc **** 							steppers::enableAxis(i, enable);
 2199              	 .loc 1 473 0
 2200 050e E0B2     	 uxtb r0,r4
 2201 0510 3146     	 mov r1,r6
 2202 0512 FFF7FEFF 	 bl _ZN8steppers10enableAxisEhb
 2203              	.L106:
 471:src/MightyBoard/Motherboard/Command.cc **** 					for (int i = 0; i < STEPPER_COUNT; i++) {
 2204              	 .loc 1 471 0
 2205 0516 04F10104 	 add r4,r4,#1
 2206              	.LVL168:
 2207 051a 042C     	 cmp r4,#4
 2208 051c F2D1     	 bne .L107
 2209 051e 09E3     	 b .L102
 2210              	.LVL169:
 2211              	.L105:
 2212              	.LBE476:
 2213              	.LBE475:
 2214              	.LBE472:
 2215              	.LBB477:
 474:src/MightyBoard/Motherboard/Command.cc **** 						}
 475:src/MightyBoard/Motherboard/Command.cc **** 					}
 476:src/MightyBoard/Motherboard/Command.cc **** 				}
 477:src/MightyBoard/Motherboard/Command.cc **** 			} else if (command == HOST_CMD_SET_POSITION_EXT) {
 2216              	 .loc 1 477 0
 2217 0520 8C2B     	 cmp r3,#140
 2218 0522 2CD1     	 bne .L108
 2219              	.LVL170:
 2220              	.LBB478:
 2221              	.LBB479:
 2222              	.LBB480:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2223              	 .loc 2 91 0
 2224 0524 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2225 0528 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2226 052c 5B88     	 ldrh r3,[r3,#2]
 2227 052e 9BB2     	 uxth r3,r3
 2228              	.LBE480:
 2229              	.LBE479:
 478:src/MightyBoard/Motherboard/Command.cc **** //				xprintf("HOST_CMD_SET_POSITION_EXT) {" " (%s:%d)\n",_F_,_L_);
 479:src/MightyBoard/Motherboard/Command.cc **** 				// check for completion
 480:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 21) {
 2230              	 .loc 1 480 0
 2231 0530 142B     	 cmp r3,#20
 2232 0532 40F2FF82 	 bls .L102
 2233              	.LBB481:
 481:src/MightyBoard/Motherboard/Command.cc **** 					pop8(); // remove the command code
 2234              	 .loc 1 481 0
 2235 0536 FFF7FEFF 	 bl _ZN7command4pop8Ev
 482:src/MightyBoard/Motherboard/Command.cc **** 					int32_t x = pop32();
 2236              	 .loc 1 482 0
 2237 053a FFF7FEFF 	 bl _ZN7command5pop32Ev
 2238 053e 0446     	 mov r4,r0
 2239              	.LVL171:
 483:src/MightyBoard/Motherboard/Command.cc **** 					int32_t y = pop32();
 2240              	 .loc 1 483 0
 2241 0540 FFF7FEFF 	 bl _ZN7command5pop32Ev
 2242              	.LVL172:
 2243 0544 0646     	 mov r6,r0
 2244              	.LVL173:
 484:src/MightyBoard/Motherboard/Command.cc **** 					int32_t z = pop32();
 2245              	 .loc 1 484 0
 2246 0546 FFF7FEFF 	 bl _ZN7command5pop32Ev
 2247              	.LVL174:
 2248 054a 0746     	 mov r7,r0
 2249              	.LVL175:
 485:src/MightyBoard/Motherboard/Command.cc **** 					int32_t a = pop32();
 2250              	 .loc 1 485 0
 2251 054c FFF7FEFF 	 bl _ZN7command5pop32Ev
 2252              	.LVL176:
 2253 0550 0546     	 mov r5,r0
 2254              	.LVL177:
 486:src/MightyBoard/Motherboard/Command.cc **** 					int32_t b = pop32();
 2255              	 .loc 1 486 0
 2256 0552 FFF7FEFF 	 bl _ZN7command5pop32Ev
 2257              	.LVL178:
 487:src/MightyBoard/Motherboard/Command.cc **** 					line_number++;
 2258              	 .loc 1 487 0
 2259 0556 40F20003 	 movw r3,#:lower16:.LANCHOR4
 2260 055a C0F20003 	 movt r3,#:upper16:.LANCHOR4
 2261 055e 1A68     	 ldr r2,[r3,#0]
 2262 0560 02F10102 	 add r2,r2,#1
 2263 0564 1A60     	 str r2,[r3,#0]
 488:src/MightyBoard/Motherboard/Command.cc **** //					xprintf("if (command_buffer.getLength() >= 21) {" " (%s:%d)\n",_F_,_L_);
 489:src/MightyBoard/Motherboard/Command.cc **** 					planner::definePosition(Point(x,y,z,a,b));
 2264              	 .loc 1 489 0
 2265 0566 0095     	 str r5,[sp,#0]
 2266 0568 0190     	 str r0,[sp,#4]
 2267 056a 08A8     	 add r0,sp,#32
 2268              	.LVL179:
 2269 056c 2146     	 mov r1,r4
 2270 056e 3246     	 mov r2,r6
 2271 0570 3B46     	 mov r3,r7
 2272 0572 FFF7FEFF 	 bl _ZN5PointC1Elllll
 2273              	.LVL180:
 2274 0576 08A8     	 add r0,sp,#32
 2275 0578 FFF7FEFF 	 bl _ZN7planner14definePositionERK5Point
 2276 057c DAE2     	 b .L102
 2277              	.LVL181:
 2278              	.L108:
 2279              	.LBE481:
 2280              	.LBE478:
 2281              	.LBB482:
 490:src/MightyBoard/Motherboard/Command.cc **** 				}
 491:src/MightyBoard/Motherboard/Command.cc **** 			} else if (command == HOST_CMD_DELAY) {
 2282              	 .loc 1 491 0
 2283 057e 852B     	 cmp r3,#133
 2284 0580 26D1     	 bne .L109
 2285              	.LVL182:
 2286              	.LBB483:
 2287              	.LBB484:
 2288              	.LBB485:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2289              	 .loc 2 91 0
 2290 0582 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2291 0586 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2292 058a 5B88     	 ldrh r3,[r3,#2]
 2293 058c 9BB2     	 uxth r3,r3
 2294              	.LBE485:
 2295              	.LBE484:
 492:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 5) {
 2296              	 .loc 1 492 0
 2297 058e 042B     	 cmp r3,#4
 2298 0590 40F2D082 	 bls .L102
 2299              	.LBB486:
 493:src/MightyBoard/Motherboard/Command.cc **** 					mode = DELAY;
 2300              	 .loc 1 493 0
 2301 0594 40F20003 	 movw r3,#:lower16:.LANCHOR3
 2302 0598 C0F20003 	 movt r3,#:upper16:.LANCHOR3
 2303 059c 4FF00202 	 mov r2,#2
 2304 05a0 1A70     	 strb r2,[r3,#0]
 494:src/MightyBoard/Motherboard/Command.cc **** 					pop8(); // remove the command code
 2305              	 .loc 1 494 0
 2306 05a2 FFF7FEFF 	 bl _ZN7command4pop8Ev
 495:src/MightyBoard/Motherboard/Command.cc **** 					// parameter is in milliseconds; timeouts need microseconds
 496:src/MightyBoard/Motherboard/Command.cc **** 					uint32_t microseconds = pop32() * 1000L;
 2307              	 .loc 1 496 0
 2308 05a6 FFF7FEFF 	 bl _ZN7command5pop32Ev
 2309              	.LVL183:
 497:src/MightyBoard/Motherboard/Command.cc **** 					line_number++;
 2310              	 .loc 1 497 0
 2311 05aa 40F20003 	 movw r3,#:lower16:.LANCHOR4
 2312 05ae C0F20003 	 movt r3,#:upper16:.LANCHOR4
 2313 05b2 1A68     	 ldr r2,[r3,#0]
 2314 05b4 02F10102 	 add r2,r2,#1
 2315 05b8 1A60     	 str r2,[r3,#0]
 496:src/MightyBoard/Motherboard/Command.cc **** 					uint32_t microseconds = pop32() * 1000L;
 2316              	 .loc 1 496 0
 2317 05ba 4FF47A71 	 mov r1,#1000
 2318 05be 01FB00F1 	 mul r1,r1,r0
 498:src/MightyBoard/Motherboard/Command.cc **** 					
 499:src/MightyBoard/Motherboard/Command.cc **** 					delay_timeout.start(microseconds);
 2319              	 .loc 1 499 0
 2320 05c2 40F20000 	 movw r0,#:lower16:.LANCHOR9
 2321              	.LVL184:
 2322 05c6 C0F20000 	 movt r0,#:upper16:.LANCHOR9
 2323 05ca FFF7FEFF 	 bl _ZN7Timeout5startEm
 2324              	.LVL185:
 2325 05ce B1E2     	 b .L102
 2326              	.LVL186:
 2327              	.L109:
 2328              	.LBE486:
 2329              	.LBE483:
 2330              	.LBB487:
 500:src/MightyBoard/Motherboard/Command.cc **** 				}
 501:src/MightyBoard/Motherboard/Command.cc **** 			} else if (command == HOST_CMD_PAUSE_FOR_BUTTON) {
 2331              	 .loc 1 501 0
 2332 05d0 942B     	 cmp r3,#148
 2333 05d2 4FD1     	 bne .L110
 2334              	.LVL187:
 2335              	.LBB488:
 2336              	.LBB489:
 2337              	.LBB490:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2338              	 .loc 2 91 0
 2339 05d4 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2340 05d8 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2341 05dc 5B88     	 ldrh r3,[r3,#2]
 2342 05de 9BB2     	 uxth r3,r3
 2343              	.LBE490:
 2344              	.LBE489:
 502:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 5) {
 2345              	 .loc 1 502 0
 2346 05e0 042B     	 cmp r3,#4
 2347 05e2 40F2A782 	 bls .L102
 2348              	.LBB491:
 503:src/MightyBoard/Motherboard/Command.cc **** 					pop8(); // remove the command code
 2349              	 .loc 1 503 0
 2350 05e6 FFF7FEFF 	 bl _ZN7command4pop8Ev
 504:src/MightyBoard/Motherboard/Command.cc **** 					button_mask = pop8();
 2351              	 .loc 1 504 0
 2352 05ea FFF7FEFF 	 bl _ZN7command4pop8Ev
 2353 05ee 40F20003 	 movw r3,#:lower16:.LANCHOR14
 2354 05f2 C0F20003 	 movt r3,#:upper16:.LANCHOR14
 2355 05f6 1870     	 strb r0,[r3,#0]
 505:src/MightyBoard/Motherboard/Command.cc **** 					uint16_t timeout_seconds = pop16();
 2356              	 .loc 1 505 0
 2357 05f8 FFF7FEFF 	 bl _ZN7command5pop16Ev
 2358 05fc 84B2     	 uxth r4,r0
 2359              	.LVL188:
 506:src/MightyBoard/Motherboard/Command.cc **** 					button_timeout_behavior = pop8();
 2360              	 .loc 1 506 0
 2361 05fe FFF7FEFF 	 bl _ZN7command4pop8Ev
 2362 0602 40F20003 	 movw r3,#:lower16:.LANCHOR13
 2363 0606 C0F20003 	 movt r3,#:upper16:.LANCHOR13
 2364 060a 1870     	 strb r0,[r3,#0]
 507:src/MightyBoard/Motherboard/Command.cc **** 					line_number++;
 2365              	 .loc 1 507 0
 2366 060c 40F20003 	 movw r3,#:lower16:.LANCHOR4
 2367 0610 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 2368 0614 1A68     	 ldr r2,[r3,#0]
 2369 0616 02F10102 	 add r2,r2,#1
 2370 061a 1A60     	 str r2,[r3,#0]
 508:src/MightyBoard/Motherboard/Command.cc **** 					
 509:src/MightyBoard/Motherboard/Command.cc **** 					if (timeout_seconds != 0) {
 2371              	 .loc 1 509 0
 2372 061c 64B1     	 cbz r4,.L111
 510:src/MightyBoard/Motherboard/Command.cc **** 						button_wait_timeout.start(timeout_seconds * 1000L * 1000L);
 2373              	 .loc 1 510 0
 2374 061e 44F24021 	 movw r1,#16960
 2375 0622 C0F20F01 	 movt r1,15
 2376 0626 40F20000 	 movw r0,#:lower16:.LANCHOR12
 2377 062a C0F20000 	 movt r0,#:upper16:.LANCHOR12
 2378 062e 01FB04F1 	 mul r1,r1,r4
 2379 0632 FFF7FEFF 	 bl _ZN7Timeout5startEm
 2380 0636 0BE0     	 b .L112
 2381              	.L111:
 511:src/MightyBoard/Motherboard/Command.cc **** 					} else {
 512:src/MightyBoard/Motherboard/Command.cc **** 						button_wait_timeout = Timeout();
 2382              	 .loc 1 512 0
 2383 0638 0DAC     	 add r4,sp,#52
 2384              	.LVL189:
 2385 063a 2046     	 mov r0,r4
 2386 063c FFF7FEFF 	 bl _ZN7TimeoutC1Ev
 2387 0640 40F20005 	 movw r5,#:lower16:.LANCHOR12
 2388 0644 C0F20005 	 movt r5,#:upper16:.LANCHOR12
 2389 0648 94E80F00 	 ldmia r4,{r0,r1,r2,r3}
 2390 064c 85E80F00 	 stmia r5,{r0,r1,r2,r3}
 2391              	.L112:
 513:src/MightyBoard/Motherboard/Command.cc **** 					}
 514:src/MightyBoard/Motherboard/Command.cc ****                     // set button wait via interface board
 515:src/MightyBoard/Motherboard/Command.cc **** 					Motherboard::getBoard().interfaceBlink(25,15);
 2392              	 .loc 1 515 0
 2393 0650 40F20000 	 movw r0,#:lower16:_ZN11Motherboard11motherboardE
 2394 0654 C0F20000 	 movt r0,#:upper16:_ZN11Motherboard11motherboardE
 2395 0658 4FF01901 	 mov r1,#25
 2396 065c 4FF00F02 	 mov r2,#15
 2397 0660 FFF7FEFF 	 bl _ZN11Motherboard14interfaceBlinkEii
 516:src/MightyBoard/Motherboard/Command.cc **** //					InterfaceBoard& ib = Motherboard::getBoard().getInterfaceBoard();
 517:src/MightyBoard/Motherboard/Command.cc **** //					ib.waitForButton(button_mask);
 518:src/MightyBoard/Motherboard/Command.cc **** 					mode = WAIT_ON_BUTTON;
 2398              	 .loc 1 518 0
 2399 0664 40F20003 	 movw r3,#:lower16:.LANCHOR3
 2400 0668 C0F20003 	 movt r3,#:upper16:.LANCHOR3
 2401 066c 4FF00602 	 mov r2,#6
 2402 0670 1A70     	 strb r2,[r3,#0]
 2403 0672 5FE2     	 b .L102
 2404              	.LVL190:
 2405              	.L110:
 2406              	.LBE491:
 2407              	.LBE488:
 2408              	.LBB492:
 519:src/MightyBoard/Motherboard/Command.cc **** 				}
 520:src/MightyBoard/Motherboard/Command.cc **** 			} else if (command == HOST_CMD_DISPLAY_MESSAGE) {
 2409              	 .loc 1 520 0
 2410 0674 952B     	 cmp r3,#149
 2411 0676 1BD1     	 bne .L113
 2412              	.LVL191:
 2413              	.LBB493:
 2414              	.LBB494:
 2415              	.LBB495:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2416              	 .loc 2 91 0
 2417 0678 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2418 067c C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2419 0680 5B88     	 ldrh r3,[r3,#2]
 2420 0682 9BB2     	 uxth r3,r3
 2421              	.LBE495:
 2422              	.LBE494:
 521:src/MightyBoard/Motherboard/Command.cc **** //				MessageScreen* scr = Motherboard::getBoard().getMessageScreen();
 522:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 6) {
 2423              	 .loc 1 522 0
 2424 0684 052B     	 cmp r3,#5
 2425 0686 40F25582 	 bls .L102
 2426              	.LBB496:
 523:src/MightyBoard/Motherboard/Command.cc **** 					pop8(); // remove the command code
 2427              	 .loc 1 523 0
 2428 068a FFF7FEFF 	 bl _ZN7command4pop8Ev
 524:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t options = pop8();
 2429              	 .loc 1 524 0
 2430 068e FFF7FEFF 	 bl _ZN7command4pop8Ev
 525:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t xpos = pop8();
 2431              	 .loc 1 525 0
 2432 0692 FFF7FEFF 	 bl _ZN7command4pop8Ev
 526:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t ypos = pop8();
 2433              	 .loc 1 526 0
 2434 0696 FFF7FEFF 	 bl _ZN7command4pop8Ev
 527:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t timeout_seconds = pop8();
 2435              	 .loc 1 527 0
 2436 069a FFF7FEFF 	 bl _ZN7command4pop8Ev
 528:src/MightyBoard/Motherboard/Command.cc **** 					line_number++;
 2437              	 .loc 1 528 0
 2438 069e 40F20003 	 movw r3,#:lower16:.LANCHOR4
 2439 06a2 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 2440 06a6 1A68     	 ldr r2,[r3,#0]
 2441 06a8 02F10102 	 add r2,r2,#1
 2442 06ac 1A60     	 str r2,[r3,#0]
 2443 06ae 41E2     	 b .L102
 2444              	.LVL192:
 2445              	.L113:
 2446              	.LBE496:
 2447              	.LBE493:
 2448              	.LBB497:
 529:src/MightyBoard/Motherboard/Command.cc **** 					
 530:src/MightyBoard/Motherboard/Command.cc ****                     // check message clear bit
 531:src/MightyBoard/Motherboard/Command.cc **** //					if ( (options & (1 << 0)) == 0 ) { scr->clearMessage(); }
 532:src/MightyBoard/Motherboard/Command.cc **** 					// set position and add message
 533:src/MightyBoard/Motherboard/Command.cc **** //					scr->setXY(xpos,ypos);
 534:src/MightyBoard/Motherboard/Command.cc **** //					scr->addMessage(command_buffer);
 535:src/MightyBoard/Motherboard/Command.cc **** 
 536:src/MightyBoard/Motherboard/Command.cc **** 					// push message screen if the full message has been recieved
 537:src/MightyBoard/Motherboard/Command.cc **** //					if((options & (1 << 1))){
 538:src/MightyBoard/Motherboard/Command.cc **** //						InterfaceBoard& ib = Motherboard::getBoard().getInterfaceBoard();
 539:src/MightyBoard/Motherboard/Command.cc **** //						if (ib.getCurrentScreen() != scr) {
 540:src/MightyBoard/Motherboard/Command.cc **** //							ib.pushScreen(scr);
 541:src/MightyBoard/Motherboard/Command.cc **** //						} else {
 542:src/MightyBoard/Motherboard/Command.cc **** //							scr->refreshScreen();
 543:src/MightyBoard/Motherboard/Command.cc **** //						}
 544:src/MightyBoard/Motherboard/Command.cc **** 						// set message timeout if not a buttonWait call
 545:src/MightyBoard/Motherboard/Command.cc **** //						if ((timeout_seconds != 0) && (!(options & (1 <<2)))) {
 546:src/MightyBoard/Motherboard/Command.cc **** //								scr->setTimeout(timeout_seconds);//, true);
 547:src/MightyBoard/Motherboard/Command.cc **** //						}
 548:src/MightyBoard/Motherboard/Command.cc **** 
 549:src/MightyBoard/Motherboard/Command.cc **** //						if (options & (1 << 2)) { // button wait bit --> start button wait
 550:src/MightyBoard/Motherboard/Command.cc **** //							if (timeout_seconds != 0) {
 551:src/MightyBoard/Motherboard/Command.cc **** //								button_wait_timeout.start(timeout_seconds * 1000L * 1000L);
 552:src/MightyBoard/Motherboard/Command.cc **** //							} else {
 553:src/MightyBoard/Motherboard/Command.cc **** //								button_wait_timeout = Timeout();
 554:src/MightyBoard/Motherboard/Command.cc **** //							}
 555:src/MightyBoard/Motherboard/Command.cc **** //							button_mask = (1 << ButtonArray::CENTER);  // center button
 556:src/MightyBoard/Motherboard/Command.cc **** //							button_timeout_behavior &= (1 << BUTTON_CLEAR_SCREEN);
 557:src/MightyBoard/Motherboard/Command.cc **** //							Motherboard::getBoard().interfaceBlink(25,15);
 558:src/MightyBoard/Motherboard/Command.cc **** //							InterfaceBoard& ib = Motherboard::getBoard().getInterfaceBoard();
 559:src/MightyBoard/Motherboard/Command.cc **** //							ib.waitForButton(button_mask);
 560:src/MightyBoard/Motherboard/Command.cc **** //							mode = WAIT_ON_BUTTON;
 561:src/MightyBoard/Motherboard/Command.cc **** //						}
 562:src/MightyBoard/Motherboard/Command.cc **** //					}
 563:src/MightyBoard/Motherboard/Command.cc **** 				}
 564:src/MightyBoard/Motherboard/Command.cc **** 					
 565:src/MightyBoard/Motherboard/Command.cc **** 			} else if (command == HOST_CMD_FIND_AXES_MINIMUM ||
 2449              	 .loc 1 565 0
 2450 06b0 03F17D01 	 add r1,r3,#125
 2451 06b4 C9B2     	 uxtb r1,r1
 2452 06b6 0129     	 cmp r1,#1
 2453 06b8 39D8     	 bhi .L114
 2454              	.LVL193:
 2455              	.LBB498:
 2456              	.LBB499:
 2457              	.LBB500:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2458              	 .loc 2 91 0
 2459 06ba 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2460 06be C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2461 06c2 5B88     	 ldrh r3,[r3,#2]
 2462 06c4 9BB2     	 uxth r3,r3
 2463              	.LBE500:
 2464              	.LBE499:
 566:src/MightyBoard/Motherboard/Command.cc **** 					command == HOST_CMD_FIND_AXES_MAXIMUM) {
 567:src/MightyBoard/Motherboard/Command.cc **** //				xprintf("HOST_CMD_FIND_AXES_MINIMUM||HOST_CMD_FIND_AXES_MAXIMUM) {" " (%s:%d)\n",_F_,_L_);
 568:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 8) {
 2465              	 .loc 1 568 0
 2466 06c6 072B     	 cmp r3,#7
 2467 06c8 40F23482 	 bls .L102
 2468              	.LBB501:
 569:src/MightyBoard/Motherboard/Command.cc **** 					pop8(); // remove the command
 2469              	 .loc 1 569 0
 2470 06cc FFF7FEFF 	 bl _ZN7command4pop8Ev
 570:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t flags = pop8();
 2471              	 .loc 1 570 0
 2472 06d0 FFF7FEFF 	 bl _ZN7command4pop8Ev
 2473 06d4 0546     	 mov r5,r0
 2474              	.LVL194:
 571:src/MightyBoard/Motherboard/Command.cc **** 					uint32_t feedrate = pop32(); // feedrate in us per step
 2475              	 .loc 1 571 0
 2476 06d6 FFF7FEFF 	 bl _ZN7command5pop32Ev
 2477              	.LVL195:
 2478 06da 0446     	 mov r4,r0
 2479              	.LVL196:
 572:src/MightyBoard/Motherboard/Command.cc **** 					uint16_t timeout_s = pop16();
 2480              	 .loc 1 572 0
 2481 06dc FFF7FEFF 	 bl _ZN7command5pop16Ev
 2482              	.LVL197:
 573:src/MightyBoard/Motherboard/Command.cc **** 					line_number++;
 2483              	 .loc 1 573 0
 2484 06e0 40F20003 	 movw r3,#:lower16:.LANCHOR4
 2485 06e4 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 2486 06e8 1A68     	 ldr r2,[r3,#0]
 2487 06ea 02F10102 	 add r2,r2,#1
 2488 06ee 1A60     	 str r2,[r3,#0]
 2489              	.LVL198:
 574:src/MightyBoard/Motherboard/Command.cc **** 					
 575:src/MightyBoard/Motherboard/Command.cc **** 					bool direction = command == HOST_CMD_FIND_AXES_MAXIMUM;
 576:src/MightyBoard/Motherboard/Command.cc **** 					mode = HOMING;
 2490              	 .loc 1 576 0
 2491 06f0 40F20003 	 movw r3,#:lower16:.LANCHOR3
 2492 06f4 C0F20003 	 movt r3,#:upper16:.LANCHOR3
 2493 06f8 4FF00302 	 mov r2,#3
 2494 06fc 1A70     	 strb r2,[r3,#0]
 577:src/MightyBoard/Motherboard/Command.cc **** 					homing_timeout.start(timeout_s * 1000L * 1000L);
 2495              	 .loc 1 577 0
 2496 06fe 81B2     	 uxth r1,r0
 2497 0700 44F24023 	 movw r3,#16960
 2498 0704 C0F20F03 	 movt r3,15
 2499 0708 40F20000 	 movw r0,#:lower16:.LANCHOR8
 2500              	.LVL199:
 2501 070c C0F20000 	 movt r0,#:upper16:.LANCHOR8
 2502 0710 03FB01F1 	 mul r1,r3,r1
 2503              	.LVL200:
 2504 0714 FFF7FEFF 	 bl _ZN7Timeout5startEm
 2505              	.LVL201:
 578:src/MightyBoard/Motherboard/Command.cc **** 					steppers::startHoming(command==HOST_CMD_FIND_AXES_MAXIMUM,
 579:src/MightyBoard/Motherboard/Command.cc **** 							flags,
 580:src/MightyBoard/Motherboard/Command.cc **** 							feedrate);
 2506              	 .loc 1 580 0
 2507 0718 9DF81F00 	 ldrb r0,[sp,#31]
 2508              	.LVL202:
 2509 071c 8428     	 cmp r0,#132
 2510              	.LVL203:
 2511 071e 14BF     	 ite ne
 2512 0720 0020     	 movne r0,#0
 2513              	.LVL204:
 2514 0722 0120     	 moveq r0,#1
 2515 0724 2946     	 mov r1,r5
 2516 0726 2246     	 mov r2,r4
 2517 0728 FFF7FEFF 	 bl _ZN8steppers11startHomingEbhm
 2518 072c 02E2     	 b .L102
 2519              	.LVL205:
 2520              	.L114:
 2521              	.LBE501:
 2522              	.LBE498:
 2523              	.LBB502:
 581:src/MightyBoard/Motherboard/Command.cc **** 				}
 582:src/MightyBoard/Motherboard/Command.cc **** 			} else if (command == HOST_CMD_WAIT_FOR_TOOL) {
 2524              	 .loc 1 582 0
 2525 072e 872B     	 cmp r3,#135
 2526 0730 32D1     	 bne .L115
 2527              	.LVL206:
 2528              	.LBB503:
 2529              	.LBB504:
 2530              	.LBB505:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2531              	 .loc 2 91 0
 2532 0732 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2533              	.LVL207:
 2534 0736 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2535 073a 5B88     	 ldrh r3,[r3,#2]
 2536 073c 9BB2     	 uxth r3,r3
 2537              	.LBE505:
 2538              	.LBE504:
 583:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 6) {
 2539              	 .loc 1 583 0
 2540 073e 052B     	 cmp r3,#5
 2541 0740 40F2F881 	 bls .L102
 2542              	.LBB506:
 584:src/MightyBoard/Motherboard/Command.cc **** 					mode = WAIT_ON_TOOL;
 2543              	 .loc 1 584 0
 2544 0744 40F20003 	 movw r3,#:lower16:.LANCHOR3
 2545 0748 C0F20003 	 movt r3,#:upper16:.LANCHOR3
 2546 074c 4FF00402 	 mov r2,#4
 2547 0750 1A70     	 strb r2,[r3,#0]
 585:src/MightyBoard/Motherboard/Command.cc **** 					pop8();
 2548              	 .loc 1 585 0
 2549 0752 FFF7FEFF 	 bl _ZN7command4pop8Ev
 586:src/MightyBoard/Motherboard/Command.cc **** 					currentToolIndex = pop8();
 2550              	 .loc 1 586 0
 2551 0756 FFF7FEFF 	 bl _ZN7command4pop8Ev
 2552 075a 40F20003 	 movw r3,#:lower16:.LANCHOR11
 2553 075e C0F20003 	 movt r3,#:upper16:.LANCHOR11
 2554 0762 1870     	 strb r0,[r3,#0]
 587:src/MightyBoard/Motherboard/Command.cc **** 					uint16_t toolPingDelay = (uint16_t)pop16();
 2555              	 .loc 1 587 0
 2556 0764 FFF7FEFF 	 bl _ZN7command5pop16Ev
 588:src/MightyBoard/Motherboard/Command.cc **** 					uint16_t toolTimeout = (uint16_t)pop16();
 2557              	 .loc 1 588 0
 2558 0768 FFF7FEFF 	 bl _ZN7command5pop16Ev
 2559              	.LVL208:
 589:src/MightyBoard/Motherboard/Command.cc **** 					line_number++;
 2560              	 .loc 1 589 0
 2561 076c 40F20003 	 movw r3,#:lower16:.LANCHOR4
 2562 0770 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 2563 0774 1A68     	 ldr r2,[r3,#0]
 2564 0776 02F10102 	 add r2,r2,#1
 2565 077a 1A60     	 str r2,[r3,#0]
 590:src/MightyBoard/Motherboard/Command.cc **** 					
 591:src/MightyBoard/Motherboard/Command.cc **** 					// if we re-add handling of toolTimeout, we need to make sure
 592:src/MightyBoard/Motherboard/Command.cc **** 					// that values that overflow our counter will not be passed)
 593:src/MightyBoard/Motherboard/Command.cc **** 					tool_wait_timeout.start(toolTimeout*1000000L);
 2566              	 .loc 1 593 0
 2567 077c 81B2     	 uxth r1,r0
 2568 077e 44F24023 	 movw r3,#16960
 2569 0782 C0F20F03 	 movt r3,15
 2570 0786 40F20000 	 movw r0,#:lower16:.LANCHOR10
 2571              	.LVL209:
 2572 078a C0F20000 	 movt r0,#:upper16:.LANCHOR10
 2573 078e 03FB01F1 	 mul r1,r3,r1
 2574              	.LVL210:
 2575 0792 FFF7FEFF 	 bl _ZN7Timeout5startEm
 2576 0796 CDE1     	 b .L102
 2577              	.LVL211:
 2578              	.L115:
 2579              	.LBE506:
 2580              	.LBE503:
 2581              	.LBB507:
 594:src/MightyBoard/Motherboard/Command.cc **** 				}
 595:src/MightyBoard/Motherboard/Command.cc **** 			} else if (command == HOST_CMD_WAIT_FOR_PLATFORM) {
 2582              	 .loc 1 595 0
 2583 0798 8D2B     	 cmp r3,#141
 2584 079a 2DD1     	 bne .L116
 2585              	.LVL212:
 2586              	.LBB508:
 2587              	.LBB509:
 2588              	.LBB510:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2589              	 .loc 2 91 0
 2590 079c 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2591 07a0 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2592 07a4 5B88     	 ldrh r3,[r3,#2]
 2593 07a6 9BB2     	 uxth r3,r3
 2594              	.LBE510:
 2595              	.LBE509:
 596:src/MightyBoard/Motherboard/Command.cc ****         // FIXME: Almost equivalent to WAIT_FOR_TOOL
 597:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 6) {
 2596              	 .loc 1 597 0
 2597 07a8 052B     	 cmp r3,#5
 2598 07aa 40F2C381 	 bls .L102
 2599              	.LBB511:
 598:src/MightyBoard/Motherboard/Command.cc **** 					mode = WAIT_ON_PLATFORM;
 2600              	 .loc 1 598 0
 2601 07ae 40F20003 	 movw r3,#:lower16:.LANCHOR3
 2602 07b2 C0F20003 	 movt r3,#:upper16:.LANCHOR3
 2603 07b6 4FF00502 	 mov r2,#5
 2604 07ba 1A70     	 strb r2,[r3,#0]
 599:src/MightyBoard/Motherboard/Command.cc **** 					pop8();
 2605              	 .loc 1 599 0
 2606 07bc FFF7FEFF 	 bl _ZN7command4pop8Ev
 600:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t currentToolIndex = pop8();
 2607              	 .loc 1 600 0
 2608 07c0 FFF7FEFF 	 bl _ZN7command4pop8Ev
 601:src/MightyBoard/Motherboard/Command.cc **** 					uint16_t toolPingDelay = (uint16_t)pop16();
 2609              	 .loc 1 601 0
 2610 07c4 FFF7FEFF 	 bl _ZN7command5pop16Ev
 602:src/MightyBoard/Motherboard/Command.cc **** 					uint16_t toolTimeout = (uint16_t)pop16();
 2611              	 .loc 1 602 0
 2612 07c8 FFF7FEFF 	 bl _ZN7command5pop16Ev
 2613              	.LVL213:
 603:src/MightyBoard/Motherboard/Command.cc **** 					line_number++;
 2614              	 .loc 1 603 0
 2615 07cc 40F20003 	 movw r3,#:lower16:.LANCHOR4
 2616 07d0 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 2617 07d4 1A68     	 ldr r2,[r3,#0]
 2618 07d6 02F10102 	 add r2,r2,#1
 2619 07da 1A60     	 str r2,[r3,#0]
 604:src/MightyBoard/Motherboard/Command.cc **** 					
 605:src/MightyBoard/Motherboard/Command.cc **** 					// if we re-add handling of toolTimeout, we need to make sure
 606:src/MightyBoard/Motherboard/Command.cc **** 					// that values that overflow our counter will not be passed)
 607:src/MightyBoard/Motherboard/Command.cc **** 					tool_wait_timeout.start(toolTimeout*1000000L);
 2620              	 .loc 1 607 0
 2621 07dc 81B2     	 uxth r1,r0
 2622 07de 44F24023 	 movw r3,#16960
 2623 07e2 C0F20F03 	 movt r3,15
 2624 07e6 40F20000 	 movw r0,#:lower16:.LANCHOR10
 2625              	.LVL214:
 2626 07ea C0F20000 	 movt r0,#:upper16:.LANCHOR10
 2627 07ee 03FB01F1 	 mul r1,r3,r1
 2628              	.LVL215:
 2629 07f2 FFF7FEFF 	 bl _ZN7Timeout5startEm
 2630 07f6 9DE1     	 b .L102
 2631              	.LVL216:
 2632              	.L116:
 2633              	.LBE511:
 2634              	.LBE508:
 2635              	.LBB512:
 608:src/MightyBoard/Motherboard/Command.cc **** 				}
 609:src/MightyBoard/Motherboard/Command.cc **** 			} else if (command == HOST_CMD_STORE_HOME_POSITION) {
 2636              	 .loc 1 609 0
 2637 07f8 8F2B     	 cmp r3,#143
 2638 07fa 31D1     	 bne .L117
 2639              	.LVL217:
 2640              	.LBB513:
 2641              	.LBB514:
 2642              	.LBB515:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2643              	 .loc 2 91 0
 2644 07fc 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2645 0800 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2646 0804 5B88     	 ldrh r3,[r3,#2]
 2647 0806 9BB2     	 uxth r3,r3
 2648              	.LBE515:
 2649              	.LBE514:
 610:src/MightyBoard/Motherboard/Command.cc **** 
 611:src/MightyBoard/Motherboard/Command.cc **** 				// check for completion
 612:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 2) {
 2650              	 .loc 1 612 0
 2651 0808 012B     	 cmp r3,#1
 2652 080a 40F29381 	 bls .L102
 2653              	.LBB516:
 613:src/MightyBoard/Motherboard/Command.cc **** 					pop8();
 2654              	 .loc 1 613 0
 2655 080e FFF7FEFF 	 bl _ZN7command4pop8Ev
 614:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t axes = pop8();
 2656              	 .loc 1 614 0
 2657 0812 FFF7FEFF 	 bl _ZN7command4pop8Ev
 2658 0816 0646     	 mov r6,r0
 2659              	.LVL218:
 615:src/MightyBoard/Motherboard/Command.cc **** 					line_number++;
 2660              	 .loc 1 615 0
 2661 0818 40F20003 	 movw r3,#:lower16:.LANCHOR4
 2662 081c C0F20003 	 movt r3,#:upper16:.LANCHOR4
 2663 0820 1A68     	 ldr r2,[r3,#0]
 2664 0822 02F10102 	 add r2,r2,#1
 2665 0826 1A60     	 str r2,[r3,#0]
 2666              	.LVL219:
 2667 0828 4FF00E05 	 mov r5,#14
 2668 082c 4FF00004 	 mov r4,#0
 2669              	.LVL220:
 2670              	.L119:
 2671              	.LBB517:
 616:src/MightyBoard/Motherboard/Command.cc **** 					
 617:src/MightyBoard/Motherboard/Command.cc **** 					// Go through each axis, and if that axis is specified, read it's value,
 618:src/MightyBoard/Motherboard/Command.cc **** 					// then record it to the eeprom.
 619:src/MightyBoard/Motherboard/Command.cc **** 					for (uint8_t i = 0; i < STEPPER_COUNT; i++) {
 620:src/MightyBoard/Motherboard/Command.cc **** 						if ( axes & (1 << i) ) {
 2672              	 .loc 1 620 0
 2673 0830 46FA04F3 	 asr r3,r6,r4
 2674 0834 13F0010F 	 tst r3,#1
 2675 0838 0AD0     	 beq .L118
 621:src/MightyBoard/Motherboard/Command.cc **** 							eeprom::setEeprom32(eeprom_offsets::AXIS_HOME_POSITIONS_STEPS + (i*4), steppers::getPosition
 2676              	 .loc 1 621 0
 2677 083a 11A8     	 add r0,sp,#68
 2678 083c FFF7FEFF 	 bl _ZN8steppers11getPositionEv
 2679 0840 11A8     	 add r0,sp,#68
 2680 0842 2146     	 mov r1,r4
 2681 0844 FFF7FEFF 	 bl _ZNK5PointixEj
 2682 0848 0168     	 ldr r1,[r0,#0]
 2683 084a 2846     	 mov r0,r5
 2684 084c FFF7FEFF 	 bl _ZN6eeprom11setEeprom32Etm
 2685              	.L118:
 2686 0850 04F10104 	 add r4,r4,#1
 2687 0854 05F10405 	 add r5,r5,#4
 2688 0858 ADB2     	 uxth r5,r5
 619:src/MightyBoard/Motherboard/Command.cc **** 					for (uint8_t i = 0; i < STEPPER_COUNT; i++) {
 2689              	 .loc 1 619 0
 2690 085a 042C     	 cmp r4,#4
 2691 085c E8D1     	 bne .L119
 2692 085e 69E1     	 b .L102
 2693              	.LVL221:
 2694              	.L117:
 2695              	.LBE517:
 2696              	.LBE516:
 2697              	.LBE513:
 2698              	.LBB518:
 622:src/MightyBoard/Motherboard/Command.cc **** //							xprintf("%x" " (%s:%d)\n",eeprom_offsets::AXIS_HOME_POSITIONS_STEPS + (i*4),_F_,_L_);
 623:src/MightyBoard/Motherboard/Command.cc **** //							xprintf("%x" " (%s:%d)\n",steppers::getPosition()[i],_F_,_L_);
 624:src/MightyBoard/Motherboard/Command.cc **** //							uint16_t offset = eeprom_offsets::AXIS_HOME_POSITIONS_STEPS + 4*i;
 625:src/MightyBoard/Motherboard/Command.cc **** //							uint32_t position = steppers::getPosition()[i];
 626:src/MightyBoard/Motherboard/Command.cc **** //							cli();
 627:src/MightyBoard/Motherboard/Command.cc **** //							eeprom_write_block(&position, (void*) offset, 4);
 628:src/MightyBoard/Motherboard/Command.cc **** //							sei();
 629:src/MightyBoard/Motherboard/Command.cc **** 						}
 630:src/MightyBoard/Motherboard/Command.cc **** 						//eeprom::save_to_flash();
 631:src/MightyBoard/Motherboard/Command.cc **** 					}
 632:src/MightyBoard/Motherboard/Command.cc **** 				}
 633:src/MightyBoard/Motherboard/Command.cc **** 			} else if (command == HOST_CMD_RECALL_HOME_POSITION) {
 2699              	 .loc 1 633 0
 2700 0860 902B     	 cmp r3,#144
 2701 0862 37D1     	 bne .L120
 2702              	.LVL222:
 2703              	.LBB519:
 2704              	.LBB520:
 2705              	.LBB521:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2706              	 .loc 2 91 0
 2707 0864 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2708 0868 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2709 086c 5B88     	 ldrh r3,[r3,#2]
 2710 086e 9BB2     	 uxth r3,r3
 2711              	.LBE521:
 2712              	.LBE520:
 634:src/MightyBoard/Motherboard/Command.cc **** 				// check for completion
 635:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 2) {
 2713              	 .loc 1 635 0
 2714 0870 012B     	 cmp r3,#1
 2715 0872 40F25F81 	 bls .L102
 2716              	.LBB522:
 636:src/MightyBoard/Motherboard/Command.cc **** 					pop8();
 2717              	 .loc 1 636 0
 2718 0876 FFF7FEFF 	 bl _ZN7command4pop8Ev
 637:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t axes = pop8();
 2719              	 .loc 1 637 0
 2720 087a FFF7FEFF 	 bl _ZN7command4pop8Ev
 2721 087e 0746     	 mov r7,r0
 2722              	.LVL223:
 638:src/MightyBoard/Motherboard/Command.cc **** 					line_number++;
 2723              	 .loc 1 638 0
 2724 0880 40F20003 	 movw r3,#:lower16:.LANCHOR4
 2725 0884 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 2726 0888 1A68     	 ldr r2,[r3,#0]
 2727 088a 02F10102 	 add r2,r2,#1
 2728 088e 1A60     	 str r2,[r3,#0]
 639:src/MightyBoard/Motherboard/Command.cc **** 
 640:src/MightyBoard/Motherboard/Command.cc **** 					Point newPoint = steppers::getPosition();
 2729              	 .loc 1 640 0
 2730 0890 02A8     	 add r0,sp,#8
 2731              	.LVL224:
 2732 0892 FFF7FEFF 	 bl _ZN8steppers11getPositionEv
 2733              	.LVL225:
 2734 0896 4FF00E06 	 mov r6,#14
 2735 089a 4FF00004 	 mov r4,#0
 2736              	.LBB523:
 641:src/MightyBoard/Motherboard/Command.cc **** 
 642:src/MightyBoard/Motherboard/Command.cc **** 					for (uint8_t i = 0; i < STEPPER_COUNT; i++) {
 643:src/MightyBoard/Motherboard/Command.cc **** 						if ( axes & (1 << i) ) {
 644:src/MightyBoard/Motherboard/Command.cc **** 							newPoint[i] = eeprom::getEeprom32(eeprom_offsets::AXIS_HOME_POSITIONS_STEPS + (i*4),0);
 2737              	 .loc 1 644 0
 2738 089e A046     	 mov r8,r4
 2739              	.LVL226:
 2740              	.L122:
 643:src/MightyBoard/Motherboard/Command.cc **** 						if ( axes & (1 << i) ) {
 2741              	 .loc 1 643 0
 2742 08a0 47FA04F3 	 asr r3,r7,r4
 2743 08a4 13F0010F 	 tst r3,#1
 2744 08a8 09D0     	 beq .L121
 2745              	 .loc 1 644 0
 2746 08aa 02A8     	 add r0,sp,#8
 2747 08ac 2146     	 mov r1,r4
 2748 08ae FFF7FEFF 	 bl _ZN5PointixEj
 2749 08b2 0546     	 mov r5,r0
 2750 08b4 3046     	 mov r0,r6
 2751 08b6 4146     	 mov r1,r8
 2752 08b8 FFF7FEFF 	 bl _ZN6eeprom11getEeprom32Etm
 2753 08bc 2860     	 str r0,[r5,#0]
 2754              	.L121:
 2755 08be 04F10104 	 add r4,r4,#1
 2756 08c2 06F10406 	 add r6,r6,#4
 2757 08c6 B6B2     	 uxth r6,r6
 642:src/MightyBoard/Motherboard/Command.cc **** 					for (uint8_t i = 0; i < STEPPER_COUNT; i++) {
 2758              	 .loc 1 642 0
 2759 08c8 042C     	 cmp r4,#4
 2760 08ca E9D1     	 bne .L122
 2761              	.LBE523:
 645:src/MightyBoard/Motherboard/Command.cc **** //							xprintf("%x %d" " (%s:%d)\n",EEPROM_START_ADDRESS + (eeprom_offsets::AXIS_HOME_POSITIONS_S
 646:src/MightyBoard/Motherboard/Command.cc **** //							uint16_t offset = eeprom_offsets::AXIS_HOME_POSITIONS_STEPS + 4*i;
 647:src/MightyBoard/Motherboard/Command.cc **** //							cli();
 648:src/MightyBoard/Motherboard/Command.cc **** //							eeprom_read_block(&(newPoint[i]), (void*) offset, 4);
 649:src/MightyBoard/Motherboard/Command.cc **** //							sei();
 650:src/MightyBoard/Motherboard/Command.cc **** 						}
 651:src/MightyBoard/Motherboard/Command.cc **** 					}
 652:src/MightyBoard/Motherboard/Command.cc **** 
 653:src/MightyBoard/Motherboard/Command.cc **** 					planner::definePosition(newPoint);
 2762              	 .loc 1 653 0
 2763 08cc 02A8     	 add r0,sp,#8
 2764 08ce FFF7FEFF 	 bl _ZN7planner14definePositionERK5Point
 2765 08d2 2FE1     	 b .L102
 2766              	.LVL227:
 2767              	.L120:
 2768              	.LBE522:
 2769              	.LBE519:
 2770              	.LBB524:
 654:src/MightyBoard/Motherboard/Command.cc **** 				}
 655:src/MightyBoard/Motherboard/Command.cc **** 
 656:src/MightyBoard/Motherboard/Command.cc **** 			}else if (command == HOST_CMD_SET_POT_VALUE){
 2771              	 .loc 1 656 0
 2772 08d4 912B     	 cmp r3,#145
 2773 08d6 1CD1     	 bne .L123
 2774              	.LVL228:
 2775              	.LBB525:
 2776              	.LBB526:
 2777              	.LBB527:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2778              	 .loc 2 91 0
 2779 08d8 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2780 08dc C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2781 08e0 5B88     	 ldrh r3,[r3,#2]
 2782 08e2 9BB2     	 uxth r3,r3
 2783              	.LBE527:
 2784              	.LBE526:
 657:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 3) {
 2785              	 .loc 1 657 0
 2786 08e4 022B     	 cmp r3,#2
 2787 08e6 40F22581 	 bls .L102
 2788              	.LBB528:
 658:src/MightyBoard/Motherboard/Command.cc **** 					pop8(); // remove the command code
 2789              	 .loc 1 658 0
 2790 08ea FFF7FEFF 	 bl _ZN7command4pop8Ev
 659:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t axis = pop8();
 2791              	 .loc 1 659 0
 2792 08ee FFF7FEFF 	 bl _ZN7command4pop8Ev
 2793 08f2 0446     	 mov r4,r0
 2794              	.LVL229:
 660:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t value = pop8();
 2795              	 .loc 1 660 0
 2796 08f4 FFF7FEFF 	 bl _ZN7command4pop8Ev
 2797              	.LVL230:
 2798 08f8 0146     	 mov r1,r0
 2799              	.LVL231:
 661:src/MightyBoard/Motherboard/Command.cc **** 					line_number++;
 2800              	 .loc 1 661 0
 2801 08fa 40F20003 	 movw r3,#:lower16:.LANCHOR4
 2802 08fe C0F20003 	 movt r3,#:upper16:.LANCHOR4
 2803 0902 1A68     	 ldr r2,[r3,#0]
 2804 0904 02F10102 	 add r2,r2,#1
 2805 0908 1A60     	 str r2,[r3,#0]
 662:src/MightyBoard/Motherboard/Command.cc ****                     steppers::setAxisPotValue(axis, value);
 2806              	 .loc 1 662 0
 2807 090a 2046     	 mov r0,r4
 2808              	.LVL232:
 2809 090c FFF7FEFF 	 bl _ZN8steppers15setAxisPotValueEhh
 2810              	.LVL233:
 2811 0910 10E1     	 b .L102
 2812              	.LVL234:
 2813              	.L123:
 2814              	.LBE528:
 2815              	.LBE525:
 2816              	.LBB529:
 663:src/MightyBoard/Motherboard/Command.cc **** 				}
 664:src/MightyBoard/Motherboard/Command.cc **** 			}else if (command == HOST_CMD_SET_RGB_LED){
 2817              	 .loc 1 664 0
 2818 0912 922B     	 cmp r3,#146
 2819 0914 29D1     	 bne .L124
 2820              	.LVL235:
 2821              	.LBB530:
 2822              	.LBB531:
 2823              	.LBB532:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2824              	 .loc 2 91 0
 2825 0916 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2826 091a C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2827 091e 5B88     	 ldrh r3,[r3,#2]
 2828 0920 9BB2     	 uxth r3,r3
 2829              	.LBE532:
 2830              	.LBE531:
 665:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 6) {
 2831              	 .loc 1 665 0
 2832 0922 052B     	 cmp r3,#5
 2833 0924 40F20681 	 bls .L102
 2834              	.LBB533:
 666:src/MightyBoard/Motherboard/Command.cc **** 					pop8(); // remove the command code
 2835              	 .loc 1 666 0
 2836 0928 FFF7FEFF 	 bl _ZN7command4pop8Ev
 667:src/MightyBoard/Motherboard/Command.cc **** 
 668:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t red = pop8();
 2837              	 .loc 1 668 0
 2838 092c FFF7FEFF 	 bl _ZN7command4pop8Ev
 2839 0930 0446     	 mov r4,r0
 2840              	.LVL236:
 669:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t green = pop8();
 2841              	 .loc 1 669 0
 2842 0932 FFF7FEFF 	 bl _ZN7command4pop8Ev
 2843              	.LVL237:
 2844 0936 0646     	 mov r6,r0
 2845              	.LVL238:
 670:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t blue = pop8();
 2846              	 .loc 1 670 0
 2847 0938 FFF7FEFF 	 bl _ZN7command4pop8Ev
 2848              	.LVL239:
 2849 093c 0746     	 mov r7,r0
 2850              	.LVL240:
 671:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t blink_rate = pop8();
 2851              	 .loc 1 671 0
 2852 093e FFF7FEFF 	 bl _ZN7command4pop8Ev
 2853              	.LVL241:
 2854 0942 0546     	 mov r5,r0
 2855              	.LVL242:
 672:src/MightyBoard/Motherboard/Command.cc **** 
 673:src/MightyBoard/Motherboard/Command.cc ****                     uint8_t effect = pop8();
 2856              	 .loc 1 673 0
 2857 0944 FFF7FEFF 	 bl _ZN7command4pop8Ev
 2858              	.LVL243:
 674:src/MightyBoard/Motherboard/Command.cc ****                     line_number++;
 2859              	 .loc 1 674 0
 2860 0948 40F20003 	 movw r3,#:lower16:.LANCHOR4
 2861 094c C0F20003 	 movt r3,#:upper16:.LANCHOR4
 2862 0950 1A68     	 ldr r2,[r3,#0]
 2863 0952 02F10102 	 add r2,r2,#1
 2864 0956 1A60     	 str r2,[r3,#0]
 675:src/MightyBoard/Motherboard/Command.cc ****                     RGB_LED::setLEDBlink(blink_rate);
 2865              	 .loc 1 675 0
 2866 0958 2846     	 mov r0,r5
 2867 095a FFF7FEFF 	 bl _ZN7RGB_LED11setLEDBlinkEh
 676:src/MightyBoard/Motherboard/Command.cc ****                     RGB_LED::setCustomColor(red, green, blue);
 2868              	 .loc 1 676 0
 2869 095e 2046     	 mov r0,r4
 2870 0960 3146     	 mov r1,r6
 2871 0962 3A46     	 mov r2,r7
 2872 0964 FFF7FEFF 	 bl _ZN7RGB_LED14setCustomColorEhhh
 2873 0968 E4E0     	 b .L102
 2874              	.LVL244:
 2875              	.L124:
 2876              	.LBE533:
 2877              	.LBE530:
 2878              	.LBB534:
 677:src/MightyBoard/Motherboard/Command.cc **** 
 678:src/MightyBoard/Motherboard/Command.cc **** 				}
 679:src/MightyBoard/Motherboard/Command.cc **** 			}else if (command == HOST_CMD_SET_BEEP){
 2879              	 .loc 1 679 0
 2880 096a 932B     	 cmp r3,#147
 2881 096c 1FD1     	 bne .L125
 2882              	.LVL245:
 2883              	.LBB535:
 2884              	.LBB536:
 2885              	.LBB537:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2886              	 .loc 2 91 0
 2887 096e 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2888 0972 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2889 0976 5B88     	 ldrh r3,[r3,#2]
 2890 0978 9BB2     	 uxth r3,r3
 2891              	.LBE537:
 2892              	.LBE536:
 680:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 6) {
 2893              	 .loc 1 680 0
 2894 097a 052B     	 cmp r3,#5
 2895 097c 40F2DA80 	 bls .L102
 2896              	.LBB538:
 681:src/MightyBoard/Motherboard/Command.cc **** 					pop8(); // remove the command code
 2897              	 .loc 1 681 0
 2898 0980 FFF7FEFF 	 bl _ZN7command4pop8Ev
 682:src/MightyBoard/Motherboard/Command.cc **** 					uint16_t frequency= pop16();
 2899              	 .loc 1 682 0
 2900 0984 FFF7FEFF 	 bl _ZN7command5pop16Ev
 2901 0988 0546     	 mov r5,r0
 2902              	.LVL246:
 683:src/MightyBoard/Motherboard/Command.cc **** 					uint16_t beep_length = pop16();
 2903              	 .loc 1 683 0
 2904 098a FFF7FEFF 	 bl _ZN7command5pop16Ev
 2905              	.LVL247:
 2906 098e 0446     	 mov r4,r0
 2907              	.LVL248:
 684:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t effect = pop8();
 2908              	 .loc 1 684 0
 2909 0990 FFF7FEFF 	 bl _ZN7command4pop8Ev
 2910              	.LVL249:
 685:src/MightyBoard/Motherboard/Command.cc **** 					line_number++;
 2911              	 .loc 1 685 0
 2912 0994 40F20003 	 movw r3,#:lower16:.LANCHOR4
 2913 0998 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 2914 099c 1A68     	 ldr r2,[r3,#0]
 2915 099e 02F10102 	 add r2,r2,#1
 2916 09a2 1A60     	 str r2,[r3,#0]
 686:src/MightyBoard/Motherboard/Command.cc ****                     Piezo::setTone(frequency, beep_length);
 2917              	 .loc 1 686 0
 2918 09a4 A8B2     	 uxth r0,r5
 2919 09a6 A1B2     	 uxth r1,r4
 2920 09a8 FFF7FEFF 	 bl _ZN5Piezo7setToneEtt
 2921 09ac C2E0     	 b .L102
 2922              	.LVL250:
 2923              	.L125:
 2924              	.LBE538:
 2925              	.LBE535:
 2926              	.LBB539:
 687:src/MightyBoard/Motherboard/Command.cc **** 
 688:src/MightyBoard/Motherboard/Command.cc **** 				}			
 689:src/MightyBoard/Motherboard/Command.cc **** 			}else if (command == HOST_CMD_TOOL_COMMAND) {
 2927              	 .loc 1 689 0
 2928 09ae 882B     	 cmp r3,#136
 2929 09b0 2AD1     	 bne .L126
 2930              	.LVL251:
 2931              	.LBB540:
 2932              	.LBB541:
 2933              	.LBB542:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2934              	 .loc 2 91 0
 2935 09b2 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2936 09b6 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2937 09ba 5B88     	 ldrh r3,[r3,#2]
 2938 09bc 9BB2     	 uxth r3,r3
 2939              	.LBE542:
 2940              	.LBE541:
 690:src/MightyBoard/Motherboard/Command.cc **** //				xprintf("HOST_CMD_TOOL_COMMAND" " (%s:%d)\n",_F_,_L_);
 691:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 4) { // needs a payload
 2941              	 .loc 1 691 0
 2942 09be 032B     	 cmp r3,#3
 2943 09c0 40F2B880 	 bls .L102
 2944              	.LVL252:
 2945              	.LBB543:
 2946              	.LBB544:
 2947              	.LBB545:
 105:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufSizeType actual_index = (index + start) % size;
 2948              	 .loc 2 105 0
 2949 09c4 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2950 09c8 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2951 09cc 9C88     	 ldrh r4,[r3,#4]
 2952 09ce A4B2     	 uxth r4,r4
 2953              	.LVL253:
 2954              	.LBE545:
 2955              	.LBE544:
 2956              	.LBB547:
 2957              	.LBB548:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 2958              	 .loc 2 91 0
 2959 09d0 5988     	 ldrh r1,[r3,#2]
 2960 09d2 89B2     	 uxth r1,r1
 2961              	.LBE548:
 2962              	.LBE547:
 2963              	.LBB549:
 2964              	.LBB546:
 105:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufSizeType actual_index = (index + start) % size;
 2965              	 .loc 2 105 0
 2966 09d4 04F10303 	 add r3,r4,#3
 2967 09d8 93FBF2F4 	 sdiv r4,r3,r2
 2968              	.LVL254:
 2969 09dc 02FB1433 	 mls r3,r2,r4,r3
 2970              	.LVL255:
 2971              	 .loc 2 106 0
 2972 09e0 9BB2     	 uxth r3,r3
 2973              	.LBE546:
 2974              	.LBE549:
 692:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t payload_length = command_buffer[3];
 693:src/MightyBoard/Motherboard/Command.cc **** 					if (command_buffer.getLength() >= 4+payload_length) {
 2975              	 .loc 1 693 0
 2976 09e2 C35C     	 ldrb r3,[r0,r3]
 2977 09e4 03F10403 	 add r3,r3,#4
 2978 09e8 9942     	 cmp r1,r3
 2979 09ea C0F2A380 	 blt .L102
 694:src/MightyBoard/Motherboard/Command.cc **** 							pop8(); // remove the command code
 2980              	 .loc 1 694 0
 2981 09ee FFF7FEFF 	 bl _ZN7command4pop8Ev
 695:src/MightyBoard/Motherboard/Command.cc **** 							line_number++;
 2982              	 .loc 1 695 0
 2983 09f2 40F20003 	 movw r3,#:lower16:.LANCHOR4
 2984 09f6 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 2985 09fa 1A68     	 ldr r2,[r3,#0]
 2986 09fc 02F10102 	 add r2,r2,#1
 2987 0a00 1A60     	 str r2,[r3,#0]
 696:src/MightyBoard/Motherboard/Command.cc **** 							processExtruderCommandPacket();
 2988              	 .loc 1 696 0
 2989 0a02 FFF7FEFF 	 bl _ZN7command28processExtruderCommandPacketEv
 2990 0a06 95E0     	 b .L102
 2991              	.LVL256:
 2992              	.L126:
 2993              	.LBE543:
 2994              	.LBE540:
 2995              	.LBB550:
 697:src/MightyBoard/Motherboard/Command.cc **** 				}
 698:src/MightyBoard/Motherboard/Command.cc **** 			}
 699:src/MightyBoard/Motherboard/Command.cc **** 			} else if (command == HOST_CMD_SET_BUILD_PERCENT){
 2996              	 .loc 1 699 0
 2997 0a08 962B     	 cmp r3,#150
 2998 0a0a 17D1     	 bne .L127
 2999              	.LVL257:
 3000              	.LBB551:
 3001              	.LBB552:
 3002              	.LBB553:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 3003              	 .loc 2 91 0
 3004 0a0c 40F20003 	 movw r3,#:lower16:.LANCHOR0
 3005 0a10 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 3006 0a14 5B88     	 ldrh r3,[r3,#2]
 3007 0a16 9BB2     	 uxth r3,r3
 3008              	.LBE553:
 3009              	.LBE552:
 700:src/MightyBoard/Motherboard/Command.cc **** //				xprintf("HOST_CMD_SET_BUILD_PERCENT) {" " (%s:%d)\n",_F_,_L_);
 701:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 3){
 3010              	 .loc 1 701 0
 3011 0a18 022B     	 cmp r3,#2
 3012 0a1a 40F28B80 	 bls .L102
 3013              	.LBB554:
 702:src/MightyBoard/Motherboard/Command.cc **** 					pop8(); // remove the command code
 3014              	 .loc 1 702 0
 3015 0a1e FFF7FEFF 	 bl _ZN7command4pop8Ev
 703:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t percent = pop8();
 3016              	 .loc 1 703 0
 3017 0a22 FFF7FEFF 	 bl _ZN7command4pop8Ev
 704:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t ignore = pop8(); // remove the reserved byte
 3018              	 .loc 1 704 0
 3019 0a26 FFF7FEFF 	 bl _ZN7command4pop8Ev
 705:src/MightyBoard/Motherboard/Command.cc **** 					line_number++;
 3020              	 .loc 1 705 0
 3021 0a2a 40F20003 	 movw r3,#:lower16:.LANCHOR4
 3022 0a2e C0F20003 	 movt r3,#:upper16:.LANCHOR4
 3023 0a32 1A68     	 ldr r2,[r3,#0]
 3024 0a34 02F10102 	 add r2,r2,#1
 3025 0a38 1A60     	 str r2,[r3,#0]
 3026 0a3a 7BE0     	 b .L102
 3027              	.LVL258:
 3028              	.L127:
 3029              	.LBE554:
 3030              	.LBE551:
 3031              	.LBB555:
 706:src/MightyBoard/Motherboard/Command.cc **** //					interface::setBuildPercentage(percent);
 707:src/MightyBoard/Motherboard/Command.cc **** 				}
 708:src/MightyBoard/Motherboard/Command.cc **** 			} else if (command == HOST_CMD_QUEUE_SONG ) //queue a song for playing
 3032              	 .loc 1 708 0
 3033 0a3c 972B     	 cmp r3,#151
 3034 0a3e 23D1     	 bne .L128
 3035              	.LVL259:
 3036              	.LBB556:
 3037              	.LBB557:
 3038              	.LBB558:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 3039              	 .loc 2 91 0
 3040 0a40 40F20003 	 movw r3,#:lower16:.LANCHOR0
 3041 0a44 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 3042 0a48 5B88     	 ldrh r3,[r3,#2]
 3043 0a4a 9BB2     	 uxth r3,r3
 3044              	.LBE558:
 3045              	.LBE557:
 709:src/MightyBoard/Motherboard/Command.cc ****  			{
 710:src/MightyBoard/Motherboard/Command.cc **** 				/// Error tone is 0,
 711:src/MightyBoard/Motherboard/Command.cc **** 				/// End tone is 1,
 712:src/MightyBoard/Motherboard/Command.cc **** 				/// all other tones user-defined (defaults to end-tone)
 713:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 2){
 3046              	 .loc 1 713 0
 3047 0a4c 012B     	 cmp r3,#1
 3048 0a4e 71D9     	 bls .L102
 3049              	.LBB559:
 714:src/MightyBoard/Motherboard/Command.cc **** 					pop8(); // remove the command code
 3050              	 .loc 1 714 0
 3051 0a50 FFF7FEFF 	 bl _ZN7command4pop8Ev
 715:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t songId = pop8();
 3052              	 .loc 1 715 0
 3053 0a54 FFF7FEFF 	 bl _ZN7command4pop8Ev
 3054              	.LVL260:
 716:src/MightyBoard/Motherboard/Command.cc **** 					line_number++;
 3055              	 .loc 1 716 0
 3056 0a58 40F20003 	 movw r3,#:lower16:.LANCHOR4
 3057 0a5c C0F20003 	 movt r3,#:upper16:.LANCHOR4
 3058 0a60 1A68     	 ldr r2,[r3,#0]
 3059 0a62 02F10102 	 add r2,r2,#1
 3060 0a66 1A60     	 str r2,[r3,#0]
 717:src/MightyBoard/Motherboard/Command.cc **** 					if(songId == 0)
 3061              	 .loc 1 717 0
 3062 0a68 20B9     	 cbnz r0,.L129
 718:src/MightyBoard/Motherboard/Command.cc **** 						Piezo::errorTone(4);
 3063              	 .loc 1 718 0
 3064 0a6a 4FF00400 	 mov r0,#4
 3065              	.LVL261:
 3066 0a6e FFF7FEFF 	 bl _ZN5Piezo9errorToneEh
 3067 0a72 5FE0     	 b .L102
 3068              	.LVL262:
 3069              	.L129:
 719:src/MightyBoard/Motherboard/Command.cc **** 					else if (songId == 1 )
 3070              	 .loc 1 719 0
 3071 0a74 0128     	 cmp r0,#1
 3072 0a76 02D1     	 bne .L130
 720:src/MightyBoard/Motherboard/Command.cc **** 						Piezo::doneTone();
 3073              	 .loc 1 720 0
 3074 0a78 FFF7FEFF 	 bl _ZN5Piezo8doneToneEv
 3075              	.LVL263:
 3076 0a7c 5AE0     	 b .L102
 3077              	.LVL264:
 3078              	.L130:
 721:src/MightyBoard/Motherboard/Command.cc **** 					else
 722:src/MightyBoard/Motherboard/Command.cc **** 						Piezo::errorTone(2);
 3079              	 .loc 1 722 0
 3080 0a7e 4FF00200 	 mov r0,#2
 3081              	.LVL265:
 3082 0a82 FFF7FEFF 	 bl _ZN5Piezo9errorToneEh
 3083 0a86 55E0     	 b .L102
 3084              	.LVL266:
 3085              	.L128:
 3086              	.LBE559:
 3087              	.LBE556:
 3088              	.LBB560:
 723:src/MightyBoard/Motherboard/Command.cc **** 				}
 724:src/MightyBoard/Motherboard/Command.cc **** 
 725:src/MightyBoard/Motherboard/Command.cc **** 			} else if ( command == HOST_CMD_RESET_TO_FACTORY) {
 3089              	 .loc 1 725 0
 3090 0a88 982B     	 cmp r3,#152
 3091 0a8a 1ED1     	 bne .L131
 3092              	.LVL267:
 3093              	.LBB561:
 3094              	.LBB562:
 3095              	.LBB563:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 3096              	 .loc 2 91 0
 3097 0a8c 40F20003 	 movw r3,#:lower16:.LANCHOR0
 3098 0a90 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 3099 0a94 5B88     	 ldrh r3,[r3,#2]
 3100 0a96 9BB2     	 uxth r3,r3
 3101              	.LBE563:
 3102              	.LBE562:
 726:src/MightyBoard/Motherboard/Command.cc **** 				/// reset EEPROM settings to the factory value. Reboot bot.
 727:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 2){
 3103              	 .loc 1 727 0
 3104 0a98 012B     	 cmp r3,#1
 3105 0a9a 4BD9     	 bls .L102
 3106              	.LBB564:
 728:src/MightyBoard/Motherboard/Command.cc **** 				pop8(); // remove the command code
 3107              	 .loc 1 728 0
 3108 0a9c FFF7FEFF 	 bl _ZN7command4pop8Ev
 729:src/MightyBoard/Motherboard/Command.cc **** 				uint8_t options = pop8();
 3109              	 .loc 1 729 0
 3110 0aa0 FFF7FEFF 	 bl _ZN7command4pop8Ev
 730:src/MightyBoard/Motherboard/Command.cc **** 				line_number++;
 3111              	 .loc 1 730 0
 3112 0aa4 40F20003 	 movw r3,#:lower16:.LANCHOR4
 3113 0aa8 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 3114 0aac 1A68     	 ldr r2,[r3,#0]
 3115 0aae 02F10102 	 add r2,r2,#1
 3116 0ab2 1A60     	 str r2,[r3,#0]
 731:src/MightyBoard/Motherboard/Command.cc **** 				eeprom::factoryResetEEPROM();
 3117              	 .loc 1 731 0
 3118 0ab4 FFF7FEFF 	 bl _ZN6eeprom18factoryResetEEPROMEv
 732:src/MightyBoard/Motherboard/Command.cc **** 				Motherboard::getBoard().reset(false);
 3119              	 .loc 1 732 0
 3120 0ab8 40F20000 	 movw r0,#:lower16:_ZN11Motherboard11motherboardE
 3121 0abc C0F20000 	 movt r0,#:upper16:_ZN11Motherboard11motherboardE
 3122 0ac0 4FF00001 	 mov r1,#0
 3123 0ac4 FFF7FEFF 	 bl _ZN11Motherboard5resetEb
 3124 0ac8 34E0     	 b .L102
 3125              	.LVL268:
 3126              	.L131:
 3127              	.LBE564:
 3128              	.LBE561:
 3129              	.LBB565:
 733:src/MightyBoard/Motherboard/Command.cc **** 				}
 734:src/MightyBoard/Motherboard/Command.cc **** 			} else if ( command == HOST_CMD_BUILD_START_NOTIFICATION) {
 3130              	 .loc 1 734 0
 3131 0aca 992B     	 cmp r3,#153
 3132 0acc 1AD1     	 bne .L132
 3133              	.LVL269:
 3134              	.LBB566:
 3135              	.LBB567:
 3136              	.LBB568:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 3137              	 .loc 2 91 0
 3138 0ace 40F20003 	 movw r3,#:lower16:.LANCHOR0
 3139 0ad2 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 3140 0ad6 5B88     	 ldrh r3,[r3,#2]
 3141 0ad8 9BB2     	 uxth r3,r3
 3142              	.LBE568:
 3143              	.LBE567:
 735:src/MightyBoard/Motherboard/Command.cc **** //				xprintf("HOST_CMD_BUILD_START_NOTIFICATION" " (%s:%d)\n",_F_,_L_);
 736:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 5){
 3144              	 .loc 1 736 0
 3145 0ada 042B     	 cmp r3,#4
 3146 0adc 2AD9     	 bls .L102
 3147              	.LBB569:
 737:src/MightyBoard/Motherboard/Command.cc **** 					pop8(); // remove the command code
 3148              	 .loc 1 737 0
 3149 0ade FFF7FEFF 	 bl _ZN7command4pop8Ev
 738:src/MightyBoard/Motherboard/Command.cc **** 					int buildSteps = pop32();
 3150              	 .loc 1 738 0
 3151 0ae2 FFF7FEFF 	 bl _ZN7command5pop32Ev
 739:src/MightyBoard/Motherboard/Command.cc **** 					line_number++;
 3152              	 .loc 1 739 0
 3153 0ae6 40F20003 	 movw r3,#:lower16:.LANCHOR4
 3154 0aea C0F20003 	 movt r3,#:upper16:.LANCHOR4
 3155 0aee 1A68     	 ldr r2,[r3,#0]
 3156 0af0 02F10102 	 add r2,r2,#1
 3157 0af4 1A60     	 str r2,[r3,#0]
 740:src/MightyBoard/Motherboard/Command.cc **** 					host::handleBuildStartNotification(command_buffer);		
 3158              	 .loc 1 740 0
 3159 0af6 40F20000 	 movw r0,#:lower16:.LANCHOR0
 3160 0afa C0F20000 	 movt r0,#:upper16:.LANCHOR0
 3161 0afe FFF7FEFF 	 bl _ZN4host28handleBuildStartNotificationER19CircularBufferTemplIhE
 3162 0b02 17E0     	 b .L102
 3163              	.LVL270:
 3164              	.L132:
 3165              	.LBE569:
 3166              	.LBE566:
 3167              	.LBB570:
 741:src/MightyBoard/Motherboard/Command.cc **** 				}
 742:src/MightyBoard/Motherboard/Command.cc **** 			 } else if ( command == HOST_CMD_BUILD_END_NOTIFICATION) {
 3168              	 .loc 1 742 0
 3169 0b04 9A2B     	 cmp r3,#154
 3170 0b06 15D1     	 bne .L102
 3171              	.LVL271:
 3172              	.LBB571:
 3173              	.LBB572:
 3174              	.LBB573:
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
 3175              	 .loc 2 91 0
 3176 0b08 40F20003 	 movw r3,#:lower16:.LANCHOR0
 3177 0b0c C0F20003 	 movt r3,#:upper16:.LANCHOR0
 3178 0b10 5B88     	 ldrh r3,[r3,#2]
 3179 0b12 9BB2     	 uxth r3,r3
 3180              	.LBE573:
 3181              	.LBE572:
 743:src/MightyBoard/Motherboard/Command.cc **** 				if (command_buffer.getLength() >= 2){
 3182              	 .loc 1 743 0
 3183 0b14 012B     	 cmp r3,#1
 3184 0b16 0DD9     	 bls .L102
 3185              	.LBB574:
 744:src/MightyBoard/Motherboard/Command.cc **** 					pop8(); // remove the command code
 3186              	 .loc 1 744 0
 3187 0b18 FFF7FEFF 	 bl _ZN7command4pop8Ev
 745:src/MightyBoard/Motherboard/Command.cc **** 					uint8_t flags = pop8();
 3188              	 .loc 1 745 0
 3189 0b1c FFF7FEFF 	 bl _ZN7command4pop8Ev
 3190              	.LVL272:
 746:src/MightyBoard/Motherboard/Command.cc **** 					line_number++;
 3191              	 .loc 1 746 0
 3192 0b20 40F20003 	 movw r3,#:lower16:.LANCHOR4
 3193 0b24 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 3194 0b28 1A68     	 ldr r2,[r3,#0]
 3195 0b2a 02F10102 	 add r2,r2,#1
 3196 0b2e 1A60     	 str r2,[r3,#0]
 747:src/MightyBoard/Motherboard/Command.cc **** 					host::handleBuildStopNotification(flags);
 3197              	 .loc 1 747 0
 3198 0b30 FFF7FEFF 	 bl _ZN4host27handleBuildStopNotificationEh
 3199              	.LVL273:
 3200              	.L102:
 3201              	.LBE574:
 3202              	.LBE571:
 3203              	.LBE570:
 3204              	.LBE565:
 3205              	.LBE560:
 3206              	.LBE555:
 3207              	.LBE550:
 3208              	.LBE539:
 3209              	.LBE534:
 3210              	.LBE529:
 3211              	.LBE524:
 3212              	.LBE518:
 3213              	.LBE512:
 3214              	.LBE507:
 3215              	.LBE502:
 3216              	.LBE497:
 3217              	.LBE492:
 3218              	.LBE487:
 3219              	.LBE482:
 3220              	.LBE477:
 3221              	.LBE471:
 3222              	.LBE468:
 3223              	.LBE467:
 3224              	.LBE464:
 3225              	.LBE461:
 3226              	.LBE460:
 748:src/MightyBoard/Motherboard/Command.cc **** 				}
 749:src/MightyBoard/Motherboard/Command.cc **** 			
 750:src/MightyBoard/Motherboard/Command.cc **** 			} else {
 751:src/MightyBoard/Motherboard/Command.cc **** 			}
 752:src/MightyBoard/Motherboard/Command.cc **** 		}
 753:src/MightyBoard/Motherboard/Command.cc **** 	}
 754:src/MightyBoard/Motherboard/Command.cc **** 	
 755:src/MightyBoard/Motherboard/Command.cc **** 	/// we're not handling overflows in the line counter.  Possibly implement this later.
 756:src/MightyBoard/Motherboard/Command.cc **** 	if(line_number > MAX_LINE_COUNT){
 3227              	 .loc 1 756 0
 3228 0b34 40F20003 	 movw r3,#:lower16:.LANCHOR4
 3229 0b38 C0F20003 	 movt r3,#:upper16:.LANCHOR4
 3230 0b3c 4FF44A42 	 mov r2,#51712
 3231 0b40 C3F69A32 	 movt r2,15258
 3232 0b44 1B68     	 ldr r3,[r3,#0]
 3233 0b46 9342     	 cmp r3,r2
 3234 0b48 1CD9     	 bls .L66
 757:src/MightyBoard/Motherboard/Command.cc **** 		line_number = MAX_LINE_COUNT + 1;
 3235              	 .loc 1 757 0
 3236 0b4a 40F20003 	 movw r3,#:lower16:.LANCHOR4
 3237 0b4e C0F20003 	 movt r3,#:upper16:.LANCHOR4
 3238 0b52 4CF60122 	 movw r2,#51713
 3239 0b56 C3F69A32 	 movt r2,15258
 3240 0b5a 1A60     	 str r2,[r3,#0]
 3241 0b5c 12E0     	 b .L66
 3242              	.LVL274:
 3243              	.L70:
 316:src/MightyBoard/Motherboard/Command.cc **** 		if(!sdcard::playbackHasNext() && (sd_count < sdcard::getFileSize()) && !sdcard_reset){
 3244              	 .loc 1 316 0
 3245 0b5e FFF7FEFF 	 bl _ZN6sdcard15playbackHasNextEv
 3246 0b62 0028     	 cmp r0,#0
 3247 0b64 3FF488AA 	 beq .L133
 3248              	.L73:
 328:src/MightyBoard/Motherboard/Command.cc **** 		}else if(!sdcard::playbackHasNext() && command_buffer.isEmpty()){
 3249              	 .loc 1 328 0
 3250 0b68 FFF7FEFF 	 bl _ZN6sdcard15playbackHasNextEv
 3251 0b6c 0028     	 cmp r0,#0
 3252 0b6e 3FF4A9AA 	 beq .L134
 3253 0b72 FFF7B0BA 	 b .L68
 3254              	.LVL275:
 3255              	.L77:
 337:src/MightyBoard/Motherboard/Command.cc **** 		if(!utility::playbackHasNext() && command_buffer.isEmpty()){
 3256              	 .loc 1 337 0
 3257 0b76 FFF7FEFF 	 bl _ZN7utility15playbackHasNextEv
 3258 0b7a 0028     	 cmp r0,#0
 3259 0b7c 3FF4DCAA 	 beq .L135
 3260 0b80 FFF7E3BA 	 b .L75
 3261              	.LVL276:
 3262              	.L66:
 3263              	.LBE413:
 758:src/MightyBoard/Motherboard/Command.cc **** 	}
 759:src/MightyBoard/Motherboard/Command.cc **** }
 3264              	 .loc 1 759 0
 3265 0b84 16B0     	 add sp,sp,#88
 3266 0b86 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 3267              	 .cfi_endproc
 3268              	.LFE134:
 3270 0b8a 00BF     	 .section .text._GLOBAL__sub_I__ZN7command11buffer_dataE,"ax",%progbits
 3271              	 .align 2
 3272              	 .thumb
 3273              	 .thumb_func
 3275              	_GLOBAL__sub_I__ZN7command11buffer_dataE:
 3276              	.LFB146:
 760:src/MightyBoard/Motherboard/Command.cc **** }
 3277              	 .loc 1 760 0
 3278              	 .cfi_startproc
 3279              	 
 3280              	 
 3281 0000 10B5     	 push {r4,lr}
 3282              	.LCFI9:
 3283              	 .cfi_def_cfa_offset 8
 3284              	 .cfi_offset 14,-4
 3285              	 .cfi_offset 4,-8
 3286              	.LVL277:
 3287              	.LBB580:
 3288              	.LBB581:
 3289              	 .file 4 "src/MightyBoard/shared/LPCPort.hh"
   1:src/MightyBoard/shared/LPCPort.hh **** /*
   2:src/MightyBoard/shared/LPCPort.hh **** * Copyright 2010 by Adam Mayer	 <adam@makerbot.com>
   3:src/MightyBoard/shared/LPCPort.hh **** *
   4:src/MightyBoard/shared/LPCPort.hh **** * This program is free software: you can redistribute it and/or modify
   5:src/MightyBoard/shared/LPCPort.hh **** * it under the terms of the GNU General Public License as published by
   6:src/MightyBoard/shared/LPCPort.hh **** * the Free Software Foundation, either version 3 of the License, or
   7:src/MightyBoard/shared/LPCPort.hh **** * (at your option) any later version.
   8:src/MightyBoard/shared/LPCPort.hh **** *
   9:src/MightyBoard/shared/LPCPort.hh **** * This program is distributed in the hope that it will be useful,
  10:src/MightyBoard/shared/LPCPort.hh **** * but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:src/MightyBoard/shared/LPCPort.hh **** * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:src/MightyBoard/shared/LPCPort.hh **** * GNU General Public License for more details.
  13:src/MightyBoard/shared/LPCPort.hh **** *
  14:src/MightyBoard/shared/LPCPort.hh **** * You should have received a copy of the GNU General Public License
  15:src/MightyBoard/shared/LPCPort.hh **** * along with this program.  If not, see <http://www.gnu.org/licenses/>
  16:src/MightyBoard/shared/LPCPort.hh **** */
  17:src/MightyBoard/shared/LPCPort.hh **** 
  18:src/MightyBoard/shared/LPCPort.hh **** #ifndef SHARED_AVR_PORT_HH_
  19:src/MightyBoard/shared/LPCPort.hh **** #define SHARED_AVR_PORT_HH_
  20:src/MightyBoard/shared/LPCPort.hh **** 
  21:src/MightyBoard/shared/LPCPort.hh **** #define __STDC_LIMIT_MACROS
  22:src/MightyBoard/shared/LPCPort.hh **** //#include <stdint.h>
  23:src/MightyBoard/shared/LPCPort.hh **** //#include <util/atomic.h>
  24:src/MightyBoard/shared/LPCPort.hh **** 
  25:src/MightyBoard/shared/LPCPort.hh **** extern "C" {
  26:src/MightyBoard/shared/LPCPort.hh **** 	#include "lpc_types.h"
  27:src/MightyBoard/shared/LPCPort.hh **** 	#include "lpc17xx_gpio.h"
  28:src/MightyBoard/shared/LPCPort.hh **** }
  29:src/MightyBoard/shared/LPCPort.hh **** 
  30:src/MightyBoard/shared/LPCPort.hh **** 
  31:src/MightyBoard/shared/LPCPort.hh **** #define NULL_PORT 0xff
  32:src/MightyBoard/shared/LPCPort.hh **** 
  33:src/MightyBoard/shared/LPCPort.hh **** class LPCPort {
  34:src/MightyBoard/shared/LPCPort.hh **** private:
  35:src/MightyBoard/shared/LPCPort.hh **** 	const uint8_t port_base;
  36:src/MightyBoard/shared/LPCPort.hh **** 	friend class Pin;
  37:src/MightyBoard/shared/LPCPort.hh **** public:
  38:src/MightyBoard/shared/LPCPort.hh **** 	LPCPort();
  39:src/MightyBoard/shared/LPCPort.hh **** 	LPCPort(uint8_t port_base_in);
  40:src/MightyBoard/shared/LPCPort.hh **** 	bool isNull() const;
  41:src/MightyBoard/shared/LPCPort.hh **** 	void setPinDirectionOut(uint8_t pin_index) const;
  42:src/MightyBoard/shared/LPCPort.hh **** 	void setPinDirectionIn(uint8_t pin_index) const;
  43:src/MightyBoard/shared/LPCPort.hh **** 	bool getPin(uint8_t pin_index) const;
  44:src/MightyBoard/shared/LPCPort.hh **** 	void setPinOn(uint8_t pin_index) const;
  45:src/MightyBoard/shared/LPCPort.hh **** 	void setPinOff(uint8_t pin_index) const;
  46:src/MightyBoard/shared/LPCPort.hh **** };
  47:src/MightyBoard/shared/LPCPort.hh **** 
  48:src/MightyBoard/shared/LPCPort.hh **** 
  49:src/MightyBoard/shared/LPCPort.hh **** const LPCPort Port0(0);
 3290              	 .loc 4 49 0
 3291 0002 40F20000 	 movw r0,#:lower16:.LANCHOR15
 3292 0006 C0F20000 	 movt r0,#:upper16:.LANCHOR15
 3293 000a 4FF00001 	 mov r1,#0
 3294 000e FFF7FEFF 	 bl _ZN7LPCPortC1Eh
  50:src/MightyBoard/shared/LPCPort.hh **** const LPCPort Port1(1);
 3295              	 .loc 4 50 0
 3296 0012 40F20000 	 movw r0,#:lower16:.LANCHOR16
 3297 0016 C0F20000 	 movt r0,#:upper16:.LANCHOR16
 3298 001a 4FF00101 	 mov r1,#1
 3299 001e FFF7FEFF 	 bl _ZN7LPCPortC1Eh
  51:src/MightyBoard/shared/LPCPort.hh **** const LPCPort Port2(2);
 3300              	 .loc 4 51 0
 3301 0022 40F20000 	 movw r0,#:lower16:.LANCHOR17
 3302 0026 C0F20000 	 movt r0,#:upper16:.LANCHOR17
 3303 002a 4FF00201 	 mov r1,#2
 3304 002e FFF7FEFF 	 bl _ZN7LPCPortC1Eh
  52:src/MightyBoard/shared/LPCPort.hh **** const LPCPort Port3(3);
 3305              	 .loc 4 52 0
 3306 0032 40F20000 	 movw r0,#:lower16:.LANCHOR18
 3307 0036 C0F20000 	 movt r0,#:upper16:.LANCHOR18
 3308 003a 4FF00301 	 mov r1,#3
 3309 003e FFF7FEFF 	 bl _ZN7LPCPortC1Eh
  53:src/MightyBoard/shared/LPCPort.hh **** const LPCPort Port4(4);
 3310              	 .loc 4 53 0
 3311 0042 40F20000 	 movw r0,#:lower16:.LANCHOR19
 3312 0046 C0F20000 	 movt r0,#:upper16:.LANCHOR19
 3313 004a 4FF00401 	 mov r1,#4
 3314 004e FFF7FEFF 	 bl _ZN7LPCPortC1Eh
  54:src/MightyBoard/shared/LPCPort.hh **** 
  55:src/MightyBoard/shared/LPCPort.hh **** const LPCPort NullPort(0xff);
 3315              	 .loc 4 55 0
 3316 0052 40F20004 	 movw r4,#:lower16:.LANCHOR20
 3317 0056 C0F20004 	 movt r4,#:upper16:.LANCHOR20
 3318 005a 2046     	 mov r0,r4
 3319 005c 4FF0FF01 	 mov r1,#255
 3320 0060 FFF7FEFF 	 bl _ZN7LPCPortC1Eh
 3321              	 .file 5 "src/MightyBoard/shared/Pin.hh"
   1:src/MightyBoard/shared/Pin.hh **** #ifndef PIN_HH
   2:src/MightyBoard/shared/Pin.hh **** #define PIN_HH
   3:src/MightyBoard/shared/Pin.hh **** 
   4:src/MightyBoard/shared/Pin.hh **** #include "LPCPort.hh"
   5:src/MightyBoard/shared/Pin.hh **** #include "Pin.hh"
   6:src/MightyBoard/shared/Pin.hh **** extern "C" {
   7:src/MightyBoard/shared/Pin.hh **** 	#include "lpc17xx_gpio.h"
   8:src/MightyBoard/shared/Pin.hh **** 	#include "lpc17xx_pinsel.h"
   9:src/MightyBoard/shared/Pin.hh **** 	#include "comm.h"
  10:src/MightyBoard/shared/Pin.hh **** }
  11:src/MightyBoard/shared/Pin.hh **** 
  12:src/MightyBoard/shared/Pin.hh **** /// \ingroup HardwareLibraries
  13:src/MightyBoard/shared/Pin.hh **** class Pin {
  14:src/MightyBoard/shared/Pin.hh **** private:
  15:src/MightyBoard/shared/Pin.hh **** 	uint8_t port_base;
  16:src/MightyBoard/shared/Pin.hh **** 	bool is_null;
  17:src/MightyBoard/shared/Pin.hh **** 	uint8_t pin_index;
  18:src/MightyBoard/shared/Pin.hh **** 	uint8_t pin_mask;
  19:src/MightyBoard/shared/Pin.hh **** 	uint8_t pin_mask_inverted;
  20:src/MightyBoard/shared/Pin.hh **** 
  21:src/MightyBoard/shared/Pin.hh **** public:
  22:src/MightyBoard/shared/Pin.hh **** 	Pin();
  23:src/MightyBoard/shared/Pin.hh **** 	Pin(const LPCPort& port_in, uint8_t pin_index_in);
  24:src/MightyBoard/shared/Pin.hh **** 	Pin(const Pin& other_pin);
  25:src/MightyBoard/shared/Pin.hh **** 	bool isNull() const;
  26:src/MightyBoard/shared/Pin.hh **** 	void setDirection(bool out) const;
  27:src/MightyBoard/shared/Pin.hh **** 	bool /*Pin::*/getValue() const {
  28:src/MightyBoard/shared/Pin.hh **** 		if (is_null)
  29:src/MightyBoard/shared/Pin.hh **** 			return false; // null pin is always low ... ?
  30:src/MightyBoard/shared/Pin.hh **** 		return ((uint8_t)(FIO_ReadValue(port_base) & _BV(pin_index))?1:0);
  31:src/MightyBoard/shared/Pin.hh **** //		return (uint8_t)((uint8_t)PINx & (uint8_t)pin_mask) != 0;
  32:src/MightyBoard/shared/Pin.hh **** 	};
  33:src/MightyBoard/shared/Pin.hh **** 
  34:src/MightyBoard/shared/Pin.hh **** 	void /*Pin::*/setValue(bool on) const {
  35:src/MightyBoard/shared/Pin.hh **** 		if (is_null)
  36:src/MightyBoard/shared/Pin.hh **** 		 	return;
  37:src/MightyBoard/shared/Pin.hh **** 		// uint8_t oldSREG = SREG;
  38:src/MightyBoard/shared/Pin.hh **** 
  39:src/MightyBoard/shared/Pin.hh **** //		xprintf("on:%d port_base:%d pi_index:%d" " (%s:%d)\n",on,port_base,pin_index,_F_,_L_);
  40:src/MightyBoard/shared/Pin.hh **** 		// cli();
  41:src/MightyBoard/shared/Pin.hh **** 		if (on) {
  42:src/MightyBoard/shared/Pin.hh **** //			PORTx |= pin_mask;
  43:src/MightyBoard/shared/Pin.hh **** //			xprintf("%x (%s:%d)\n",&GPIO_SetValue,_F_,_L_);
  44:src/MightyBoard/shared/Pin.hh **** 			GPIO_SetValue(port_base, _BV(pin_index));
  45:src/MightyBoard/shared/Pin.hh **** 		} else {
  46:src/MightyBoard/shared/Pin.hh **** //			PORTx &= pin_mask_inverted;
  47:src/MightyBoard/shared/Pin.hh **** //			xprintf("%x (%s:%d)\n",&GPIO_ClearValue,_F_,_L_);
  48:src/MightyBoard/shared/Pin.hh **** 			GPIO_ClearValue(port_base, _BV(pin_index));
  49:src/MightyBoard/shared/Pin.hh **** 		}
  50:src/MightyBoard/shared/Pin.hh **** 		// SREG = oldSREG;
  51:src/MightyBoard/shared/Pin.hh **** 	};
  52:src/MightyBoard/shared/Pin.hh **** 
  53:src/MightyBoard/shared/Pin.hh **** 	void /*Pin::*/setValueOn() const {
  54:src/MightyBoard/shared/Pin.hh **** 		if (is_null)
  55:src/MightyBoard/shared/Pin.hh **** 		 	return;
  56:src/MightyBoard/shared/Pin.hh **** 		// uint8_t oldSREG = SREG;
  57:src/MightyBoard/shared/Pin.hh **** 		// cli();
  58:src/MightyBoard/shared/Pin.hh **** //		PORTx |= pin_mask;
  59:src/MightyBoard/shared/Pin.hh **** 		GPIO_SetValue(port_base, _BV(pin_index));
  60:src/MightyBoard/shared/Pin.hh **** 		// SREG = oldSREG;
  61:src/MightyBoard/shared/Pin.hh **** 	};
  62:src/MightyBoard/shared/Pin.hh **** 
  63:src/MightyBoard/shared/Pin.hh **** 	void /*Pin::*/setValueOff() const {
  64:src/MightyBoard/shared/Pin.hh **** 		// if (is_null)
  65:src/MightyBoard/shared/Pin.hh **** 		// 	return;
  66:src/MightyBoard/shared/Pin.hh **** 		// uint8_t oldSREG = SREG;
  67:src/MightyBoard/shared/Pin.hh **** 		// cli();
  68:src/MightyBoard/shared/Pin.hh **** //		PORTx &= pin_mask_inverted;
  69:src/MightyBoard/shared/Pin.hh **** 		GPIO_ClearValue(port_base, _BV(pin_index));
  70:src/MightyBoard/shared/Pin.hh **** 		// SREG = oldSREG;
  71:src/MightyBoard/shared/Pin.hh **** 	};
  72:src/MightyBoard/shared/Pin.hh **** 	// currently not used:
  73:src/MightyBoard/shared/Pin.hh **** 	//const uint8_t getPinIndex() const { return pin_index; }
  74:src/MightyBoard/shared/Pin.hh **** };
  75:src/MightyBoard/shared/Pin.hh **** 
  76:src/MightyBoard/shared/Pin.hh **** static const Pin NullPin(NullPort, 0);
 3322              	 .loc 5 76 0
 3323 0064 40F20000 	 movw r0,#:lower16:.LANCHOR21
 3324 0068 C0F20000 	 movt r0,#:upper16:.LANCHOR21
 3325 006c 2146     	 mov r1,r4
 3326 006e 4FF00002 	 mov r2,#0
 3327 0072 FFF7FEFF 	 bl _ZN3PinC1ERK7LPCPorth
 3328              	.LVL278:
 3329              	.LBB582:
 3330              	.LBB583:
 3331              	.LBB584:
  45:src/MightyBoard/shared/CircularBuffer.hh **** 				underflow(false) {
 3332              	 .loc 2 45 0
 3333 0076 40F20003 	 movw r3,#:lower16:.LANCHOR0
 3334 007a C0F20003 	 movt r3,#:upper16:.LANCHOR0
 3335 007e 4FF40072 	 mov r2,#512
 3336 0082 1A80     	 strh r2,[r3,#0]
 3337 0084 4FF00002 	 mov r2,#0
 3338 0088 1146     	 mov r1,r2
 3339 008a 5A80     	 strh r2,[r3,#2]
 3340 008c 9A80     	 strh r2,[r3,#4]
 3341 008e 40F20002 	 movw r2,#:lower16:.LANCHOR22
 3342 0092 C0F20002 	 movt r2,#:upper16:.LANCHOR22
 3343 0096 9A60     	 str r2,[r3,#8]
 3344 0098 1973     	 strb r1,[r3,#12]
 3345 009a 5973     	 strb r1,[r3,#13]
 3346              	.LBE584:
 3347              	.LBE583:
 3348              	.LBE582:
 134:src/MightyBoard/Motherboard/Command.cc **** Timeout delay_timeout;
 3349              	 .loc 1 134 0
 3350 009c 40F20000 	 movw r0,#:lower16:.LANCHOR9
 3351 00a0 C0F20000 	 movt r0,#:upper16:.LANCHOR9
 3352 00a4 FFF7FEFF 	 bl _ZN7TimeoutC1Ev
 135:src/MightyBoard/Motherboard/Command.cc **** Timeout homing_timeout;
 3353              	 .loc 1 135 0
 3354 00a8 40F20000 	 movw r0,#:lower16:.LANCHOR8
 3355 00ac C0F20000 	 movt r0,#:upper16:.LANCHOR8
 3356 00b0 FFF7FEFF 	 bl _ZN7TimeoutC1Ev
 136:src/MightyBoard/Motherboard/Command.cc **** Timeout tool_wait_timeout;
 3357              	 .loc 1 136 0
 3358 00b4 40F20000 	 movw r0,#:lower16:.LANCHOR10
 3359 00b8 C0F20000 	 movt r0,#:upper16:.LANCHOR10
 3360 00bc FFF7FEFF 	 bl _ZN7TimeoutC1Ev
 137:src/MightyBoard/Motherboard/Command.cc **** Timeout button_wait_timeout;
 3361              	 .loc 1 137 0
 3362 00c0 40F20000 	 movw r0,#:lower16:.LANCHOR12
 3363 00c4 C0F20000 	 movt r0,#:upper16:.LANCHOR12
 3364 00c8 FFF7FEFF 	 bl _ZN7TimeoutC1Ev
 3365              	.LBE581:
 3366              	.LBE580:
 3367              	 .loc 1 760 0
 3368 00cc 10BD     	 pop {r4,pc}
 3369              	 .cfi_endproc
 3370              	.LFE146:
 3372 00ce 00BF     	 .section .init_array,"aw",%init_array
 3373              	 .align 2
 3374 0000 00000000 	 .word _GLOBAL__sub_I__ZN7command11buffer_dataE(target1)
 3375              	 .global _ZN7command12sdcard_resetE
 3376              	 .global _ZN7command23button_timeout_behaviorE
 3377              	 .global _ZN7command11button_maskE
 3378              	 .global _ZN7command19button_wait_timeoutE
 3379              	 .global _ZN7command17tool_wait_timeoutE
 3380              	 .global _ZN7command14homing_timeoutE
 3381              	 .global _ZN7command13delay_timeoutE
 3382              	 .global _ZN7command4modeE
 3383              	 .global _ZN7command8sd_countE
 3384              	 .global _ZN7command13heat_shutdownE
 3385              	 .global _ZN7command6pausedE
 3386              	 .global _ZN7command16check_temp_stateE
 3387              	 .global _ZN7command24outstanding_tool_commandE
 3388              	 .global _ZN7command11line_numberE
 3389              	 .global _ZN7command16currentToolIndexE
 3390              	 .global _ZN7command14command_bufferE
 3391              	 .global _ZN7command11buffer_dataE
 3392              	 .section .bss._ZN7command16check_temp_stateE,"aw",%nobits
 3393              	 .set .LANCHOR5,.+0
 3396              	_ZN7command16check_temp_stateE:
 3397 0000 00       	 .space 1
 3398              	 .section .bss._ZN7command16currentToolIndexE,"aw",%nobits
 3399              	 .set .LANCHOR11,.+0
 3402              	_ZN7command16currentToolIndexE:
 3403 0000 00       	 .space 1
 3404              	 .section .bss._ZN7command4modeE,"aw",%nobits
 3405              	 .set .LANCHOR3,.+0
 3408              	_ZN7command4modeE:
 3409 0000 00       	 .space 1
 3410              	 .section .bss._ZL5Port0,"aw",%nobits
 3411              	 .align 2
 3412              	 .set .LANCHOR15,.+0
 3415              	_ZL5Port0:
 3416 0000 00       	 .space 1
 3417 0001 000000   	 .section .bss._ZL5Port1,"aw",%nobits
 3418              	 .align 2
 3419              	 .set .LANCHOR16,.+0
 3422              	_ZL5Port1:
 3423 0000 00       	 .space 1
 3424 0001 000000   	 .section .bss._ZL5Port2,"aw",%nobits
 3425              	 .align 2
 3426              	 .set .LANCHOR17,.+0
 3429              	_ZL5Port2:
 3430 0000 00       	 .space 1
 3431 0001 000000   	 .section .bss._ZL5Port3,"aw",%nobits
 3432              	 .align 2
 3433              	 .set .LANCHOR18,.+0
 3436              	_ZL5Port3:
 3437 0000 00       	 .space 1
 3438 0001 000000   	 .section .bss._ZN7command8sd_countE,"aw",%nobits
 3439              	 .align 2
 3440              	 .set .LANCHOR6,.+0
 3443              	_ZN7command8sd_countE:
 3444 0000 00000000 	 .space 4
 3445              	 .section .bss._ZL5Port4,"aw",%nobits
 3446              	 .align 2
 3447              	 .set .LANCHOR19,.+0
 3450              	_ZL5Port4:
 3451 0000 00       	 .space 1
 3452 0001 000000   	 .section .bss._ZN7command11buffer_dataE,"aw",%nobits
 3453              	 .align 2
 3454              	 .set .LANCHOR22,.+0
 3457              	_ZN7command11buffer_dataE:
 3458 0000 00000000 	 .space 512
 3458      00000000 
 3458      00000000 
 3458      00000000 
 3458      00000000 
 3459              	 .section .bss._ZN7command17tool_wait_timeoutE,"aw",%nobits
 3460              	 .align 2
 3461              	 .set .LANCHOR10,.+0
 3464              	_ZN7command17tool_wait_timeoutE:
 3465 0000 00000000 	 .space 16
 3465      00000000 
 3465      00000000 
 3465      00000000 
 3466              	 .section .bss._ZL7NullPin,"aw",%nobits
 3467              	 .align 2
 3468              	 .set .LANCHOR21,.+0
 3471              	_ZL7NullPin:
 3472 0000 00000000 	 .space 5
 3472      00
 3473 0005 000000   	 .section .rodata.str1.4,"aMS",%progbits,1
 3474              	 .align 2
 3475              	.LC0:
 3476 0000 49207361 	 .ascii "I saw a glitch in mySD card file.SomedayI'll be sma"
 3476      77206120 
 3476      676C6974 
 3476      63682069 
 3476      6E206D79 
 3477 0033 72742065 	 .ascii "rt enoughto restart printing.\000"
 3477      6E6F7567 
 3477      68746F20 
 3477      72657374 
 3477      61727420 
 3478 0051 000000   	 .space 3
 3479              	.LC1:
 3480 0054 49207469 	 .ascii "I timed out while   attempting to heat  my extruder"
 3480      6D656420 
 3480      6F757420 
 3480      7768696C 
 3480      65202020 
 3481 0087 2E00     	 .ascii ".\000"
 3482 0089 000000   	 .space 3
 3483              	.LC2:
 3484 008c 49207469 	 .ascii "I timed out while   attempting to heat  my platform"
 3484      6D656420 
 3484      6F757420 
 3484      7768696C 
 3484      65202020 
 3485 00bf 2E00     	 .ascii ".\000"
 3486 00c1 000000   	 .section .bss._ZL8NullPort,"aw",%nobits
 3487              	 .align 2
 3488              	 .set .LANCHOR20,.+0
 3491              	_ZL8NullPort:
 3492 0000 00       	 .space 1
 3493 0001 000000   	 .section .bss._ZN7command19button_wait_timeoutE,"aw",%nobits
 3494              	 .align 2
 3495              	 .set .LANCHOR12,.+0
 3498              	_ZN7command19button_wait_timeoutE:
 3499 0000 00000000 	 .space 16
 3499      00000000 
 3499      00000000 
 3499      00000000 
 3500              	 .section .bss._ZN7command14homing_timeoutE,"aw",%nobits
 3501              	 .align 2
 3502              	 .set .LANCHOR8,.+0
 3505              	_ZN7command14homing_timeoutE:
 3506 0000 00000000 	 .space 16
 3506      00000000 
 3506      00000000 
 3506      00000000 
 3507              	 .section .bss._ZN7command13heat_shutdownE,"aw",%nobits
 3508              	 .set .LANCHOR2,.+0
 3511              	_ZN7command13heat_shutdownE:
 3512 0000 00       	 .space 1
 3513              	 .section .bss._ZN7command14command_bufferE,"aw",%nobits
 3514              	 .align 2
 3515              	 .set .LANCHOR0,.+0
 3518              	_ZN7command14command_bufferE:
 3519 0000 00000000 	 .space 16
 3519      00000000 
 3519      00000000 
 3519      00000000 
 3520              	 .section .bss._ZN7command11line_numberE,"aw",%nobits
 3521              	 .align 2
 3522              	 .set .LANCHOR4,.+0
 3525              	_ZN7command11line_numberE:
 3526 0000 00000000 	 .space 4
 3527              	 .section .bss._ZN7command12sdcard_resetE,"aw",%nobits
 3528              	 .set .LANCHOR7,.+0
 3531              	_ZN7command12sdcard_resetE:
 3532 0000 00       	 .space 1
 3533              	 .section .bss._ZN7command11button_maskE,"aw",%nobits
 3534              	 .set .LANCHOR14,.+0
 3537              	_ZN7command11button_maskE:
 3538 0000 00       	 .space 1
 3539              	 .section .bss._ZN7command13delay_timeoutE,"aw",%nobits
 3540              	 .align 2
 3541              	 .set .LANCHOR9,.+0
 3544              	_ZN7command13delay_timeoutE:
 3545 0000 00000000 	 .space 16
 3545      00000000 
 3545      00000000 
 3545      00000000 
 3546              	 .section .bss._ZN7command24outstanding_tool_commandE,"aw",%nobits
 3549              	_ZN7command24outstanding_tool_commandE:
 3550 0000 00       	 .space 1
 3551              	 .section .bss._ZN7command6pausedE,"aw",%nobits
 3552              	 .set .LANCHOR1,.+0
 3555              	_ZN7command6pausedE:
 3556 0000 00       	 .space 1
 3557              	 .section .bss._ZN7command23button_timeout_behaviorE,"aw",%nobits
 3558              	 .set .LANCHOR13,.+0
 3561              	_ZN7command23button_timeout_behaviorE:
 3562 0000 00       	 .space 1
 3563              	 .text
 3564              	.Letext0:
 3565              	 .file 6 "c:\\program files\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/gcc/arm-none-eabi/4.6.3/../../../../arm-none-eabi/include/stdint.h"
 3566              	 .file 7 "src/MightyBoard/shared/Types.hh"
 3567              	 .file 8 "src/MightyBoard/Motherboard/Point.hh"
 3568              	 .file 9 "src/MightyBoard/Motherboard/Planner.hh"
 3569              	 .file 10 "src/MightyBoard/shared/Packet.hh"
 3570              	 .file 11 "src/MightyBoard/shared/Timeout.hh"
 3571              	 .file 12 "src/MightyBoard/shared/TemperatureSensor.hh"
 3572              	 .file 13 "src/MightyBoard/shared/PID.hh"
 3573              	 .file 14 "src/MightyBoard/shared/Heater.hh"
 3574              	 .file 15 "src/MightyBoard/shared/HeatingElement.hh"
 3575              	 .file 16 "src/MightyBoard/Motherboard/EepromMap.hh"
 3576              	 .file 17 "src/MightyBoard/shared/CoolingFan.hh"
 3577              	 .file 18 "src/MightyBoard/Motherboard/ExtruderBoard.hh"
 3578              	 .file 19 "src/MightyBoard/Motherboard/Cutoff.hh"
 3579              	 .file 20 "src/MightyBoard/Motherboard/SDCard.hh"
 3580              	 .file 21 "src/MightyBoard/Motherboard/UtilityScripts.hh"
 3581              	 .file 22 "src/MightyBoard/Motherboard/Host.hh"
 3582              	 .file 23 "src/MightyBoard/Motherboard/Command.hh"
 3583              	 .file 24 "src/MightyBoard/Motherboard/system/core_cm3.h"
 3584              	 .file 25 "src/MightyBoard/shared/Menu_locales.hh"
DEFINED SYMBOLS
                            *ABS*:00000000 Command.cc
    {standard input}:19     .text._ZN7command20getRemainingCapacityEv:00000000 $t
    {standard input}:24     .text._ZN7command20getRemainingCapacityEv:00000000 _ZN7command20getRemainingCapacityEv
    {standard input}:3515   .bss._ZN7command14command_bufferE:00000000 .LANCHOR0
    {standard input}:53     .text._ZN7command5pauseEb:00000000 $t
    {standard input}:58     .text._ZN7command5pauseEb:00000000 _ZN7command5pauseEb
    {standard input}:3552   .bss._ZN7command6pausedE:00000000 .LANCHOR1
    {standard input}:76     .text._ZN7command12heatShutdownEv:00000000 $t
    {standard input}:81     .text._ZN7command12heatShutdownEv:00000000 _ZN7command12heatShutdownEv
    {standard input}:3508   .bss._ZN7command13heat_shutdownE:00000000 .LANCHOR2
    {standard input}:99     .text._ZN7command8isPausedEv:00000000 $t
    {standard input}:104    .text._ZN7command8isPausedEv:00000000 _ZN7command8isPausedEv
    {standard input}:121    .text._ZN7command7isEmptyEv:00000000 $t
    {standard input}:126    .text._ZN7command7isEmptyEv:00000000 _ZN7command7isEmptyEv
    {standard input}:152    .text._ZN7command4pushEh:00000000 $t
    {standard input}:157    .text._ZN7command4pushEh:00000000 _ZN7command4pushEh
    {standard input}:227    .text._ZN7command4pop8Ev:00000000 $t
    {standard input}:232    .text._ZN7command4pop8Ev:00000000 _ZN7command4pop8Ev
    {standard input}:311    .text._ZN7command5pop16Ev:00000000 $t
    {standard input}:316    .text._ZN7command5pop16Ev:00000000 _ZN7command5pop16Ev
    {standard input}:466    .text._ZN7command5pop32Ev:00000000 $t
    {standard input}:471    .text._ZN7command5pop32Ev:00000000 _ZN7command5pop32Ev
    {standard input}:744    .text._ZN7commandL21handleMovementCommandERKh:00000000 $t
    {standard input}:748    .text._ZN7commandL21handleMovementCommandERKh:00000000 _ZN7commandL21handleMovementCommandERKh
    {standard input}:3405   .bss._ZN7command4modeE:00000000 .LANCHOR3
    {standard input}:3522   .bss._ZN7command11line_numberE:00000000 .LANCHOR4
    {standard input}:953    .text._ZN7command5resetEv:00000000 $t
    {standard input}:958    .text._ZN7command5resetEv:00000000 _ZN7command5resetEv
    {standard input}:3393   .bss._ZN7command16check_temp_stateE:00000000 .LANCHOR5
    {standard input}:3440   .bss._ZN7command8sd_countE:00000000 .LANCHOR6
    {standard input}:3528   .bss._ZN7command12sdcard_resetE:00000000 .LANCHOR7
    {standard input}:1011   .text._ZN7command9isWaitingEv:00000000 $t
    {standard input}:1016   .text._ZN7command9isWaitingEv:00000000 _ZN7command9isWaitingEv
    {standard input}:1037   .text._ZN7command7isReadyEv:00000000 $t
    {standard input}:1042   .text._ZN7command7isReadyEv:00000000 _ZN7command7isReadyEv
    {standard input}:1062   .text._ZN7command13getLineNumberEv:00000000 $t
    {standard input}:1067   .text._ZN7command13getLineNumberEv:00000000 _ZN7command13getLineNumberEv
    {standard input}:1084   .text._ZN7command15clearLineNumberEv:00000000 $t
    {standard input}:1089   .text._ZN7command15clearLineNumberEv:00000000 _ZN7command15clearLineNumberEv
    {standard input}:1107   .text._ZN7command28processExtruderCommandPacketEv:00000000 $t
    {standard input}:1112   .text._ZN7command28processExtruderCommandPacketEv:00000000 _ZN7command28processExtruderCommandPacketEv
    {standard input}:1146   .text._ZN7command28processExtruderCommandPacketEv:00000020 $d
    {standard input}:1182   .text._ZN7command28processExtruderCommandPacketEv:0000005a $t
    {standard input}:1406   .text._ZN7command28processExtruderCommandPacketEv:000001e4 $d
    {standard input}:1415   .text._ZN7command15runCommandSliceEv:00000000 $t
    {standard input}:1420   .text._ZN7command15runCommandSliceEv:00000000 _ZN7command15runCommandSliceEv
    {standard input}:3475   .rodata.str1.4:00000000 .LC0
    {standard input}:3502   .bss._ZN7command14homing_timeoutE:00000000 .LANCHOR8
    {standard input}:3541   .bss._ZN7command13delay_timeoutE:00000000 .LANCHOR9
    {standard input}:3461   .bss._ZN7command17tool_wait_timeoutE:00000000 .LANCHOR10
    {standard input}:3479   .rodata.str1.4:00000054 .LC1
    {standard input}:3399   .bss._ZN7command16currentToolIndexE:00000000 .LANCHOR11
    {standard input}:3483   .rodata.str1.4:0000008c .LC2
    {standard input}:3495   .bss._ZN7command19button_wait_timeoutE:00000000 .LANCHOR12
    {standard input}:3558   .bss._ZN7command23button_timeout_behaviorE:00000000 .LANCHOR13
    {standard input}:2050   .text._ZN7command15runCommandSliceEv:00000418 $d
    {standard input}:2056   .text._ZN7command15runCommandSliceEv:00000424 $t
    {standard input}:3534   .bss._ZN7command11button_maskE:00000000 .LANCHOR14
    {standard input}:3271   .text._GLOBAL__sub_I__ZN7command11buffer_dataE:00000000 $t
    {standard input}:3275   .text._GLOBAL__sub_I__ZN7command11buffer_dataE:00000000 _GLOBAL__sub_I__ZN7command11buffer_dataE
    {standard input}:3412   .bss._ZL5Port0:00000000 .LANCHOR15
    {standard input}:3419   .bss._ZL5Port1:00000000 .LANCHOR16
    {standard input}:3426   .bss._ZL5Port2:00000000 .LANCHOR17
    {standard input}:3433   .bss._ZL5Port3:00000000 .LANCHOR18
    {standard input}:3447   .bss._ZL5Port4:00000000 .LANCHOR19
    {standard input}:3488   .bss._ZL8NullPort:00000000 .LANCHOR20
    {standard input}:3468   .bss._ZL7NullPin:00000000 .LANCHOR21
    {standard input}:3454   .bss._ZN7command11buffer_dataE:00000000 .LANCHOR22
    {standard input}:3373   .init_array:00000000 $d
    {standard input}:3531   .bss._ZN7command12sdcard_resetE:00000000 _ZN7command12sdcard_resetE
    {standard input}:3561   .bss._ZN7command23button_timeout_behaviorE:00000000 _ZN7command23button_timeout_behaviorE
    {standard input}:3537   .bss._ZN7command11button_maskE:00000000 _ZN7command11button_maskE
    {standard input}:3498   .bss._ZN7command19button_wait_timeoutE:00000000 _ZN7command19button_wait_timeoutE
    {standard input}:3464   .bss._ZN7command17tool_wait_timeoutE:00000000 _ZN7command17tool_wait_timeoutE
    {standard input}:3505   .bss._ZN7command14homing_timeoutE:00000000 _ZN7command14homing_timeoutE
    {standard input}:3544   .bss._ZN7command13delay_timeoutE:00000000 _ZN7command13delay_timeoutE
    {standard input}:3408   .bss._ZN7command4modeE:00000000 _ZN7command4modeE
    {standard input}:3443   .bss._ZN7command8sd_countE:00000000 _ZN7command8sd_countE
    {standard input}:3511   .bss._ZN7command13heat_shutdownE:00000000 _ZN7command13heat_shutdownE
    {standard input}:3555   .bss._ZN7command6pausedE:00000000 _ZN7command6pausedE
    {standard input}:3396   .bss._ZN7command16check_temp_stateE:00000000 _ZN7command16check_temp_stateE
    {standard input}:3549   .bss._ZN7command24outstanding_tool_commandE:00000000 _ZN7command24outstanding_tool_commandE
    {standard input}:3525   .bss._ZN7command11line_numberE:00000000 _ZN7command11line_numberE
    {standard input}:3402   .bss._ZN7command16currentToolIndexE:00000000 _ZN7command16currentToolIndexE
    {standard input}:3518   .bss._ZN7command14command_bufferE:00000000 _ZN7command14command_bufferE
    {standard input}:3457   .bss._ZN7command11buffer_dataE:00000000 _ZN7command11buffer_dataE
    {standard input}:3397   .bss._ZN7command16check_temp_stateE:00000000 $d
    {standard input}:3403   .bss._ZN7command16currentToolIndexE:00000000 $d
    {standard input}:3409   .bss._ZN7command4modeE:00000000 $d
    {standard input}:3411   .bss._ZL5Port0:00000000 $d
    {standard input}:3415   .bss._ZL5Port0:00000000 _ZL5Port0
    {standard input}:3418   .bss._ZL5Port1:00000000 $d
    {standard input}:3422   .bss._ZL5Port1:00000000 _ZL5Port1
    {standard input}:3425   .bss._ZL5Port2:00000000 $d
    {standard input}:3429   .bss._ZL5Port2:00000000 _ZL5Port2
    {standard input}:3432   .bss._ZL5Port3:00000000 $d
    {standard input}:3436   .bss._ZL5Port3:00000000 _ZL5Port3
    {standard input}:3439   .bss._ZN7command8sd_countE:00000000 $d
    {standard input}:3446   .bss._ZL5Port4:00000000 $d
    {standard input}:3450   .bss._ZL5Port4:00000000 _ZL5Port4
    {standard input}:3453   .bss._ZN7command11buffer_dataE:00000000 $d
    {standard input}:3460   .bss._ZN7command17tool_wait_timeoutE:00000000 $d
    {standard input}:3467   .bss._ZL7NullPin:00000000 $d
    {standard input}:3471   .bss._ZL7NullPin:00000000 _ZL7NullPin
    {standard input}:3474   .rodata.str1.4:00000000 $d
    {standard input}:3487   .bss._ZL8NullPort:00000000 $d
    {standard input}:3491   .bss._ZL8NullPort:00000000 _ZL8NullPort
    {standard input}:3494   .bss._ZN7command19button_wait_timeoutE:00000000 $d
    {standard input}:3501   .bss._ZN7command14homing_timeoutE:00000000 $d
    {standard input}:3512   .bss._ZN7command13heat_shutdownE:00000000 $d
    {standard input}:3514   .bss._ZN7command14command_bufferE:00000000 $d
    {standard input}:3521   .bss._ZN7command11line_numberE:00000000 $d
    {standard input}:3532   .bss._ZN7command12sdcard_resetE:00000000 $d
    {standard input}:3538   .bss._ZN7command11button_maskE:00000000 $d
    {standard input}:3540   .bss._ZN7command13delay_timeoutE:00000000 $d
    {standard input}:3550   .bss._ZN7command24outstanding_tool_commandE:00000000 $d
    {standard input}:3556   .bss._ZN7command6pausedE:00000000 $d
    {standard input}:3562   .bss._ZN7command23button_timeout_behaviorE:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
_ZN7planner12isBufferFullEv
_ZN11Motherboard11motherboardE
_ZN11Motherboard21resetUserInputTimeoutEv
_ZN5PointC1Elllll
_ZN7planner15addMoveToBufferERK5PointRKl
_ZN7planner23addMoveToBufferRelativeERK5PointRKla
_ZN6Heater22set_target_temperatureEi
_ZN6Heater9isHeatingEv
_ZN6Heater9isCoolingEv
_ZN6Heater5PauseEb
_ZN4host10pauseBuildEb
_ZN13ExtruderBoard6setFanEh
_ZN11Motherboard8setValveEb
_ZN11Motherboard16setUsingPlatformEb
_ZN6sdcard9isPlayingEv
_ZN6sdcard15playbackHasNextEv
_ZN6sdcard12playbackNextEv
_ZN6sdcard11getFileSizeEv
_ZN11Motherboard13errorResponseEPcb
_ZN6sdcard14finishPlaybackEv
_ZN7utility9isPlayingEv
_ZN7utility15playbackHasNextEv
_ZN7utility12playbackNextEv
_ZN7utility14finishPlaybackEv
_ZN6Heater30has_reached_target_temperatureEv
_ZN8steppers9isRunningEv
_ZN7Timeout10hasElapsedEv
_ZN7planner5abortEv
_ZN11Motherboard5resetEb
_ZN7planner15changeToolIndexEh
_ZN8steppers10enableAxisEhb
_ZN7planner14definePositionERK5Point
_ZN7Timeout5startEm
_ZN7TimeoutC1Ev
_ZN11Motherboard14interfaceBlinkEii
_ZN8steppers11startHomingEbhm
_ZN8steppers11getPositionEv
_ZNK5PointixEj
_ZN6eeprom11setEeprom32Etm
_ZN5PointixEj
_ZN6eeprom11getEeprom32Etm
_ZN8steppers15setAxisPotValueEhh
_ZN7RGB_LED11setLEDBlinkEh
_ZN7RGB_LED14setCustomColorEhhh
_ZN5Piezo7setToneEtt
_ZN5Piezo9errorToneEh
_ZN5Piezo8doneToneEv
_ZN6eeprom18factoryResetEEPROMEv
_ZN4host28handleBuildStartNotificationER19CircularBufferTemplIhE
_ZN4host27handleBuildStopNotificationEh
_ZN7LPCPortC1Eh
_ZN3PinC1ERK7LPCPorth
