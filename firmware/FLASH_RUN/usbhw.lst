   1              	 .syntax unified
   2              	 .cpu cortex-m3
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,1
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "usbhw.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.EPAdr,"ax",%progbits
  19              	 .align 2
  20              	 .global EPAdr
  21              	 .thumb
  22              	 .thumb_func
  24              	EPAdr:
  25              	.LFB55:
  26              	 .file 1 "src/MightyBoard/Motherboard/USBCDC/usbhw.c"
   1:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /*----------------------------------------------------------------------------
   2:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *      U S B  -  K e r n e l
   3:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *----------------------------------------------------------------------------
   4:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  * Name:    usbhw.c
   5:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  * Purpose: USB Hardware Layer Module for NXP's LPC17xx MCU
   6:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  * Version: V1.20
   7:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *----------------------------------------------------------------------------
   8:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *      This software is supplied "AS IS" without any warranties, express,
   9:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *      implied or statutory, including but not limited to the implied
  10:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *      warranties of fitness for purpose, satisfactory quality and
  11:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *      noninfringement. Keil extends you a royalty-free right to reproduce
  12:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *      and distribute executable files created using this software for use
  13:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *      on NXP Semiconductors LPC family microcontroller devices only. Nothing 
  14:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *      else gives you the right to use this software.
  15:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *
  16:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  * Copyright (c) 2009 Keil - An ARM Company. All rights reserved.
  17:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *----------------------------------------------------------------------------
  18:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  * History:
  19:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *          V1.20 Added USB_ClearEPBuf
  20:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *          V1.00 Initial Version
  21:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *----------------------------------------------------------------------------*/
  22:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #include "LPC17xx.h"                        /* LPC17xx definitions */
  23:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #include "usb.h"
  24:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #include "usbcfg.h"
  25:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #include "usbreg.h"
  26:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #include "usbhw.h"
  27:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #include "usbcore.h"
  28:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #include "usbuser.h"
  29:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
  30:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /********************************/
  31:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #include "comm.h"
  32:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /********************************/
  33:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
  34:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #if defined (  __CC_ARM__  )
  35:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #pragma diag_suppress 1441
  36:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #endif
  37:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
  38:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
  39:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #define EP_MSK_CTRL 0x0001      /* Control Endpoint Logical Address Mask */
  40:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #define EP_MSK_BULK 0xC924      /* Bulk Endpoint Logical Address Mask */
  41:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #define EP_MSK_INT  0x4492      /* Interrupt Endpoint Logical Address Mask */
  42:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #define EP_MSK_ISO  0x1248      /* Isochronous Endpoint Logical Address Mask */
  43:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
  44:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
  45:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #if USB_DMA
  46:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
  47:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #pragma arm section zidata = "USB_RAM"
  48:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** uint32_t UDCA[USB_EP_NUM];                     /* UDCA in USB RAM */
  49:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** uint32_t DD_NISO_Mem[4*DD_NISO_CNT];           /* Non-Iso DMA Descriptor Memory */
  50:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** uint32_t DD_ISO_Mem [5*DD_ISO_CNT];            /* Iso DMA Descriptor Memory */
  51:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #pragma arm section zidata
  52:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** uint32_t udca[USB_EP_NUM];                     /* UDCA saved values */
  53:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
  54:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** uint32_t DDMemMap[2];                          /* DMA Descriptor Memory Usage */
  55:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
  56:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #endif
  57:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
  58:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
  59:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /*
  60:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *  Get Endpoint Physical Address
  61:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Parameters:      EPNum: Endpoint Number
  62:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                       EPNum.0..3: Address
  63:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                       EPNum.7:    Dir
  64:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Return Value:    Endpoint Physical Address
  65:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  */
  66:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
  67:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** uint32_t EPAdr (uint32_t EPNum) {
  27              	 .loc 1 67 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32              	.LVL0:
  33 0000 0346     	 mov r3,r0
  68:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   uint32_t val;
  69:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
  70:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   val = (EPNum & 0x0F) << 1;
  34              	 .loc 1 70 0
  35 0002 00F00F00 	 and r0,r0,#15
  36              	.LVL1:
  37 0006 4FEA4000 	 lsl r0,r0,#1
  38              	.LVL2:
  71:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   if (EPNum & 0x80) {
  39              	 .loc 1 71 0
  40 000a 13F0800F 	 tst r3,#128
  72:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     val += 1;
  41              	 .loc 1 72 0
  42 000e 18BF     	 it ne
  43 0010 0130     	 addne r0,r0,#1
  44              	.LVL3:
  73:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   }
  74:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   return (val);
  75:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** }
  45              	 .loc 1 75 0
  46 0012 7047     	 bx lr
  47              	 .cfi_endproc
  48              	.LFE55:
  50              	 .section .text.WrCmd,"ax",%progbits
  51              	 .align 2
  52              	 .global WrCmd
  53              	 .thumb
  54              	 .thumb_func
  56              	WrCmd:
  57              	.LFB56:
  76:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
  77:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
  78:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /*
  79:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *  Write Command
  80:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Parameters:      cmd:   Command
  81:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Return Value:    None
  82:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  */
  83:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
  84:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** void WrCmd (uint32_t cmd) {
  58              	 .loc 1 84 0
  59              	 .cfi_startproc
  60              	 
  61              	 
  62              	 
  63              	.LVL4:
  85:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
  86:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBDevIntClr = CCEMTY_INT;
  64              	 .loc 1 86 0
  65 0000 4FF44043 	 mov r3,#49152
  66 0004 C5F20003 	 movt r3,20480
  67 0008 4FF01002 	 mov r2,#16
  68 000c C3F80822 	 str r2,[r3,#520]
  87:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBCmdCode = cmd;
  69              	 .loc 1 87 0
  70 0010 C3F81002 	 str r0,[r3,#528]
  88:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   while ((LPC_USB->USBDevIntSt & CCEMTY_INT) == 0);
  71              	 .loc 1 88 0
  72 0014 4FF44042 	 mov r2,#49152
  73 0018 C5F20002 	 movt r2,20480
  74              	.L4:
  75              	 .loc 1 88 0 is_stmt 0 discriminator 1
  76 001c D2F80032 	 ldr r3,[r2,#512]
  77 0020 13F0100F 	 tst r3,#16
  78 0024 FAD0     	 beq .L4
  89:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** }
  79              	 .loc 1 89 0 is_stmt 1
  80 0026 7047     	 bx lr
  81              	 .cfi_endproc
  82              	.LFE56:
  84              	 .section .text.WrCmdDat,"ax",%progbits
  85              	 .align 2
  86              	 .global WrCmdDat
  87              	 .thumb
  88              	 .thumb_func
  90              	WrCmdDat:
  91              	.LFB57:
  90:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
  91:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
  92:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /*
  93:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *  Write Command Data
  94:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Parameters:      cmd:   Command
  95:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                     val:   Data
  96:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Return Value:    None
  97:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  */
  98:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
  99:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** void WrCmdDat (uint32_t cmd, uint32_t val) {
  92              	 .loc 1 99 0
  93              	 .cfi_startproc
  94              	 
  95              	 
  96              	 
  97              	.LVL5:
 100:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 101:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBDevIntClr = CCEMTY_INT;
  98              	 .loc 1 101 0
  99 0000 4FF44043 	 mov r3,#49152
 100 0004 C5F20003 	 movt r3,20480
 101 0008 4FF01002 	 mov r2,#16
 102 000c C3F80822 	 str r2,[r3,#520]
 102:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBCmdCode = cmd;
 103              	 .loc 1 102 0
 104 0010 C3F81002 	 str r0,[r3,#528]
 103:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   while ((LPC_USB->USBDevIntSt & CCEMTY_INT) == 0);
 105              	 .loc 1 103 0
 106 0014 4FF44042 	 mov r2,#49152
 107 0018 C5F20002 	 movt r2,20480
 108              	.L7:
 109              	 .loc 1 103 0 is_stmt 0 discriminator 1
 110 001c D2F80032 	 ldr r3,[r2,#512]
 111 0020 13F0100F 	 tst r3,#16
 112 0024 FAD0     	 beq .L7
 104:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBDevIntClr = CCEMTY_INT;
 113              	 .loc 1 104 0 is_stmt 1
 114 0026 4FF44043 	 mov r3,#49152
 115 002a C5F20003 	 movt r3,20480
 116 002e 4FF01002 	 mov r2,#16
 117 0032 C3F80822 	 str r2,[r3,#520]
 105:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBCmdCode = val;
 118              	 .loc 1 105 0
 119 0036 C3F81012 	 str r1,[r3,#528]
 106:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   while ((LPC_USB->USBDevIntSt & CCEMTY_INT) == 0);
 120              	 .loc 1 106 0
 121 003a 4FF44042 	 mov r2,#49152
 122 003e C5F20002 	 movt r2,20480
 123              	.L8:
 124              	 .loc 1 106 0 is_stmt 0 discriminator 1
 125 0042 D2F80032 	 ldr r3,[r2,#512]
 126 0046 13F0100F 	 tst r3,#16
 127 004a FAD0     	 beq .L8
 107:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** }
 128              	 .loc 1 107 0 is_stmt 1
 129 004c 7047     	 bx lr
 130              	 .cfi_endproc
 131              	.LFE57:
 133 004e 00BF     	 .section .text.WrCmdEP,"ax",%progbits
 134              	 .align 2
 135              	 .global WrCmdEP
 136              	 .thumb
 137              	 .thumb_func
 139              	WrCmdEP:
 140              	.LFB58:
 108:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 109:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 110:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /*
 111:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *  Write Command to Endpoint
 112:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Parameters:      cmd:   Command
 113:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                     val:   Data
 114:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Return Value:    None
 115:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  */
 116:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 117:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** void WrCmdEP (uint32_t EPNum, uint32_t cmd){
 141              	 .loc 1 117 0
 142              	 .cfi_startproc
 143              	 
 144              	 
 145              	.LVL6:
 146 0000 38B5     	 push {r3,r4,r5,lr}
 147              	.LCFI0:
 148              	 .cfi_def_cfa_offset 16
 149              	 .cfi_offset 14,-4
 150              	 .cfi_offset 5,-8
 151              	 .cfi_offset 4,-12
 152              	 .cfi_offset 3,-16
 153 0002 0D46     	 mov r5,r1
 118:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 119:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBDevIntClr = CCEMTY_INT;
 154              	 .loc 1 119 0
 155 0004 4FF44044 	 mov r4,#49152
 156 0008 C5F20004 	 movt r4,20480
 157 000c 4FF01003 	 mov r3,#16
 158 0010 C4F80832 	 str r3,[r4,#520]
 120:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBCmdCode = CMD_SEL_EP(EPAdr(EPNum));
 159              	 .loc 1 120 0
 160 0014 FFF7FEFF 	 bl EPAdr
 161              	.LVL7:
 162 0018 4FEA0043 	 lsl r3,r0,#16
 163 001c 43F4A063 	 orr r3,r3,#1280
 164 0020 C4F81032 	 str r3,[r4,#528]
 121:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   while ((LPC_USB->USBDevIntSt & CCEMTY_INT) == 0);
 165              	 .loc 1 121 0
 166 0024 4FF44042 	 mov r2,#49152
 167 0028 C5F20002 	 movt r2,20480
 168              	.L12:
 169              	 .loc 1 121 0 is_stmt 0 discriminator 1
 170 002c D2F80032 	 ldr r3,[r2,#512]
 171 0030 13F0100F 	 tst r3,#16
 172 0034 FAD0     	 beq .L12
 122:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBDevIntClr = CCEMTY_INT;
 173              	 .loc 1 122 0 is_stmt 1
 174 0036 4FF44043 	 mov r3,#49152
 175 003a C5F20003 	 movt r3,20480
 176 003e 4FF01002 	 mov r2,#16
 177 0042 C3F80822 	 str r2,[r3,#520]
 123:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBCmdCode = cmd;
 178              	 .loc 1 123 0
 179 0046 C3F81052 	 str r5,[r3,#528]
 124:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   while ((LPC_USB->USBDevIntSt & CCEMTY_INT) == 0);
 180              	 .loc 1 124 0
 181 004a 4FF44042 	 mov r2,#49152
 182 004e C5F20002 	 movt r2,20480
 183              	.L13:
 184              	 .loc 1 124 0 is_stmt 0 discriminator 1
 185 0052 D2F80032 	 ldr r3,[r2,#512]
 186 0056 13F0100F 	 tst r3,#16
 187 005a FAD0     	 beq .L13
 125:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** }
 188              	 .loc 1 125 0 is_stmt 1
 189 005c 38BD     	 pop {r3,r4,r5,pc}
 190              	 .cfi_endproc
 191              	.LFE58:
 193 005e 00BF     	 .section .text.RdCmdDat,"ax",%progbits
 194              	 .align 2
 195              	 .global RdCmdDat
 196              	 .thumb
 197              	 .thumb_func
 199              	RdCmdDat:
 200              	.LFB59:
 126:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 127:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 128:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /*
 129:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *  Read Command Data
 130:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Parameters:      cmd:   Command
 131:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Return Value:    Data Value
 132:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  */
 133:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 134:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** uint32_t RdCmdDat (uint32_t cmd) {
 201              	 .loc 1 134 0
 202              	 .cfi_startproc
 203              	 
 204              	 
 205              	 
 206              	.LVL8:
 135:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 136:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBDevIntClr = CCEMTY_INT | CDFULL_INT;
 207              	 .loc 1 136 0
 208 0000 4FF44043 	 mov r3,#49152
 209 0004 C5F20003 	 movt r3,20480
 210 0008 4FF03002 	 mov r2,#48
 211 000c C3F80822 	 str r2,[r3,#520]
 137:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBCmdCode = cmd;
 212              	 .loc 1 137 0
 213 0010 C3F81002 	 str r0,[r3,#528]
 138:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   while ((LPC_USB->USBDevIntSt & CDFULL_INT) == 0);
 214              	 .loc 1 138 0
 215 0014 4FF44042 	 mov r2,#49152
 216 0018 C5F20002 	 movt r2,20480
 217              	.L17:
 218              	 .loc 1 138 0 is_stmt 0 discriminator 1
 219 001c D2F80032 	 ldr r3,[r2,#512]
 220 0020 13F0200F 	 tst r3,#32
 221 0024 FAD0     	 beq .L17
 139:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   return (LPC_USB->USBCmdData);
 222              	 .loc 1 139 0 is_stmt 1
 223 0026 4FF44043 	 mov r3,#49152
 224 002a C5F20003 	 movt r3,20480
 225 002e D3F81402 	 ldr r0,[r3,#532]
 226              	.LVL9:
 140:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** }
 227              	 .loc 1 140 0
 228 0032 7047     	 bx lr
 229              	 .cfi_endproc
 230              	.LFE59:
 232              	 .section .text.USB_Connect,"ax",%progbits
 233              	 .align 2
 234              	 .global USB_Connect
 235              	 .thumb
 236              	 .thumb_func
 238              	USB_Connect:
 239              	.LFB61:
 141:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 142:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 143:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /*
 144:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *  USB Initialize Function
 145:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *   Called by the User to initialize USB
 146:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Return Value:    None
 147:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  */
 148:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 149:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** void USB_Init (void) {
 150:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** //	UART_32_HEX((LPC_UART_TypeDef *)LPC_UART2, 0x01010101);
 151:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 152:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_PINCON->PINSEL1 &= ~((3<<26)|(3<<28));   /* P0.29 D+, P0.30 D- */
 153:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_PINCON->PINSEL1 |=  ((1<<26)|(1<<28));   /* PINSEL1 26.27, 28.29  = 01 */
 154:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** //  UART_32_HEX((LPC_UART_TypeDef *)LPC_UART2, 0x02020202);
 155:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 156:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_PINCON->PINSEL3 &= ~((3<< 4)|(3<<28));   /* P1.18 GoodLink, P1.30 VBUS */
 157:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_PINCON->PINSEL3 |=  ((1<< 4)|(2<<28));   /* PINSEL3 4.5 = 01, 28.29 = 10 */
 158:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** //  UART_32_HEX((LPC_UART_TypeDef *)LPC_UART2, 0x03030303);
 159:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 160:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_PINCON->PINSEL4 &= ~((3<<18)        );   /* P2.9 SoftConnect */
 161:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_PINCON->PINSEL4 |=  ((1<<18)        );   /* PINSEL4 18.19 = 01 */
 162:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** //  UART_32_HEX((LPC_UART_TypeDef *)LPC_UART2, 0x04040404);
 163:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 164:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   // P1.18 -> USB_UP_LED
 165:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   // P1.30 -> VBUS
 166:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_PINCON->PINSEL3 &= ~0x30000030;
 167:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_PINCON->PINSEL3 |= 0x20000010;
 168:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** //  UART_32_HEX((LPC_UART_TypeDef *)LPC_UART2, 0x05050505);
 169:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 170:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_SC->PCONP |= (1UL<<31);                /* USB PCLK -> enable USB Per.       */
 171:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** //  UART_32_HEX((LPC_UART_TypeDef *)LPC_UART2, 0x06060606);
 172:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 173:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBClkCtrl = 0x1A;                /* Dev, PortSel, AHB clock enable */
 174:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** //  UART_32_HEX((LPC_UART_TypeDef *)LPC_UART2, 0x07070707);
 175:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   while ((LPC_USB->USBClkSt & 0x1A) != 0x1A);
 176:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** //  UART_32_HEX((LPC_UART_TypeDef *)LPC_UART2, 0x08080808);
 177:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 178:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   NVIC_SetPriority(USB_IRQn, 4);
 179:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   NVIC_EnableIRQ(USB_IRQn);               /* enable USB interrupt */
 180:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 181:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   NVIC_SetPriority(CANActivity_IRQn, 8);
 182:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   NVIC_EnableIRQ(CANActivity_IRQn);
 183:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 184:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   USB_Reset();
 185:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   USB_SetAddress(0);
 186:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** }
 187:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 188:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 189:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /*
 190:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *  USB Connect Function
 191:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *   Called by the User to Connect/Disconnect USB
 192:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Parameters:      con:   Connect/Disconnect
 193:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Return Value:    None
 194:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  */
 195:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 196:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** void USB_Connect (uint32_t con) {
 240              	 .loc 1 196 0
 241              	 .cfi_startproc
 242              	 
 243              	 
 244              	.LVL10:
 245 0000 08B5     	 push {r3,lr}
 246              	.LCFI1:
 247              	 .cfi_def_cfa_offset 8
 248              	 .cfi_offset 14,-4
 249              	 .cfi_offset 3,-8
 197:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   WrCmdDat(CMD_SET_DEV_STAT, DAT_WR_BYTE(con ? DEV_CON : 0));
 250              	 .loc 1 197 0
 251 0002 4FF48071 	 mov r1,#256
 252 0006 C0F20101 	 movt r1,1
 253 000a 0028     	 cmp r0,#0
 254 000c 08BF     	 it eq
 255 000e 4FF48071 	 moveq r1,#256
 256 0012 4FF4A060 	 mov r0,#1280
 257              	.LVL11:
 258 0016 C0F2FE00 	 movt r0,254
 259 001a FFF7FEFF 	 bl WrCmdDat
 198:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** }
 260              	 .loc 1 198 0
 261 001e 08BD     	 pop {r3,pc}
 262              	 .cfi_endproc
 263              	.LFE61:
 265              	 .section .text.USB_Reset,"ax",%progbits
 266              	 .align 2
 267              	 .global USB_Reset
 268              	 .thumb
 269              	 .thumb_func
 271              	USB_Reset:
 272              	.LFB62:
 199:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 200:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 201:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /*
 202:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *  USB Reset Function
 203:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *   Called automatically on USB Reset
 204:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Return Value:    None
 205:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  */
 206:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 207:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** void USB_Reset (void) {
 273              	 .loc 1 207 0
 274              	 .cfi_startproc
 275              	 
 276              	 
 277              	 
 208:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #if USB_DMA
 209:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   uint32_t n;
 210:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #endif
 211:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 212:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBEpInd = 0;
 278              	 .loc 1 212 0
 279 0000 4FF44043 	 mov r3,#49152
 280 0004 C5F20003 	 movt r3,20480
 281 0008 4FF00002 	 mov r2,#0
 282 000c C3F84822 	 str r2,[r3,#584]
 213:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBMaxPSize = USB_MAX_PACKET0;
 283              	 .loc 1 213 0
 284 0010 4FF00802 	 mov r2,#8
 285 0014 C3F84C22 	 str r2,[r3,#588]
 214:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBEpInd = 1;
 286              	 .loc 1 214 0
 287 0018 4FF00101 	 mov r1,#1
 288 001c C3F84812 	 str r1,[r3,#584]
 215:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBMaxPSize = USB_MAX_PACKET0;
 289              	 .loc 1 215 0
 290 0020 C3F84C22 	 str r2,[r3,#588]
 216:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   while ((LPC_USB->USBDevIntSt & EP_RLZED_INT) == 0);
 291              	 .loc 1 216 0
 292 0024 4FF44042 	 mov r2,#49152
 293 0028 C5F20002 	 movt r2,20480
 294              	.L23:
 295              	 .loc 1 216 0 is_stmt 0 discriminator 1
 296 002c D2F80032 	 ldr r3,[r2,#512]
 297 0030 13F4807F 	 tst r3,#256
 298 0034 FAD0     	 beq .L23
 217:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 218:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBEpIntClr  = 0xFFFFFFFF;
 299              	 .loc 1 218 0 is_stmt 1
 300 0036 4FF44043 	 mov r3,#49152
 301 003a C5F20003 	 movt r3,20480
 302 003e 4FF0FF32 	 mov r2,#-1
 303 0042 C3F83822 	 str r2,[r3,#568]
 219:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBEpIntEn   = 0xFFFFFFFF ^ USB_DMA_EP;
 304              	 .loc 1 219 0
 305 0046 C3F83422 	 str r2,[r3,#564]
 220:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBDevIntClr = 0xFFFFFFFF;
 306              	 .loc 1 220 0
 307 004a C3F80822 	 str r2,[r3,#520]
 221:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBDevIntEn  = DEV_STAT_INT    | EP_SLOW_INT    |
 308              	 .loc 1 221 0
 309 004e 4FF00C02 	 mov r2,#12
 310 0052 C3F80422 	 str r2,[r3,#516]
 222:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****                (USB_SOF_EVENT   ? FRAME_INT : 0) |
 223:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****                (USB_ERROR_EVENT ? ERR_INT   : 0);
 224:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 225:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #if USB_DMA
 226:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBUDCAH   = USB_RAM_ADR;
 227:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBDMARClr = 0xFFFFFFFF;
 228:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBEpDMADis  = 0xFFFFFFFF;
 229:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBEpDMAEn   = USB_DMA_EP;
 230:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBEoTIntClr = 0xFFFFFFFF;
 231:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBNDDRIntClr = 0xFFFFFFFF;
 232:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBSysErrIntClr = 0xFFFFFFFF;
 233:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBDMAIntEn  = 0x00000007;
 234:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   DDMemMap[0] = 0x00000000;
 235:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   DDMemMap[1] = 0x00000000;
 236:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   for (n = 0; n < USB_EP_NUM; n++) {
 237:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     udca[n] = 0;
 238:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     UDCA[n] = 0;
 239:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   }
 240:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #endif
 241:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** }
 311              	 .loc 1 241 0
 312 0056 7047     	 bx lr
 313              	 .cfi_endproc
 314              	.LFE62:
 316              	 .section .text.USB_Suspend,"ax",%progbits
 317              	 .align 2
 318              	 .global USB_Suspend
 319              	 .thumb
 320              	 .thumb_func
 322              	USB_Suspend:
 323              	.LFB63:
 242:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 243:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 244:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /*
 245:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *  USB Suspend Function
 246:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *   Called automatically on USB Suspend
 247:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Return Value:    None
 248:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  */
 249:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 250:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** void USB_Suspend (void) {
 324              	 .loc 1 250 0
 325              	 .cfi_startproc
 326              	 
 327              	 
 328              	 
 251:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   /* Performed by Hardware */
 252:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** }
 329              	 .loc 1 252 0
 330 0000 7047     	 bx lr
 331              	 .cfi_endproc
 332              	.LFE63:
 334 0002 00BF     	 .section .text.USB_Resume,"ax",%progbits
 335              	 .align 2
 336              	 .global USB_Resume
 337              	 .thumb
 338              	 .thumb_func
 340              	USB_Resume:
 341              	.LFB64:
 253:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 254:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 255:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /*
 256:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *  USB Resume Function
 257:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *   Called automatically on USB Resume
 258:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Return Value:    None
 259:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  */
 260:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 261:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** void USB_Resume (void) {
 342              	 .loc 1 261 0
 343              	 .cfi_startproc
 344              	 
 345              	 
 346              	 
 262:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   /* Performed by Hardware */
 263:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** }
 347              	 .loc 1 263 0
 348 0000 7047     	 bx lr
 349              	 .cfi_endproc
 350              	.LFE64:
 352 0002 00BF     	 .section .text.USB_WakeUp,"ax",%progbits
 353              	 .align 2
 354              	 .global USB_WakeUp
 355              	 .thumb
 356              	 .thumb_func
 358              	USB_WakeUp:
 359              	.LFB65:
 264:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 265:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 266:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /*
 267:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *  USB Remote Wakeup Function
 268:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *   Called automatically on USB Remote Wakeup
 269:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Return Value:    None
 270:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  */
 271:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 272:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** void USB_WakeUp (void) {
 360              	 .loc 1 272 0
 361              	 .cfi_startproc
 362              	 
 363              	 
 364 0000 08B5     	 push {r3,lr}
 365              	.LCFI2:
 366              	 .cfi_def_cfa_offset 8
 367              	 .cfi_offset 14,-4
 368              	 .cfi_offset 3,-8
 273:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 274:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   if (USB_DeviceStatus & USB_GETSTATUS_REMOTE_WAKEUP) {
 369              	 .loc 1 274 0
 370 0002 40F20003 	 movw r3,#:lower16:USB_DeviceStatus
 371 0006 C0F20003 	 movt r3,#:upper16:USB_DeviceStatus
 372 000a 1B88     	 ldrh r3,[r3,#0]
 373 000c 13F0020F 	 tst r3,#2
 374 0010 09D0     	 beq .L27
 275:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     WrCmdDat(CMD_SET_DEV_STAT, DAT_WR_BYTE(DEV_CON));
 375              	 .loc 1 275 0
 376 0012 4FF4A060 	 mov r0,#1280
 377 0016 C0F2FE00 	 movt r0,254
 378 001a 4FF48071 	 mov r1,#256
 379 001e C0F20101 	 movt r1,1
 380 0022 FFF7FEFF 	 bl WrCmdDat
 381              	.L27:
 382 0026 08BD     	 pop {r3,pc}
 383              	 .cfi_endproc
 384              	.LFE65:
 386              	 .section .text.USB_WakeUpCfg,"ax",%progbits
 387              	 .align 2
 388              	 .global USB_WakeUpCfg
 389              	 .thumb
 390              	 .thumb_func
 392              	USB_WakeUpCfg:
 393              	.LFB66:
 276:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   }
 277:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** }
 278:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 279:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 280:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /*
 281:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *  USB Remote Wakeup Configuration Function
 282:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Parameters:      cfg:   Enable/Disable
 283:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Return Value:    None
 284:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  */
 285:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 286:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** void USB_WakeUpCfg (uint32_t cfg) {
 394              	 .loc 1 286 0
 395              	 .cfi_startproc
 396              	 
 397              	 
 398              	 
 399              	.LVL12:
 287:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   /* Not needed */
 288:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** }
 400              	 .loc 1 288 0
 401 0000 7047     	 bx lr
 402              	 .cfi_endproc
 403              	.LFE66:
 405 0002 00BF     	 .section .text.USB_SetAddress,"ax",%progbits
 406              	 .align 2
 407              	 .global USB_SetAddress
 408              	 .thumb
 409              	 .thumb_func
 411              	USB_SetAddress:
 412              	.LFB67:
 289:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 290:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 291:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /*
 292:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *  USB Set Address Function
 293:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Parameters:      adr:   USB Address
 294:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Return Value:    None
 295:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  */
 296:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 297:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** void USB_SetAddress (uint32_t adr) {
 413              	 .loc 1 297 0
 414              	 .cfi_startproc
 415              	 
 416              	 
 417              	.LVL13:
 418 0000 38B5     	 push {r3,r4,r5,lr}
 419              	.LCFI3:
 420              	 .cfi_def_cfa_offset 16
 421              	 .cfi_offset 14,-4
 422              	 .cfi_offset 5,-8
 423              	 .cfi_offset 4,-12
 424              	 .cfi_offset 3,-16
 298:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   WrCmdDat(CMD_SET_ADDR, DAT_WR_BYTE(DEV_EN | adr)); /* Don't wait for next */
 425              	 .loc 1 298 0
 426 0002 40F08005 	 orr r5,r0,#128
 427 0006 4FEA0545 	 lsl r5,r5,#16
 428 000a 45F48075 	 orr r5,r5,#256
 429 000e 4FF4A064 	 mov r4,#1280
 430 0012 C0F2D004 	 movt r4,208
 431 0016 2046     	 mov r0,r4
 432              	.LVL14:
 433 0018 2946     	 mov r1,r5
 434 001a FFF7FEFF 	 bl WrCmdDat
 299:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   WrCmdDat(CMD_SET_ADDR, DAT_WR_BYTE(DEV_EN | adr)); /*  Setup Status Phase */
 435              	 .loc 1 299 0
 436 001e 2046     	 mov r0,r4
 437 0020 2946     	 mov r1,r5
 438 0022 FFF7FEFF 	 bl WrCmdDat
 300:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** }
 439              	 .loc 1 300 0
 440 0026 38BD     	 pop {r3,r4,r5,pc}
 441              	 .cfi_endproc
 442              	.LFE67:
 444              	 .section .text.USB_Init,"ax",%progbits
 445              	 .align 2
 446              	 .global USB_Init
 447              	 .thumb
 448              	 .thumb_func
 450              	USB_Init:
 451              	.LFB60:
 149:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** void USB_Init (void) {
 452              	 .loc 1 149 0
 453              	 .cfi_startproc
 454              	 
 455              	 
 456 0000 08B5     	 push {r3,lr}
 457              	.LCFI4:
 458              	 .cfi_def_cfa_offset 8
 459              	 .cfi_offset 14,-4
 460              	 .cfi_offset 3,-8
 152:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_PINCON->PINSEL1 &= ~((3<<26)|(3<<28));   /* P0.29 D+, P0.30 D- */
 461              	 .loc 1 152 0
 462 0002 4FF44043 	 mov r3,#49152
 463 0006 C4F20203 	 movt r3,16386
 464 000a 5A68     	 ldr r2,[r3,#4]
 465 000c 22F07052 	 bic r2,r2,#1006632960
 466 0010 5A60     	 str r2,[r3,#4]
 153:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_PINCON->PINSEL1 |=  ((1<<26)|(1<<28));   /* PINSEL1 26.27, 28.29  = 01 */
 467              	 .loc 1 153 0
 468 0012 5A68     	 ldr r2,[r3,#4]
 469 0014 42F0A052 	 orr r2,r2,#335544320
 470 0018 5A60     	 str r2,[r3,#4]
 156:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_PINCON->PINSEL3 &= ~((3<< 4)|(3<<28));   /* P1.18 GoodLink, P1.30 VBUS */
 471              	 .loc 1 156 0
 472 001a DA68     	 ldr r2,[r3,#12]
 473 001c 22F04052 	 bic r2,r2,#805306368
 474 0020 22F03002 	 bic r2,r2,#48
 475 0024 DA60     	 str r2,[r3,#12]
 157:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_PINCON->PINSEL3 |=  ((1<< 4)|(2<<28));   /* PINSEL3 4.5 = 01, 28.29 = 10 */
 476              	 .loc 1 157 0
 477 0026 DA68     	 ldr r2,[r3,#12]
 478 0028 42F00052 	 orr r2,r2,#536870912
 479 002c 42F01002 	 orr r2,r2,#16
 480 0030 DA60     	 str r2,[r3,#12]
 160:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_PINCON->PINSEL4 &= ~((3<<18)        );   /* P2.9 SoftConnect */
 481              	 .loc 1 160 0
 482 0032 1A69     	 ldr r2,[r3,#16]
 483 0034 22F44022 	 bic r2,r2,#786432
 484 0038 1A61     	 str r2,[r3,#16]
 161:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_PINCON->PINSEL4 |=  ((1<<18)        );   /* PINSEL4 18.19 = 01 */
 485              	 .loc 1 161 0
 486 003a 1A69     	 ldr r2,[r3,#16]
 487 003c 42F48022 	 orr r2,r2,#262144
 488 0040 1A61     	 str r2,[r3,#16]
 166:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_PINCON->PINSEL3 &= ~0x30000030;
 489              	 .loc 1 166 0
 490 0042 DA68     	 ldr r2,[r3,#12]
 491 0044 22F04052 	 bic r2,r2,#805306368
 492 0048 22F03002 	 bic r2,r2,#48
 493 004c DA60     	 str r2,[r3,#12]
 167:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_PINCON->PINSEL3 |= 0x20000010;
 494              	 .loc 1 167 0
 495 004e DA68     	 ldr r2,[r3,#12]
 496 0050 42F00052 	 orr r2,r2,#536870912
 497 0054 42F01002 	 orr r2,r2,#16
 498 0058 DA60     	 str r2,[r3,#12]
 170:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_SC->PCONP |= (1UL<<31);                /* USB PCLK -> enable USB Per.       */
 499              	 .loc 1 170 0
 500 005a 4FF44043 	 mov r3,#49152
 501 005e C4F20F03 	 movt r3,16399
 502 0062 D3F8C420 	 ldr r2,[r3,#196]
 503 0066 42F00042 	 orr r2,r2,#-2147483648
 504 006a C3F8C420 	 str r2,[r3,#196]
 173:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBClkCtrl = 0x1A;                /* Dev, PortSel, AHB clock enable */
 505              	 .loc 1 173 0
 506 006e 4FF44043 	 mov r3,#49152
 507 0072 C5F20003 	 movt r3,20480
 508 0076 4FF01A02 	 mov r2,#26
 509 007a C3F8F42F 	 str r2,[r3,#4084]
 175:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   while ((LPC_USB->USBClkSt & 0x1A) != 0x1A);
 510              	 .loc 1 175 0
 511 007e 4FF44042 	 mov r2,#49152
 512 0082 C5F20002 	 movt r2,20480
 513              	.L32:
 175:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   while ((LPC_USB->USBClkSt & 0x1A) != 0x1A);
 514              	 .loc 1 175 0 is_stmt 0 discriminator 1
 515 0086 D2F8F83F 	 ldr r3,[r2,#4088]
 516 008a 03F01A03 	 and r3,r3,#26
 517 008e 1A2B     	 cmp r3,#26
 518 0090 F9D1     	 bne .L32
 519              	.LVL15:
 520              	.LBB10:
 521              	.LBB11:
 522              	 .file 2 "src/MightyBoard/Motherboard/system/core_cm3.h"
   1:src/MightyBoard/Motherboard/system/core_cm3.h **** /**************************************************************************//**
   2:src/MightyBoard/Motherboard/system/core_cm3.h ****  * @file     core_cm3.h
   3:src/MightyBoard/Motherboard/system/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:src/MightyBoard/Motherboard/system/core_cm3.h ****  * @version  V2.01
   5:src/MightyBoard/Motherboard/system/core_cm3.h ****  * @date     06. December 2010
   6:src/MightyBoard/Motherboard/system/core_cm3.h ****  *
   7:src/MightyBoard/Motherboard/system/core_cm3.h ****  * @note
   8:src/MightyBoard/Motherboard/system/core_cm3.h ****  * Copyright (C) 2009-2010 ARM Limited. All rights reserved.
   9:src/MightyBoard/Motherboard/system/core_cm3.h ****  *
  10:src/MightyBoard/Motherboard/system/core_cm3.h ****  * @par
  11:src/MightyBoard/Motherboard/system/core_cm3.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:src/MightyBoard/Motherboard/system/core_cm3.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:src/MightyBoard/Motherboard/system/core_cm3.h ****  * within development tools that are supporting such ARM based processors.
  14:src/MightyBoard/Motherboard/system/core_cm3.h ****  *
  15:src/MightyBoard/Motherboard/system/core_cm3.h ****  * @par
  16:src/MightyBoard/Motherboard/system/core_cm3.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:src/MightyBoard/Motherboard/system/core_cm3.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:src/MightyBoard/Motherboard/system/core_cm3.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:src/MightyBoard/Motherboard/system/core_cm3.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:src/MightyBoard/Motherboard/system/core_cm3.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:src/MightyBoard/Motherboard/system/core_cm3.h ****  *
  22:src/MightyBoard/Motherboard/system/core_cm3.h ****  ******************************************************************************/
  23:src/MightyBoard/Motherboard/system/core_cm3.h **** #if defined ( __ICCARM__ )
  24:src/MightyBoard/Motherboard/system/core_cm3.h ****  #pragma system_include  /* treat file as system include file for MISRA check */
  25:src/MightyBoard/Motherboard/system/core_cm3.h **** #endif
  26:src/MightyBoard/Motherboard/system/core_cm3.h **** 
  27:src/MightyBoard/Motherboard/system/core_cm3.h **** #ifdef __cplusplus
  28:src/MightyBoard/Motherboard/system/core_cm3.h ****  extern "C" {
  29:src/MightyBoard/Motherboard/system/core_cm3.h **** #endif
  30:src/MightyBoard/Motherboard/system/core_cm3.h **** 
  31:src/MightyBoard/Motherboard/system/core_cm3.h **** #ifndef __CORE_CM3_H_GENERIC
  32:src/MightyBoard/Motherboard/system/core_cm3.h **** #define __CORE_CM3_H_GENERIC
  33:src/MightyBoard/Motherboard/system/core_cm3.h **** 
  34:src/MightyBoard/Motherboard/system/core_cm3.h **** /**  @ingroup  CMSIS
  35:src/MightyBoard/Motherboard/system/core_cm3.h ****  @addtogroup CMSIS_core_LintCinfiguration CMSIS Core Lint Configuration
  36:src/MightyBoard/Motherboard/system/core_cm3.h ****   List of Lint messages which will be suppressed and not shown:
  37:src/MightyBoard/Motherboard/system/core_cm3.h ****     - not yet checked
  38:src/MightyBoard/Motherboard/system/core_cm3.h ****   .
  39:src/MightyBoard/Motherboard/system/core_cm3.h ****   Note:  To re-enable a Message, insert a space before 'lint' *
  40:src/MightyBoard/Motherboard/system/core_cm3.h **** 
  41:src/MightyBoard/Motherboard/system/core_cm3.h ****  */
  42:src/MightyBoard/Motherboard/system/core_cm3.h **** 
  43:src/MightyBoard/Motherboard/system/core_cm3.h **** 
  44:src/MightyBoard/Motherboard/system/core_cm3.h **** /*******************************************************************************
  45:src/MightyBoard/Motherboard/system/core_cm3.h ****  *                 CMSIS definitions
  46:src/MightyBoard/Motherboard/system/core_cm3.h ****  ******************************************************************************/
  47:src/MightyBoard/Motherboard/system/core_cm3.h **** /** @ingroup  CMSIS
  48:src/MightyBoard/Motherboard/system/core_cm3.h ****  * @addtogroup CMSIS_core_definitions CMSIS Core Definitions
  49:src/MightyBoard/Motherboard/system/core_cm3.h ****   This file defines all structures and symbols for CMSIS core:
  50:src/MightyBoard/Motherboard/system/core_cm3.h ****    - CMSIS version number
  51:src/MightyBoard/Motherboard/system/core_cm3.h ****    - Cortex-M core
  52:src/MightyBoard/Motherboard/system/core_cm3.h ****    - Cortex-M core Revision Number
  53:src/MightyBoard/Motherboard/system/core_cm3.h ****   @{
  54:src/MightyBoard/Motherboard/system/core_cm3.h ****  */
  55:src/MightyBoard/Motherboard/system/core_cm3.h **** 
  56:src/MightyBoard/Motherboard/system/core_cm3.h **** /*  CMSIS CM3 definitions */
  57:src/MightyBoard/Motherboard/system/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x02)                                                       /*!<
  58:src/MightyBoard/Motherboard/system/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x00)                                                       /*!<
  59:src/MightyBoard/Motherboard/system/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16) | __CM3_CMSIS_VERSION_SUB) /*!<
  60:src/MightyBoard/Motherboard/system/core_cm3.h **** 
  61:src/MightyBoard/Motherboard/system/core_cm3.h **** #define __CORTEX_M                (0x03)                                                       /*!<
  62:src/MightyBoard/Motherboard/system/core_cm3.h **** 
  63:src/MightyBoard/Motherboard/system/core_cm3.h **** 
  64:src/MightyBoard/Motherboard/system/core_cm3.h **** #if defined ( __CC_ARM   )
  65:src/MightyBoard/Motherboard/system/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  66:src/MightyBoard/Motherboard/system/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  67:src/MightyBoard/Motherboard/system/core_cm3.h **** 
  68:src/MightyBoard/Motherboard/system/core_cm3.h **** #elif defined ( __ICCARM__ )
  69:src/MightyBoard/Motherboard/system/core_cm3.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
  70:src/MightyBoard/Motherboard/system/core_cm3.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
  71:src/MightyBoard/Motherboard/system/core_cm3.h **** 
  72:src/MightyBoard/Motherboard/system/core_cm3.h **** #elif defined   (  __GNUC__  )
  73:src/MightyBoard/Motherboard/system/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  74:src/MightyBoard/Motherboard/system/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  75:src/MightyBoard/Motherboard/system/core_cm3.h **** 
  76:src/MightyBoard/Motherboard/system/core_cm3.h **** #elif defined   (  __TASKING__  )
  77:src/MightyBoard/Motherboard/system/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
  78:src/MightyBoard/Motherboard/system/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
  79:src/MightyBoard/Motherboard/system/core_cm3.h **** 
  80:src/MightyBoard/Motherboard/system/core_cm3.h **** #endif
  81:src/MightyBoard/Motherboard/system/core_cm3.h **** 
  82:src/MightyBoard/Motherboard/system/core_cm3.h **** #include <stdint.h>                      /*!< standard types definitions                      */
  83:src/MightyBoard/Motherboard/system/core_cm3.h **** #include "core_cmInstr.h"                /*!< Core Instruction Access                         */
  84:src/MightyBoard/Motherboard/system/core_cm3.h **** #include "core_cmFunc.h"                 /*!< Core Function Access                            */
  85:src/MightyBoard/Motherboard/system/core_cm3.h **** 
  86:src/MightyBoard/Motherboard/system/core_cm3.h **** #endif /* __CORE_CM3_H_GENERIC */
  87:src/MightyBoard/Motherboard/system/core_cm3.h **** 
  88:src/MightyBoard/Motherboard/system/core_cm3.h **** 
  89:src/MightyBoard/Motherboard/system/core_cm3.h **** #ifndef __CMSIS_GENERIC
  90:src/MightyBoard/Motherboard/system/core_cm3.h **** 
  91:src/MightyBoard/Motherboard/system/core_cm3.h **** #ifndef __CORE_CM3_H_DEPENDANT
  92:src/MightyBoard/Motherboard/system/core_cm3.h **** #define __CORE_CM3_H_DEPENDANT
  93:src/MightyBoard/Motherboard/system/core_cm3.h **** 
  94:src/MightyBoard/Motherboard/system/core_cm3.h **** /* IO definitions (access restrictions to peripheral registers) */
  95:src/MightyBoard/Motherboard/system/core_cm3.h **** #ifdef __cplusplus
  96:src/MightyBoard/Motherboard/system/core_cm3.h ****   #define     __I     volatile           /*!< defines 'read only' permissions                 */
  97:src/MightyBoard/Motherboard/system/core_cm3.h **** #else
  98:src/MightyBoard/Motherboard/system/core_cm3.h ****   #define     __I     volatile const     /*!< defines 'read only' permissions                 */
  99:src/MightyBoard/Motherboard/system/core_cm3.h **** #endif
 100:src/MightyBoard/Motherboard/system/core_cm3.h **** #define     __O     volatile             /*!< defines 'write only' permissions                */
 101:src/MightyBoard/Motherboard/system/core_cm3.h **** #define     __IO    volatile             /*!< defines 'read / write' permissions              */
 102:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 103:src/MightyBoard/Motherboard/system/core_cm3.h **** /*@} end of group CMSIS_core_definitions */
 104:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 105:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 106:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 107:src/MightyBoard/Motherboard/system/core_cm3.h **** /*******************************************************************************
 108:src/MightyBoard/Motherboard/system/core_cm3.h ****  *                 Register Abstraction
 109:src/MightyBoard/Motherboard/system/core_cm3.h ****  ******************************************************************************/
 110:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 111:src/MightyBoard/Motherboard/system/core_cm3.h **** /** @ingroup  CMSIS
 112:src/MightyBoard/Motherboard/system/core_cm3.h ****  * @addtogroup CMSIS_core_register CMSIS Core Register
 113:src/MightyBoard/Motherboard/system/core_cm3.h ****   Core Register contain:
 114:src/MightyBoard/Motherboard/system/core_cm3.h ****   - Core Register
 115:src/MightyBoard/Motherboard/system/core_cm3.h ****   - Core NVIC Register
 116:src/MightyBoard/Motherboard/system/core_cm3.h ****   - Core SCB Register
 117:src/MightyBoard/Motherboard/system/core_cm3.h ****   - Core SysTick Register
 118:src/MightyBoard/Motherboard/system/core_cm3.h ****   - Core Debug Register
 119:src/MightyBoard/Motherboard/system/core_cm3.h ****   - Core MPU Register
 120:src/MightyBoard/Motherboard/system/core_cm3.h **** */
 121:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 122:src/MightyBoard/Motherboard/system/core_cm3.h **** /** \ingroup  CMSIS_core_register
 123:src/MightyBoard/Motherboard/system/core_cm3.h ****     \defgroup CMSIS_CORE CMSIS Core
 124:src/MightyBoard/Motherboard/system/core_cm3.h ****   Type definitions for the Cortex-M Core Registers
 125:src/MightyBoard/Motherboard/system/core_cm3.h ****   @{
 126:src/MightyBoard/Motherboard/system/core_cm3.h ****  */
 127:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 128:src/MightyBoard/Motherboard/system/core_cm3.h **** /** \brief  Union type to access the Application Program Status Register (APSR).
 129:src/MightyBoard/Motherboard/system/core_cm3.h ****  */
 130:src/MightyBoard/Motherboard/system/core_cm3.h **** typedef union
 131:src/MightyBoard/Motherboard/system/core_cm3.h **** {
 132:src/MightyBoard/Motherboard/system/core_cm3.h ****   struct
 133:src/MightyBoard/Motherboard/system/core_cm3.h ****   {
 134:src/MightyBoard/Motherboard/system/core_cm3.h **** #if (__CORTEX_M != 0x04)
 135:src/MightyBoard/Motherboard/system/core_cm3.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved                           */
 136:src/MightyBoard/Motherboard/system/core_cm3.h **** #else
 137:src/MightyBoard/Motherboard/system/core_cm3.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved                           */
 138:src/MightyBoard/Motherboard/system/core_cm3.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 139:src/MightyBoard/Motherboard/system/core_cm3.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved                           */
 140:src/MightyBoard/Motherboard/system/core_cm3.h **** #endif
 141:src/MightyBoard/Motherboard/system/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 142:src/MightyBoard/Motherboard/system/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 143:src/MightyBoard/Motherboard/system/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 144:src/MightyBoard/Motherboard/system/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 145:src/MightyBoard/Motherboard/system/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 146:src/MightyBoard/Motherboard/system/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access                  */
 147:src/MightyBoard/Motherboard/system/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 148:src/MightyBoard/Motherboard/system/core_cm3.h **** } APSR_Type;
 149:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 150:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 151:src/MightyBoard/Motherboard/system/core_cm3.h **** /** \brief  Union type to access the Interrupt Program Status Register (IPSR).
 152:src/MightyBoard/Motherboard/system/core_cm3.h ****  */
 153:src/MightyBoard/Motherboard/system/core_cm3.h **** typedef union
 154:src/MightyBoard/Motherboard/system/core_cm3.h **** {
 155:src/MightyBoard/Motherboard/system/core_cm3.h ****   struct
 156:src/MightyBoard/Motherboard/system/core_cm3.h ****   {
 157:src/MightyBoard/Motherboard/system/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 158:src/MightyBoard/Motherboard/system/core_cm3.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved                           */
 159:src/MightyBoard/Motherboard/system/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access                  */
 160:src/MightyBoard/Motherboard/system/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 161:src/MightyBoard/Motherboard/system/core_cm3.h **** } IPSR_Type;
 162:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 163:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 164:src/MightyBoard/Motherboard/system/core_cm3.h **** /** \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 165:src/MightyBoard/Motherboard/system/core_cm3.h ****  */
 166:src/MightyBoard/Motherboard/system/core_cm3.h **** typedef union
 167:src/MightyBoard/Motherboard/system/core_cm3.h **** {
 168:src/MightyBoard/Motherboard/system/core_cm3.h ****   struct
 169:src/MightyBoard/Motherboard/system/core_cm3.h ****   {
 170:src/MightyBoard/Motherboard/system/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 171:src/MightyBoard/Motherboard/system/core_cm3.h **** #if (__CORTEX_M != 0x04)
 172:src/MightyBoard/Motherboard/system/core_cm3.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved                           */
 173:src/MightyBoard/Motherboard/system/core_cm3.h **** #else
 174:src/MightyBoard/Motherboard/system/core_cm3.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved                           */
 175:src/MightyBoard/Motherboard/system/core_cm3.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 176:src/MightyBoard/Motherboard/system/core_cm3.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved                           */
 177:src/MightyBoard/Motherboard/system/core_cm3.h **** #endif
 178:src/MightyBoard/Motherboard/system/core_cm3.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0)          */
 179:src/MightyBoard/Motherboard/system/core_cm3.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0)          */
 180:src/MightyBoard/Motherboard/system/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 181:src/MightyBoard/Motherboard/system/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 182:src/MightyBoard/Motherboard/system/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 183:src/MightyBoard/Motherboard/system/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 184:src/MightyBoard/Motherboard/system/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 185:src/MightyBoard/Motherboard/system/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access                  */
 186:src/MightyBoard/Motherboard/system/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 187:src/MightyBoard/Motherboard/system/core_cm3.h **** } xPSR_Type;
 188:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 189:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 190:src/MightyBoard/Motherboard/system/core_cm3.h **** /** \brief  Union type to access the Control Registers (CONTROL).
 191:src/MightyBoard/Motherboard/system/core_cm3.h ****  */
 192:src/MightyBoard/Motherboard/system/core_cm3.h **** typedef union
 193:src/MightyBoard/Motherboard/system/core_cm3.h **** {
 194:src/MightyBoard/Motherboard/system/core_cm3.h ****   struct
 195:src/MightyBoard/Motherboard/system/core_cm3.h ****   {
 196:src/MightyBoard/Motherboard/system/core_cm3.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 197:src/MightyBoard/Motherboard/system/core_cm3.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used                   */
 198:src/MightyBoard/Motherboard/system/core_cm3.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag           */
 199:src/MightyBoard/Motherboard/system/core_cm3.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved                           */
 200:src/MightyBoard/Motherboard/system/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access                  */
 201:src/MightyBoard/Motherboard/system/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 202:src/MightyBoard/Motherboard/system/core_cm3.h **** } CONTROL_Type;
 203:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 204:src/MightyBoard/Motherboard/system/core_cm3.h **** /*@} end of group CMSIS_CORE */
 205:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 206:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 207:src/MightyBoard/Motherboard/system/core_cm3.h **** /** \ingroup  CMSIS_core_register
 208:src/MightyBoard/Motherboard/system/core_cm3.h ****     \defgroup CMSIS_NVIC CMSIS NVIC
 209:src/MightyBoard/Motherboard/system/core_cm3.h ****   Type definitions for the Cortex-M NVIC Registers
 210:src/MightyBoard/Motherboard/system/core_cm3.h ****   @{
 211:src/MightyBoard/Motherboard/system/core_cm3.h ****  */
 212:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 213:src/MightyBoard/Motherboard/system/core_cm3.h **** /** \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 214:src/MightyBoard/Motherboard/system/core_cm3.h ****  */
 215:src/MightyBoard/Motherboard/system/core_cm3.h **** typedef struct
 216:src/MightyBoard/Motherboard/system/core_cm3.h **** {
 217:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t ISER[8];                 /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register   
 218:src/MightyBoard/Motherboard/system/core_cm3.h ****        uint32_t RESERVED0[24];
 219:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t ICER[8];                 /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 220:src/MightyBoard/Motherboard/system/core_cm3.h ****        uint32_t RSERVED1[24];
 221:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t ISPR[8];                 /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register  
 222:src/MightyBoard/Motherboard/system/core_cm3.h ****        uint32_t RESERVED2[24];
 223:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t ICPR[8];                 /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 224:src/MightyBoard/Motherboard/system/core_cm3.h ****        uint32_t RESERVED3[24];
 225:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t IABR[8];                 /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register   
 226:src/MightyBoard/Motherboard/system/core_cm3.h ****        uint32_t RESERVED4[56];
 227:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint8_t  IP[240];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 228:src/MightyBoard/Motherboard/system/core_cm3.h ****        uint32_t RESERVED5[644];
 229:src/MightyBoard/Motherboard/system/core_cm3.h ****   __O  uint32_t STIR;                    /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 230:src/MightyBoard/Motherboard/system/core_cm3.h **** }  NVIC_Type;
 231:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 232:src/MightyBoard/Motherboard/system/core_cm3.h **** /*@} end of group CMSIS_NVIC */
 233:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 234:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 235:src/MightyBoard/Motherboard/system/core_cm3.h **** /** \ingroup  CMSIS_core_register
 236:src/MightyBoard/Motherboard/system/core_cm3.h ****     \defgroup CMSIS_SCB CMSIS SCB
 237:src/MightyBoard/Motherboard/system/core_cm3.h ****   Type definitions for the Cortex-M System Control Block Registers
 238:src/MightyBoard/Motherboard/system/core_cm3.h ****   @{
 239:src/MightyBoard/Motherboard/system/core_cm3.h ****  */
 240:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 241:src/MightyBoard/Motherboard/system/core_cm3.h **** /** \brief  Structure type to access the System Control Block (SCB).
 242:src/MightyBoard/Motherboard/system/core_cm3.h ****  */
 243:src/MightyBoard/Motherboard/system/core_cm3.h **** typedef struct
 244:src/MightyBoard/Motherboard/system/core_cm3.h **** {
 245:src/MightyBoard/Motherboard/system/core_cm3.h ****   __I  uint32_t CPUID;                   /*!< Offset: 0x000 (R/ )  CPU ID Base Register            
 246:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t ICSR;                    /*!< Offset: 0x004 (R/W)  Interrupt Control State Register
 247:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t VTOR;                    /*!< Offset: 0x008 (R/W)  Vector Table Offset Register    
 248:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t AIRCR;                   /*!< Offset: 0x00C (R/W)  Application Interrupt / Reset Co
 249:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t SCR;                     /*!< Offset: 0x010 (R/W)  System Control Register         
 250:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t CCR;                     /*!< Offset: 0x014 (R/W)  Configuration Control Register  
 251:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint8_t  SHP[12];                 /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 252:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t SHCSR;                   /*!< Offset: 0x024 (R/W)  System Handler Control and State
 253:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t CFSR;                    /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 254:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t HFSR;                    /*!< Offset: 0x02C (R/W)  Hard Fault Status Register      
 255:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t DFSR;                    /*!< Offset: 0x030 (R/W)  Debug Fault Status Register     
 256:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t MMFAR;                   /*!< Offset: 0x034 (R/W)  Mem Manage Address Register     
 257:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t BFAR;                    /*!< Offset: 0x038 (R/W)  Bus Fault Address Register      
 258:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t AFSR;                    /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 259:src/MightyBoard/Motherboard/system/core_cm3.h ****   __I  uint32_t PFR[2];                  /*!< Offset: 0x040 (R/ )  Processor Feature Register      
 260:src/MightyBoard/Motherboard/system/core_cm3.h ****   __I  uint32_t DFR;                     /*!< Offset: 0x048 (R/ )  Debug Feature Register          
 261:src/MightyBoard/Motherboard/system/core_cm3.h ****   __I  uint32_t ADR;                     /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register      
 262:src/MightyBoard/Motherboard/system/core_cm3.h ****   __I  uint32_t MMFR[4];                 /*!< Offset: 0x050 (R/ )  Memory Model Feature Register   
 263:src/MightyBoard/Motherboard/system/core_cm3.h ****   __I  uint32_t ISAR[5];                 /*!< Offset: 0x060 (R/ )  ISA Feature Register            
 264:src/MightyBoard/Motherboard/system/core_cm3.h **** } SCB_Type;
 265:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 266:src/MightyBoard/Motherboard/system/core_cm3.h **** /* SCB CPUID Register Definitions */
 267:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 268:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 269:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 270:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 271:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 272:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 273:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 274:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 275:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 276:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 277:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 278:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 279:src/MightyBoard/Motherboard/system/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 280:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 281:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 282:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 283:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 284:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 285:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 286:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 287:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 288:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 289:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 290:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 291:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 292:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 293:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 294:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 295:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 296:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 297:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 298:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 299:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 300:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 301:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 302:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 303:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 304:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 305:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 306:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 307:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 308:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 309:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 310:src/MightyBoard/Motherboard/system/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 311:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29                                             /*!< SCB 
 312:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (1UL << SCB_VTOR_TBLBASE_Pos)                  /*!< SCB 
 313:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 314:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 315:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFUL << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 316:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 317:src/MightyBoard/Motherboard/system/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 318:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 319:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 320:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 321:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 322:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 323:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 324:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 325:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 326:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 327:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 328:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 329:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 330:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 331:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 332:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 333:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 334:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 335:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 336:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 337:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 338:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 339:src/MightyBoard/Motherboard/system/core_cm3.h **** /* SCB System Control Register Definitions */
 340:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 341:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 342:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 343:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 344:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 345:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 346:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 347:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 348:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 349:src/MightyBoard/Motherboard/system/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 350:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 351:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 352:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 353:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 354:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 355:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 356:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 357:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 358:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 359:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 360:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 361:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 362:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 363:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 364:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 365:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 366:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 367:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 368:src/MightyBoard/Motherboard/system/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 369:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 370:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 371:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 372:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 373:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 374:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 375:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 376:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 377:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 378:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 379:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 380:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 381:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 382:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 383:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 384:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 385:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 386:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 387:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 388:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 389:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 390:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 391:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 392:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 393:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 394:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 395:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 396:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 397:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 398:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 399:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 400:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 401:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 402:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 403:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 404:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 405:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 406:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 407:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 408:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 409:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 410:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 411:src/MightyBoard/Motherboard/system/core_cm3.h **** /* SCB Configurable Fault Status Registers Definitions */
 412:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 413:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 414:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 415:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 416:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 417:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 418:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 419:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 420:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 421:src/MightyBoard/Motherboard/system/core_cm3.h **** /* SCB Hard Fault Status Registers Definitions */
 422:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 423:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 424:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 425:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 426:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 427:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 428:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 429:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 430:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 431:src/MightyBoard/Motherboard/system/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 432:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 433:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 434:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 435:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 436:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 437:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 438:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 439:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 440:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 441:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 442:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 443:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 444:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 445:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1UL << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 446:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 447:src/MightyBoard/Motherboard/system/core_cm3.h **** /*@} end of group CMSIS_SCB */
 448:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 449:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 450:src/MightyBoard/Motherboard/system/core_cm3.h **** /** \ingroup  CMSIS_core_register
 451:src/MightyBoard/Motherboard/system/core_cm3.h ****     \defgroup CMSIS_SysTick CMSIS SysTick
 452:src/MightyBoard/Motherboard/system/core_cm3.h ****   Type definitions for the Cortex-M System Timer Registers
 453:src/MightyBoard/Motherboard/system/core_cm3.h ****   @{
 454:src/MightyBoard/Motherboard/system/core_cm3.h ****  */
 455:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 456:src/MightyBoard/Motherboard/system/core_cm3.h **** /** \brief  Structure type to access the System Timer (SysTick).
 457:src/MightyBoard/Motherboard/system/core_cm3.h ****  */
 458:src/MightyBoard/Motherboard/system/core_cm3.h **** typedef struct
 459:src/MightyBoard/Motherboard/system/core_cm3.h **** {
 460:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 461:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t LOAD;                    /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register   
 462:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t VAL;                     /*!< Offset: 0x008 (R/W)  SysTick Current Value Register  
 463:src/MightyBoard/Motherboard/system/core_cm3.h ****   __I  uint32_t CALIB;                   /*!< Offset: 0x00C (R/ )  SysTick Calibration Register    
 464:src/MightyBoard/Motherboard/system/core_cm3.h **** } SysTick_Type;
 465:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 466:src/MightyBoard/Motherboard/system/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 467:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 468:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 469:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 470:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 471:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 472:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 473:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 474:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 475:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 476:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 477:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 478:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 479:src/MightyBoard/Motherboard/system/core_cm3.h **** /* SysTick Reload Register Definitions */
 480:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 481:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 482:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 483:src/MightyBoard/Motherboard/system/core_cm3.h **** /* SysTick Current Register Definitions */
 484:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 485:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 486:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 487:src/MightyBoard/Motherboard/system/core_cm3.h **** /* SysTick Calibration Register Definitions */
 488:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 489:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 490:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 491:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 492:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 493:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 494:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 495:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 496:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 497:src/MightyBoard/Motherboard/system/core_cm3.h **** /*@} end of group CMSIS_SysTick */
 498:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 499:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 500:src/MightyBoard/Motherboard/system/core_cm3.h **** /** \ingroup  CMSIS_core_register
 501:src/MightyBoard/Motherboard/system/core_cm3.h ****     \defgroup CMSIS_ITM CMSIS ITM
 502:src/MightyBoard/Motherboard/system/core_cm3.h ****   Type definitions for the Cortex-M Instrumentation Trace Macrocell (ITM)
 503:src/MightyBoard/Motherboard/system/core_cm3.h ****   @{
 504:src/MightyBoard/Motherboard/system/core_cm3.h ****  */
 505:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 506:src/MightyBoard/Motherboard/system/core_cm3.h **** /** \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 507:src/MightyBoard/Motherboard/system/core_cm3.h ****  */
 508:src/MightyBoard/Motherboard/system/core_cm3.h **** typedef struct
 509:src/MightyBoard/Motherboard/system/core_cm3.h **** {
 510:src/MightyBoard/Motherboard/system/core_cm3.h ****   __O  union
 511:src/MightyBoard/Motherboard/system/core_cm3.h ****   {
 512:src/MightyBoard/Motherboard/system/core_cm3.h ****     __O  uint8_t    u8;                  /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit         
 513:src/MightyBoard/Motherboard/system/core_cm3.h ****     __O  uint16_t   u16;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit        
 514:src/MightyBoard/Motherboard/system/core_cm3.h ****     __O  uint32_t   u32;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit        
 515:src/MightyBoard/Motherboard/system/core_cm3.h ****   }  PORT [32];                          /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers     
 516:src/MightyBoard/Motherboard/system/core_cm3.h ****        uint32_t RESERVED0[864];
 517:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t TER;                     /*!< Offset:       (R/W)  ITM Trace Enable Register       
 518:src/MightyBoard/Motherboard/system/core_cm3.h ****        uint32_t RESERVED1[15];
 519:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t TPR;                     /*!< Offset:       (R/W)  ITM Trace Privilege Register    
 520:src/MightyBoard/Motherboard/system/core_cm3.h ****        uint32_t RESERVED2[15];
 521:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t TCR;                     /*!< Offset:       (R/W)  ITM Trace Control Register      
 522:src/MightyBoard/Motherboard/system/core_cm3.h ****        uint32_t RESERVED3[29];
 523:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t IWR;                     /*!< Offset:       (R/W)  ITM Integration Write Register  
 524:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t IRR;                     /*!< Offset:       (R/W)  ITM Integration Read Register   
 525:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t IMCR;                    /*!< Offset:       (R/W)  ITM Integration Mode Control Reg
 526:src/MightyBoard/Motherboard/system/core_cm3.h ****        uint32_t RESERVED4[43];
 527:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t LAR;                     /*!< Offset:       (R/W)  ITM Lock Access Register        
 528:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t LSR;                     /*!< Offset:       (R/W)  ITM Lock Status Register        
 529:src/MightyBoard/Motherboard/system/core_cm3.h ****        uint32_t RESERVED5[6];
 530:src/MightyBoard/Motherboard/system/core_cm3.h ****   __I  uint32_t PID4;                    /*!< Offset:       (R/ )  ITM Peripheral Identification Re
 531:src/MightyBoard/Motherboard/system/core_cm3.h ****   __I  uint32_t PID5;                    /*!< Offset:       (R/ )  ITM Peripheral Identification Re
 532:src/MightyBoard/Motherboard/system/core_cm3.h ****   __I  uint32_t PID6;                    /*!< Offset:       (R/ )  ITM Peripheral Identification Re
 533:src/MightyBoard/Motherboard/system/core_cm3.h ****   __I  uint32_t PID7;                    /*!< Offset:       (R/ )  ITM Peripheral Identification Re
 534:src/MightyBoard/Motherboard/system/core_cm3.h ****   __I  uint32_t PID0;                    /*!< Offset:       (R/ )  ITM Peripheral Identification Re
 535:src/MightyBoard/Motherboard/system/core_cm3.h ****   __I  uint32_t PID1;                    /*!< Offset:       (R/ )  ITM Peripheral Identification Re
 536:src/MightyBoard/Motherboard/system/core_cm3.h ****   __I  uint32_t PID2;                    /*!< Offset:       (R/ )  ITM Peripheral Identification Re
 537:src/MightyBoard/Motherboard/system/core_cm3.h ****   __I  uint32_t PID3;                    /*!< Offset:       (R/ )  ITM Peripheral Identification Re
 538:src/MightyBoard/Motherboard/system/core_cm3.h ****   __I  uint32_t CID0;                    /*!< Offset:       (R/ )  ITM Component  Identification Re
 539:src/MightyBoard/Motherboard/system/core_cm3.h ****   __I  uint32_t CID1;                    /*!< Offset:       (R/ )  ITM Component  Identification Re
 540:src/MightyBoard/Motherboard/system/core_cm3.h ****   __I  uint32_t CID2;                    /*!< Offset:       (R/ )  ITM Component  Identification Re
 541:src/MightyBoard/Motherboard/system/core_cm3.h ****   __I  uint32_t CID3;                    /*!< Offset:       (R/ )  ITM Component  Identification Re
 542:src/MightyBoard/Motherboard/system/core_cm3.h **** } ITM_Type;
 543:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 544:src/MightyBoard/Motherboard/system/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 545:src/MightyBoard/Motherboard/system/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 546:src/MightyBoard/Motherboard/system/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 547:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 548:src/MightyBoard/Motherboard/system/core_cm3.h **** /* ITM Trace Control Register Definitions */
 549:src/MightyBoard/Motherboard/system/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 550:src/MightyBoard/Motherboard/system/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 551:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 552:src/MightyBoard/Motherboard/system/core_cm3.h **** #define ITM_TCR_ATBID_Pos                  16                                             /*!< ITM 
 553:src/MightyBoard/Motherboard/system/core_cm3.h **** #define ITM_TCR_ATBID_Msk                  (0x7FUL << ITM_TCR_ATBID_Pos)                  /*!< ITM 
 554:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 555:src/MightyBoard/Motherboard/system/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 556:src/MightyBoard/Motherboard/system/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 557:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 558:src/MightyBoard/Motherboard/system/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 559:src/MightyBoard/Motherboard/system/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 560:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 561:src/MightyBoard/Motherboard/system/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 562:src/MightyBoard/Motherboard/system/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 563:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 564:src/MightyBoard/Motherboard/system/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 565:src/MightyBoard/Motherboard/system/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 566:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 567:src/MightyBoard/Motherboard/system/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 568:src/MightyBoard/Motherboard/system/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 569:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 570:src/MightyBoard/Motherboard/system/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 571:src/MightyBoard/Motherboard/system/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1UL << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 572:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 573:src/MightyBoard/Motherboard/system/core_cm3.h **** /* ITM Integration Write Register Definitions */
 574:src/MightyBoard/Motherboard/system/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 575:src/MightyBoard/Motherboard/system/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 576:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 577:src/MightyBoard/Motherboard/system/core_cm3.h **** /* ITM Integration Read Register Definitions */
 578:src/MightyBoard/Motherboard/system/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 579:src/MightyBoard/Motherboard/system/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1UL << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 580:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 581:src/MightyBoard/Motherboard/system/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 582:src/MightyBoard/Motherboard/system/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 583:src/MightyBoard/Motherboard/system/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 584:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 585:src/MightyBoard/Motherboard/system/core_cm3.h **** /* ITM Lock Status Register Definitions */
 586:src/MightyBoard/Motherboard/system/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 587:src/MightyBoard/Motherboard/system/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 588:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 589:src/MightyBoard/Motherboard/system/core_cm3.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 590:src/MightyBoard/Motherboard/system/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 591:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 592:src/MightyBoard/Motherboard/system/core_cm3.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 593:src/MightyBoard/Motherboard/system/core_cm3.h **** #define ITM_LSR_Present_Msk                (1UL << ITM_LSR_Present_Pos)                   /*!< ITM 
 594:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 595:src/MightyBoard/Motherboard/system/core_cm3.h **** /*@}*/ /* end of group CMSIS_ITM */
 596:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 597:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 598:src/MightyBoard/Motherboard/system/core_cm3.h **** /** \ingroup  CMSIS_core_register
 599:src/MightyBoard/Motherboard/system/core_cm3.h ****     \defgroup CMSIS_InterruptType CMSIS Interrupt Type
 600:src/MightyBoard/Motherboard/system/core_cm3.h ****   Type definitions for the Cortex-M Interrupt Type Register
 601:src/MightyBoard/Motherboard/system/core_cm3.h ****   @{
 602:src/MightyBoard/Motherboard/system/core_cm3.h ****  */
 603:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 604:src/MightyBoard/Motherboard/system/core_cm3.h **** /** \brief  Structure type to access the Interrupt Type Register.
 605:src/MightyBoard/Motherboard/system/core_cm3.h ****  */
 606:src/MightyBoard/Motherboard/system/core_cm3.h **** typedef struct
 607:src/MightyBoard/Motherboard/system/core_cm3.h **** {
 608:src/MightyBoard/Motherboard/system/core_cm3.h ****        uint32_t RESERVED0;
 609:src/MightyBoard/Motherboard/system/core_cm3.h ****   __I  uint32_t ICTR;                    /*!< Offset: 0x004 (R/ )  Interrupt Control Type Register 
 610:src/MightyBoard/Motherboard/system/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200))
 611:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t ACTLR;                   /*!< Offset: 0x008 (R/W)  Auxiliary Control Register      
 612:src/MightyBoard/Motherboard/system/core_cm3.h **** #else
 613:src/MightyBoard/Motherboard/system/core_cm3.h ****        uint32_t RESERVED1;
 614:src/MightyBoard/Motherboard/system/core_cm3.h **** #endif
 615:src/MightyBoard/Motherboard/system/core_cm3.h **** } InterruptType_Type;
 616:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 617:src/MightyBoard/Motherboard/system/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 618:src/MightyBoard/Motherboard/system/core_cm3.h **** #define IntType_ICTR_INTLINESNUM_Pos  0                                                   /*!< Inte
 619:src/MightyBoard/Motherboard/system/core_cm3.h **** #define IntType_ICTR_INTLINESNUM_Msk (0x1FUL << IntType_ICTR_INTLINESNUM_Pos)             /*!< Inte
 620:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 621:src/MightyBoard/Motherboard/system/core_cm3.h **** /* Auxiliary Control Register Definitions */
 622:src/MightyBoard/Motherboard/system/core_cm3.h **** #define IntType_ACTLR_DISFOLD_Pos     2                                                   /*!< Inte
 623:src/MightyBoard/Motherboard/system/core_cm3.h **** #define IntType_ACTLR_DISFOLD_Msk    (1UL << IntType_ACTLR_DISFOLD_Pos)                   /*!< Inte
 624:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 625:src/MightyBoard/Motherboard/system/core_cm3.h **** #define IntType_ACTLR_DISDEFWBUF_Pos  1                                                   /*!< Inte
 626:src/MightyBoard/Motherboard/system/core_cm3.h **** #define IntType_ACTLR_DISDEFWBUF_Msk (1UL << IntType_ACTLR_DISDEFWBUF_Pos)                /*!< Inte
 627:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 628:src/MightyBoard/Motherboard/system/core_cm3.h **** #define IntType_ACTLR_DISMCYCINT_Pos  0                                                   /*!< Inte
 629:src/MightyBoard/Motherboard/system/core_cm3.h **** #define IntType_ACTLR_DISMCYCINT_Msk (1UL << IntType_ACTLR_DISMCYCINT_Pos)                /*!< Inte
 630:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 631:src/MightyBoard/Motherboard/system/core_cm3.h **** /*@}*/ /* end of group CMSIS_InterruptType */
 632:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 633:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 634:src/MightyBoard/Motherboard/system/core_cm3.h **** #if (__MPU_PRESENT == 1)
 635:src/MightyBoard/Motherboard/system/core_cm3.h **** /** \ingroup  CMSIS_core_register
 636:src/MightyBoard/Motherboard/system/core_cm3.h ****     \defgroup CMSIS_MPU CMSIS MPU
 637:src/MightyBoard/Motherboard/system/core_cm3.h ****   Type definitions for the Cortex-M Memory Protection Unit (MPU)
 638:src/MightyBoard/Motherboard/system/core_cm3.h ****   @{
 639:src/MightyBoard/Motherboard/system/core_cm3.h ****  */
 640:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 641:src/MightyBoard/Motherboard/system/core_cm3.h **** /** \brief  Structure type to access the Memory Protection Unit (MPU).
 642:src/MightyBoard/Motherboard/system/core_cm3.h ****  */
 643:src/MightyBoard/Motherboard/system/core_cm3.h **** typedef struct
 644:src/MightyBoard/Motherboard/system/core_cm3.h **** {
 645:src/MightyBoard/Motherboard/system/core_cm3.h ****   __I  uint32_t TYPE;                    /*!< Offset: 0x000 (R/ )  MPU Type Register               
 646:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x004 (R/W)  MPU Control Register            
 647:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t RNR;                     /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register      
 648:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t RBAR;                    /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
 649:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t RASR;                    /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
 650:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t RBAR_A1;                 /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
 651:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t RASR_A1;                 /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
 652:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t RBAR_A2;                 /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
 653:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t RASR_A2;                 /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
 654:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t RBAR_A3;                 /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
 655:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t RASR_A3;                 /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
 656:src/MightyBoard/Motherboard/system/core_cm3.h **** } MPU_Type;
 657:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 658:src/MightyBoard/Motherboard/system/core_cm3.h **** /* MPU Type Register */
 659:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 660:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 661:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 662:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 663:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 664:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 665:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 666:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 667:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 668:src/MightyBoard/Motherboard/system/core_cm3.h **** /* MPU Control Register */
 669:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 670:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 671:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 672:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 673:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 674:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 675:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 676:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1UL << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 677:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 678:src/MightyBoard/Motherboard/system/core_cm3.h **** /* MPU Region Number Register */
 679:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 680:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL << MPU_RNR_REGION_Pos)                 /*!< MPU 
 681:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 682:src/MightyBoard/Motherboard/system/core_cm3.h **** /* MPU Region Base Address Register */
 683:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 684:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 685:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 686:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 687:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 688:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 689:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 690:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFUL << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 691:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 692:src/MightyBoard/Motherboard/system/core_cm3.h **** /* MPU Region Attribute and Size Register */
 693:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
 694:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
 695:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 696:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
 697:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_RASR_AP_Msk                    (7UL << MPU_RASR_AP_Pos)                       /*!< MPU 
 698:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 699:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
 700:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (7UL << MPU_RASR_TEX_Pos)                      /*!< MPU 
 701:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 702:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
 703:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
 704:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 705:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
 706:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
 707:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 708:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
 709:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
 710:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 711:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 712:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
 713:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 714:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 715:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 716:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 717:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_RASR_ENA_Pos                     0                                            /*!< MPU 
 718:src/MightyBoard/Motherboard/system/core_cm3.h **** #define MPU_RASR_ENA_Msk                    (0x1UL << MPU_RASR_ENA_Pos)                   /*!< MPU 
 719:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 720:src/MightyBoard/Motherboard/system/core_cm3.h **** /*@} end of group CMSIS_MPU */
 721:src/MightyBoard/Motherboard/system/core_cm3.h **** #endif
 722:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 723:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 724:src/MightyBoard/Motherboard/system/core_cm3.h **** /** \ingroup  CMSIS_core_register
 725:src/MightyBoard/Motherboard/system/core_cm3.h ****     \defgroup CMSIS_CoreDebug CMSIS Core Debug
 726:src/MightyBoard/Motherboard/system/core_cm3.h ****   Type definitions for the Cortex-M Core Debug Registers
 727:src/MightyBoard/Motherboard/system/core_cm3.h ****   @{
 728:src/MightyBoard/Motherboard/system/core_cm3.h ****  */
 729:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 730:src/MightyBoard/Motherboard/system/core_cm3.h **** /** \brief  Structure type to access the Core Debug Register (CoreDebug).
 731:src/MightyBoard/Motherboard/system/core_cm3.h ****  */
 732:src/MightyBoard/Motherboard/system/core_cm3.h **** typedef struct
 733:src/MightyBoard/Motherboard/system/core_cm3.h **** {
 734:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t DHCSR;                   /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
 735:src/MightyBoard/Motherboard/system/core_cm3.h ****   __O  uint32_t DCRSR;                   /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
 736:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t DCRDR;                   /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
 737:src/MightyBoard/Motherboard/system/core_cm3.h ****   __IO uint32_t DEMCR;                   /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
 738:src/MightyBoard/Motherboard/system/core_cm3.h **** } CoreDebug_Type;
 739:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 740:src/MightyBoard/Motherboard/system/core_cm3.h **** /* Debug Halting Control and Status Register */
 741:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 742:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 743:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 744:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 745:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 746:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 747:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 748:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 749:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 750:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 751:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 752:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 753:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 754:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 755:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 756:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 757:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 758:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 759:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 760:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 761:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 762:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 763:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 764:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 765:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 766:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 767:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 768:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 769:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 770:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 771:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 772:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 773:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 774:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 775:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 776:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 777:src/MightyBoard/Motherboard/system/core_cm3.h **** /* Debug Core Register Selector Register */
 778:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 779:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 780:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 781:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 782:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 783:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 784:src/MightyBoard/Motherboard/system/core_cm3.h **** /* Debug Exception and Monitor Control Register */
 785:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 786:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 787:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 788:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 789:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 790:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 791:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 792:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 793:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 794:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 795:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 796:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 797:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
 798:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 799:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 800:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 801:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 802:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 803:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 804:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 805:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 806:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 807:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 808:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 809:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 810:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 811:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 812:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 813:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 814:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 815:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 816:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 817:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 818:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 819:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 820:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 821:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 822:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 823:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 824:src/MightyBoard/Motherboard/system/core_cm3.h **** /*@} end of group CMSIS_CoreDebug */
 825:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 826:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 827:src/MightyBoard/Motherboard/system/core_cm3.h **** /** \ingroup  CMSIS_core_register
 828:src/MightyBoard/Motherboard/system/core_cm3.h ****   @{
 829:src/MightyBoard/Motherboard/system/core_cm3.h ****  */
 830:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 831:src/MightyBoard/Motherboard/system/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
 832:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 833:src/MightyBoard/Motherboard/system/core_cm3.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address        
 834:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
 835:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address    
 836:src/MightyBoard/Motherboard/system/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address       
 837:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 838:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 839:src/MightyBoard/Motherboard/system/core_cm3.h **** #define InterruptType       ((InterruptType_Type *) SCS_BASE)         /*!< Interrupt Type Register 
 840:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SCB                 ((SCB_Type *)           SCB_BASE)         /*!< SCB configuration struct
 841:src/MightyBoard/Motherboard/system/core_cm3.h **** #define SysTick             ((SysTick_Type *)       SysTick_BASE)     /*!< SysTick configuration st
 842:src/MightyBoard/Motherboard/system/core_cm3.h **** #define NVIC                ((NVIC_Type *)          NVIC_BASE)        /*!< NVIC configuration struc
 843:src/MightyBoard/Motherboard/system/core_cm3.h **** #define ITM                 ((ITM_Type *)           ITM_BASE)         /*!< ITM configuration struct
 844:src/MightyBoard/Motherboard/system/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 845:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 846:src/MightyBoard/Motherboard/system/core_cm3.h **** #if (__MPU_PRESENT == 1)
 847:src/MightyBoard/Motherboard/system/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit  
 848:src/MightyBoard/Motherboard/system/core_cm3.h ****   #define MPU               ((MPU_Type*)            MPU_BASE)         /*!< Memory Protection Unit  
 849:src/MightyBoard/Motherboard/system/core_cm3.h **** #endif
 850:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 851:src/MightyBoard/Motherboard/system/core_cm3.h **** /*@} */
 852:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 853:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 854:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 855:src/MightyBoard/Motherboard/system/core_cm3.h **** /*******************************************************************************
 856:src/MightyBoard/Motherboard/system/core_cm3.h ****  *                Hardware Abstraction Layer
 857:src/MightyBoard/Motherboard/system/core_cm3.h ****  ******************************************************************************/
 858:src/MightyBoard/Motherboard/system/core_cm3.h **** /** \ingroup  CMSIS
 859:src/MightyBoard/Motherboard/system/core_cm3.h ****   \addtogroup CMSIS_Core_FunctionInterface CMSIS Core Function Interface
 860:src/MightyBoard/Motherboard/system/core_cm3.h ****   Core Function Interface contains:
 861:src/MightyBoard/Motherboard/system/core_cm3.h ****   - Core NVIC Functions
 862:src/MightyBoard/Motherboard/system/core_cm3.h ****   - Core SysTick Functions
 863:src/MightyBoard/Motherboard/system/core_cm3.h ****   - Core Debug Functions
 864:src/MightyBoard/Motherboard/system/core_cm3.h ****   - Core Register Access Functions
 865:src/MightyBoard/Motherboard/system/core_cm3.h **** */
 866:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 867:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 868:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 869:src/MightyBoard/Motherboard/system/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
 870:src/MightyBoard/Motherboard/system/core_cm3.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 871:src/MightyBoard/Motherboard/system/core_cm3.h ****     \defgroup CMSIS_Core_NVICFunctions CMSIS Core NVIC Functions
 872:src/MightyBoard/Motherboard/system/core_cm3.h ****   @{
 873:src/MightyBoard/Motherboard/system/core_cm3.h ****  */
 874:src/MightyBoard/Motherboard/system/core_cm3.h **** /** @addtogroup CMSIS_Core_NVICFunctions
 875:src/MightyBoard/Motherboard/system/core_cm3.h ****  * @{
 876:src/MightyBoard/Motherboard/system/core_cm3.h ****  */
 877:src/MightyBoard/Motherboard/system/core_cm3.h **** /** \brief  Set Priority Grouping
 878:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 879:src/MightyBoard/Motherboard/system/core_cm3.h ****   This function sets the priority grouping field using the required unlock sequence.
 880:src/MightyBoard/Motherboard/system/core_cm3.h ****   The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
 881:src/MightyBoard/Motherboard/system/core_cm3.h ****   Only values from 0..7 are used.
 882:src/MightyBoard/Motherboard/system/core_cm3.h ****   In case of a conflict between priority grouping and available
 883:src/MightyBoard/Motherboard/system/core_cm3.h ****   priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
 884:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 885:src/MightyBoard/Motherboard/system/core_cm3.h ****     \param [in]      PriorityGroup  Priority grouping field
 886:src/MightyBoard/Motherboard/system/core_cm3.h ****  */
 887:src/MightyBoard/Motherboard/system/core_cm3.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
 888:src/MightyBoard/Motherboard/system/core_cm3.h **** {
 889:src/MightyBoard/Motherboard/system/core_cm3.h ****   uint32_t reg_value;
 890:src/MightyBoard/Motherboard/system/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);                         /* only values 0..7 a
 891:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 892:src/MightyBoard/Motherboard/system/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
 893:src/MightyBoard/Motherboard/system/core_cm3.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
 894:src/MightyBoard/Motherboard/system/core_cm3.h ****   reg_value  =  (reg_value                       |
 895:src/MightyBoard/Motherboard/system/core_cm3.h ****                 (0x5FA << SCB_AIRCR_VECTKEY_Pos) |
 896:src/MightyBoard/Motherboard/system/core_cm3.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
 897:src/MightyBoard/Motherboard/system/core_cm3.h ****   SCB->AIRCR =  reg_value;
 898:src/MightyBoard/Motherboard/system/core_cm3.h **** }
 899:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 900:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 901:src/MightyBoard/Motherboard/system/core_cm3.h **** /** \brief  Get Priority Grouping
 902:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 903:src/MightyBoard/Motherboard/system/core_cm3.h ****   This function gets the priority grouping from NVIC Interrupt Controller.
 904:src/MightyBoard/Motherboard/system/core_cm3.h ****   Priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
 905:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 906:src/MightyBoard/Motherboard/system/core_cm3.h ****     \return                Priority grouping field
 907:src/MightyBoard/Motherboard/system/core_cm3.h ****  */
 908:src/MightyBoard/Motherboard/system/core_cm3.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
 909:src/MightyBoard/Motherboard/system/core_cm3.h **** {
 910:src/MightyBoard/Motherboard/system/core_cm3.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
 911:src/MightyBoard/Motherboard/system/core_cm3.h **** }
 912:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 913:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 914:src/MightyBoard/Motherboard/system/core_cm3.h **** /** \brief  Enable External Interrupt
 915:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 916:src/MightyBoard/Motherboard/system/core_cm3.h ****     This function enables a device specific interupt in the NVIC interrupt controller.
 917:src/MightyBoard/Motherboard/system/core_cm3.h ****     The interrupt number cannot be a negative value.
 918:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 919:src/MightyBoard/Motherboard/system/core_cm3.h ****     \param [in]      IRQn  Number of the external interrupt to enable
 920:src/MightyBoard/Motherboard/system/core_cm3.h ****  */
 921:src/MightyBoard/Motherboard/system/core_cm3.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
 922:src/MightyBoard/Motherboard/system/core_cm3.h **** {
 923:src/MightyBoard/Motherboard/system/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 924:src/MightyBoard/Motherboard/system/core_cm3.h **** }
 925:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 926:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 927:src/MightyBoard/Motherboard/system/core_cm3.h **** /** \brief  Disable External Interrupt
 928:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 929:src/MightyBoard/Motherboard/system/core_cm3.h ****     This function disables a device specific interupt in the NVIC interrupt controller.
 930:src/MightyBoard/Motherboard/system/core_cm3.h ****     The interrupt number cannot be a negative value.
 931:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 932:src/MightyBoard/Motherboard/system/core_cm3.h ****     \param [in]      IRQn  Number of the external interrupt to disable
 933:src/MightyBoard/Motherboard/system/core_cm3.h ****  */
 934:src/MightyBoard/Motherboard/system/core_cm3.h **** static __INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
 935:src/MightyBoard/Motherboard/system/core_cm3.h **** {
 936:src/MightyBoard/Motherboard/system/core_cm3.h ****   NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
 937:src/MightyBoard/Motherboard/system/core_cm3.h **** }
 938:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 939:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 940:src/MightyBoard/Motherboard/system/core_cm3.h **** /** \brief  Get Pending Interrupt
 941:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 942:src/MightyBoard/Motherboard/system/core_cm3.h ****     This function reads the pending register in the NVIC and returns the pending bit
 943:src/MightyBoard/Motherboard/system/core_cm3.h ****     for the specified interrupt.
 944:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 945:src/MightyBoard/Motherboard/system/core_cm3.h ****     \param [in]      IRQn  Number of the interrupt for get pending
 946:src/MightyBoard/Motherboard/system/core_cm3.h ****     \return             0  Interrupt status is not pending
 947:src/MightyBoard/Motherboard/system/core_cm3.h ****     \return             1  Interrupt status is pending
 948:src/MightyBoard/Motherboard/system/core_cm3.h ****  */
 949:src/MightyBoard/Motherboard/system/core_cm3.h **** static __INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
 950:src/MightyBoard/Motherboard/system/core_cm3.h **** {
 951:src/MightyBoard/Motherboard/system/core_cm3.h ****   return((uint32_t) ((NVIC->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); 
 952:src/MightyBoard/Motherboard/system/core_cm3.h **** }
 953:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 954:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 955:src/MightyBoard/Motherboard/system/core_cm3.h **** /** \brief  Set Pending Interrupt
 956:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 957:src/MightyBoard/Motherboard/system/core_cm3.h ****     This function sets the pending bit for the specified interrupt.
 958:src/MightyBoard/Motherboard/system/core_cm3.h ****     The interrupt number cannot be a negative value.
 959:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 960:src/MightyBoard/Motherboard/system/core_cm3.h ****     \param [in]      IRQn  Number of the interrupt for set pending
 961:src/MightyBoard/Motherboard/system/core_cm3.h ****  */
 962:src/MightyBoard/Motherboard/system/core_cm3.h **** static __INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
 963:src/MightyBoard/Motherboard/system/core_cm3.h **** {
 964:src/MightyBoard/Motherboard/system/core_cm3.h ****   NVIC->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pending 
 965:src/MightyBoard/Motherboard/system/core_cm3.h **** }
 966:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 967:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 968:src/MightyBoard/Motherboard/system/core_cm3.h **** /** \brief  Clear Pending Interrupt
 969:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 970:src/MightyBoard/Motherboard/system/core_cm3.h ****     This function clears the pending bit for the specified interrupt.
 971:src/MightyBoard/Motherboard/system/core_cm3.h ****     The interrupt number cannot be a negative value.
 972:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 973:src/MightyBoard/Motherboard/system/core_cm3.h ****     \param [in]      IRQn  Number of the interrupt for clear pending
 974:src/MightyBoard/Motherboard/system/core_cm3.h ****  */
 975:src/MightyBoard/Motherboard/system/core_cm3.h **** static __INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 976:src/MightyBoard/Motherboard/system/core_cm3.h **** {
 977:src/MightyBoard/Motherboard/system/core_cm3.h ****   NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrup
 978:src/MightyBoard/Motherboard/system/core_cm3.h **** }
 979:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 980:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 981:src/MightyBoard/Motherboard/system/core_cm3.h **** /** \brief  Get Active Interrupt
 982:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 983:src/MightyBoard/Motherboard/system/core_cm3.h ****     This function reads the active register in NVIC and returns the active bit.
 984:src/MightyBoard/Motherboard/system/core_cm3.h ****     \param [in]      IRQn  Number of the interrupt for get active
 985:src/MightyBoard/Motherboard/system/core_cm3.h ****     \return             0  Interrupt status is not active
 986:src/MightyBoard/Motherboard/system/core_cm3.h ****     \return             1  Interrupt status is active
 987:src/MightyBoard/Motherboard/system/core_cm3.h ****  */
 988:src/MightyBoard/Motherboard/system/core_cm3.h **** static __INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
 989:src/MightyBoard/Motherboard/system/core_cm3.h **** {
 990:src/MightyBoard/Motherboard/system/core_cm3.h ****   return((uint32_t)((NVIC->IABR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); /
 991:src/MightyBoard/Motherboard/system/core_cm3.h **** }
 992:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 993:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 994:src/MightyBoard/Motherboard/system/core_cm3.h **** /** \brief  Set Interrupt Priority
 995:src/MightyBoard/Motherboard/system/core_cm3.h **** 
 996:src/MightyBoard/Motherboard/system/core_cm3.h ****     This function sets the priority for the specified interrupt. The interrupt
 997:src/MightyBoard/Motherboard/system/core_cm3.h ****     number can be positive to specify an external (device specific)
 998:src/MightyBoard/Motherboard/system/core_cm3.h ****     interrupt, or negative to specify an internal (core) interrupt.
 999:src/MightyBoard/Motherboard/system/core_cm3.h **** 
1000:src/MightyBoard/Motherboard/system/core_cm3.h ****     Note: The priority cannot be set for every core interrupt.
1001:src/MightyBoard/Motherboard/system/core_cm3.h **** 
1002:src/MightyBoard/Motherboard/system/core_cm3.h ****     \param [in]      IRQn  Number of the interrupt for set priority
1003:src/MightyBoard/Motherboard/system/core_cm3.h ****     \param [in]  priority  Priority to set
1004:src/MightyBoard/Motherboard/system/core_cm3.h ****  */
1005:src/MightyBoard/Motherboard/system/core_cm3.h **** static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1006:src/MightyBoard/Motherboard/system/core_cm3.h **** {
1007:src/MightyBoard/Motherboard/system/core_cm3.h ****   if(IRQn < 0) {
1008:src/MightyBoard/Motherboard/system/core_cm3.h ****     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set 
1009:src/MightyBoard/Motherboard/system/core_cm3.h ****   else {
1010:src/MightyBoard/Motherboard/system/core_cm3.h ****     NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set 
 523              	 .loc 2 1010 0 is_stmt 1
 524 0092 4FF46143 	 mov r3,#57600
 525 0096 CEF20003 	 movt r3,57344
 526 009a 4FF02002 	 mov r2,#32
 527 009e 83F81823 	 strb r2,[r3,#792]
 528              	.LVL16:
 529              	.LBE11:
 530              	.LBE10:
 531              	.LBB12:
 532              	.LBB13:
 923:src/MightyBoard/Motherboard/system/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 533              	 .loc 2 923 0
 534 00a2 4FF08072 	 mov r2,#16777216
 535 00a6 1A60     	 str r2,[r3,#0]
 536              	.LVL17:
 537              	.LBE13:
 538              	.LBE12:
 539              	.LBB14:
 540              	.LBB15:
 541              	 .loc 2 1010 0
 542 00a8 4FF04002 	 mov r2,#64
 543 00ac 83F82223 	 strb r2,[r3,#802]
 544              	.LVL18:
 545              	.LBE15:
 546              	.LBE14:
 547              	.LBB16:
 548              	.LBB17:
 923:src/MightyBoard/Motherboard/system/core_cm3.h ****   NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 549              	 .loc 2 923 0
 550 00b0 4FF00402 	 mov r2,#4
 551 00b4 5A60     	 str r2,[r3,#4]
 552              	.LBE17:
 553              	.LBE16:
 184:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   USB_Reset();
 554              	 .loc 1 184 0
 555 00b6 FFF7FEFF 	 bl USB_Reset
 185:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   USB_SetAddress(0);
 556              	 .loc 1 185 0
 557 00ba 4FF00000 	 mov r0,#0
 558 00be FFF7FEFF 	 bl USB_SetAddress
 186:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** }
 559              	 .loc 1 186 0
 560 00c2 08BD     	 pop {r3,pc}
 561              	 .cfi_endproc
 562              	.LFE60:
 564              	 .section .text.USB_Configure,"ax",%progbits
 565              	 .align 2
 566              	 .global USB_Configure
 567              	 .thumb
 568              	 .thumb_func
 570              	USB_Configure:
 571              	.LFB68:
 301:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 302:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 303:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /*
 304:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *  USB Configure Function
 305:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Parameters:      cfg:   Configure/Deconfigure
 306:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Return Value:    None
 307:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  */
 308:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 309:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** void USB_Configure (uint32_t cfg) {
 572              	 .loc 1 309 0
 573              	 .cfi_startproc
 574              	 
 575              	 
 576              	.LVL19:
 577 0000 08B5     	 push {r3,lr}
 578              	.LCFI5:
 579              	 .cfi_def_cfa_offset 8
 580              	 .cfi_offset 14,-4
 581              	 .cfi_offset 3,-8
 310:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 311:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   WrCmdDat(CMD_CFG_DEV, DAT_WR_BYTE(cfg ? CONF_DVICE : 0));
 582              	 .loc 1 311 0
 583 0002 4FF48071 	 mov r1,#256
 584 0006 C0F20101 	 movt r1,1
 585 000a 0028     	 cmp r0,#0
 586 000c 08BF     	 it eq
 587 000e 4FF48071 	 moveq r1,#256
 588 0012 4FF4A060 	 mov r0,#1280
 589              	.LVL20:
 590 0016 C0F2D800 	 movt r0,216
 591 001a FFF7FEFF 	 bl WrCmdDat
 312:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 313:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBReEp = 0x00000003;
 592              	 .loc 1 313 0
 593 001e 4FF44043 	 mov r3,#49152
 594 0022 C5F20003 	 movt r3,20480
 595 0026 4FF00302 	 mov r2,#3
 596 002a C3F84422 	 str r2,[r3,#580]
 314:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   while ((LPC_USB->USBDevIntSt & EP_RLZED_INT) == 0);
 597              	 .loc 1 314 0
 598 002e 4FF44042 	 mov r2,#49152
 599 0032 C5F20002 	 movt r2,20480
 600              	.L36:
 601              	 .loc 1 314 0 is_stmt 0 discriminator 1
 602 0036 D2F80032 	 ldr r3,[r2,#512]
 603 003a 13F4807F 	 tst r3,#256
 604 003e FAD0     	 beq .L36
 315:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBDevIntClr = EP_RLZED_INT;
 605              	 .loc 1 315 0 is_stmt 1
 606 0040 4FF44043 	 mov r3,#49152
 607 0044 C5F20003 	 movt r3,20480
 608 0048 4FF48072 	 mov r2,#256
 609 004c C3F80822 	 str r2,[r3,#520]
 316:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** }
 610              	 .loc 1 316 0
 611 0050 08BD     	 pop {r3,pc}
 612              	 .cfi_endproc
 613              	.LFE68:
 615 0052 00BF     	 .section .text.USB_ConfigEP,"ax",%progbits
 616              	 .align 2
 617              	 .global USB_ConfigEP
 618              	 .thumb
 619              	 .thumb_func
 621              	USB_ConfigEP:
 622              	.LFB69:
 317:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 318:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 319:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /*
 320:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *  Configure USB Endpoint according to Descriptor
 321:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Parameters:      pEPD:  Pointer to Endpoint Descriptor
 322:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Return Value:    None
 323:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  */
 324:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 325:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** void USB_ConfigEP (USB_ENDPOINT_DESCRIPTOR *pEPD) {
 623              	 .loc 1 325 0
 624              	 .cfi_startproc
 625              	 
 626              	 
 627              	.LVL21:
 628 0000 10B5     	 push {r4,lr}
 629              	.LCFI6:
 630              	 .cfi_def_cfa_offset 8
 631              	 .cfi_offset 14,-4
 632              	 .cfi_offset 4,-8
 633 0002 0446     	 mov r4,r0
 326:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   uint32_t num;
 327:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 328:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   num = EPAdr(pEPD->bEndpointAddress);
 634              	 .loc 1 328 0
 635 0004 8078     	 ldrb r0,[r0,#2]
 636              	.LVL22:
 637 0006 FFF7FEFF 	 bl EPAdr
 638              	.LVL23:
 329:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBReEp |= (1 << num);
 639              	 .loc 1 329 0
 640 000a 4FF44043 	 mov r3,#49152
 641 000e C5F20003 	 movt r3,20480
 642 0012 D3F84412 	 ldr r1,[r3,#580]
 643 0016 4FF00102 	 mov r2,#1
 644 001a 02FA00F2 	 lsl r2,r2,r0
 645 001e 0A43     	 orrs r2,r2,r1
 646 0020 C3F84422 	 str r2,[r3,#580]
 330:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBEpInd = num;
 647              	 .loc 1 330 0
 648 0024 C3F84802 	 str r0,[r3,#584]
 331:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBMaxPSize = pEPD->wMaxPacketSize;
 649              	 .loc 1 331 0
 650 0028 A288     	 ldrh r2,[r4,#4]
 651 002a C3F84C22 	 str r2,[r3,#588]
 332:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   while ((LPC_USB->USBDevIntSt & EP_RLZED_INT) == 0);
 652              	 .loc 1 332 0
 653 002e 4FF44042 	 mov r2,#49152
 654 0032 C5F20002 	 movt r2,20480
 655              	.L40:
 656              	 .loc 1 332 0 is_stmt 0 discriminator 1
 657 0036 D2F80032 	 ldr r3,[r2,#512]
 658 003a 13F4807F 	 tst r3,#256
 659 003e FAD0     	 beq .L40
 333:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBDevIntClr = EP_RLZED_INT;
 660              	 .loc 1 333 0 is_stmt 1
 661 0040 4FF44043 	 mov r3,#49152
 662 0044 C5F20003 	 movt r3,20480
 663 0048 4FF48072 	 mov r2,#256
 664 004c C3F80822 	 str r2,[r3,#520]
 334:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** }
 665              	 .loc 1 334 0
 666 0050 10BD     	 pop {r4,pc}
 667              	 .cfi_endproc
 668              	.LFE69:
 670 0052 00BF     	 .section .text.USB_DirCtrlEP,"ax",%progbits
 671              	 .align 2
 672              	 .global USB_DirCtrlEP
 673              	 .thumb
 674              	 .thumb_func
 676              	USB_DirCtrlEP:
 677              	.LFB70:
 335:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 336:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 337:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /*
 338:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *  Set Direction for USB Control Endpoint
 339:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Parameters:      dir:   Out (dir == 0), In (dir <> 0)
 340:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Return Value:    None
 341:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  */
 342:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 343:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** void USB_DirCtrlEP (uint32_t dir) {
 678              	 .loc 1 343 0
 679              	 .cfi_startproc
 680              	 
 681              	 
 682              	 
 683              	.LVL24:
 344:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   /* Not needed */
 345:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** }
 684              	 .loc 1 345 0
 685 0000 7047     	 bx lr
 686              	 .cfi_endproc
 687              	.LFE70:
 689 0002 00BF     	 .section .text.USB_EnableEP,"ax",%progbits
 690              	 .align 2
 691              	 .global USB_EnableEP
 692              	 .thumb
 693              	 .thumb_func
 695              	USB_EnableEP:
 696              	.LFB71:
 346:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 347:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 348:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /*
 349:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *  Enable USB Endpoint
 350:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Parameters:      EPNum: Endpoint Number
 351:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                       EPNum.0..3: Address
 352:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                       EPNum.7:    Dir
 353:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Return Value:    None
 354:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  */
 355:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 356:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** void USB_EnableEP (uint32_t EPNum) {
 697              	 .loc 1 356 0
 698              	 .cfi_startproc
 699              	 
 700              	 
 701              	.LVL25:
 702 0000 08B5     	 push {r3,lr}
 703              	.LCFI7:
 704              	 .cfi_def_cfa_offset 8
 705              	 .cfi_offset 14,-4
 706              	 .cfi_offset 3,-8
 357:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   WrCmdDat(CMD_SET_EP_STAT(EPAdr(EPNum)), DAT_WR_BYTE(0));
 707              	 .loc 1 357 0
 708 0002 FFF7FEFF 	 bl EPAdr
 709              	.LVL26:
 710 0006 4FEA0040 	 lsl r0,r0,#16
 711 000a 40F48000 	 orr r0,r0,#4194304
 712 000e 40F4A060 	 orr r0,r0,#1280
 713 0012 4FF48071 	 mov r1,#256
 714 0016 FFF7FEFF 	 bl WrCmdDat
 358:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** }
 715              	 .loc 1 358 0
 716 001a 08BD     	 pop {r3,pc}
 717              	 .cfi_endproc
 718              	.LFE71:
 720              	 .section .text.USB_DisableEP,"ax",%progbits
 721              	 .align 2
 722              	 .global USB_DisableEP
 723              	 .thumb
 724              	 .thumb_func
 726              	USB_DisableEP:
 727              	.LFB72:
 359:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 360:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 361:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /*
 362:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *  Disable USB Endpoint
 363:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Parameters:      EPNum: Endpoint Number
 364:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                       EPNum.0..3: Address
 365:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                       EPNum.7:    Dir
 366:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Return Value:    None
 367:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  */
 368:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 369:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** void USB_DisableEP (uint32_t EPNum) {
 728              	 .loc 1 369 0
 729              	 .cfi_startproc
 730              	 
 731              	 
 732              	.LVL27:
 733 0000 08B5     	 push {r3,lr}
 734              	.LCFI8:
 735              	 .cfi_def_cfa_offset 8
 736              	 .cfi_offset 14,-4
 737              	 .cfi_offset 3,-8
 370:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   WrCmdDat(CMD_SET_EP_STAT(EPAdr(EPNum)), DAT_WR_BYTE(EP_STAT_DA));
 738              	 .loc 1 370 0
 739 0002 FFF7FEFF 	 bl EPAdr
 740              	.LVL28:
 741 0006 4FEA0040 	 lsl r0,r0,#16
 742 000a 40F48000 	 orr r0,r0,#4194304
 743 000e 40F4A060 	 orr r0,r0,#1280
 744 0012 4FF48071 	 mov r1,#256
 745 0016 C0F22001 	 movt r1,32
 746 001a FFF7FEFF 	 bl WrCmdDat
 371:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** }
 747              	 .loc 1 371 0
 748 001e 08BD     	 pop {r3,pc}
 749              	 .cfi_endproc
 750              	.LFE72:
 752              	 .section .text.USB_ResetEP,"ax",%progbits
 753              	 .align 2
 754              	 .global USB_ResetEP
 755              	 .thumb
 756              	 .thumb_func
 758              	USB_ResetEP:
 759              	.LFB73:
 372:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 373:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 374:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /*
 375:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *  Reset USB Endpoint
 376:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Parameters:      EPNum: Endpoint Number
 377:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                       EPNum.0..3: Address
 378:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                       EPNum.7:    Dir
 379:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Return Value:    None
 380:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  */
 381:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 382:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** void USB_ResetEP (uint32_t EPNum) {
 760              	 .loc 1 382 0
 761              	 .cfi_startproc
 762              	 
 763              	 
 764              	.LVL29:
 765 0000 08B5     	 push {r3,lr}
 766              	.LCFI9:
 767              	 .cfi_def_cfa_offset 8
 768              	 .cfi_offset 14,-4
 769              	 .cfi_offset 3,-8
 383:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   WrCmdDat(CMD_SET_EP_STAT(EPAdr(EPNum)), DAT_WR_BYTE(0));
 770              	 .loc 1 383 0
 771 0002 FFF7FEFF 	 bl EPAdr
 772              	.LVL30:
 773 0006 4FEA0040 	 lsl r0,r0,#16
 774 000a 40F48000 	 orr r0,r0,#4194304
 775 000e 40F4A060 	 orr r0,r0,#1280
 776 0012 4FF48071 	 mov r1,#256
 777 0016 FFF7FEFF 	 bl WrCmdDat
 384:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** }
 778              	 .loc 1 384 0
 779 001a 08BD     	 pop {r3,pc}
 780              	 .cfi_endproc
 781              	.LFE73:
 783              	 .section .text.USB_SetStallEP,"ax",%progbits
 784              	 .align 2
 785              	 .global USB_SetStallEP
 786              	 .thumb
 787              	 .thumb_func
 789              	USB_SetStallEP:
 790              	.LFB74:
 385:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 386:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 387:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /*
 388:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *  Set Stall for USB Endpoint
 389:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Parameters:      EPNum: Endpoint Number
 390:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                       EPNum.0..3: Address
 391:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                       EPNum.7:    Dir
 392:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Return Value:    None
 393:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  */
 394:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 395:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** void USB_SetStallEP (uint32_t EPNum) {
 791              	 .loc 1 395 0
 792              	 .cfi_startproc
 793              	 
 794              	 
 795              	.LVL31:
 796 0000 08B5     	 push {r3,lr}
 797              	.LCFI10:
 798              	 .cfi_def_cfa_offset 8
 799              	 .cfi_offset 14,-4
 800              	 .cfi_offset 3,-8
 396:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   WrCmdDat(CMD_SET_EP_STAT(EPAdr(EPNum)), DAT_WR_BYTE(EP_STAT_ST));
 801              	 .loc 1 396 0
 802 0002 FFF7FEFF 	 bl EPAdr
 803              	.LVL32:
 804 0006 4FEA0040 	 lsl r0,r0,#16
 805 000a 40F48000 	 orr r0,r0,#4194304
 806 000e 40F4A060 	 orr r0,r0,#1280
 807 0012 4FF48071 	 mov r1,#256
 808 0016 C0F20101 	 movt r1,1
 809 001a FFF7FEFF 	 bl WrCmdDat
 397:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** }
 810              	 .loc 1 397 0
 811 001e 08BD     	 pop {r3,pc}
 812              	 .cfi_endproc
 813              	.LFE74:
 815              	 .section .text.USB_ClrStallEP,"ax",%progbits
 816              	 .align 2
 817              	 .global USB_ClrStallEP
 818              	 .thumb
 819              	 .thumb_func
 821              	USB_ClrStallEP:
 822              	.LFB75:
 398:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 399:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 400:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /*
 401:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *  Clear Stall for USB Endpoint
 402:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Parameters:      EPNum: Endpoint Number
 403:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                       EPNum.0..3: Address
 404:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                       EPNum.7:    Dir
 405:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Return Value:    None
 406:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  */
 407:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 408:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** void USB_ClrStallEP (uint32_t EPNum) {
 823              	 .loc 1 408 0
 824              	 .cfi_startproc
 825              	 
 826              	 
 827              	.LVL33:
 828 0000 08B5     	 push {r3,lr}
 829              	.LCFI11:
 830              	 .cfi_def_cfa_offset 8
 831              	 .cfi_offset 14,-4
 832              	 .cfi_offset 3,-8
 409:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   WrCmdDat(CMD_SET_EP_STAT(EPAdr(EPNum)), DAT_WR_BYTE(0));
 833              	 .loc 1 409 0
 834 0002 FFF7FEFF 	 bl EPAdr
 835              	.LVL34:
 836 0006 4FEA0040 	 lsl r0,r0,#16
 837 000a 40F48000 	 orr r0,r0,#4194304
 838 000e 40F4A060 	 orr r0,r0,#1280
 839 0012 4FF48071 	 mov r1,#256
 840 0016 FFF7FEFF 	 bl WrCmdDat
 410:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** }
 841              	 .loc 1 410 0
 842 001a 08BD     	 pop {r3,pc}
 843              	 .cfi_endproc
 844              	.LFE75:
 846              	 .section .text.USB_ClearEPBuf,"ax",%progbits
 847              	 .align 2
 848              	 .global USB_ClearEPBuf
 849              	 .thumb
 850              	 .thumb_func
 852              	USB_ClearEPBuf:
 853              	.LFB76:
 411:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 412:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 413:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /*
 414:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *  Clear USB Endpoint Buffer
 415:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Parameters:      EPNum: Endpoint Number
 416:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                       EPNum.0..3: Address
 417:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                       EPNum.7:    Dir
 418:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Return Value:    None
 419:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  */
 420:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 421:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** void USB_ClearEPBuf (uint32_t EPNum) {
 854              	 .loc 1 421 0
 855              	 .cfi_startproc
 856              	 
 857              	 
 858              	.LVL35:
 859 0000 08B5     	 push {r3,lr}
 860              	.LCFI12:
 861              	 .cfi_def_cfa_offset 8
 862              	 .cfi_offset 14,-4
 863              	 .cfi_offset 3,-8
 422:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   WrCmdEP(EPNum, CMD_CLR_BUF);
 864              	 .loc 1 422 0
 865 0002 4FF4A061 	 mov r1,#1280
 866 0006 C0F2F201 	 movt r1,242
 867 000a FFF7FEFF 	 bl WrCmdEP
 868              	.LVL36:
 423:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** }
 869              	 .loc 1 423 0
 870 000e 08BD     	 pop {r3,pc}
 871              	 .cfi_endproc
 872              	.LFE76:
 874              	 .section .text.USB_ReadEP,"ax",%progbits
 875              	 .align 2
 876              	 .global USB_ReadEP
 877              	 .thumb
 878              	 .thumb_func
 880              	USB_ReadEP:
 881              	.LFB77:
 424:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 425:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 426:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /*
 427:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *  Read USB Endpoint Data
 428:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Parameters:      EPNum: Endpoint Number
 429:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                       EPNum.0..3: Address
 430:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                       EPNum.7:    Dir
 431:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                     pData: Pointer to Data Buffer
 432:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Return Value:    Number of bytes read
 433:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  */
 434:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 435:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** uint32_t USB_ReadEP (uint32_t EPNum, uint8_t *pData) {
 882              	 .loc 1 435 0
 883              	 .cfi_startproc
 884              	 
 885              	 
 886              	.LVL37:
 887 0000 70B5     	 push {r4,r5,r6,lr}
 888              	.LCFI13:
 889              	 .cfi_def_cfa_offset 16
 890              	 .cfi_offset 14,-4
 891              	 .cfi_offset 6,-8
 892              	 .cfi_offset 5,-12
 893              	 .cfi_offset 4,-16
 436:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   uint32_t cnt, n;
 437:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 438:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBCtrl = ((EPNum & 0x0F) << 2) | CTRL_RD_EN;
 894              	 .loc 1 438 0
 895 0002 00F00F02 	 and r2,r0,#15
 896 0006 4FEA8202 	 lsl r2,r2,#2
 897 000a 42F00102 	 orr r2,r2,#1
 898 000e 4FF44043 	 mov r3,#49152
 899 0012 C5F20003 	 movt r3,20480
 900 0016 C3F82822 	 str r2,[r3,#552]
 439:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 440:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   do {
 441:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     cnt = LPC_USB->USBRxPLen;
 901              	 .loc 1 441 0
 902 001a 4FF44043 	 mov r3,#49152
 903 001e C5F20003 	 movt r3,20480
 904              	.L50:
 905              	 .loc 1 441 0 is_stmt 0 discriminator 1
 906 0022 D3F82042 	 ldr r4,[r3,#544]
 907              	.LVL38:
 442:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   } while ((cnt & PKT_RDY) == 0);
 908              	 .loc 1 442 0 is_stmt 1 discriminator 1
 909 0026 14F4006F 	 tst r4,#2048
 910 002a FAD0     	 beq .L50
 443:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   cnt &= PKT_LNGTH_MASK;
 911              	 .loc 1 443 0
 912 002c 4FEA8454 	 lsl r4,r4,#22
 913              	.LVL39:
 914 0030 4FEA9454 	 lsr r4,r4,#22
 915              	.LVL40:
 444:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 445:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   for (n = 0; n < (cnt + 3) / 4; n++) {
 916              	 .loc 1 445 0
 917 0034 04F10306 	 add r6,r4,#3
 918 0038 B608     	 lsrs r6,r6,#2
 919 003a 0DD0     	 beq .L51
 920 003c 4FF00003 	 mov r3,#0
 446:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     *((__packed uint32_t *)pData) = LPC_USB->USBRxData;
 921              	 .loc 1 446 0
 922 0040 4FF44045 	 mov r5,#49152
 923 0044 C5F20005 	 movt r5,20480
 924              	.LVL41:
 925              	.L52:
 926              	 .loc 1 446 0 is_stmt 0 discriminator 2
 927 0048 D5F81822 	 ldr r2,[r5,#536]
 928 004c 41F82320 	 str r2,[r1,r3,lsl#2]
 445:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   for (n = 0; n < (cnt + 3) / 4; n++) {
 929              	 .loc 1 445 0 is_stmt 1 discriminator 2
 930 0050 03F10103 	 add r3,r3,#1
 931              	.LVL42:
 932 0054 B342     	 cmp r3,r6
 933 0056 F7D1     	 bne .L52
 934              	.LVL43:
 935              	.L51:
 447:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     pData += 4;
 448:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   }
 449:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBCtrl = 0;
 936              	 .loc 1 449 0
 937 0058 4FF44043 	 mov r3,#49152
 938 005c C5F20003 	 movt r3,20480
 939 0060 4FF00002 	 mov r2,#0
 940 0064 C3F82822 	 str r2,[r3,#552]
 450:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 451:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   if (((EP_MSK_ISO >> EPNum) & 1) == 0) {   /* Non-Isochronous Endpoint */
 941              	 .loc 1 451 0
 942 0068 41F24823 	 movw r3,#4680
 943 006c 43FA00F3 	 asr r3,r3,r0
 944 0070 13F0010F 	 tst r3,#1
 945 0074 05D1     	 bne .L53
 452:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     WrCmdEP(EPNum, CMD_CLR_BUF);
 946              	 .loc 1 452 0
 947 0076 4FF4A061 	 mov r1,#1280
 948 007a C0F2F201 	 movt r1,242
 949 007e FFF7FEFF 	 bl WrCmdEP
 950              	.LVL44:
 951              	.L53:
 453:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   }
 454:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 455:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   return (cnt);
 456:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** }
 952              	 .loc 1 456 0
 953 0082 2046     	 mov r0,r4
 954 0084 70BD     	 pop {r4,r5,r6,pc}
 955              	 .cfi_endproc
 956              	.LFE77:
 958 0086 00BF     	 .section .text.USB_WriteEP,"ax",%progbits
 959              	 .align 2
 960              	 .global USB_WriteEP
 961              	 .thumb
 962              	 .thumb_func
 964              	USB_WriteEP:
 965              	.LFB78:
 457:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 458:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 459:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /*
 460:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *  Write USB Endpoint Data
 461:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Parameters:      EPNum: Endpoint Number
 462:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                       EPNum.0..3: Address
 463:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                       EPNum.7:    Dir
 464:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                     pData: Pointer to Data Buffer
 465:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                     cnt:   Number of bytes to write
 466:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Return Value:    Number of bytes written
 467:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  */
 468:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 469:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** uint32_t USB_WriteEP (uint32_t EPNum, uint8_t *pData, uint32_t cnt) {
 966              	 .loc 1 469 0
 967              	 .cfi_startproc
 968              	 
 969              	 
 970              	.LVL45:
 971 0000 70B5     	 push {r4,r5,r6,lr}
 972              	.LCFI14:
 973              	 .cfi_def_cfa_offset 16
 974              	 .cfi_offset 14,-4
 975              	 .cfi_offset 6,-8
 976              	 .cfi_offset 5,-12
 977              	 .cfi_offset 4,-16
 978 0002 1446     	 mov r4,r2
 470:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   uint32_t n;
 471:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 472:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBCtrl = ((EPNum & 0x0F) << 2) | CTRL_WR_EN;
 979              	 .loc 1 472 0
 980 0004 00F00F02 	 and r2,r0,#15
 981              	.LVL46:
 982 0008 4FEA8202 	 lsl r2,r2,#2
 983 000c 42F00202 	 orr r2,r2,#2
 984 0010 4FF44043 	 mov r3,#49152
 985 0014 C5F20003 	 movt r3,20480
 986 0018 C3F82822 	 str r2,[r3,#552]
 473:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 474:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBTxPLen = cnt;
 987              	 .loc 1 474 0
 988 001c C3F82442 	 str r4,[r3,#548]
 989              	.LVL47:
 475:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 476:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   for (n = 0; n < (cnt + 3) / 4; n++) {
 990              	 .loc 1 476 0
 991 0020 04F10306 	 add r6,r4,#3
 992 0024 B608     	 lsrs r6,r6,#2
 993 0026 0DD0     	 beq .L57
 994 0028 4FF00003 	 mov r3,#0
 477:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     LPC_USB->USBTxData = *((__packed uint32_t *)pData);
 995              	 .loc 1 477 0
 996 002c 4FF44045 	 mov r5,#49152
 997 0030 C5F20005 	 movt r5,20480
 998              	.LVL48:
 999              	.L58:
 1000              	 .loc 1 477 0 is_stmt 0 discriminator 2
 1001 0034 51F82320 	 ldr r2,[r1,r3,lsl#2]
 1002 0038 C5F81C22 	 str r2,[r5,#540]
 476:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   for (n = 0; n < (cnt + 3) / 4; n++) {
 1003              	 .loc 1 476 0 is_stmt 1 discriminator 2
 1004 003c 03F10103 	 add r3,r3,#1
 1005              	.LVL49:
 1006 0040 B342     	 cmp r3,r6
 1007 0042 F7D1     	 bne .L58
 1008              	.LVL50:
 1009              	.L57:
 478:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     pData += 4;
 479:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   }
 480:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBCtrl = 0;
 1010              	 .loc 1 480 0
 1011 0044 4FF44043 	 mov r3,#49152
 1012 0048 C5F20003 	 movt r3,20480
 1013 004c 4FF00002 	 mov r2,#0
 1014 0050 C3F82822 	 str r2,[r3,#552]
 481:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   WrCmdEP(EPNum, CMD_VALID_BUF);
 1015              	 .loc 1 481 0
 1016 0054 4FF4A061 	 mov r1,#1280
 1017 0058 C0F2FA01 	 movt r1,250
 1018 005c FFF7FEFF 	 bl WrCmdEP
 1019              	.LVL51:
 482:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   return (cnt);
 483:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** }
 1020              	 .loc 1 483 0
 1021 0060 2046     	 mov r0,r4
 1022 0062 70BD     	 pop {r4,r5,r6,pc}
 1023              	 .cfi_endproc
 1024              	.LFE78:
 1026              	 .section .text.USB_GetFrame,"ax",%progbits
 1027              	 .align 2
 1028              	 .global USB_GetFrame
 1029              	 .thumb
 1030              	 .thumb_func
 1032              	USB_GetFrame:
 1033              	.LFB79:
 484:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 485:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #if USB_DMA
 486:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 487:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /* DMA Descriptor Memory Layout */
 488:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** const uint32_t DDAdr[2] = { DD_NISO_ADR, DD_ISO_ADR };
 489:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** const uint32_t DDSz [2] = { 16,          20         };
 490:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 491:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 492:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /*
 493:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *  Setup USB DMA Transfer for selected Endpoint
 494:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Parameters:      EPNum: Endpoint Number
 495:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                     pDD: Pointer to DMA Descriptor
 496:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Return Value:    TRUE - Success, FALSE - Error
 497:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  */
 498:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 499:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** uint32_t USB_DMA_Setup(uint32_t EPNum, USB_DMA_DESCRIPTOR *pDD) {
 500:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   uint32_t num, ptr, nxt, iso, n;
 501:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 502:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   iso = pDD->Cfg.Type.IsoEP;                /* Iso or Non-Iso Descriptor */
 503:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   num = EPAdr(EPNum);                       /* Endpoint's Physical Address */
 504:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 505:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   ptr = 0;                                  /* Current Descriptor */
 506:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   nxt = udca[num];                          /* Initial Descriptor */
 507:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   while (nxt) {                             /* Go through Descriptor List */
 508:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     ptr = nxt;                              /* Current Descriptor */
 509:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     if (!pDD->Cfg.Type.Link) {              /* Check for Linked Descriptors */
 510:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****       n = (ptr - DDAdr[iso]) / DDSz[iso];   /* Descriptor Index */
 511:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****       DDMemMap[iso] &= ~(1 << n);           /* Unmark Memory Usage */
 512:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     }
 513:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     nxt = *((uint32_t *)ptr);                  /* Next Descriptor */
 514:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   }
 515:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 516:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   for (n = 0; n < 32; n++) {                /* Search for available Memory */
 517:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     if ((DDMemMap[iso] & (1 << n)) == 0) {
 518:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****       break;                                /* Memory found */
 519:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     }
 520:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   }
 521:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   if (n == 32) return (FALSE);              /* Memory not available */
 522:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 523:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   DDMemMap[iso] |= 1 << n;                  /* Mark Memory Usage */
 524:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   nxt = DDAdr[iso] + n * DDSz[iso];         /* Next Descriptor */
 525:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 526:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   if (ptr && pDD->Cfg.Type.Link) {
 527:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     *((uint32_t *)(ptr + 0))  = nxt;           /* Link in new Descriptor */
 528:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     *((uint32_t *)(ptr + 4)) |= 0x00000004;    /* Next DD is Valid */
 529:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   } else {
 530:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     udca[num] = nxt;                        /* Save new Descriptor */
 531:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     UDCA[num] = nxt;                        /* Update UDCA in USB */
 532:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   }
 533:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 534:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   /* Fill in DMA Descriptor */
 535:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   *(((uint32_t *)nxt)++) =  0;                 /* Next DD Pointer */
 536:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   *(((uint32_t *)nxt)++) =  pDD->Cfg.Type.ATLE |
 537:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****                        (pDD->Cfg.Type.IsoEP << 4) |
 538:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****                        (pDD->MaxSize <<  5) |
 539:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****                        (pDD->BufLen  << 16);
 540:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   *(((uint32_t *)nxt)++) =  pDD->BufAdr;
 541:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   *(((uint32_t *)nxt)++) =  pDD->Cfg.Type.LenPos << 8;
 542:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   if (iso) {
 543:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     *((uint32_t *)nxt) =  pDD->InfoAdr;
 544:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   }
 545:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 546:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   return (TRUE); /* Success */
 547:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** }
 548:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 549:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 550:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /*
 551:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *  Enable USB DMA Endpoint
 552:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Parameters:      EPNum: Endpoint Number
 553:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                       EPNum.0..3: Address
 554:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                       EPNum.7:    Dir
 555:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Return Value:    None
 556:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  */
 557:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 558:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** void USB_DMA_Enable (uint32_t EPNum) {
 559:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBEpDMAEn = 1 << EPAdr(EPNum);
 560:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** }
 561:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 562:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 563:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /*
 564:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *  Disable USB DMA Endpoint
 565:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Parameters:      EPNum: Endpoint Number
 566:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                       EPNum.0..3: Address
 567:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                       EPNum.7:    Dir
 568:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Return Value:    None
 569:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  */
 570:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 571:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** void USB_DMA_Disable (uint32_t EPNum) {
 572:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   LPC_USB->USBEpDMADis = 1 << EPAdr(EPNum);
 573:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** }
 574:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 575:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 576:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /*
 577:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *  Get USB DMA Endpoint Status
 578:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Parameters:      EPNum: Endpoint Number
 579:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                       EPNum.0..3: Address
 580:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                       EPNum.7:    Dir
 581:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Return Value:    DMA Status
 582:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  */
 583:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 584:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** uint32_t USB_DMA_Status (uint32_t EPNum) {
 585:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   uint32_t ptr, val;
 586:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****           
 587:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   ptr = UDCA[EPAdr(EPNum)];                 /* Current Descriptor */
 588:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   if (ptr == 0) 
 589:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 	return (USB_DMA_INVALID);
 590:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 591:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   val = *((uint32_t *)(ptr + 3*4));            /* Status Information */
 592:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   switch ((val >> 1) & 0x0F) {
 593:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     case 0x00:                              /* Not serviced */
 594:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****       return (USB_DMA_IDLE);
 595:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     case 0x01:                              /* Being serviced */
 596:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****       return (USB_DMA_BUSY);
 597:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     case 0x02:                              /* Normal Completition */
 598:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****       return (USB_DMA_DONE);
 599:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     case 0x03:                              /* Data Under Run */
 600:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****       return (USB_DMA_UNDER_RUN);
 601:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     case 0x08:                              /* Data Over Run */
 602:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****       return (USB_DMA_OVER_RUN);
 603:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     case 0x09:                              /* System Error */
 604:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****       return (USB_DMA_ERROR);
 605:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   }
 606:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 607:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   return (USB_DMA_UNKNOWN);
 608:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** }
 609:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 610:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 611:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /*
 612:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *  Get USB DMA Endpoint Current Buffer Address
 613:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Parameters:      EPNum: Endpoint Number
 614:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                       EPNum.0..3: Address
 615:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                       EPNum.7:    Dir
 616:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Return Value:    DMA Address (or -1 when DMA is Invalid)
 617:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  */
 618:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 619:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** uint32_t USB_DMA_BufAdr (uint32_t EPNum) {
 620:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   uint32_t ptr, val;
 621:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 622:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   ptr = UDCA[EPAdr(EPNum)];                 /* Current Descriptor */
 623:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   if (ptr == 0)
 624:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   {
 625:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 	return ((uint32_t)(-1));                /* DMA Invalid */
 626:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   }
 627:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 628:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   val = *((uint32_t *)(ptr + 2*4));         /* Buffer Address */
 629:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   return (val);                             /* Current Address */
 630:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** }
 631:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 632:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 633:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /*
 634:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *  Get USB DMA Endpoint Current Buffer Count
 635:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *   Number of transfered Bytes or Iso Packets
 636:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Parameters:      EPNum: Endpoint Number
 637:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                       EPNum.0..3: Address
 638:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *                       EPNum.7:    Dir
 639:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Return Value:    DMA Count (or -1 when DMA is Invalid)
 640:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  */
 641:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 642:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** uint32_t USB_DMA_BufCnt (uint32_t EPNum) {
 643:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   uint32_t ptr, val;
 644:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 645:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   ptr = UDCA[EPAdr(EPNum)];                 /* Current Descriptor */
 646:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   if (ptr == 0)
 647:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   { 
 648:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 	return ((uint32_t)(-1));                /* DMA Invalid */
 649:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   }
 650:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   val = *((uint32_t *)(ptr + 3*4));         /* Status Information */
 651:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   return (val >> 16);                       /* Current Count */
 652:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** }
 653:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 654:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 655:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #endif /* USB_DMA */
 656:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 657:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 658:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /*
 659:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *  Get USB Last Frame Number
 660:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Parameters:      None
 661:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *    Return Value:    Frame Number
 662:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  */
 663:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 664:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** uint32_t USB_GetFrame (void) {
 1034              	 .loc 1 664 0
 1035              	 .cfi_startproc
 1036              	 
 1037              	 
 1038 0000 38B5     	 push {r3,r4,r5,lr}
 1039              	.LCFI15:
 1040              	 .cfi_def_cfa_offset 16
 1041              	 .cfi_offset 14,-4
 1042              	 .cfi_offset 5,-8
 1043              	 .cfi_offset 4,-12
 1044              	 .cfi_offset 3,-16
 665:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   uint32_t val;
 666:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 667:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   WrCmd(CMD_RD_FRAME);
 1045              	 .loc 1 667 0
 1046 0002 4FF4A060 	 mov r0,#1280
 1047 0006 C0F2F500 	 movt r0,245
 1048 000a FFF7FEFF 	 bl WrCmd
 668:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   val = RdCmdDat(DAT_RD_FRAME);
 1049              	 .loc 1 668 0
 1050 000e 4FF40074 	 mov r4,#512
 1051 0012 C0F2F504 	 movt r4,245
 1052 0016 2046     	 mov r0,r4
 1053 0018 FFF7FEFF 	 bl RdCmdDat
 1054 001c 0546     	 mov r5,r0
 1055              	.LVL52:
 669:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   val = val | (RdCmdDat(DAT_RD_FRAME) << 8);
 1056              	 .loc 1 669 0
 1057 001e 2046     	 mov r0,r4
 1058              	.LVL53:
 1059 0020 FFF7FEFF 	 bl RdCmdDat
 1060              	.LVL54:
 670:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 671:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   return (val);
 672:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** }
 1061              	 .loc 1 672 0
 1062 0024 45EA0020 	 orr r0,r5,r0,lsl#8
 1063              	.LVL55:
 1064 0028 38BD     	 pop {r3,r4,r5,pc}
 1065              	 .cfi_endproc
 1066              	.LFE79:
 1068 002a 00BF     	 .section .text.USB_IRQHandler,"ax",%progbits
 1069              	 .align 2
 1070              	 .global USB_IRQHandler
 1071              	 .thumb
 1072              	 .thumb_func
 1074              	USB_IRQHandler:
 1075              	.LFB80:
 673:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 674:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 675:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** /*
 676:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  *  USB Interrupt Service Routine
 677:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****  */
 678:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 679:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** extern void USB_IRQHandler (void) {
 1076              	 .loc 1 679 0
 1077              	 .cfi_startproc
 1078              	 
 1079              	 
 1080 0000 2DE9F843 	 push {r3,r4,r5,r6,r7,r8,r9,lr}
 1081              	.LCFI16:
 1082              	 .cfi_def_cfa_offset 32
 1083              	 .cfi_offset 14,-4
 1084              	 .cfi_offset 9,-8
 1085              	 .cfi_offset 8,-12
 1086              	 .cfi_offset 7,-16
 1087              	 .cfi_offset 6,-20
 1088              	 .cfi_offset 5,-24
 1089              	 .cfi_offset 4,-28
 1090              	 .cfi_offset 3,-32
 680:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** //	xprintf("USB_IRQ" " (%s:%d)\n",_F_,_L_);
 681:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 682:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   uint32_t disr, val, n, m;
 683:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   uint32_t episr, episrCur;
 684:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 685:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   disr = LPC_USB->USBDevIntSt;       /* Device Interrupt Status */
 1091              	 .loc 1 685 0
 1092 0004 4FF44043 	 mov r3,#49152
 1093 0008 C5F20003 	 movt r3,20480
 1094 000c D3F80032 	 ldr r3,[r3,#512]
 1095              	.LVL56:
 686:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 687:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   /* Device Status Interrupt (Reset, Connect change, Suspend/Resume) */
 688:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   if (disr & DEV_STAT_INT) {
 1096              	 .loc 1 688 0
 1097 0010 13F0080F 	 tst r3,#8
 1098 0014 1CD0     	 beq .L62
 689:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     LPC_USB->USBDevIntClr = DEV_STAT_INT;
 1099              	 .loc 1 689 0
 1100 0016 4FF44043 	 mov r3,#49152
 1101              	.LVL57:
 1102 001a C5F20003 	 movt r3,20480
 1103 001e 4FF00802 	 mov r2,#8
 1104 0022 C3F80822 	 str r2,[r3,#520]
 690:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     WrCmd(CMD_GET_DEV_STAT);
 1105              	 .loc 1 690 0
 1106 0026 4FF4A060 	 mov r0,#1280
 1107 002a C0F2FE00 	 movt r0,254
 1108 002e FFF7FEFF 	 bl WrCmd
 691:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     val = RdCmdDat(DAT_GET_DEV_STAT);       /* Device Status */
 1109              	 .loc 1 691 0
 1110 0032 4FF40070 	 mov r0,#512
 1111 0036 C0F2FE00 	 movt r0,254
 1112 003a FFF7FEFF 	 bl RdCmdDat
 1113              	.LVL58:
 692:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     if (val & DEV_RST) {                    /* Reset */
 1114              	 .loc 1 692 0
 1115 003e 10F0100F 	 tst r0,#16
 1116 0042 5DD0     	 beq .L61
 693:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****       USB_Reset();
 1117              	 .loc 1 693 0
 1118 0044 FFF7FEFF 	 bl USB_Reset
 1119              	.LVL59:
 694:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #if   USB_RESET_EVENT
 695:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****       USB_Reset_Event();
 1120              	 .loc 1 695 0
 1121 0048 FFF7FEFF 	 bl USB_Reset_Event
 1122 004c BDE8F883 	 pop {r3,r4,r5,r6,r7,r8,r9,pc}
 1123              	.LVL60:
 1124              	.L62:
 696:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #endif
 697:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     }
 698:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     if (val & DEV_CON_CH) {                 /* Connect change */
 699:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #if   USB_POWER_EVENT
 700:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****       USB_Power_Event(val & DEV_CON);
 701:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #endif
 702:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     }
 703:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     if (val & DEV_SUS_CH) {                 /* Suspend/Resume */
 704:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****       if (val & DEV_SUS) {                  /* Suspend */
 705:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****         USB_Suspend();
 706:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #if     USB_SUSPEND_EVENT
 707:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****         USB_Suspend_Event();
 708:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #endif
 709:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****       } else {                              /* Resume */
 710:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****         USB_Resume();
 711:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #if     USB_RESUME_EVENT
 712:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****         USB_Resume_Event();
 713:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #endif
 714:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****       }
 715:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     }
 716:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     goto isr_end;
 717:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   }
 718:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 719:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #if USB_SOF_EVENT
 720:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   /* Start of Frame Interrupt */
 721:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   if (disr & FRAME_INT) {
 722:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     USB_SOF_Event();
 723:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   }
 724:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #endif
 725:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 726:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #if USB_ERROR_EVENT
 727:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   /* Error Interrupt */
 728:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   if (disr & ERR_INT) {
 729:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     WrCmd(CMD_RD_ERR_STAT);
 730:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     val = RdCmdDat(DAT_RD_ERR_STAT);
 731:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     USB_Error_Event(val);
 732:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   }
 733:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** #endif
 734:src/MightyBoard/Motherboard/USBCDC/usbhw.c **** 
 735:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   /* Endpoint's Slow Interrupt */
 736:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   if (disr & EP_SLOW_INT) {
 1125              	 .loc 1 736 0
 1126 0050 13F0040F 	 tst r3,#4
 1127 0054 54D0     	 beq .L61
 1128              	.LVL61:
 737:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     episrCur = 0;
 738:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     episr    = LPC_USB->USBEpIntSt;
 1129              	 .loc 1 738 0
 1130 0056 4FF44043 	 mov r3,#49152
 1131              	.LVL62:
 1132 005a C5F20003 	 movt r3,20480
 1133 005e D3F83072 	 ldr r7,[r3,#560]
 1134              	.LVL63:
 739:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     for (n = 0; n < USB_EP_NUM; n++) {      /* Check All Endpoints */
 740:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****       if (episr == episrCur) break;         /* break if all EP interrupts handled */
 1135              	 .loc 1 740 0
 1136 0062 002F     	 cmp r7,#0
 1137 0064 44D0     	 beq .L64
 1138 0066 4FF00106 	 mov r6,#1
 1139 006a 4FF00004 	 mov r4,#0
 737:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     episrCur = 0;
 1140              	 .loc 1 737 0
 1141 006e A046     	 mov r8,r4
 741:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****       if (episr & (1 << n)) {
 742:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****         episrCur |= (1 << n);
 743:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****         m = n >> 1;
 744:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   
 745:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****         LPC_USB->USBEpIntClr = (1 << n);
 1142              	 .loc 1 745 0
 1143 0070 4FF44045 	 mov r5,#49152
 1144 0074 C5F20005 	 movt r5,20480
 746:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****         while ((LPC_USB->USBDevIntSt & CDFULL_INT) == 0);
 747:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****         val = LPC_USB->USBCmdData;
 748:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****   
 749:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****         if ((n & 1) == 0) {                 /* OUT Endpoint */
 750:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****           if (n == 0) {                     /* Control OUT Endpoint */
 751:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****             if (val & EP_SEL_STP) {         /* Setup Packet */
 752:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****               if (USB_P_EP[0]) {
 753:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****                 USB_P_EP[0](USB_EVT_SETUP);
 754:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****                 continue;
 755:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****               }
 756:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****             }
 757:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****           }
 758:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****           if (USB_P_EP[m]) {
 759:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****             USB_P_EP[m](USB_EVT_OUT);
 760:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****           }
 761:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****         } else {                            /* IN Endpoint */
 762:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****           if (USB_P_EP[m]) {
 1145              	 .loc 1 762 0
 1146 0078 40F20009 	 movw r9,#:lower16:USB_P_EP
 1147 007c C0F20009 	 movt r9,#:upper16:USB_P_EP
 1148 0080 05E0     	 b .L65
 1149              	.LVL64:
 1150              	.L70:
 740:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****       if (episr == episrCur) break;         /* break if all EP interrupts handled */
 1151              	 .loc 1 740 0
 1152 0082 04F10104 	 add r4,r4,#1
 1153 0086 06F10106 	 add r6,r6,#1
 1154              	.LVL65:
 1155 008a B845     	 cmp r8,r7
 1156 008c 30D0     	 beq .L64
 1157              	.LVL66:
 1158              	.L65:
 1159 008e 2246     	 mov r2,r4
 741:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****       if (episr & (1 << n)) {
 1160              	 .loc 1 741 0
 1161 0090 4FF00103 	 mov r3,#1
 1162 0094 03FA04F3 	 lsl r3,r3,r4
 1163 0098 3B42     	 tst r3,r7
 1164 009a 27D0     	 beq .L66
 742:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****         episrCur |= (1 << n);
 1165              	 .loc 1 742 0
 1166 009c 48EA0308 	 orr r8,r8,r3
 1167              	.LVL67:
 743:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****         m = n >> 1;
 1168              	 .loc 1 743 0
 1169 00a0 4FEA5401 	 lsr r1,r4,#1
 1170              	.LVL68:
 745:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****         LPC_USB->USBEpIntClr = (1 << n);
 1171              	 .loc 1 745 0
 1172 00a4 C5F83832 	 str r3,[r5,#568]
 1173              	.L67:
 746:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****         while ((LPC_USB->USBDevIntSt & CDFULL_INT) == 0);
 1174              	 .loc 1 746 0 discriminator 1
 1175 00a8 D5F80032 	 ldr r3,[r5,#512]
 1176 00ac 13F0200F 	 tst r3,#32
 1177 00b0 FAD0     	 beq .L67
 747:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****         val = LPC_USB->USBCmdData;
 1178              	 .loc 1 747 0
 1179 00b2 D5F81432 	 ldr r3,[r5,#532]
 1180              	.LVL69:
 749:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****         if ((n & 1) == 0) {                 /* OUT Endpoint */
 1181              	 .loc 1 749 0
 1182 00b6 12F0010F 	 tst r2,#1
 1183 00ba 11D1     	 bne .L68
 750:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****           if (n == 0) {                     /* Control OUT Endpoint */
 1184              	 .loc 1 750 0
 1185 00bc 4CB9     	 cbnz r4,.L69
 751:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****             if (val & EP_SEL_STP) {         /* Setup Packet */
 1186              	 .loc 1 751 0
 1187 00be 13F0040F 	 tst r3,#4
 1188 00c2 06D0     	 beq .L69
 752:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****               if (USB_P_EP[0]) {
 1189              	 .loc 1 752 0
 1190 00c4 D9F80030 	 ldr r3,[r9,#0]
 1191              	.LVL70:
 1192 00c8 1BB1     	 cbz r3,.L69
 753:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****                 USB_P_EP[0](USB_EVT_SETUP);
 1193              	 .loc 1 753 0
 1194 00ca 4FF00100 	 mov r0,#1
 1195 00ce 9847     	 blx r3
 1196              	.LVL71:
 1197 00d0 D7E7     	 b .L70
 1198              	.LVL72:
 1199              	.L69:
 758:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****           if (USB_P_EP[m]) {
 1200              	 .loc 1 758 0
 1201 00d2 59F82130 	 ldr r3,[r9,r1,lsl#2]
 1202 00d6 4BB1     	 cbz r3,.L66
 759:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****             USB_P_EP[m](USB_EVT_OUT);
 1203              	 .loc 1 759 0
 1204 00d8 4FF00200 	 mov r0,#2
 1205 00dc 9847     	 blx r3
 1206              	.LVL73:
 1207 00de 05E0     	 b .L66
 1208              	.LVL74:
 1209              	.L68:
 1210              	 .loc 1 762 0
 1211 00e0 59F82130 	 ldr r3,[r9,r1,lsl#2]
 1212              	.LVL75:
 1213 00e4 13B1     	 cbz r3,.L66
 763:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****             USB_P_EP[m](USB_EVT_IN);
 1214              	 .loc 1 763 0
 1215 00e6 4FF00300 	 mov r0,#3
 1216 00ea 9847     	 blx r3
 1217              	.LVL76:
 1218              	.L66:
 739:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     for (n = 0; n < USB_EP_NUM; n++) {      /* Check All Endpoints */
 1219              	 .loc 1 739 0
 1220 00ec 1F2E     	 cmp r6,#31
 1221 00ee C8D9     	 bls .L70
 1222              	.LVL77:
 1223              	.L64:
 764:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****           }
 765:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****         }
 766:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****       }
 767:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     }
 768:src/MightyBoard/Motherboard/USBCDC/usbhw.c ****     LPC_USB->USBDevIntClr = EP_SLOW_INT;
 1224              	 .loc 1 768 0
 1225 00f0 4FF44043 	 mov r3,#49152
 1226 00f4 C5F20003 	 movt r3,20480
 1227 00f8 4FF00402 	 mov r2,#4
 1228 00fc C3F80822 	 str r2,[r3,#520]
 1229              	.L63:
 1230              	.LVL78:
 1231              	.L61:
 1232 0100 BDE8F883 	 pop {r3,r4,r5,r6,r7,r8,r9,pc}
 1233              	 .cfi_endproc
 1234              	.LFE80:
 1236              	 .text
 1237              	.Letext0:
 1238              	 .file 3 "src/MightyBoard/Motherboard/system/LPC17xx.h"
 1239              	 .file 4 "c:\\program files\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/gcc/arm-none-eabi/4.6.3/../../../../arm-none-eabi/include/stdint.h"
 1240              	 .file 5 "src/MightyBoard/Motherboard/USBCDC/usb.h"
 1241              	 .file 6 "src/MightyBoard/Motherboard/USBCDC/usbcore.h"
 1242              	 .file 7 "src/MightyBoard/Motherboard/USBCDC/usbuser.h"
DEFINED SYMBOLS
                            *ABS*:00000000 usbhw.c
    {standard input}:19     .text.EPAdr:00000000 $t
    {standard input}:24     .text.EPAdr:00000000 EPAdr
    {standard input}:51     .text.WrCmd:00000000 $t
    {standard input}:56     .text.WrCmd:00000000 WrCmd
    {standard input}:85     .text.WrCmdDat:00000000 $t
    {standard input}:90     .text.WrCmdDat:00000000 WrCmdDat
    {standard input}:134    .text.WrCmdEP:00000000 $t
    {standard input}:139    .text.WrCmdEP:00000000 WrCmdEP
    {standard input}:194    .text.RdCmdDat:00000000 $t
    {standard input}:199    .text.RdCmdDat:00000000 RdCmdDat
    {standard input}:233    .text.USB_Connect:00000000 $t
    {standard input}:238    .text.USB_Connect:00000000 USB_Connect
    {standard input}:266    .text.USB_Reset:00000000 $t
    {standard input}:271    .text.USB_Reset:00000000 USB_Reset
    {standard input}:317    .text.USB_Suspend:00000000 $t
    {standard input}:322    .text.USB_Suspend:00000000 USB_Suspend
    {standard input}:335    .text.USB_Resume:00000000 $t
    {standard input}:340    .text.USB_Resume:00000000 USB_Resume
    {standard input}:353    .text.USB_WakeUp:00000000 $t
    {standard input}:358    .text.USB_WakeUp:00000000 USB_WakeUp
    {standard input}:387    .text.USB_WakeUpCfg:00000000 $t
    {standard input}:392    .text.USB_WakeUpCfg:00000000 USB_WakeUpCfg
    {standard input}:406    .text.USB_SetAddress:00000000 $t
    {standard input}:411    .text.USB_SetAddress:00000000 USB_SetAddress
    {standard input}:445    .text.USB_Init:00000000 $t
    {standard input}:450    .text.USB_Init:00000000 USB_Init
    {standard input}:565    .text.USB_Configure:00000000 $t
    {standard input}:570    .text.USB_Configure:00000000 USB_Configure
    {standard input}:616    .text.USB_ConfigEP:00000000 $t
    {standard input}:621    .text.USB_ConfigEP:00000000 USB_ConfigEP
    {standard input}:671    .text.USB_DirCtrlEP:00000000 $t
    {standard input}:676    .text.USB_DirCtrlEP:00000000 USB_DirCtrlEP
    {standard input}:690    .text.USB_EnableEP:00000000 $t
    {standard input}:695    .text.USB_EnableEP:00000000 USB_EnableEP
    {standard input}:721    .text.USB_DisableEP:00000000 $t
    {standard input}:726    .text.USB_DisableEP:00000000 USB_DisableEP
    {standard input}:753    .text.USB_ResetEP:00000000 $t
    {standard input}:758    .text.USB_ResetEP:00000000 USB_ResetEP
    {standard input}:784    .text.USB_SetStallEP:00000000 $t
    {standard input}:789    .text.USB_SetStallEP:00000000 USB_SetStallEP
    {standard input}:816    .text.USB_ClrStallEP:00000000 $t
    {standard input}:821    .text.USB_ClrStallEP:00000000 USB_ClrStallEP
    {standard input}:847    .text.USB_ClearEPBuf:00000000 $t
    {standard input}:852    .text.USB_ClearEPBuf:00000000 USB_ClearEPBuf
    {standard input}:875    .text.USB_ReadEP:00000000 $t
    {standard input}:880    .text.USB_ReadEP:00000000 USB_ReadEP
    {standard input}:959    .text.USB_WriteEP:00000000 $t
    {standard input}:964    .text.USB_WriteEP:00000000 USB_WriteEP
    {standard input}:1027   .text.USB_GetFrame:00000000 $t
    {standard input}:1032   .text.USB_GetFrame:00000000 USB_GetFrame
    {standard input}:1069   .text.USB_IRQHandler:00000000 $t
    {standard input}:1074   .text.USB_IRQHandler:00000000 USB_IRQHandler
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
USB_DeviceStatus
USB_Reset_Event
USB_P_EP
