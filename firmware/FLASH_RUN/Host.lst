   1              	 .syntax unified
   2              	 .cpu cortex-m3
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,1
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "Host.cc"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text._ZN4host20processCommandPacketERK8InPacketR9OutPacket,"ax",%progbits
  19              	 .align 2
  20              	 .global _ZN4host20processCommandPacketERK8InPacketR9OutPacket
  21              	 .thumb
  22              	 .thumb_func
  24              	_ZN4host20processCommandPacketERK8InPacketR9OutPacket:
  25              	.LFB119:
  26              	 .file 1 "src/MightyBoard/Motherboard/Host.cc"
   1:src/MightyBoard/Motherboard/Host.cc **** /*
   2:src/MightyBoard/Motherboard/Host.cc ****  * Copyright 2010 by Adam Mayer	 <adam@makerbot.com>
   3:src/MightyBoard/Motherboard/Host.cc ****  *
   4:src/MightyBoard/Motherboard/Host.cc ****  * This program is free software: you can redistribute it and/or modify
   5:src/MightyBoard/Motherboard/Host.cc ****  * it under the terms of the GNU General Public License as published by
   6:src/MightyBoard/Motherboard/Host.cc ****  * the Free Software Foundation, either version 3 of the License, or
   7:src/MightyBoard/Motherboard/Host.cc ****  * (at your option) any later version.
   8:src/MightyBoard/Motherboard/Host.cc ****  *
   9:src/MightyBoard/Motherboard/Host.cc ****  * This program is distributed in the hope that it will be useful,
  10:src/MightyBoard/Motherboard/Host.cc ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:src/MightyBoard/Motherboard/Host.cc ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:src/MightyBoard/Motherboard/Host.cc ****  * GNU General Public License for more details.
  13:src/MightyBoard/Motherboard/Host.cc ****  *
  14:src/MightyBoard/Motherboard/Host.cc ****  * You should have received a copy of the GNU General Public License
  15:src/MightyBoard/Motherboard/Host.cc ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>
  16:src/MightyBoard/Motherboard/Host.cc ****  */
  17:src/MightyBoard/Motherboard/Host.cc ****  
  18:src/MightyBoard/Motherboard/Host.cc **** #include "Host.hh"
  19:src/MightyBoard/Motherboard/Host.cc **** #include "Command.hh"
  20:src/MightyBoard/Motherboard/Host.cc **** #include <string.h>
  21:src/MightyBoard/Motherboard/Host.cc **** #include "Commands.hh"
  22:src/MightyBoard/Motherboard/Host.cc **** #include "Steppers.hh"
  23:src/MightyBoard/Motherboard/Host.cc **** #include "DebugPacketProcessor.hh"
  24:src/MightyBoard/Motherboard/Host.cc **** #include "Timeout.hh"
  25:src/MightyBoard/Motherboard/Host.cc **** #include "Version.hh"
  26:src/MightyBoard/Motherboard/Host.cc **** //#include <util/atomic.h>
  27:src/MightyBoard/Motherboard/Host.cc **** //#include <avr/eeprom.h>
  28:src/MightyBoard/Motherboard/Host.cc **** //#include <avr/pgmspace.h>
  29:src/MightyBoard/Motherboard/Host.cc **** //#include <util/delay.h>
  30:src/MightyBoard/Motherboard/Host.cc **** //#include <avr/wdt.h>
  31:src/MightyBoard/Motherboard/Host.cc **** #include "Main.hh"
  32:src/MightyBoard/Motherboard/Host.cc **** #include "Errors.hh"
  33:src/MightyBoard/Motherboard/Host.cc **** #include "Eeprom.hh"
  34:src/MightyBoard/Motherboard/Host.cc **** #include "EepromMap.hh"
  35:src/MightyBoard/Motherboard/Host.cc **** #include "UtilityScripts.hh"
  36:src/MightyBoard/Motherboard/Host.cc **** #include "Planner.hh"
  37:src/MightyBoard/Motherboard/Host.cc **** #include "stdio.h"
  38:src/MightyBoard/Motherboard/Host.cc **** 
  39:src/MightyBoard/Motherboard/Host.cc **** #include "Delay.hh"
  40:src/MightyBoard/Motherboard/Host.cc **** #include "UART.hh"
  41:src/MightyBoard/Motherboard/Host.cc **** extern "C" {
  42:src/MightyBoard/Motherboard/Host.cc **** 	#include "pgmspace.h"
  43:src/MightyBoard/Motherboard/Host.cc **** #include "comm.h"
  44:src/MightyBoard/Motherboard/Host.cc **** }
  45:src/MightyBoard/Motherboard/Host.cc **** 
  46:src/MightyBoard/Motherboard/Host.cc **** namespace host {
  47:src/MightyBoard/Motherboard/Host.cc **** 
  48:src/MightyBoard/Motherboard/Host.cc **** /// Identify a command packet, and process it.  If the packet is a command
  49:src/MightyBoard/Motherboard/Host.cc **** /// packet, return true, indicating that the packet has been queued and no
  50:src/MightyBoard/Motherboard/Host.cc **** /// other processing needs to be done. Otherwise, processing of this packet
  51:src/MightyBoard/Motherboard/Host.cc **** /// should drop through to the next processing level.
  52:src/MightyBoard/Motherboard/Host.cc **** bool processCommandPacket(const InPacket& from_host, OutPacket& to_host);
  53:src/MightyBoard/Motherboard/Host.cc **** bool processQueryPacket(const InPacket& from_host, OutPacket& to_host);
  54:src/MightyBoard/Motherboard/Host.cc **** bool processExtruderQueryPacket(const InPacket& from_host, OutPacket& to_host);
  55:src/MightyBoard/Motherboard/Host.cc **** 
  56:src/MightyBoard/Motherboard/Host.cc **** // Timeout from time first bit recieved until we abort packet reception
  57:src/MightyBoard/Motherboard/Host.cc **** Timeout packet_in_timeout;
  58:src/MightyBoard/Motherboard/Host.cc **** Timeout cancel_timeout;
  59:src/MightyBoard/Motherboard/Host.cc **** 
  60:src/MightyBoard/Motherboard/Host.cc **** #define HOST_PACKET_TIMEOUT_MS 200
  61:src/MightyBoard/Motherboard/Host.cc **** #define HOST_PACKET_TIMEOUT_MICROS (1000L*HOST_PACKET_TIMEOUT_MS)
  62:src/MightyBoard/Motherboard/Host.cc **** 
  63:src/MightyBoard/Motherboard/Host.cc **** //#define HOST_TOOL_RESPONSE_TIMEOUT_MS 50
  64:src/MightyBoard/Motherboard/Host.cc **** //#define HOST_TOOL_RESPONSE_TIMEOUT_MICROS (1000L*HOST_TOOL_RESPONSE_TIMEOUT_MS)
  65:src/MightyBoard/Motherboard/Host.cc **** 
  66:src/MightyBoard/Motherboard/Host.cc **** char machineName[eeprom_info::MAX_MACHINE_NAME_LEN];
  67:src/MightyBoard/Motherboard/Host.cc **** 
  68:src/MightyBoard/Motherboard/Host.cc **** char buildName[MAX_FILE_LEN];
  69:src/MightyBoard/Motherboard/Host.cc **** 
  70:src/MightyBoard/Motherboard/Host.cc **** //uint32_t buildSteps;
  71:src/MightyBoard/Motherboard/Host.cc **** 
  72:src/MightyBoard/Motherboard/Host.cc **** /// Used to indicate what the UI should do, and used by
  73:src/MightyBoard/Motherboard/Host.cc **** /// host process to know what state it's in for error/command allowed.
  74:src/MightyBoard/Motherboard/Host.cc **** /// doesn't change state machine per-se, but sets context for other cmds.
  75:src/MightyBoard/Motherboard/Host.cc **** HostState currentState;
  76:src/MightyBoard/Motherboard/Host.cc **** 
  77:src/MightyBoard/Motherboard/Host.cc **** /// Used to indicate the status of the current or last finished print
  78:src/MightyBoard/Motherboard/Host.cc **** /// is queryable by repG and by the stats screen during builds
  79:src/MightyBoard/Motherboard/Host.cc **** BuildState buildState = BUILD_NONE;
  80:src/MightyBoard/Motherboard/Host.cc **** 
  81:src/MightyBoard/Motherboard/Host.cc **** /// queryable time for last print
  82:src/MightyBoard/Motherboard/Host.cc **** uint8_t last_print_hours = 0;
  83:src/MightyBoard/Motherboard/Host.cc **** uint8_t last_print_minutes = 0;
  84:src/MightyBoard/Motherboard/Host.cc **** 
  85:src/MightyBoard/Motherboard/Host.cc **** uint32_t last_print_line = 0;
  86:src/MightyBoard/Motherboard/Host.cc **** 
  87:src/MightyBoard/Motherboard/Host.cc **** /// counter for current print time
  88:src/MightyBoard/Motherboard/Host.cc **** uint8_t print_time_hours = 0;
  89:src/MightyBoard/Motherboard/Host.cc **** Timeout print_time;
  90:src/MightyBoard/Motherboard/Host.cc **** 
  91:src/MightyBoard/Motherboard/Host.cc **** const static uint32_t ONE_HOUR = 3600000000;
  92:src/MightyBoard/Motherboard/Host.cc **** 
  93:src/MightyBoard/Motherboard/Host.cc **** 
  94:src/MightyBoard/Motherboard/Host.cc **** bool do_host_reset = false;
  95:src/MightyBoard/Motherboard/Host.cc **** bool hard_reset = false;
  96:src/MightyBoard/Motherboard/Host.cc **** bool cancelBuild = false;
  97:src/MightyBoard/Motherboard/Host.cc **** 
  98:src/MightyBoard/Motherboard/Host.cc **** void runHostSlice() {
  99:src/MightyBoard/Motherboard/Host.cc **** 		
 100:src/MightyBoard/Motherboard/Host.cc ****          InPacket& in = UART::getHostUART().in;
 101:src/MightyBoard/Motherboard/Host.cc ****         OutPacket& out = UART::getHostUART().out;
 102:src/MightyBoard/Motherboard/Host.cc **** 	if (out.isSending()) {
 103:src/MightyBoard/Motherboard/Host.cc **** 		// still sending; wait until send is complete before reading new host packets.
 104:src/MightyBoard/Motherboard/Host.cc **** 		return;
 105:src/MightyBoard/Motherboard/Host.cc **** 	}
 106:src/MightyBoard/Motherboard/Host.cc ****     // soft reset the machine unless waiting to notify repG that a cancel has occured
 107:src/MightyBoard/Motherboard/Host.cc **** 	if (do_host_reset && (!cancelBuild || cancel_timeout.hasElapsed())){
 108:src/MightyBoard/Motherboard/Host.cc **** 		
 109:src/MightyBoard/Motherboard/Host.cc **** 		
 110:src/MightyBoard/Motherboard/Host.cc **** 		
 111:src/MightyBoard/Motherboard/Host.cc **** 		if((buildState == BUILD_RUNNING) || (buildState == BUILD_PAUSED)){
 112:src/MightyBoard/Motherboard/Host.cc **** 			stopBuild();
 113:src/MightyBoard/Motherboard/Host.cc **** 		}
 114:src/MightyBoard/Motherboard/Host.cc **** 		do_host_reset = false;
 115:src/MightyBoard/Motherboard/Host.cc **** 
 116:src/MightyBoard/Motherboard/Host.cc **** 		// reset local board
 117:src/MightyBoard/Motherboard/Host.cc **** 		
 118:src/MightyBoard/Motherboard/Host.cc ****  		reset(hard_reset);
 119:src/MightyBoard/Motherboard/Host.cc **** 		
 120:src/MightyBoard/Motherboard/Host.cc ****         // hard_reset can be called, but is not called by any
 121:src/MightyBoard/Motherboard/Host.cc ****         // a hard reset calls the start up sound and resets heater errors
 122:src/MightyBoard/Motherboard/Host.cc **** 		hard_reset = false;
 123:src/MightyBoard/Motherboard/Host.cc **** 		packet_in_timeout.abort();
 124:src/MightyBoard/Motherboard/Host.cc **** 
 125:src/MightyBoard/Motherboard/Host.cc **** 		// Clear the machine and build names
 126:src/MightyBoard/Motherboard/Host.cc **** 		machineName[0] = 0;
 127:src/MightyBoard/Motherboard/Host.cc **** 		buildName[0] = 0;
 128:src/MightyBoard/Motherboard/Host.cc **** 		currentState = HOST_STATE_READY;
 129:src/MightyBoard/Motherboard/Host.cc **** 			
 130:src/MightyBoard/Motherboard/Host.cc **** 		return;
 131:src/MightyBoard/Motherboard/Host.cc **** 	}
 132:src/MightyBoard/Motherboard/Host.cc ****     // new packet coming in
 133:src/MightyBoard/Motherboard/Host.cc **** 	if (in.isStarted() && !in.isFinished()) {
 134:src/MightyBoard/Motherboard/Host.cc **** //		xprintf("in.isStarted() && !in.isFinished()" " (%s:%d)\n",_F_,_L_);
 135:src/MightyBoard/Motherboard/Host.cc **** 		if (!packet_in_timeout.isActive()) {
 136:src/MightyBoard/Motherboard/Host.cc **** 			// initiate timeout
 137:src/MightyBoard/Motherboard/Host.cc **** 			packet_in_timeout.start(HOST_PACKET_TIMEOUT_MICROS);
 138:src/MightyBoard/Motherboard/Host.cc **** 		} else if (packet_in_timeout.hasElapsed()) {
 139:src/MightyBoard/Motherboard/Host.cc **** 			in.timeout();
 140:src/MightyBoard/Motherboard/Host.cc **** 		}
 141:src/MightyBoard/Motherboard/Host.cc **** 
 142:src/MightyBoard/Motherboard/Host.cc **** 	}
 143:src/MightyBoard/Motherboard/Host.cc **** 	if (in.hasError()) {
 144:src/MightyBoard/Motherboard/Host.cc **** //		xprintf("in.hasError()" " (%s:%d)\n",_F_,_L_);
 145:src/MightyBoard/Motherboard/Host.cc **** 		// Reset packet quickly and start handling the next packet.
 146:src/MightyBoard/Motherboard/Host.cc **** 		
 147:src/MightyBoard/Motherboard/Host.cc **** 	/*	out.reset();
 148:src/MightyBoard/Motherboard/Host.cc **** 			
 149:src/MightyBoard/Motherboard/Host.cc **** 		// Report error code.
 150:src/MightyBoard/Motherboard/Host.cc **** 		switch (in.getErrorCode()){
 151:src/MightyBoard/Motherboard/Host.cc **** 			case PacketError::PACKET_TIMEOUT:
 152:src/MightyBoard/Motherboard/Host.cc **** 				out.append8(RC_PACKET_TIMEOUT);
 153:src/MightyBoard/Motherboard/Host.cc **** 				break;
 154:src/MightyBoard/Motherboard/Host.cc **** 			case PacketError::BAD_CRC:
 155:src/MightyBoard/Motherboard/Host.cc **** 				out.append8(RC_CRC_MISMATCH);
 156:src/MightyBoard/Motherboard/Host.cc **** 				break;
 157:src/MightyBoard/Motherboard/Host.cc **** 			case PacketError::EXCEEDED_MAX_LENGTH:
 158:src/MightyBoard/Motherboard/Host.cc **** 				out.append8(RC_PACKET_LENGTH);
 159:src/MightyBoard/Motherboard/Host.cc **** 				break;
 160:src/MightyBoard/Motherboard/Host.cc **** 			default:
 161:src/MightyBoard/Motherboard/Host.cc **** 				out.append8(RC_PACKET_ERROR);
 162:src/MightyBoard/Motherboard/Host.cc **** 				break;
 163:src/MightyBoard/Motherboard/Host.cc **** 		}
 164:src/MightyBoard/Motherboard/Host.cc **** 		*/  	
 165:src/MightyBoard/Motherboard/Host.cc **** 		in.reset();
 166:src/MightyBoard/Motherboard/Host.cc **** 		//UART::getHostUART().beginSend();
 167:src/MightyBoard/Motherboard/Host.cc **** 		//Motherboard::getBoard().indicateError(ERR_HOST_PACKET_MISC);
 168:src/MightyBoard/Motherboard/Host.cc **** 		
 169:src/MightyBoard/Motherboard/Host.cc **** 	}
 170:src/MightyBoard/Motherboard/Host.cc **** 	if (in.isFinished()) {
 171:src/MightyBoard/Motherboard/Host.cc **** //		xprintf("in.isFinished()" " (%s:%d)\n",_F_,_L_);
 172:src/MightyBoard/Motherboard/Host.cc **** 		DEBUG_PIN1.setValue(false);
 173:src/MightyBoard/Motherboard/Host.cc **** 		packet_in_timeout.abort();
 174:src/MightyBoard/Motherboard/Host.cc **** 		out.reset();
 175:src/MightyBoard/Motherboard/Host.cc **** 	  // do not respond to commands if the bot has had a heater failure
 176:src/MightyBoard/Motherboard/Host.cc **** 		if(currentState == HOST_STATE_HEAT_SHUTDOWN){
 177:src/MightyBoard/Motherboard/Host.cc **** 			if(cancelBuild){
 178:src/MightyBoard/Motherboard/Host.cc **** 				out.append8(RC_CANCEL_BUILD);
 179:src/MightyBoard/Motherboard/Host.cc **** 				cancelBuild= false;
 180:src/MightyBoard/Motherboard/Host.cc **** 			}else{
 181:src/MightyBoard/Motherboard/Host.cc **** 				out.append8(RC_BOT_OVERHEAT);
 182:src/MightyBoard/Motherboard/Host.cc **** 			}
 183:src/MightyBoard/Motherboard/Host.cc **** 		}else if(cancelBuild){
 184:src/MightyBoard/Motherboard/Host.cc **** 			out.append8(RC_CANCEL_BUILD);
 185:src/MightyBoard/Motherboard/Host.cc **** 			cancelBuild = false;
 186:src/MightyBoard/Motherboard/Host.cc **** 			Motherboard::getBoard().indicateError(6);
 187:src/MightyBoard/Motherboard/Host.cc **** 		} else
 188:src/MightyBoard/Motherboard/Host.cc **** #if defined(HONOR_DEBUG_PACKETS) && (HONOR_DEBUG_PACKETS == 1)
 189:src/MightyBoard/Motherboard/Host.cc **** 		if (processDebugPacket(in, out)) {
 190:src/MightyBoard/Motherboard/Host.cc **** 			// okay, processed
 191:src/MightyBoard/Motherboard/Host.cc **** 		} else
 192:src/MightyBoard/Motherboard/Host.cc **** #endif
 193:src/MightyBoard/Motherboard/Host.cc **** 		if (processCommandPacket(in, out)) {
 194:src/MightyBoard/Motherboard/Host.cc **** 			// okay, processed
 195:src/MightyBoard/Motherboard/Host.cc **** 		} else if (processQueryPacket(in, out)) {
 196:src/MightyBoard/Motherboard/Host.cc **** 			// okay, processed
 197:src/MightyBoard/Motherboard/Host.cc **** 		} else {
 198:src/MightyBoard/Motherboard/Host.cc **** 			// Unrecognized command
 199:src/MightyBoard/Motherboard/Host.cc **** 			out.append8(RC_CMD_UNSUPPORTED);
 200:src/MightyBoard/Motherboard/Host.cc **** 		}
 201:src/MightyBoard/Motherboard/Host.cc **** 		in.reset();
 202:src/MightyBoard/Motherboard/Host.cc ****                 UART::getHostUART().beginSend();
 203:src/MightyBoard/Motherboard/Host.cc **** 	}
 204:src/MightyBoard/Motherboard/Host.cc ****     /// mark new state as ready if done building from SD
 205:src/MightyBoard/Motherboard/Host.cc **** 	if(currentState==HOST_STATE_BUILDING_FROM_SD)
 206:src/MightyBoard/Motherboard/Host.cc **** 	{
 207:src/MightyBoard/Motherboard/Host.cc **** 		if(!sdcard::isPlaying())
 208:src/MightyBoard/Motherboard/Host.cc **** 			currentState = HOST_STATE_READY;
 209:src/MightyBoard/Motherboard/Host.cc **** 	}
 210:src/MightyBoard/Motherboard/Host.cc ****     // mark new state as ready if done buiding onboard script
 211:src/MightyBoard/Motherboard/Host.cc **** 	if((currentState==HOST_STATE_BUILDING_ONBOARD))
 212:src/MightyBoard/Motherboard/Host.cc **** 	{
 213:src/MightyBoard/Motherboard/Host.cc **** 		if(!utility::isPlaying()){
 214:src/MightyBoard/Motherboard/Host.cc **** 			currentState = HOST_STATE_READY;
 215:src/MightyBoard/Motherboard/Host.cc **** 		}
 216:src/MightyBoard/Motherboard/Host.cc **** 	}
 217:src/MightyBoard/Motherboard/Host.cc **** 	managePrintTime();
 218:src/MightyBoard/Motherboard/Host.cc **** }
 219:src/MightyBoard/Motherboard/Host.cc **** 
 220:src/MightyBoard/Motherboard/Host.cc **** /** Identify a command packet, and process it.  If the packet is a command
 221:src/MightyBoard/Motherboard/Host.cc ****  * packet, return true, indicating that the packet has been queued and no
 222:src/MightyBoard/Motherboard/Host.cc ****  * other processing needs to be done. Otherwise, processing of this packet
 223:src/MightyBoard/Motherboard/Host.cc ****  * should drop through to the next processing level.
 224:src/MightyBoard/Motherboard/Host.cc ****  */
 225:src/MightyBoard/Motherboard/Host.cc **** bool processCommandPacket(const InPacket& from_host, OutPacket& to_host) {
  27              	 .loc 1 225 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	.LVL0:
  32 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 24
  35              	 .cfi_offset 14,-4
  36              	 .cfi_offset 7,-8
  37              	 .cfi_offset 6,-12
  38              	 .cfi_offset 5,-16
  39              	 .cfi_offset 4,-20
  40              	 .cfi_offset 3,-24
  41 0002 0446     	 mov r4,r0
  42 0004 0D46     	 mov r5,r1
  43              	.LVL1:
  44              	.LBB200:
  45              	.LBB201:
  46              	.LBB202:
  47              	 .file 2 "src/MightyBoard/shared/Packet.hh"
   1:src/MightyBoard/shared/Packet.hh **** /*
   2:src/MightyBoard/shared/Packet.hh ****  * Copyright 2010 by Adam Mayer	 <adam@makerbot.com>
   3:src/MightyBoard/shared/Packet.hh ****  *
   4:src/MightyBoard/shared/Packet.hh ****  * This program is free software: you can redistribute it and/or modify
   5:src/MightyBoard/shared/Packet.hh ****  * it under the terms of the GNU General Public License as published by
   6:src/MightyBoard/shared/Packet.hh ****  * the Free Software Foundation, either version 3 of the License, or
   7:src/MightyBoard/shared/Packet.hh ****  * (at your option) any later version.
   8:src/MightyBoard/shared/Packet.hh ****  *
   9:src/MightyBoard/shared/Packet.hh ****  * This program is distributed in the hope that it will be useful,
  10:src/MightyBoard/shared/Packet.hh ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:src/MightyBoard/shared/Packet.hh ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:src/MightyBoard/shared/Packet.hh ****  * GNU General Public License for more details.
  13:src/MightyBoard/shared/Packet.hh ****  *
  14:src/MightyBoard/shared/Packet.hh ****  * You should have received a copy of the GNU General Public License
  15:src/MightyBoard/shared/Packet.hh ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>
  16:src/MightyBoard/shared/Packet.hh ****  */
  17:src/MightyBoard/shared/Packet.hh **** 
  18:src/MightyBoard/shared/Packet.hh **** #ifndef SHARED_PACKET_HH_
  19:src/MightyBoard/shared/Packet.hh **** #define SHARED_PACKET_HH_
  20:src/MightyBoard/shared/Packet.hh **** 
  21:src/MightyBoard/shared/Packet.hh **** #include <stdint.h>
  22:src/MightyBoard/shared/Packet.hh **** 
  23:src/MightyBoard/shared/Packet.hh **** extern "C" {
  24:src/MightyBoard/shared/Packet.hh **** #include "comm.h"
  25:src/MightyBoard/shared/Packet.hh **** }
  26:src/MightyBoard/shared/Packet.hh **** 
  27:src/MightyBoard/shared/Packet.hh **** #define START_BYTE 0xD5
  28:src/MightyBoard/shared/Packet.hh **** #define MAX_PACKET_PAYLOAD 32
  29:src/MightyBoard/shared/Packet.hh **** 
  30:src/MightyBoard/shared/Packet.hh **** #define SLAVE_ID_BROADCAST 127
  31:src/MightyBoard/shared/Packet.hh **** 
  32:src/MightyBoard/shared/Packet.hh **** namespace PacketError {
  33:src/MightyBoard/shared/Packet.hh **** enum {
  34:src/MightyBoard/shared/Packet.hh **** 	NO_ERROR,
  35:src/MightyBoard/shared/Packet.hh **** 	NOISE_BYTE,
  36:src/MightyBoard/shared/Packet.hh **** 	EXCEEDED_MAX_LENGTH,
  37:src/MightyBoard/shared/Packet.hh **** 	BAD_CRC,
  38:src/MightyBoard/shared/Packet.hh **** 	PACKET_TIMEOUT,
  39:src/MightyBoard/shared/Packet.hh **** };
  40:src/MightyBoard/shared/Packet.hh **** } // namespace PacketError
  41:src/MightyBoard/shared/Packet.hh **** 
  42:src/MightyBoard/shared/Packet.hh **** /// These are the response codes returned to the requestor
  43:src/MightyBoard/shared/Packet.hh **** /// as the first byte of the response payload.  You can find
  44:src/MightyBoard/shared/Packet.hh **** /// a list of the expected codes in the protocol specification
  45:src/MightyBoard/shared/Packet.hh **** /// document:
  46:src/MightyBoard/shared/Packet.hh **** /// http://docs.google.com/Doc?docid=0AcWKwJ2SAxDzZGd6amZyY2NfMmdtODRnZ2Ri&hl=en
  47:src/MightyBoard/shared/Packet.hh **** typedef enum {
  48:src/MightyBoard/shared/Packet.hh ****         RC_PACKET_ERROR    = 0x80, /* Generic Error. Is this packet simply discarded? */
  49:src/MightyBoard/shared/Packet.hh ****         RC_OK               = 0x81,
  50:src/MightyBoard/shared/Packet.hh ****         RC_BUFFER_OVERFLOW  = 0x82,
  51:src/MightyBoard/shared/Packet.hh ****         RC_CRC_MISMATCH     = 0x83,
  52:src/MightyBoard/shared/Packet.hh ****         RC_PACKET_LENGTH    = 0x84,
  53:src/MightyBoard/shared/Packet.hh ****         RC_CMD_UNSUPPORTED  = 0x85,
  54:src/MightyBoard/shared/Packet.hh ****         RC_EXPECT_MORE      = 0x86,
  55:src/MightyBoard/shared/Packet.hh ****         RC_DOWNSTREAM_TIMEOUT = 0x87,
  56:src/MightyBoard/shared/Packet.hh ****         RC_TOOL_LOCK_TIMEOUT = 0x88,
  57:src/MightyBoard/shared/Packet.hh ****         RC_CANCEL_BUILD		= 0x89, 
  58:src/MightyBoard/shared/Packet.hh ****         RC_BOT_BUILDING		= 0x8A,  // this response is returned if the bot is building from SD card 
  59:src/MightyBoard/shared/Packet.hh ****         RC_BOT_OVERHEAT		= 0x8B,	// if the bot overheats, it will not respond to commands
  60:src/MightyBoard/shared/Packet.hh ****         RC_PACKET_TIMEOUT	= 0x8C
  61:src/MightyBoard/shared/Packet.hh **** } ResponseCode;
  62:src/MightyBoard/shared/Packet.hh **** 
  63:src/MightyBoard/shared/Packet.hh **** /// Convenience function to accept old response codes
  64:src/MightyBoard/shared/Packet.hh **** /// (missing the high bits) as well as the new forms.
  65:src/MightyBoard/shared/Packet.hh **** inline bool rcCompare(uint8_t data, ResponseCode code) {
  66:src/MightyBoard/shared/Packet.hh **** 	return (data & 0x7f) == (code & 0x7f);
  67:src/MightyBoard/shared/Packet.hh **** }
  68:src/MightyBoard/shared/Packet.hh **** 
  69:src/MightyBoard/shared/Packet.hh **** class Packet {
  70:src/MightyBoard/shared/Packet.hh **** protected:
  71:src/MightyBoard/shared/Packet.hh **** 	// packet states
  72:src/MightyBoard/shared/Packet.hh **** 	typedef enum {
  73:src/MightyBoard/shared/Packet.hh **** 		PS_START,
  74:src/MightyBoard/shared/Packet.hh **** 		PS_LEN,
  75:src/MightyBoard/shared/Packet.hh **** 		PS_PAYLOAD,
  76:src/MightyBoard/shared/Packet.hh **** 		PS_CRC,
  77:src/MightyBoard/shared/Packet.hh **** 		PS_LAST
  78:src/MightyBoard/shared/Packet.hh **** 	} PacketState;
  79:src/MightyBoard/shared/Packet.hh **** 
  80:src/MightyBoard/shared/Packet.hh ****     volatile uint8_t length; /// The current length of the payload (data[0] if raw packets)
  81:src/MightyBoard/shared/Packet.hh ****     volatile uint8_t crc; /// The CRC of the current contents of the payload (data[-1] of raw packe
  82:src/MightyBoard/shared/Packet.hh ****     volatile uint8_t payload[MAX_PACKET_PAYLOAD]; /// Data payload (starts at data[2] of raw packet
  83:src/MightyBoard/shared/Packet.hh **** 	volatile uint8_t error_code; // Have any errors cropped up during processing?
  84:src/MightyBoard/shared/Packet.hh **** 	volatile PacketState state;
  85:src/MightyBoard/shared/Packet.hh **** 
  86:src/MightyBoard/shared/Packet.hh **** 
  87:src/MightyBoard/shared/Packet.hh **** 	/// Append a byte and update the CRC
  88:src/MightyBoard/shared/Packet.hh **** 	void appendByte(uint8_t data);
  89:src/MightyBoard/shared/Packet.hh **** 	/// Reset this packet to an empty state
  90:src/MightyBoard/shared/Packet.hh **** 	void reset();
  91:src/MightyBoard/shared/Packet.hh **** 
  92:src/MightyBoard/shared/Packet.hh **** 	void error(uint8_t error_code_in) {
  93:src/MightyBoard/shared/Packet.hh **** 		reset();
  94:src/MightyBoard/shared/Packet.hh **** 		error_code = error_code_in;
  95:src/MightyBoard/shared/Packet.hh **** 	}
  96:src/MightyBoard/shared/Packet.hh **** public:
  97:src/MightyBoard/shared/Packet.hh **** 	uint8_t getLength() const { return length; }
  48              	 .loc 2 97 0
  49 0006 0378     	 ldrb r3,[r0,#0]
  50              	.LBE202:
  51              	.LBE201:
 226:src/MightyBoard/Motherboard/Host.cc **** 	if (from_host.getLength() >= 1) {
  52              	 .loc 1 226 0
  53 0008 002B     	 cmp r3,#0
  54 000a 42D0     	 beq .L10
  55              	.LBB203:
 227:src/MightyBoard/Motherboard/Host.cc **** 		uint8_t command = from_host.read8(0);
  56              	 .loc 1 227 0
  57 000c 0646     	 mov r6,r0
  58 000e 4FF00001 	 mov r1,#0
  59              	.LVL2:
  60 0012 FFF7FEFF 	 bl _ZNK6Packet5read8Eh
  61              	.LVL3:
  62              	.LBB204:
 228:src/MightyBoard/Motherboard/Host.cc **** 		if ((command & 0x80) != 0) {
  63              	 .loc 1 228 0
  64 0016 10F0800F 	 tst r0,#128
  65 001a 3DD0     	 beq .L11
  66              	.LBB205:
 229:src/MightyBoard/Motherboard/Host.cc **** 			// If we're capturing a file to an SD card, we send it to the sdcard module
 230:src/MightyBoard/Motherboard/Host.cc **** 			// for processing.
 231:src/MightyBoard/Motherboard/Host.cc **** 			if (sdcard::isCapturing()) {
  67              	 .loc 1 231 0
  68 001c FFF7FEFF 	 bl _ZN6sdcard11isCapturingEv
  69              	.LVL4:
  70 0020 50B1     	 cbz r0,.L3
 232:src/MightyBoard/Motherboard/Host.cc **** 				sdcard::capturePacket(from_host);
  71              	 .loc 1 232 0
  72 0022 2046     	 mov r0,r4
  73 0024 FFF7FEFF 	 bl _ZN6sdcard13capturePacketERK6Packet
 233:src/MightyBoard/Motherboard/Host.cc **** 				to_host.append8(RC_OK);
  74              	 .loc 1 233 0
  75 0028 2846     	 mov r0,r5
  76 002a 4FF08101 	 mov r1,#129
  77 002e FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 234:src/MightyBoard/Motherboard/Host.cc **** 				return true;
  78              	 .loc 1 234 0
  79 0032 4FF00100 	 mov r0,#1
  80 0036 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
  81              	.L3:
 235:src/MightyBoard/Motherboard/Host.cc **** 			}
 236:src/MightyBoard/Motherboard/Host.cc **** 			if(sdcard::isPlaying() || utility::isPlaying()){
  82              	 .loc 1 236 0
  83 0038 FFF7FEFF 	 bl _ZN6sdcard9isPlayingEv
  84 003c 18B9     	 cbnz r0,.L4
  85              	 .loc 1 236 0 is_stmt 0 discriminator 2
  86 003e FFF7FEFF 	 bl _ZN7utility9isPlayingEv
  87 0042 0028     	 cmp r0,#0
  88 0044 2BD0     	 beq .L5
  89              	.L4:
 237:src/MightyBoard/Motherboard/Host.cc **** 				// ignore action commands if SD card build is playing
 238:src/MightyBoard/Motherboard/Host.cc **** 				// or if ONBOARD script is playing
 239:src/MightyBoard/Motherboard/Host.cc **** 				to_host.append8(RC_BOT_BUILDING);
  90              	 .loc 1 239 0 is_stmt 1 discriminator 4
  91 0046 2846     	 mov r0,r5
  92 0048 4FF08A01 	 mov r1,#138
  93 004c FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 240:src/MightyBoard/Motherboard/Host.cc **** 				return true;
  94              	 .loc 1 240 0 discriminator 4
  95 0050 4FF00100 	 mov r0,#1
  96 0054 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
  97              	.LVL5:
  98              	.L8:
  99              	.LBB206:
 100              	.LBB207:
 101              	.LBB208:
 241:src/MightyBoard/Motherboard/Host.cc **** 			}
 242:src/MightyBoard/Motherboard/Host.cc **** 			
 243:src/MightyBoard/Motherboard/Host.cc **** 			// Queue command, if there's room.
 244:src/MightyBoard/Motherboard/Host.cc **** 			// Turn off interrupts while querying or manipulating the queue!
 245:src/MightyBoard/Motherboard/Host.cc **** //			ATOMIC_BLOCK(ATOMIC_FORCEON) {
 246:src/MightyBoard/Motherboard/Host.cc **** 				const uint8_t command_length = from_host.getLength();
 247:src/MightyBoard/Motherboard/Host.cc **** 				if (command::getRemainingCapacity() >= command_length) {
 248:src/MightyBoard/Motherboard/Host.cc **** 					// Append command to buffer
 249:src/MightyBoard/Motherboard/Host.cc **** 					for (int i = 0; i < command_length; i++) {
 102              	 .loc 1 249 0 discriminator 1
 103 0056 2746     	 mov r7,r4
 104 0058 5CB1     	 cbz r4,.L6
 105              	 .loc 1 249 0 is_stmt 0
 106 005a 4FF00004 	 mov r4,#0
 107              	.LVL6:
 108              	.L7:
 250:src/MightyBoard/Motherboard/Host.cc **** 						command::push(from_host.read8(i));
 109              	 .loc 1 250 0 is_stmt 1 discriminator 2
 110 005e 3046     	 mov r0,r6
 111 0060 E1B2     	 uxtb r1,r4
 112 0062 FFF7FEFF 	 bl _ZNK6Packet5read8Eh
 113 0066 FFF7FEFF 	 bl _ZN7command4pushEh
 249:src/MightyBoard/Motherboard/Host.cc **** 					for (int i = 0; i < command_length; i++) {
 114              	 .loc 1 249 0 discriminator 2
 115 006a 04F10104 	 add r4,r4,#1
 116              	.LVL7:
 117 006e BC42     	 cmp r4,r7
 118 0070 F5DB     	 blt .L7
 119              	.LVL8:
 120              	.L6:
 121              	.LBE208:
 251:src/MightyBoard/Motherboard/Host.cc **** 					}
 252:src/MightyBoard/Motherboard/Host.cc **** 					to_host.append8(RC_OK);
 122              	 .loc 1 252 0
 123 0072 2846     	 mov r0,r5
 124 0074 4FF08101 	 mov r1,#129
 125 0078 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 253:src/MightyBoard/Motherboard/Host.cc **** 				} else {
 254:src/MightyBoard/Motherboard/Host.cc **** 					to_host.append8(RC_BUFFER_OVERFLOW);
 255:src/MightyBoard/Motherboard/Host.cc **** 				}
 256:src/MightyBoard/Motherboard/Host.cc **** //			}
 257:src/MightyBoard/Motherboard/Host.cc **** 			return true;
 126              	 .loc 1 257 0
 127 007c 4FF00100 	 mov r0,#1
 128 0080 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 129              	.L14:
 130              	.LBE207:
 254:src/MightyBoard/Motherboard/Host.cc **** 					to_host.append8(RC_BUFFER_OVERFLOW);
 131              	 .loc 1 254 0
 132 0082 2846     	 mov r0,r5
 133 0084 4FF08201 	 mov r1,#130
 134 0088 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 135              	 .loc 1 257 0
 136 008c 4FF00100 	 mov r0,#1
 137 0090 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 138              	.LVL9:
 139              	.L10:
 140              	.LBE206:
 141              	.LBE205:
 142              	.LBE204:
 143              	.LBE203:
 258:src/MightyBoard/Motherboard/Host.cc **** 		}
 259:src/MightyBoard/Motherboard/Host.cc **** 	}
 260:src/MightyBoard/Motherboard/Host.cc **** 	return false;
 144              	 .loc 1 260 0
 145 0092 4FF00000 	 mov r0,#0
 146              	.LVL10:
 147 0096 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 148              	.LVL11:
 149              	.L11:
 150              	.LBB215:
 151              	.LBB213:
 152 0098 4FF00000 	 mov r0,#0
 153              	.LVL12:
 154              	.LBE213:
 155              	.LBE215:
 156              	.LBE200:
 261:src/MightyBoard/Motherboard/Host.cc **** }
 157              	 .loc 1 261 0
 158 009c F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 159              	.L5:
 160              	.LVL13:
 161              	.LBB217:
 162              	.LBB216:
 163              	.LBB214:
 164              	.LBB212:
 165              	.LBB209:
 166              	.LBB210:
 167              	 .loc 2 97 0
 168 009e 2478     	 ldrb r4,[r4,#0]
 169              	.LVL14:
 170              	.LBE210:
 171              	.LBE209:
 172              	.LBB211:
 247:src/MightyBoard/Motherboard/Host.cc **** 				if (command::getRemainingCapacity() >= command_length) {
 173              	 .loc 1 247 0
 174 00a0 FFF7FEFF 	 bl _ZN7command20getRemainingCapacityEv
 175 00a4 A042     	 cmp r0,r4
 176 00a6 D6D2     	 bcs .L8
 177 00a8 EBE7     	 b .L14
 178              	.LBE211:
 179              	.LBE212:
 180              	.LBE214:
 181              	.LBE216:
 182              	.LBE217:
 183              	 .cfi_endproc
 184              	.LFE119:
 186 00aa 00BF     	 .section .text._ZN4host12heatShutdownEv,"ax",%progbits
 187              	 .align 2
 188              	 .global _ZN4host12heatShutdownEv
 189              	 .thumb
 190              	 .thumb_func
 192              	_ZN4host12heatShutdownEv:
 193              	.LFB120:
 262:src/MightyBoard/Motherboard/Host.cc **** 
 263:src/MightyBoard/Motherboard/Host.cc ****     // alert the host that the bot has had a heat failure
 264:src/MightyBoard/Motherboard/Host.cc **** void heatShutdown(){
 194              	 .loc 1 264 0
 195              	 .cfi_startproc
 196              	 
 197              	 
 198              	 
 265:src/MightyBoard/Motherboard/Host.cc **** 	currentState = HOST_STATE_HEAT_SHUTDOWN;
 199              	 .loc 1 265 0
 200 0000 40F20003 	 movw r3,#:lower16:.LANCHOR0
 201 0004 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 202 0008 4FF00602 	 mov r2,#6
 203 000c 1A70     	 strb r2,[r3,#0]
 266:src/MightyBoard/Motherboard/Host.cc **** 	cancelBuild = true;
 204              	 .loc 1 266 0
 205 000e 40F20003 	 movw r3,#:lower16:.LANCHOR1
 206 0012 C0F20003 	 movt r3,#:upper16:.LANCHOR1
 207 0016 4FF00102 	 mov r2,#1
 208 001a 1A70     	 strb r2,[r3,#0]
 267:src/MightyBoard/Motherboard/Host.cc **** }
 209              	 .loc 1 267 0
 210 001c 7047     	 bx lr
 211              	 .cfi_endproc
 212              	.LFE120:
 214 001e 00BF     	 .section .text._ZN4host18handleNextFilenameERK8InPacketR9OutPacket,"axG",%progbits,_ZN4host18handleNextFilenameERK8InPacketR9OutPacket,comdat
 215              	 .align 2
 216              	 .weak _ZN4host18handleNextFilenameERK8InPacketR9OutPacket
 217              	 .thumb
 218              	 .thumb_func
 220              	_ZN4host18handleNextFilenameERK8InPacketR9OutPacket:
 221              	.LFB130:
 268:src/MightyBoard/Motherboard/Host.cc **** 
 269:src/MightyBoard/Motherboard/Host.cc **** 
 270:src/MightyBoard/Motherboard/Host.cc **** // Received driver version info, and request for fw version info.
 271:src/MightyBoard/Motherboard/Host.cc **** // puts fw version into a reply packet, and send it back
 272:src/MightyBoard/Motherboard/Host.cc **** inline void handleVersion(const InPacket& from_host, OutPacket& to_host) {
 273:src/MightyBoard/Motherboard/Host.cc **** 
 274:src/MightyBoard/Motherboard/Host.cc ****     // Case to give an error on Replicator G versions older than 0025. See footnote 1
 275:src/MightyBoard/Motherboard/Host.cc ****     if(from_host.read16(1)  <=  25   ) {
 276:src/MightyBoard/Motherboard/Host.cc ****         to_host.append8(RC_OK);
 277:src/MightyBoard/Motherboard/Host.cc ****         to_host.append16(0x0000);
 278:src/MightyBoard/Motherboard/Host.cc ****     }
 279:src/MightyBoard/Motherboard/Host.cc ****     else  {
 280:src/MightyBoard/Motherboard/Host.cc ****         to_host.append8(RC_OK);
 281:src/MightyBoard/Motherboard/Host.cc ****         to_host.append16(firmware_version);
 282:src/MightyBoard/Motherboard/Host.cc ****     }
 283:src/MightyBoard/Motherboard/Host.cc **** 
 284:src/MightyBoard/Motherboard/Host.cc **** }
 285:src/MightyBoard/Motherboard/Host.cc **** 
 286:src/MightyBoard/Motherboard/Host.cc **** // Received driver version info, and request for fw version info.
 287:src/MightyBoard/Motherboard/Host.cc **** // puts fw version into a reply packet, and send it back
 288:src/MightyBoard/Motherboard/Host.cc **** inline void handleGetAdvancedVersion(const InPacket& from_host, OutPacket& to_host) {
 289:src/MightyBoard/Motherboard/Host.cc **** 
 290:src/MightyBoard/Motherboard/Host.cc **** 	// we're not doing anything with the host version at the moment
 291:src/MightyBoard/Motherboard/Host.cc **** 	uint16_t host_version = from_host.read16(1);
 292:src/MightyBoard/Motherboard/Host.cc **** 	
 293:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append8(RC_OK);
 294:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append16(firmware_version);
 295:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append16(internal_version);
 296:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append16(0);
 297:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append16(0);
 298:src/MightyBoard/Motherboard/Host.cc **** 
 299:src/MightyBoard/Motherboard/Host.cc **** }
 300:src/MightyBoard/Motherboard/Host.cc **** 
 301:src/MightyBoard/Motherboard/Host.cc ****     // return build name
 302:src/MightyBoard/Motherboard/Host.cc **** inline void handleGetBuildName(const InPacket& from_host, OutPacket& to_host) {
 303:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append8(RC_OK);
 304:src/MightyBoard/Motherboard/Host.cc **** 	for (uint8_t idx = 0; idx < MAX_FILE_LEN; idx++) {
 305:src/MightyBoard/Motherboard/Host.cc **** 	  to_host.append8(buildName[idx]);
 306:src/MightyBoard/Motherboard/Host.cc **** 	  if (buildName[idx] == '\0') { break; }
 307:src/MightyBoard/Motherboard/Host.cc **** 	}
 308:src/MightyBoard/Motherboard/Host.cc **** }
 309:src/MightyBoard/Motherboard/Host.cc **** 
 310:src/MightyBoard/Motherboard/Host.cc **** inline void handleGetBufferSize(const InPacket& from_host, OutPacket& to_host) {
 311:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append8(RC_OK);
 312:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append32(command::getRemainingCapacity());
 313:src/MightyBoard/Motherboard/Host.cc **** }
 314:src/MightyBoard/Motherboard/Host.cc **** 
 315:src/MightyBoard/Motherboard/Host.cc **** inline void handleGetPosition(const InPacket& from_host, OutPacket& to_host) {
 316:src/MightyBoard/Motherboard/Host.cc **** //	ATOMIC_BLOCK(ATOMIC_FORCEON) {
 317:src/MightyBoard/Motherboard/Host.cc **** 		const Point p = planner::getPosition();
 318:src/MightyBoard/Motherboard/Host.cc **** 		to_host.append8(RC_OK);
 319:src/MightyBoard/Motherboard/Host.cc **** 		to_host.append32(p[0]);
 320:src/MightyBoard/Motherboard/Host.cc **** 		to_host.append32(p[1]);
 321:src/MightyBoard/Motherboard/Host.cc **** 		to_host.append32(p[2]);
 322:src/MightyBoard/Motherboard/Host.cc **** 		// From spec:
 323:src/MightyBoard/Motherboard/Host.cc **** 		// endstop status bits: (7-0) : | N/A | N/A | z max | z min | y max | y min | x max | x min |
 324:src/MightyBoard/Motherboard/Host.cc **** 		Motherboard& board = Motherboard::getBoard();
 325:src/MightyBoard/Motherboard/Host.cc **** 		uint8_t endstop_status = steppers::getEndstopStatus();
 326:src/MightyBoard/Motherboard/Host.cc **** 		to_host.append8(endstop_status);
 327:src/MightyBoard/Motherboard/Host.cc **** //	}
 328:src/MightyBoard/Motherboard/Host.cc **** }
 329:src/MightyBoard/Motherboard/Host.cc **** 
 330:src/MightyBoard/Motherboard/Host.cc **** inline void handleGetPositionExt(const InPacket& from_host, OutPacket& to_host) {
 331:src/MightyBoard/Motherboard/Host.cc **** //	ATOMIC_BLOCK(ATOMIC_FORCEON) {
 332:src/MightyBoard/Motherboard/Host.cc **** 		const Point p = planner::getPosition();
 333:src/MightyBoard/Motherboard/Host.cc **** 		to_host.append8(RC_OK);
 334:src/MightyBoard/Motherboard/Host.cc **** 		to_host.append32(p[0]);
 335:src/MightyBoard/Motherboard/Host.cc **** 		to_host.append32(p[1]);
 336:src/MightyBoard/Motherboard/Host.cc **** 		to_host.append32(p[2]);
 337:src/MightyBoard/Motherboard/Host.cc **** #if STEPPER_COUNT > 3
 338:src/MightyBoard/Motherboard/Host.cc **** 		to_host.append32(p[3]);
 339:src/MightyBoard/Motherboard/Host.cc **** 		to_host.append32(p[4]);
 340:src/MightyBoard/Motherboard/Host.cc **** #else
 341:src/MightyBoard/Motherboard/Host.cc **** 		to_host.append32(0);
 342:src/MightyBoard/Motherboard/Host.cc **** 		to_host.append32(0);
 343:src/MightyBoard/Motherboard/Host.cc **** #endif
 344:src/MightyBoard/Motherboard/Host.cc **** 		// From spec:
 345:src/MightyBoard/Motherboard/Host.cc **** 		// endstop status bits: (15-0) : | b max | b min | a max | a min | z max | z min | y max | y min 
 346:src/MightyBoard/Motherboard/Host.cc **** 		Motherboard& board = Motherboard::getBoard();
 347:src/MightyBoard/Motherboard/Host.cc **** 		uint8_t endstop_status = steppers::getEndstopStatus();
 348:src/MightyBoard/Motherboard/Host.cc **** 		
 349:src/MightyBoard/Motherboard/Host.cc **** 		to_host.append16((uint16_t)endstop_status);
 350:src/MightyBoard/Motherboard/Host.cc **** //	}
 351:src/MightyBoard/Motherboard/Host.cc **** }
 352:src/MightyBoard/Motherboard/Host.cc **** 
 353:src/MightyBoard/Motherboard/Host.cc ****     // capture to SD
 354:src/MightyBoard/Motherboard/Host.cc **** inline void handleCaptureToFile(const InPacket& from_host, OutPacket& to_host) {
 355:src/MightyBoard/Motherboard/Host.cc **** 	char *p = (char*)from_host.getData() + 1;
 356:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append8(RC_OK);
 357:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append8(sdcard::startCapture(p));
 358:src/MightyBoard/Motherboard/Host.cc **** }
 359:src/MightyBoard/Motherboard/Host.cc ****     // stop capture to SD
 360:src/MightyBoard/Motherboard/Host.cc **** inline void handleEndCapture(const InPacket& from_host, OutPacket& to_host) {
 361:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append8(RC_OK);
 362:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append32(sdcard::finishCapture());
 363:src/MightyBoard/Motherboard/Host.cc **** 	sdcard::reset();
 364:src/MightyBoard/Motherboard/Host.cc **** }
 365:src/MightyBoard/Motherboard/Host.cc **** 
 366:src/MightyBoard/Motherboard/Host.cc ****     // playback from SD
 367:src/MightyBoard/Motherboard/Host.cc **** inline void handlePlayback(const InPacket& from_host, OutPacket& to_host) {
 368:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append8(RC_OK);
 369:src/MightyBoard/Motherboard/Host.cc **** 	for (int idx = 1; idx < from_host.getLength(); idx++) {
 370:src/MightyBoard/Motherboard/Host.cc **** 		buildName[idx-1] = from_host.read8(idx);
 371:src/MightyBoard/Motherboard/Host.cc **** 	}
 372:src/MightyBoard/Motherboard/Host.cc **** 	buildName[MAX_FILE_LEN-1] = '\0';
 373:src/MightyBoard/Motherboard/Host.cc **** 
 374:src/MightyBoard/Motherboard/Host.cc **** 	uint8_t response = startBuildFromSD();
 375:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append8(response);
 376:src/MightyBoard/Motherboard/Host.cc **** }
 377:src/MightyBoard/Motherboard/Host.cc **** 
 378:src/MightyBoard/Motherboard/Host.cc ****     // retrive SD file names
 379:src/MightyBoard/Motherboard/Host.cc **** inline void handleNextFilename(const InPacket& from_host, OutPacket& to_host) {
 222              	 .loc 1 379 0
 223              	 .cfi_startproc
 224              	 
 225              	 
 226              	.LVL15:
 227 0000 2DE9F843 	 push {r3,r4,r5,r6,r7,r8,r9,lr}
 228              	.LCFI1:
 229              	 .cfi_def_cfa_offset 32
 230              	 .cfi_offset 14,-4
 231              	 .cfi_offset 9,-8
 232              	 .cfi_offset 8,-12
 233              	 .cfi_offset 7,-16
 234              	 .cfi_offset 6,-20
 235              	 .cfi_offset 5,-24
 236              	 .cfi_offset 4,-28
 237              	 .cfi_offset 3,-32
 238 0004 00AF     	 add r7,sp,#0
 239              	.LCFI2:
 240              	 .cfi_def_cfa_register 7
 241 0006 0446     	 mov r4,r0
 242 0008 0D46     	 mov r5,r1
 243              	.LBB218:
 380:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append8(RC_OK);
 381:src/MightyBoard/Motherboard/Host.cc **** 	uint8_t resetFlag = from_host.read8(1);
 382:src/MightyBoard/Motherboard/Host.cc **** 	if (resetFlag != 0) {
 383:src/MightyBoard/Motherboard/Host.cc **** 		sdcard::SdErrorCode e = sdcard::directoryReset();
 384:src/MightyBoard/Motherboard/Host.cc **** 		if (e != sdcard::SD_SUCCESS) {
 385:src/MightyBoard/Motherboard/Host.cc **** 			to_host.append8(e);
 386:src/MightyBoard/Motherboard/Host.cc **** 			to_host.append8(0);
 387:src/MightyBoard/Motherboard/Host.cc **** 			return;
 388:src/MightyBoard/Motherboard/Host.cc **** 		}
 389:src/MightyBoard/Motherboard/Host.cc **** 	}
 390:src/MightyBoard/Motherboard/Host.cc **** 	int MAX_FILE_LEN = MAX_PACKET_PAYLOAD-1;
 391:src/MightyBoard/Motherboard/Host.cc **** 	char fnbuf[MAX_FILE_LEN];
 392:src/MightyBoard/Motherboard/Host.cc **** 	sdcard::SdErrorCode e;
 393:src/MightyBoard/Motherboard/Host.cc **** 	// Ignore dot-files
 394:src/MightyBoard/Motherboard/Host.cc **** 	do {
 395:src/MightyBoard/Motherboard/Host.cc **** 		e = sdcard::directoryNextEntry(fnbuf,MAX_FILE_LEN);
 396:src/MightyBoard/Motherboard/Host.cc **** 		if (fnbuf[0] == '\0') break;
 397:src/MightyBoard/Motherboard/Host.cc **** 	} while (e == sdcard::SD_SUCCESS && fnbuf[0] == '.');
 398:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append8(e);
 399:src/MightyBoard/Motherboard/Host.cc **** 	uint8_t idx;
 400:src/MightyBoard/Motherboard/Host.cc **** 	for (idx = 0; (idx < MAX_FILE_LEN) && (fnbuf[idx] != 0); idx++) {
 244              	 .loc 1 400 0
 245 000a E846     	 mov r8,sp
 380:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append8(RC_OK);
 246              	 .loc 1 380 0
 247 000c 0846     	 mov r0,r1
 248              	.LVL16:
 249 000e 4FF08101 	 mov r1,#129
 250              	.LVL17:
 251 0012 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 252              	.LVL18:
 381:src/MightyBoard/Motherboard/Host.cc **** 	uint8_t resetFlag = from_host.read8(1);
 253              	 .loc 1 381 0
 254 0016 2046     	 mov r0,r4
 255 0018 4FF00101 	 mov r1,#1
 256 001c FFF7FEFF 	 bl _ZNK6Packet5read8Eh
 257              	.LVL19:
 258              	.LBB219:
 382:src/MightyBoard/Motherboard/Host.cc **** 	if (resetFlag != 0) {
 259              	 .loc 1 382 0
 260 0020 60B1     	 cbz r0,.L17
 261              	.LBB220:
 383:src/MightyBoard/Motherboard/Host.cc **** 		sdcard::SdErrorCode e = sdcard::directoryReset();
 262              	 .loc 1 383 0
 263 0022 FFF7FEFF 	 bl _ZN6sdcard14directoryResetEv
 264              	.LVL20:
 384:src/MightyBoard/Motherboard/Host.cc **** 		if (e != sdcard::SD_SUCCESS) {
 265              	 .loc 1 384 0
 266 0026 0146     	 mov r1,r0
 267 0028 40B1     	 cbz r0,.L17
 385:src/MightyBoard/Motherboard/Host.cc **** 			to_host.append8(e);
 268              	 .loc 1 385 0
 269 002a 2846     	 mov r0,r5
 270              	.LVL21:
 271 002c FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 386:src/MightyBoard/Motherboard/Host.cc **** 			to_host.append8(0);
 272              	 .loc 1 386 0
 273 0030 2846     	 mov r0,r5
 274 0032 4FF00001 	 mov r1,#0
 275 0036 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 276 003a 27E0     	 b .L16
 277              	.L17:
 278              	.LVL22:
 279              	.LBE220:
 280              	.LBE219:
 391:src/MightyBoard/Motherboard/Host.cc **** 	char fnbuf[MAX_FILE_LEN];
 281              	 .loc 1 391 0
 282 003c 8AB0     	 sub sp,sp,#40
 283 003e 6C46     	 mov r4,sp
 284              	.LVL23:
 395:src/MightyBoard/Motherboard/Host.cc **** 		e = sdcard::directoryNextEntry(fnbuf,MAX_FILE_LEN);
 285              	 .loc 1 395 0
 286 0040 4FF01F06 	 mov r6,#31
 287 0044 4FF00009 	 mov r9,#0
 288              	.L20:
 289 0048 2046     	 mov r0,r4
 290 004a 3146     	 mov r1,r6
 291 004c 4A46     	 mov r2,r9
 292 004e FFF7FEFF 	 bl _ZN6sdcard18directoryNextEntryEPchPh
 293 0052 0146     	 mov r1,r0
 294              	.LVL24:
 396:src/MightyBoard/Motherboard/Host.cc **** 		if (fnbuf[0] == '\0') break;
 295              	 .loc 1 396 0
 296 0054 2378     	 ldrb r3,[r4,#0]
 297 0056 13B1     	 cbz r3,.L19
 394:src/MightyBoard/Motherboard/Host.cc **** 	do {
 298              	 .loc 1 394 0
 299 0058 08B9     	 cbnz r0,.L19
 394:src/MightyBoard/Motherboard/Host.cc **** 	do {
 300              	 .loc 1 394 0 is_stmt 0 discriminator 1
 301 005a 2E2B     	 cmp r3,#46
 302 005c F4D0     	 beq .L20
 303              	.L19:
 398:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append8(e);
 304              	 .loc 1 398 0 is_stmt 1
 305 005e 2846     	 mov r0,r5
 306              	.LVL25:
 307 0060 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 308              	.LVL26:
 309              	 .loc 1 400 0
 310 0064 4FF00003 	 mov r3,#0
 311 0068 1E46     	 mov r6,r3
 312              	.LVL27:
 313              	.L22:
 314              	 .loc 1 400 0 is_stmt 0 discriminator 2
 315 006a E15C     	 ldrb r1,[r4,r3]
 316 006c 41B1     	 cbz r1,.L21
 401:src/MightyBoard/Motherboard/Host.cc **** 		to_host.append8(fnbuf[idx]);
 317              	 .loc 1 401 0 is_stmt 1 discriminator 5
 318 006e 2846     	 mov r0,r5
 319 0070 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 400:src/MightyBoard/Motherboard/Host.cc **** 	for (idx = 0; (idx < MAX_FILE_LEN) && (fnbuf[idx] != 0); idx++) {
 320              	 .loc 1 400 0 discriminator 5
 321 0074 06F10106 	 add r6,r6,#1
 322 0078 F6B2     	 uxtb r6,r6
 323              	.LVL28:
 324 007a 3346     	 mov r3,r6
 325 007c 1E2E     	 cmp r6,#30
 326 007e F4DD     	 ble .L22
 327              	.LVL29:
 328              	.L21:
 402:src/MightyBoard/Motherboard/Host.cc **** 	}
 403:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append8(0);
 329              	 .loc 1 403 0
 330 0080 2846     	 mov r0,r5
 331 0082 4FF00001 	 mov r1,#0
 332 0086 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 333 008a C546     	 mov sp,r8
 334              	.LVL30:
 335              	.L16:
 336              	.LBE218:
 404:src/MightyBoard/Motherboard/Host.cc **** }
 337              	 .loc 1 404 0
 338 008c BD46     	 mov sp,r7
 339 008e BDE8F883 	 pop {r3,r4,r5,r6,r7,r8,r9,pc}
 340              	 .cfi_endproc
 341              	.LFE130:
 343 0092 00BF     	 .section .text._ZN4host16handleReadEepromERK8InPacketR9OutPacket,"axG",%progbits,_ZN4host16handleReadEepromERK8InPacketR9OutPacket,comdat
 344              	 .align 2
 345              	 .weak _ZN4host16handleReadEepromERK8InPacketR9OutPacket
 346              	 .thumb
 347              	 .thumb_func
 349              	_ZN4host16handleReadEepromERK8InPacketR9OutPacket:
 350              	.LFB133:
 405:src/MightyBoard/Motherboard/Host.cc **** 
 406:src/MightyBoard/Motherboard/Host.cc ****     // pause command response
 407:src/MightyBoard/Motherboard/Host.cc **** inline void handlePause(const InPacket& from_host, OutPacket& to_host) {
 408:src/MightyBoard/Motherboard/Host.cc **** 	/// this command also calls the host::pauseBuild() command
 409:src/MightyBoard/Motherboard/Host.cc **** 	pauseBuild(!command::isPaused());
 410:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append8(RC_OK);
 411:src/MightyBoard/Motherboard/Host.cc **** }
 412:src/MightyBoard/Motherboard/Host.cc **** 
 413:src/MightyBoard/Motherboard/Host.cc ****     // check if steppers are still executing a command
 414:src/MightyBoard/Motherboard/Host.cc **** inline void handleIsFinished(const InPacket& from_host, OutPacket& to_host) {
 415:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append8(RC_OK);
 416:src/MightyBoard/Motherboard/Host.cc **** //	ATOMIC_BLOCK(ATOMIC_FORCEON) {
 417:src/MightyBoard/Motherboard/Host.cc **** 		bool done = !steppers::isRunning() && command::isEmpty();
 418:src/MightyBoard/Motherboard/Host.cc **** 		to_host.append8(done?1:0);
 419:src/MightyBoard/Motherboard/Host.cc **** //	}
 420:src/MightyBoard/Motherboard/Host.cc **** }
 421:src/MightyBoard/Motherboard/Host.cc ****     // read value from eeprom
 422:src/MightyBoard/Motherboard/Host.cc **** inline void handleReadEeprom(const InPacket& from_host, OutPacket& to_host) {
 351              	 .loc 1 422 0
 352              	 .cfi_startproc
 353              	 
 354              	 
 355              	.LVL31:
 356 0000 2DE9F843 	 push {r3,r4,r5,r6,r7,r8,r9,lr}
 357              	.LCFI3:
 358              	 .cfi_def_cfa_offset 32
 359              	 .cfi_offset 14,-4
 360              	 .cfi_offset 9,-8
 361              	 .cfi_offset 8,-12
 362              	 .cfi_offset 7,-16
 363              	 .cfi_offset 6,-20
 364              	 .cfi_offset 5,-24
 365              	 .cfi_offset 4,-28
 366              	 .cfi_offset 3,-32
 367 0004 00AF     	 add r7,sp,#0
 368              	.LCFI4:
 369              	 .cfi_def_cfa_register 7
 370 0006 0546     	 mov r5,r0
 371 0008 0E46     	 mov r6,r1
 372              	.LBB221:
 423:src/MightyBoard/Motherboard/Host.cc **** //	xprintf("handleReadEeprom" " (%s:%d)\n",_F_,_L_);
 424:src/MightyBoard/Motherboard/Host.cc ****     uint16_t offset = from_host.read16(1);
 373              	 .loc 1 424 0
 374 000a 4FF00101 	 mov r1,#1
 375              	.LVL32:
 376 000e FFF7FEFF 	 bl _ZNK6Packet6read16Eh
 377              	.LVL33:
 378 0012 0446     	 mov r4,r0
 379              	.LVL34:
 425:src/MightyBoard/Motherboard/Host.cc ****     uint8_t length = from_host.read8(3);
 380              	 .loc 1 425 0
 381 0014 2846     	 mov r0,r5
 382              	.LVL35:
 383 0016 4FF00301 	 mov r1,#3
 384 001a FFF7FEFF 	 bl _ZNK6Packet5read8Eh
 385 001e 0546     	 mov r5,r0
 386              	.LVL36:
 426:src/MightyBoard/Motherboard/Host.cc ****     uint8_t data[length];
 387              	 .loc 1 426 0
 388 0020 8046     	 mov r8,r0
 389              	.LVL37:
 390 0022 00F10E03 	 add r3,r0,#14
 391 0026 23F00703 	 bic r3,r3,#7
 392 002a ADEB030D 	 sub sp,sp,r3
 427:src/MightyBoard/Motherboard/Host.cc **** //    eeprom_read_block(data, (const void*) offset, length);
 428:src/MightyBoard/Motherboard/Host.cc ****     to_host.append8(RC_OK);
 393              	 .loc 1 428 0
 394 002e 3046     	 mov r0,r6
 395              	.LVL38:
 396 0030 4FF08101 	 mov r1,#129
 397 0034 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 398              	.LVL39:
 399              	.LBB222:
 429:src/MightyBoard/Motherboard/Host.cc ****     for (int i = 0; i < length; i++) {
 400              	 .loc 1 429 0
 401 0038 002D     	 cmp r5,#0
 402 003a 11DD     	 ble .L25
 403 003c 4FF00005 	 mov r5,#0
 404              	.LVL40:
 430:src/MightyBoard/Motherboard/Host.cc **** 		to_host.append8(eeprom::getEeprom8(offset + i,0));
 405              	 .loc 1 430 0
 406 0040 A946     	 mov r9,r5
 407              	.LVL41:
 408              	.L27:
 409              	 .loc 1 430 0 is_stmt 0 discriminator 2
 410 0042 2046     	 mov r0,r4
 411 0044 4946     	 mov r1,r9
 412 0046 FFF7FEFF 	 bl _ZN6eeprom10getEeprom8Eth
 413 004a 0146     	 mov r1,r0
 414 004c 3046     	 mov r0,r6
 415 004e FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 429:src/MightyBoard/Motherboard/Host.cc ****     for (int i = 0; i < length; i++) {
 416              	 .loc 1 429 0 is_stmt 1 discriminator 2
 417 0052 05F10105 	 add r5,r5,#1
 418              	.LVL42:
 419 0056 04F10104 	 add r4,r4,#1
 420 005a A4B2     	 uxth r4,r4
 421 005c A845     	 cmp r8,r5
 422 005e F0DC     	 bgt .L27
 423              	.LVL43:
 424              	.L25:
 425              	.LBE222:
 426              	.LBE221:
 431:src/MightyBoard/Motherboard/Host.cc **** //		to_host.append8(data[i]);
 432:src/MightyBoard/Motherboard/Host.cc ****     }
 433:src/MightyBoard/Motherboard/Host.cc **** }
 427              	 .loc 1 433 0
 428 0060 BD46     	 mov sp,r7
 429 0062 BDE8F883 	 pop {r3,r4,r5,r6,r7,r8,r9,pc}
 430              	 .cfi_endproc
 431              	.LFE133:
 433 0066 00BF     	 .section .text._ZN4host14getMachineNameEv,"ax",%progbits
 434              	 .align 2
 435              	 .global _ZN4host14getMachineNameEv
 436              	 .thumb
 437              	 .thumb_func
 439              	_ZN4host14getMachineNameEv:
 440              	.LFB141:
 434:src/MightyBoard/Motherboard/Host.cc **** 
 435:src/MightyBoard/Motherboard/Host.cc **** /**
 436:src/MightyBoard/Motherboard/Host.cc ****  * writes a chunk of data from a input packet to eeprom
 437:src/MightyBoard/Motherboard/Host.cc ****  */
 438:src/MightyBoard/Motherboard/Host.cc **** inline void handleWriteEeprom(const InPacket& from_host, OutPacket& to_host) {
 439:src/MightyBoard/Motherboard/Host.cc **** //	xprintf("handleWriteEeprom" " (%s:%d)\n",_F_,_L_);
 440:src/MightyBoard/Motherboard/Host.cc ****     uint16_t offset = from_host.read16(1);
 441:src/MightyBoard/Motherboard/Host.cc ****     uint8_t length = from_host.read8(3);
 442:src/MightyBoard/Motherboard/Host.cc **** //	xprintf("%x" " (%s:%d)\n",offset,_F_,_L_);
 443:src/MightyBoard/Motherboard/Host.cc **** //	xprintf("%x" " (%s:%d)\n",length,_F_,_L_);
 444:src/MightyBoard/Motherboard/Host.cc **** //    uint8_t data[length];
 445:src/MightyBoard/Motherboard/Host.cc **** //    eeprom_read_block(data, (const void*) offset, length);
 446:src/MightyBoard/Motherboard/Host.cc ****     for (int i = 0; i < length; i++) {
 447:src/MightyBoard/Motherboard/Host.cc ****     	eeprom::setEeprom8(offset + i, from_host.read8(i + 4));
 448:src/MightyBoard/Motherboard/Host.cc **** //		xprintf("%x %x %c" "\n",EEPROM_START_ADDRESS + offset + i,eeprom_address(EEPROM_START_ADDRESS, 
 449:src/MightyBoard/Motherboard/Host.cc **** //        data[i] = from_host.read8(i + 4);
 450:src/MightyBoard/Motherboard/Host.cc ****     }
 451:src/MightyBoard/Motherboard/Host.cc **** //    ATOMIC_BLOCK(ATOMIC_RESTORESTATE){
 452:src/MightyBoard/Motherboard/Host.cc **** //    	eeprom::save_to_flash();
 453:src/MightyBoard/Motherboard/Host.cc **** //		eeprom_write_block(data, (void*) offset, length);
 454:src/MightyBoard/Motherboard/Host.cc **** //	}
 455:src/MightyBoard/Motherboard/Host.cc ****     to_host.append8(RC_OK);
 456:src/MightyBoard/Motherboard/Host.cc ****     to_host.append8(length);
 457:src/MightyBoard/Motherboard/Host.cc **** }
 458:src/MightyBoard/Motherboard/Host.cc **** 
 459:src/MightyBoard/Motherboard/Host.cc **** enum { // bit assignments
 460:src/MightyBoard/Motherboard/Host.cc **** 	ES_STEPPERS = 0, // stop steppers
 461:src/MightyBoard/Motherboard/Host.cc **** 	ES_COMMANDS = 1  // clean queue
 462:src/MightyBoard/Motherboard/Host.cc **** };
 463:src/MightyBoard/Motherboard/Host.cc **** 
 464:src/MightyBoard/Motherboard/Host.cc ****     // stop steppers and command execution
 465:src/MightyBoard/Motherboard/Host.cc **** inline void handleExtendedStop(const InPacket& from_host, OutPacket& to_host) {
 466:src/MightyBoard/Motherboard/Host.cc **** 	uint8_t flags = from_host.read8(1);
 467:src/MightyBoard/Motherboard/Host.cc **** 	if (flags & _BV(ES_STEPPERS)) {
 468:src/MightyBoard/Motherboard/Host.cc **** 		planner::abort();
 469:src/MightyBoard/Motherboard/Host.cc **** 	}
 470:src/MightyBoard/Motherboard/Host.cc **** 	if (flags & _BV(ES_COMMANDS)) {
 471:src/MightyBoard/Motherboard/Host.cc **** 		command::reset();
 472:src/MightyBoard/Motherboard/Host.cc **** 	}
 473:src/MightyBoard/Motherboard/Host.cc **** 
 474:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append8(RC_OK);
 475:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append8(0);
 476:src/MightyBoard/Motherboard/Host.cc **** }
 477:src/MightyBoard/Motherboard/Host.cc **** 
 478:src/MightyBoard/Motherboard/Host.cc ****     //set build name and build state
 479:src/MightyBoard/Motherboard/Host.cc **** void handleBuildStartNotification(CircularBuffer& buf) {
 480:src/MightyBoard/Motherboard/Host.cc **** 	
 481:src/MightyBoard/Motherboard/Host.cc **** 	uint8_t idx = 0;
 482:src/MightyBoard/Motherboard/Host.cc **** 	char newName[MAX_FILE_LEN];
 483:src/MightyBoard/Motherboard/Host.cc **** 	switch (currentState){
 484:src/MightyBoard/Motherboard/Host.cc **** 		case HOST_STATE_BUILDING_FROM_SD:
 485:src/MightyBoard/Motherboard/Host.cc **** 			do {
 486:src/MightyBoard/Motherboard/Host.cc **** 				newName[idx++] = buf.pop();		
 487:src/MightyBoard/Motherboard/Host.cc **** 			} while (newName[idx-1] != '\0');
 488:src/MightyBoard/Motherboard/Host.cc **** 			if(strcmp(newName, "RepG Build"))
 489:src/MightyBoard/Motherboard/Host.cc **** 				strcpy(buildName, newName);
 490:src/MightyBoard/Motherboard/Host.cc **** 			break;
 491:src/MightyBoard/Motherboard/Host.cc **** 		case HOST_STATE_READY:
 492:src/MightyBoard/Motherboard/Host.cc **** 			currentState = HOST_STATE_BUILDING;
 493:src/MightyBoard/Motherboard/Host.cc **** 		case HOST_STATE_BUILDING_ONBOARD:
 494:src/MightyBoard/Motherboard/Host.cc **** 		case HOST_STATE_BUILDING:
 495:src/MightyBoard/Motherboard/Host.cc **** 			do {
 496:src/MightyBoard/Motherboard/Host.cc **** 				buildName[idx++] = buf.pop();		
 497:src/MightyBoard/Motherboard/Host.cc **** 			} while (buildName[idx-1] != '\0');
 498:src/MightyBoard/Motherboard/Host.cc **** 			break;
 499:src/MightyBoard/Motherboard/Host.cc **** 	}
 500:src/MightyBoard/Motherboard/Host.cc **** 	startPrintTime();
 501:src/MightyBoard/Motherboard/Host.cc **** 	command::clearLineNumber();
 502:src/MightyBoard/Motherboard/Host.cc **** 	buildState = BUILD_RUNNING;
 503:src/MightyBoard/Motherboard/Host.cc **** }
 504:src/MightyBoard/Motherboard/Host.cc **** 
 505:src/MightyBoard/Motherboard/Host.cc ****     // set build state to ready
 506:src/MightyBoard/Motherboard/Host.cc **** void handleBuildStopNotification(uint8_t stopFlags) {
 507:src/MightyBoard/Motherboard/Host.cc **** 	uint8_t flags = stopFlags;
 508:src/MightyBoard/Motherboard/Host.cc **** 
 509:src/MightyBoard/Motherboard/Host.cc **** 	stopPrintTime();
 510:src/MightyBoard/Motherboard/Host.cc **** 	last_print_line = command::getLineNumber();
 511:src/MightyBoard/Motherboard/Host.cc **** 	buildState = BUILD_FINISHED_NORMALLY;
 512:src/MightyBoard/Motherboard/Host.cc **** 	currentState = HOST_STATE_READY;
 513:src/MightyBoard/Motherboard/Host.cc **** }
 514:src/MightyBoard/Motherboard/Host.cc **** 
 515:src/MightyBoard/Motherboard/Host.cc **** /// get current print stats if printing, or last print stats if not printing
 516:src/MightyBoard/Motherboard/Host.cc **** inline void handleGetBuildStats(OutPacket& to_host) {
 517:src/MightyBoard/Motherboard/Host.cc ****         to_host.append8(RC_OK);
 518:src/MightyBoard/Motherboard/Host.cc ****  
 519:src/MightyBoard/Motherboard/Host.cc **** 		uint8_t hours;
 520:src/MightyBoard/Motherboard/Host.cc **** 		uint8_t minutes;
 521:src/MightyBoard/Motherboard/Host.cc **** 		
 522:src/MightyBoard/Motherboard/Host.cc **** 		getPrintTime(hours, minutes);
 523:src/MightyBoard/Motherboard/Host.cc **** 		
 524:src/MightyBoard/Motherboard/Host.cc ****         to_host.append8(buildState);
 525:src/MightyBoard/Motherboard/Host.cc ****         to_host.append8(hours);
 526:src/MightyBoard/Motherboard/Host.cc ****         to_host.append8(minutes);
 527:src/MightyBoard/Motherboard/Host.cc ****         if((buildState == BUILD_RUNNING) || (buildState == BUILD_PAUSED)){
 528:src/MightyBoard/Motherboard/Host.cc **** 			to_host.append32(command::getLineNumber());
 529:src/MightyBoard/Motherboard/Host.cc **** 		} else {
 530:src/MightyBoard/Motherboard/Host.cc **** 			to_host.append32(last_print_line);
 531:src/MightyBoard/Motherboard/Host.cc **** 		}
 532:src/MightyBoard/Motherboard/Host.cc ****         to_host.append32(0);// open spot for filament detect info
 533:src/MightyBoard/Motherboard/Host.cc **** }
 534:src/MightyBoard/Motherboard/Host.cc **** /// get current print stats if printing, or last print stats if not printing
 535:src/MightyBoard/Motherboard/Host.cc **** inline void handleGetBoardStatus(OutPacket& to_host) {
 536:src/MightyBoard/Motherboard/Host.cc **** 	Motherboard& board = Motherboard::getBoard();
 537:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append8(RC_OK);
 538:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append8(board.GetErrorStatus());
 539:src/MightyBoard/Motherboard/Host.cc **** }
 540:src/MightyBoard/Motherboard/Host.cc **** 
 541:src/MightyBoard/Motherboard/Host.cc **** // query packets (non action, not queued)
 542:src/MightyBoard/Motherboard/Host.cc **** bool processQueryPacket(const InPacket& from_host, OutPacket& to_host) {
 543:src/MightyBoard/Motherboard/Host.cc **** 	if (from_host.getLength() >= 1) {
 544:src/MightyBoard/Motherboard/Host.cc **** 		uint8_t command = from_host.read8(0);
 545:src/MightyBoard/Motherboard/Host.cc **** 		if ((command & 0x80) == 0) {
 546:src/MightyBoard/Motherboard/Host.cc **** 			// Is query command.
 547:src/MightyBoard/Motherboard/Host.cc **** 			switch (command) {
 548:src/MightyBoard/Motherboard/Host.cc **** 			case HOST_CMD_VERSION:
 549:src/MightyBoard/Motherboard/Host.cc **** 				handleVersion(from_host,to_host);
 550:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 551:src/MightyBoard/Motherboard/Host.cc **** 			case HOST_CMD_GET_BUILD_NAME:
 552:src/MightyBoard/Motherboard/Host.cc **** 				handleGetBuildName(from_host,to_host);
 553:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 554:src/MightyBoard/Motherboard/Host.cc **** 			case HOST_CMD_INIT:
 555:src/MightyBoard/Motherboard/Host.cc **** 				// There's really nothing we want to do here; we don't want to
 556:src/MightyBoard/Motherboard/Host.cc **** 				// interrupt a running build, for example.
 557:src/MightyBoard/Motherboard/Host.cc **** 				to_host.append8(RC_OK);
 558:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 559:src/MightyBoard/Motherboard/Host.cc **** 			case HOST_CMD_CLEAR_BUFFER: // equivalent at current time
 560:src/MightyBoard/Motherboard/Host.cc **** 			case HOST_CMD_ABORT: // equivalent at current time
 561:src/MightyBoard/Motherboard/Host.cc **** 			case HOST_CMD_RESET:
 562:src/MightyBoard/Motherboard/Host.cc **** 				if (currentState == HOST_STATE_BUILDING
 563:src/MightyBoard/Motherboard/Host.cc **** 						|| currentState == HOST_STATE_BUILDING_FROM_SD
 564:src/MightyBoard/Motherboard/Host.cc **** 						|| currentState == HOST_STATE_BUILDING_ONBOARD) {
 565:src/MightyBoard/Motherboard/Host.cc **** 					Motherboard::getBoard().indicateError(ERR_RESET_DURING_BUILD);
 566:src/MightyBoard/Motherboard/Host.cc **** 				}
 567:src/MightyBoard/Motherboard/Host.cc **** 				do_host_reset = true; // indicate reset after response has been sent
 568:src/MightyBoard/Motherboard/Host.cc **** 				to_host.append8(RC_OK);
 569:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 570:src/MightyBoard/Motherboard/Host.cc **** 			case HOST_CMD_GET_BUFFER_SIZE:
 571:src/MightyBoard/Motherboard/Host.cc **** 				handleGetBufferSize(from_host,to_host);
 572:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 573:src/MightyBoard/Motherboard/Host.cc **** 			case HOST_CMD_GET_POSITION:
 574:src/MightyBoard/Motherboard/Host.cc **** 				handleGetPosition(from_host,to_host);
 575:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 576:src/MightyBoard/Motherboard/Host.cc **** 			case HOST_CMD_GET_POSITION_EXT:
 577:src/MightyBoard/Motherboard/Host.cc **** //				xprintf("HOST_CMD_GET_POSITION_EXT" " (%s:%d)\n",_F_,_L_);
 578:src/MightyBoard/Motherboard/Host.cc **** 				handleGetPositionExt(from_host,to_host);
 579:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 580:src/MightyBoard/Motherboard/Host.cc **** 			case HOST_CMD_CAPTURE_TO_FILE:
 581:src/MightyBoard/Motherboard/Host.cc **** 				handleCaptureToFile(from_host,to_host);
 582:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 583:src/MightyBoard/Motherboard/Host.cc **** 			case HOST_CMD_END_CAPTURE:
 584:src/MightyBoard/Motherboard/Host.cc **** 				handleEndCapture(from_host,to_host);
 585:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 586:src/MightyBoard/Motherboard/Host.cc **** 			case HOST_CMD_PLAYBACK_CAPTURE:
 587:src/MightyBoard/Motherboard/Host.cc **** 				handlePlayback(from_host,to_host);
 588:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 589:src/MightyBoard/Motherboard/Host.cc **** 			case HOST_CMD_NEXT_FILENAME:
 590:src/MightyBoard/Motherboard/Host.cc **** 				handleNextFilename(from_host,to_host);
 591:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 592:src/MightyBoard/Motherboard/Host.cc **** 			case HOST_CMD_PAUSE:
 593:src/MightyBoard/Motherboard/Host.cc **** 				handlePause(from_host,to_host);
 594:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 595:src/MightyBoard/Motherboard/Host.cc **** 			case HOST_CMD_TOOL_QUERY:
 596:src/MightyBoard/Motherboard/Host.cc **** //				xprintf("HOST_CMD_TOOL_QUERY" " (%s:%d)\n",_F_,_L_);
 597:src/MightyBoard/Motherboard/Host.cc **** 				if(processExtruderQueryPacket(from_host,to_host)){
 598:src/MightyBoard/Motherboard/Host.cc **** 					return true;}
 599:src/MightyBoard/Motherboard/Host.cc **** 				break;
 600:src/MightyBoard/Motherboard/Host.cc **** 			case HOST_CMD_IS_FINISHED:
 601:src/MightyBoard/Motherboard/Host.cc **** 				handleIsFinished(from_host,to_host);
 602:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 603:src/MightyBoard/Motherboard/Host.cc **** 			case HOST_CMD_READ_EEPROM:
 604:src/MightyBoard/Motherboard/Host.cc **** 				handleReadEeprom(from_host,to_host);
 605:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 606:src/MightyBoard/Motherboard/Host.cc **** 			case HOST_CMD_WRITE_EEPROM:
 607:src/MightyBoard/Motherboard/Host.cc **** 				handleWriteEeprom(from_host,to_host);
 608:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 609:src/MightyBoard/Motherboard/Host.cc **** 			case HOST_CMD_EXTENDED_STOP:
 610:src/MightyBoard/Motherboard/Host.cc **** 				handleExtendedStop(from_host,to_host);
 611:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 612:src/MightyBoard/Motherboard/Host.cc **** 			case HOST_CMD_BOARD_STATUS:
 613:src/MightyBoard/Motherboard/Host.cc **** 				handleGetBoardStatus(to_host);
 614:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 615:src/MightyBoard/Motherboard/Host.cc **** 			case HOST_CMD_GET_BUILD_STATS:
 616:src/MightyBoard/Motherboard/Host.cc **** 				handleGetBuildStats(to_host);
 617:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 618:src/MightyBoard/Motherboard/Host.cc **** 			case HOST_CMD_ADVANCED_VERSION:
 619:src/MightyBoard/Motherboard/Host.cc **** 				handleGetAdvancedVersion(from_host, to_host);
 620:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 621:src/MightyBoard/Motherboard/Host.cc **** 			}
 622:src/MightyBoard/Motherboard/Host.cc **** 		}
 623:src/MightyBoard/Motherboard/Host.cc **** 	}
 624:src/MightyBoard/Motherboard/Host.cc **** 	return false;
 625:src/MightyBoard/Motherboard/Host.cc **** }
 626:src/MightyBoard/Motherboard/Host.cc **** 
 627:src/MightyBoard/Motherboard/Host.cc **** char* getMachineName() {
 441              	 .loc 1 627 0
 442              	 .cfi_startproc
 443              	 
 444              	 
 445 0000 70B5     	 push {r4,r5,r6,lr}
 446              	.LCFI5:
 447              	 .cfi_def_cfa_offset 16
 448              	 .cfi_offset 14,-4
 449              	 .cfi_offset 6,-8
 450              	 .cfi_offset 5,-12
 451              	 .cfi_offset 4,-16
 452              	.LBB223:
 453              	.LBB224:
 628:src/MightyBoard/Motherboard/Host.cc **** 	// If the machine name hasn't been loaded, load it
 629:src/MightyBoard/Motherboard/Host.cc **** 	if (machineName[0] == 0) {
 454              	 .loc 1 629 0
 455 0002 40F20003 	 movw r3,#:lower16:.LANCHOR2
 456 0006 C0F20003 	 movt r3,#:upper16:.LANCHOR2
 457 000a 1B78     	 ldrb r3,[r3,#0]
 458 000c 1BBB     	 cbnz r3,.L30
 459 000e 144D     	 ldr r5,.L35
 460 0010 4FF02204 	 mov r4,#34
 461              	.LBB225:
 630:src/MightyBoard/Motherboard/Host.cc **** 		for(uint8_t i = 0; i < eeprom_info::MAX_MACHINE_NAME_LEN; i++) {
 631:src/MightyBoard/Motherboard/Host.cc **** 			machineName[i] = eeprom::getEeprom8(eeprom_offsets::MACHINE_NAME+i, 0);
 462              	 .loc 1 631 0
 463 0014 4FF00006 	 mov r6,#0
 464              	.L31:
 465              	 .loc 1 631 0 is_stmt 0 discriminator 2
 466 0018 2046     	 mov r0,r4
 467 001a 3146     	 mov r1,r6
 468 001c FFF7FEFF 	 bl _ZN6eeprom10getEeprom8Eth
 469 0020 05F8010F 	 strb r0,[r5,#1]!
 470 0024 04F10104 	 add r4,r4,#1
 471 0028 A4B2     	 uxth r4,r4
 630:src/MightyBoard/Motherboard/Host.cc **** 		for(uint8_t i = 0; i < eeprom_info::MAX_MACHINE_NAME_LEN; i++) {
 472              	 .loc 1 630 0 is_stmt 1 discriminator 2
 473 002a 322C     	 cmp r4,#50
 474 002c F4D1     	 bne .L31
 475              	.LBE225:
 476              	.LBE224:
 477              	.LBB226:
 632:src/MightyBoard/Motherboard/Host.cc **** 		}
 633:src/MightyBoard/Motherboard/Host.cc **** 	}
 634:src/MightyBoard/Motherboard/Host.cc **** 
 635:src/MightyBoard/Motherboard/Host.cc **** 	// If EEPROM is zero, load in a default. The 0 is there on purpose
 636:src/MightyBoard/Motherboard/Host.cc **** 	// since this fallback should only happen on EEPROM total failure
 637:src/MightyBoard/Motherboard/Host.cc **** 	static PROGMEM prog_uchar defaultMachineName[] =  "The Replicat0r";
 638:src/MightyBoard/Motherboard/Host.cc **** 
 639:src/MightyBoard/Motherboard/Host.cc **** 	if (machineName[0] == 0) {
 478              	 .loc 1 639 0
 479 002e 40F20003 	 movw r3,#:lower16:.LANCHOR2
 480 0032 C0F20003 	 movt r3,#:upper16:.LANCHOR2
 481 0036 1B78     	 ldrb r3,[r3,#0]
 482 0038 6BB9     	 cbnz r3,.L30
 483              	.LBB227:
 640:src/MightyBoard/Motherboard/Host.cc **** 		for(uint8_t i = 0; i < 14; i++) {
 641:src/MightyBoard/Motherboard/Host.cc **** 			machineName[i] = defaultMachineName[i];
 484              	 .loc 1 641 0
 485 003a 40F20000 	 movw r0,#:lower16:.LANCHOR2
 486 003e C0F20000 	 movt r0,#:upper16:.LANCHOR2
 487 0042 40F20001 	 movw r1,#:lower16:.LANCHOR3
 488 0046 C0F20001 	 movt r1,#:upper16:.LANCHOR3
 489              	.L32:
 490              	 .loc 1 641 0 is_stmt 0 discriminator 2
 491 004a 5A5C     	 ldrb r2,[r3,r1]
 492 004c 1A54     	 strb r2,[r3,r0]
 493 004e 03F10103 	 add r3,r3,#1
 640:src/MightyBoard/Motherboard/Host.cc **** 		for(uint8_t i = 0; i < 14; i++) {
 494              	 .loc 1 640 0 is_stmt 1 discriminator 2
 495 0052 0E2B     	 cmp r3,#14
 496 0054 F9D1     	 bne .L32
 497              	.LVL44:
 498              	.L30:
 499              	.LBE227:
 500              	.LBE226:
 501              	.LBE223:
 642:src/MightyBoard/Motherboard/Host.cc **** //			machineName[i] = pgm_read_byte_near(defaultMachineName+i);
 643:src/MightyBoard/Motherboard/Host.cc **** 		}
 644:src/MightyBoard/Motherboard/Host.cc **** 	}
 645:src/MightyBoard/Motherboard/Host.cc **** 
 646:src/MightyBoard/Motherboard/Host.cc **** 	return machineName;
 647:src/MightyBoard/Motherboard/Host.cc **** }
 502              	 .loc 1 647 0
 503 0056 40F20000 	 movw r0,#:lower16:.LANCHOR2
 504 005a C0F20000 	 movt r0,#:upper16:.LANCHOR2
 505 005e 70BD     	 pop {r4,r5,r6,pc}
 506              	.L36:
 507              	 .align 2
 508              	.L35:
 509 0060 FFFFFFFF 	 .word .LANCHOR2-1
 510              	 .cfi_endproc
 511              	.LFE141:
 513              	 .section .text._ZN4host12getBuildNameEv,"ax",%progbits
 514              	 .align 2
 515              	 .global _ZN4host12getBuildNameEv
 516              	 .thumb
 517              	 .thumb_func
 519              	_ZN4host12getBuildNameEv:
 520              	.LFB142:
 648:src/MightyBoard/Motherboard/Host.cc **** 
 649:src/MightyBoard/Motherboard/Host.cc **** char* getBuildName() {
 521              	 .loc 1 649 0
 522              	 .cfi_startproc
 523              	 
 524              	 
 525              	 
 650:src/MightyBoard/Motherboard/Host.cc **** 	return buildName;
 651:src/MightyBoard/Motherboard/Host.cc **** }
 526              	 .loc 1 651 0
 527 0000 40F20000 	 movw r0,#:lower16:.LANCHOR4
 528 0004 C0F20000 	 movt r0,#:upper16:.LANCHOR4
 529 0008 7047     	 bx lr
 530              	 .cfi_endproc
 531              	.LFE142:
 533 000a 00BF     	 .section .text._ZN4host12getHostStateEv,"ax",%progbits
 534              	 .align 2
 535              	 .global _ZN4host12getHostStateEv
 536              	 .thumb
 537              	 .thumb_func
 539              	_ZN4host12getHostStateEv:
 540              	.LFB143:
 652:src/MightyBoard/Motherboard/Host.cc **** 
 653:src/MightyBoard/Motherboard/Host.cc **** HostState getHostState() {
 541              	 .loc 1 653 0
 542              	 .cfi_startproc
 543              	 
 544              	 
 545              	 
 654:src/MightyBoard/Motherboard/Host.cc **** 	return currentState;
 546              	 .loc 1 654 0
 547 0000 40F20003 	 movw r3,#:lower16:.LANCHOR0
 548 0004 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 655:src/MightyBoard/Motherboard/Host.cc **** }
 549              	 .loc 1 655 0
 550 0008 1878     	 ldrb r0,[r3,#0]
 551 000a 7047     	 bx lr
 552              	 .cfi_endproc
 553              	.LFE143:
 555              	 .section .text._ZN4host16startBuildFromSDEv,"ax",%progbits
 556              	 .align 2
 557              	 .global _ZN4host16startBuildFromSDEv
 558              	 .thumb
 559              	 .thumb_func
 561              	_ZN4host16startBuildFromSDEv:
 562              	.LFB144:
 656:src/MightyBoard/Motherboard/Host.cc **** 
 657:src/MightyBoard/Motherboard/Host.cc **** sdcard::SdErrorCode startBuildFromSD() {
 563              	 .loc 1 657 0
 564              	 .cfi_startproc
 565              	 
 566              	 
 567 0000 38B5     	 push {r3,r4,r5,lr}
 568              	.LCFI6:
 569              	 .cfi_def_cfa_offset 16
 570              	 .cfi_offset 14,-4
 571              	 .cfi_offset 5,-8
 572              	 .cfi_offset 4,-12
 573              	 .cfi_offset 3,-16
 574              	.LBB228:
 658:src/MightyBoard/Motherboard/Host.cc **** 	sdcard::SdErrorCode e;
 659:src/MightyBoard/Motherboard/Host.cc **** 
 660:src/MightyBoard/Motherboard/Host.cc **** 	// Attempt to start build
 661:src/MightyBoard/Motherboard/Host.cc **** 	e = sdcard::startPlayback(buildName);
 575              	 .loc 1 661 0
 576 0002 40F20000 	 movw r0,#:lower16:.LANCHOR4
 577 0006 C0F20000 	 movt r0,#:upper16:.LANCHOR4
 578 000a FFF7FEFF 	 bl _ZN6sdcard13startPlaybackEPc
 579              	.LVL45:
 662:src/MightyBoard/Motherboard/Host.cc **** 	if (e != sdcard::SD_SUCCESS) {
 580              	 .loc 1 662 0
 581 000e 0446     	 mov r4,r0
 582 0010 F0B9     	 cbnz r0,.L40
 583              	.LVL46:
 663:src/MightyBoard/Motherboard/Host.cc **** 		// TODO: report error
 664:src/MightyBoard/Motherboard/Host.cc **** 		return e;
 665:src/MightyBoard/Motherboard/Host.cc **** 	}
 666:src/MightyBoard/Motherboard/Host.cc **** 	
 667:src/MightyBoard/Motherboard/Host.cc **** 	// clear heater temps
 668:src/MightyBoard/Motherboard/Host.cc **** 	Motherboard::getBoard().getPlatformHeater().set_target_temperature(0);
 584              	 .loc 1 668 0
 585 0012 104D     	 ldr r5,.L41
 586 0014 2846     	 mov r0,r5
 587              	.LVL47:
 588 0016 4FF00001 	 mov r1,#0
 589 001a FFF7FEFF 	 bl _ZN6Heater22set_target_temperatureEi
 590              	.LVL48:
 669:src/MightyBoard/Motherboard/Host.cc **** 	Motherboard::getBoard().getExtruderBoard(0).getExtruderHeater().set_target_temperature(0);
 591              	 .loc 1 669 0
 592 001e A5F5DE70 	 sub r0,r5,#444
 593 0022 4FF00001 	 mov r1,#0
 594 0026 FFF7FEFF 	 bl _ZN6Heater22set_target_temperatureEi
 595              	.LVL49:
 670:src/MightyBoard/Motherboard/Host.cc **** 	Motherboard::getBoard().getExtruderBoard(1).getExtruderHeater().set_target_temperature(0);
 596              	 .loc 1 670 0
 597 002a A5F1DC00 	 sub r0,r5,#220
 598 002e 4FF00001 	 mov r1,#0
 599 0032 FFF7FEFF 	 bl _ZN6Heater22set_target_temperatureEi
 671:src/MightyBoard/Motherboard/Host.cc **** 	
 672:src/MightyBoard/Motherboard/Host.cc **** 	command::reset();
 600              	 .loc 1 672 0
 601 0036 FFF7FEFF 	 bl _ZN7command5resetEv
 673:src/MightyBoard/Motherboard/Host.cc **** 	steppers::reset();
 602              	 .loc 1 673 0
 603 003a FFF7FEFF 	 bl _ZN8steppers5resetEv
 674:src/MightyBoard/Motherboard/Host.cc **** 	planner::abort();
 604              	 .loc 1 674 0
 605 003e FFF7FEFF 	 bl _ZN7planner5abortEv
 675:src/MightyBoard/Motherboard/Host.cc **** 	
 676:src/MightyBoard/Motherboard/Host.cc **** 
 677:src/MightyBoard/Motherboard/Host.cc **** 	currentState = HOST_STATE_BUILDING_FROM_SD;
 606              	 .loc 1 677 0
 607 0042 40F20003 	 movw r3,#:lower16:.LANCHOR0
 608 0046 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 609 004a 4FF00202 	 mov r2,#2
 610 004e 1A70     	 strb r2,[r3,#0]
 611              	.LVL50:
 612              	.L40:
 613              	.LBE228:
 678:src/MightyBoard/Motherboard/Host.cc **** 
 679:src/MightyBoard/Motherboard/Host.cc **** 	return e;
 680:src/MightyBoard/Motherboard/Host.cc **** }
 614              	 .loc 1 680 0
 615 0050 2046     	 mov r0,r4
 616 0052 38BD     	 pop {r3,r4,r5,pc}
 617              	.L42:
 618              	 .align 2
 619              	.L41:
 620 0054 0C020000 	 .word _ZN11Motherboard11motherboardE+524
 621              	 .cfi_endproc
 622              	.LFE144:
 624              	 .section .text._ZN4host17startOnboardBuildEh,"ax",%progbits
 625              	 .align 2
 626              	 .global _ZN4host17startOnboardBuildEh
 627              	 .thumb
 628              	 .thumb_func
 630              	_ZN4host17startOnboardBuildEh:
 631              	.LFB145:
 681:src/MightyBoard/Motherboard/Host.cc ****     // start build from utility script
 682:src/MightyBoard/Motherboard/Host.cc **** void startOnboardBuild(uint8_t  build){
 632              	 .loc 1 682 0
 633              	 .cfi_startproc
 634              	 
 635              	 
 636              	.LVL51:
 637 0000 08B5     	 push {r3,lr}
 638              	.LCFI7:
 639              	 .cfi_def_cfa_offset 8
 640              	 .cfi_offset 14,-4
 641              	 .cfi_offset 3,-8
 683:src/MightyBoard/Motherboard/Host.cc **** 	
 684:src/MightyBoard/Motherboard/Host.cc **** 	if(utility::startPlayback(build)){
 642              	 .loc 1 684 0
 643 0002 FFF7FEFF 	 bl _ZN7utility13startPlaybackEh
 644              	.LVL52:
 645 0006 30B1     	 cbz r0,.L44
 685:src/MightyBoard/Motherboard/Host.cc **** 		currentState = HOST_STATE_BUILDING_ONBOARD;
 646              	 .loc 1 685 0
 647 0008 40F20003 	 movw r3,#:lower16:.LANCHOR0
 648 000c C0F20003 	 movt r3,#:upper16:.LANCHOR0
 649 0010 4FF00502 	 mov r2,#5
 650 0014 1A70     	 strb r2,[r3,#0]
 651              	.L44:
 686:src/MightyBoard/Motherboard/Host.cc **** 	}
 687:src/MightyBoard/Motherboard/Host.cc **** 	command::reset();
 652              	 .loc 1 687 0
 653 0016 FFF7FEFF 	 bl _ZN7command5resetEv
 688:src/MightyBoard/Motherboard/Host.cc **** 	planner::abort();
 654              	 .loc 1 688 0
 655 001a FFF7FEFF 	 bl _ZN7planner5abortEv
 689:src/MightyBoard/Motherboard/Host.cc **** }
 656              	 .loc 1 689 0
 657 001e 08BD     	 pop {r3,pc}
 658              	 .cfi_endproc
 659              	.LFE145:
 661              	 .section .text._ZN4host10pauseBuildEb,"ax",%progbits
 662              	 .align 2
 663              	 .global _ZN4host10pauseBuildEb
 664              	 .thumb
 665              	 .thumb_func
 667              	_ZN4host10pauseBuildEb:
 668              	.LFB147:
 690:src/MightyBoard/Motherboard/Host.cc **** 
 691:src/MightyBoard/Motherboard/Host.cc **** // Stop the current build, if any
 692:src/MightyBoard/Motherboard/Host.cc **** void stopBuild() {
 693:src/MightyBoard/Motherboard/Host.cc ****     // if building from repG, try to send a cancel msg to repG before reseting 
 694:src/MightyBoard/Motherboard/Host.cc **** 	if(currentState == HOST_STATE_BUILDING)
 695:src/MightyBoard/Motherboard/Host.cc **** 	{	
 696:src/MightyBoard/Motherboard/Host.cc **** 		currentState = HOST_STATE_CANCEL_BUILD;
 697:src/MightyBoard/Motherboard/Host.cc **** 		cancel_timeout.start(1000000); //look for commands from repG for one second before resetting
 698:src/MightyBoard/Motherboard/Host.cc **** 		cancelBuild = true;
 699:src/MightyBoard/Motherboard/Host.cc **** 	}
 700:src/MightyBoard/Motherboard/Host.cc **** 	last_print_line = command::getLineNumber();
 701:src/MightyBoard/Motherboard/Host.cc **** 	stopPrintTime();
 702:src/MightyBoard/Motherboard/Host.cc **** 	do_host_reset = true; // indicate reset after response has been sent
 703:src/MightyBoard/Motherboard/Host.cc **** 	buildState = BUILD_CANCELED;
 704:src/MightyBoard/Motherboard/Host.cc **** }
 705:src/MightyBoard/Motherboard/Host.cc **** 
 706:src/MightyBoard/Motherboard/Host.cc **** /// update state variables if print is paused
 707:src/MightyBoard/Motherboard/Host.cc **** void pauseBuild(bool pause){
 669              	 .loc 1 707 0
 670              	 .cfi_startproc
 671              	 
 672              	 
 673              	.LVL53:
 674 0000 10B5     	 push {r4,lr}
 675              	.LCFI8:
 676              	 .cfi_def_cfa_offset 8
 677              	 .cfi_offset 14,-4
 678              	 .cfi_offset 4,-8
 679 0002 0446     	 mov r4,r0
 708:src/MightyBoard/Motherboard/Host.cc **** 	
 709:src/MightyBoard/Motherboard/Host.cc **** 	/// don't update time or state if we are already in the desired state
 710:src/MightyBoard/Motherboard/Host.cc **** 	if (!(pause == command::isPaused())){
 680              	 .loc 1 710 0
 681 0004 FFF7FEFF 	 bl _ZN7command8isPausedEv
 682              	.LVL54:
 683 0008 A042     	 cmp r0,r4
 684 000a 22D0     	 beq .L45
 711:src/MightyBoard/Motherboard/Host.cc **** 		
 712:src/MightyBoard/Motherboard/Host.cc **** 		command::pause(pause);
 685              	 .loc 1 712 0
 686 000c 2046     	 mov r0,r4
 687 000e FFF7FEFF 	 bl _ZN7command5pauseEb
 713:src/MightyBoard/Motherboard/Host.cc **** 		if(pause){
 688              	 .loc 1 713 0
 689 0012 7CB1     	 cbz r4,.L47
 714:src/MightyBoard/Motherboard/Host.cc **** 			buildState = BUILD_PAUSED;
 690              	 .loc 1 714 0
 691 0014 40F20003 	 movw r3,#:lower16:.LANCHOR5
 692 0018 C0F20003 	 movt r3,#:upper16:.LANCHOR5
 693 001c 4FF00302 	 mov r2,#3
 694 0020 1A70     	 strb r2,[r3,#0]
 715:src/MightyBoard/Motherboard/Host.cc **** 			print_time.pause(true);
 695              	 .loc 1 715 0
 696 0022 40F20000 	 movw r0,#:lower16:.LANCHOR6
 697 0026 C0F20000 	 movt r0,#:upper16:.LANCHOR6
 698 002a 4FF00101 	 mov r1,#1
 699 002e FFF7FEFF 	 bl _ZN7Timeout5pauseEb
 700 0032 10BD     	 pop {r4,pc}
 701              	.L47:
 716:src/MightyBoard/Motherboard/Host.cc **** 		}else{
 717:src/MightyBoard/Motherboard/Host.cc **** 			buildState = BUILD_RUNNING;
 702              	 .loc 1 717 0
 703 0034 40F20003 	 movw r3,#:lower16:.LANCHOR5
 704 0038 C0F20003 	 movt r3,#:upper16:.LANCHOR5
 705 003c 4FF00102 	 mov r2,#1
 706 0040 1A70     	 strb r2,[r3,#0]
 718:src/MightyBoard/Motherboard/Host.cc **** 			print_time.pause(false);
 707              	 .loc 1 718 0
 708 0042 40F20000 	 movw r0,#:lower16:.LANCHOR6
 709 0046 C0F20000 	 movt r0,#:upper16:.LANCHOR6
 710 004a 4FF00001 	 mov r1,#0
 711 004e FFF7FEFF 	 bl _ZN7Timeout5pauseEb
 712              	.L45:
 713 0052 10BD     	 pop {r4,pc}
 714              	 .cfi_endproc
 715              	.LFE147:
 717              	 .section .text._ZN4host14startPrintTimeEv,"ax",%progbits
 718              	 .align 2
 719              	 .global _ZN4host14startPrintTimeEv
 720              	 .thumb
 721              	 .thumb_func
 723              	_ZN4host14startPrintTimeEv:
 724              	.LFB148:
 719:src/MightyBoard/Motherboard/Host.cc **** 		}
 720:src/MightyBoard/Motherboard/Host.cc **** 	}
 721:src/MightyBoard/Motherboard/Host.cc **** }
 722:src/MightyBoard/Motherboard/Host.cc **** 
 723:src/MightyBoard/Motherboard/Host.cc **** void startPrintTime(){
 725              	 .loc 1 723 0
 726              	 .cfi_startproc
 727              	 
 728              	 
 729 0000 08B5     	 push {r3,lr}
 730              	.LCFI9:
 731              	 .cfi_def_cfa_offset 8
 732              	 .cfi_offset 14,-4
 733              	 .cfi_offset 3,-8
 724:src/MightyBoard/Motherboard/Host.cc **** 	print_time.start(ONE_HOUR);
 734              	 .loc 1 724 0
 735 0002 40F20000 	 movw r0,#:lower16:.LANCHOR6
 736 0006 C0F20000 	 movt r0,#:upper16:.LANCHOR6
 737 000a 4FF42441 	 mov r1,#41984
 738 000e CDF29361 	 movt r1,54931
 739 0012 FFF7FEFF 	 bl _ZN7Timeout5startEm
 725:src/MightyBoard/Motherboard/Host.cc **** 	print_time_hours = 0;
 740              	 .loc 1 725 0
 741 0016 40F20003 	 movw r3,#:lower16:.LANCHOR7
 742 001a C0F20003 	 movt r3,#:upper16:.LANCHOR7
 743 001e 4FF00002 	 mov r2,#0
 744 0022 1A70     	 strb r2,[r3,#0]
 726:src/MightyBoard/Motherboard/Host.cc **** }
 745              	 .loc 1 726 0
 746 0024 08BD     	 pop {r3,pc}
 747              	 .cfi_endproc
 748              	.LFE148:
 750 0026 00BF     	 .section .text._ZN4host28handleBuildStartNotificationER19CircularBufferTemplIhE,"ax",%progbits
 751              	 .align 2
 752              	 .global _ZN4host28handleBuildStartNotificationER19CircularBufferTemplIhE
 753              	 .thumb
 754              	 .thumb_func
 756              	_ZN4host28handleBuildStartNotificationER19CircularBufferTemplIhE:
 757              	.LFB136:
 479:src/MightyBoard/Motherboard/Host.cc **** void handleBuildStartNotification(CircularBuffer& buf) {
 758              	 .loc 1 479 0
 759              	 .cfi_startproc
 760              	 
 761              	 
 762              	.LVL55:
 763 0000 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
 764              	.LCFI10:
 765              	 .cfi_def_cfa_offset 24
 766              	 .cfi_offset 14,-4
 767              	 .cfi_offset 8,-8
 768              	 .cfi_offset 7,-12
 769              	 .cfi_offset 6,-16
 770              	 .cfi_offset 5,-20
 771              	 .cfi_offset 4,-24
 772 0004 88B0     	 sub sp,sp,#32
 773              	.LCFI11:
 774              	 .cfi_def_cfa_offset 56
 775              	.LVL56:
 776              	.LBB229:
 483:src/MightyBoard/Motherboard/Host.cc **** 	switch (currentState){
 777              	 .loc 1 483 0
 778 0006 40F20003 	 movw r3,#:lower16:.LANCHOR0
 779 000a C0F20003 	 movt r3,#:upper16:.LANCHOR0
 780 000e 1B78     	 ldrb r3,[r3,#0]
 781 0010 052B     	 cmp r3,#5
 782 0012 00F28580 	 bhi .L50
 783 0016 DFE803F0 	 tbb [pc,r3]
 784              	.L54:
 785 001a 47       	 .byte (.L51-.L54)/2
 786 001b 4E       	 .byte (.L52-.L54)/2
 787 001c 03       	 .byte (.L60-.L54)/2
 788 001d 83       	 .byte (.L50-.L54)/2
 789 001e 83       	 .byte (.L50-.L54)/2
 790 001f 4E       	 .byte (.L52-.L54)/2
 791              	 .align 1
 792              	.L60:
 793 0020 4FF00003 	 mov r3,#0
 794              	.LBB230:
 795              	.LBB231:
 796              	 .file 3 "src/MightyBoard/shared/CircularBuffer.hh"
   1:src/MightyBoard/shared/CircularBuffer.hh **** /*
   2:src/MightyBoard/shared/CircularBuffer.hh ****  * Copyright 2010 by Adam Mayer	 <adam@makerbot.com>
   3:src/MightyBoard/shared/CircularBuffer.hh ****  *
   4:src/MightyBoard/shared/CircularBuffer.hh ****  * This program is free software: you can redistribute it and/or modify
   5:src/MightyBoard/shared/CircularBuffer.hh ****  * it under the terms of the GNU General Public License as published by
   6:src/MightyBoard/shared/CircularBuffer.hh ****  * the Free Software Foundation, either version 3 of the License, or
   7:src/MightyBoard/shared/CircularBuffer.hh ****  * (at your option) any later version.
   8:src/MightyBoard/shared/CircularBuffer.hh ****  *
   9:src/MightyBoard/shared/CircularBuffer.hh ****  * This program is distributed in the hope that it will be useful,
  10:src/MightyBoard/shared/CircularBuffer.hh ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:src/MightyBoard/shared/CircularBuffer.hh ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:src/MightyBoard/shared/CircularBuffer.hh ****  * GNU General Public License for more details.
  13:src/MightyBoard/shared/CircularBuffer.hh ****  *
  14:src/MightyBoard/shared/CircularBuffer.hh ****  * You should have received a copy of the GNU General Public License
  15:src/MightyBoard/shared/CircularBuffer.hh ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>
  16:src/MightyBoard/shared/CircularBuffer.hh ****  */
  17:src/MightyBoard/shared/CircularBuffer.hh **** 
  18:src/MightyBoard/shared/CircularBuffer.hh **** 
  19:src/MightyBoard/shared/CircularBuffer.hh **** #ifndef SHARED_CIRCULAR_BUFFER_HH_
  20:src/MightyBoard/shared/CircularBuffer.hh **** #define SHARED_CIRCULAR_BUFFER_HH_
  21:src/MightyBoard/shared/CircularBuffer.hh **** 
  22:src/MightyBoard/shared/CircularBuffer.hh **** #include <stdint.h>
  23:src/MightyBoard/shared/CircularBuffer.hh **** 
  24:src/MightyBoard/shared/CircularBuffer.hh **** typedef uint16_t BufSizeType;
  25:src/MightyBoard/shared/CircularBuffer.hh **** 
  26:src/MightyBoard/shared/CircularBuffer.hh **** /// A simple, reliable circular buffer implementation.
  27:src/MightyBoard/shared/CircularBuffer.hh **** /// This implementation does not offer any protection from
  28:src/MightyBoard/shared/CircularBuffer.hh **** /// interrupts and code writing over each other!  You must
  29:src/MightyBoard/shared/CircularBuffer.hh **** /// disable interrupts before all accesses and writes to
  30:src/MightyBoard/shared/CircularBuffer.hh **** /// a circular buffer that is updated in an interrupt.
  31:src/MightyBoard/shared/CircularBuffer.hh **** template<typename T>
  32:src/MightyBoard/shared/CircularBuffer.hh **** class CircularBufferTempl {
  33:src/MightyBoard/shared/CircularBuffer.hh **** public:
  34:src/MightyBoard/shared/CircularBuffer.hh **** 	typedef T BufDataType;
  35:src/MightyBoard/shared/CircularBuffer.hh **** private:
  36:src/MightyBoard/shared/CircularBuffer.hh **** 	const BufSizeType size; /// Size of this buffer
  37:src/MightyBoard/shared/CircularBuffer.hh **** 	volatile BufSizeType length; /// Current length of valid buffer data
  38:src/MightyBoard/shared/CircularBuffer.hh **** 	volatile BufSizeType start; /// Current start point of valid bufffer data
  39:src/MightyBoard/shared/CircularBuffer.hh **** 	BufDataType* const data; /// Pointer to buffer data
  40:src/MightyBoard/shared/CircularBuffer.hh **** 	volatile bool overflow; /// Overflow indicator
  41:src/MightyBoard/shared/CircularBuffer.hh **** 	volatile bool underflow; /// Underflow indicator
  42:src/MightyBoard/shared/CircularBuffer.hh **** public:
  43:src/MightyBoard/shared/CircularBuffer.hh **** 	CircularBufferTempl(BufSizeType size_in, BufDataType* data_in) :
  44:src/MightyBoard/shared/CircularBuffer.hh **** 		size(size_in), length(0), start(0), data(data_in), overflow(false),
  45:src/MightyBoard/shared/CircularBuffer.hh **** 				underflow(false) {
  46:src/MightyBoard/shared/CircularBuffer.hh **** 	}
  47:src/MightyBoard/shared/CircularBuffer.hh **** 
  48:src/MightyBoard/shared/CircularBuffer.hh **** 	/// Reset the buffer to its empty state.  All data in
  49:src/MightyBoard/shared/CircularBuffer.hh **** 	/// the buffer will be (effectively) lost.
  50:src/MightyBoard/shared/CircularBuffer.hh **** 	inline void reset() {
  51:src/MightyBoard/shared/CircularBuffer.hh **** 		length = 0;
  52:src/MightyBoard/shared/CircularBuffer.hh **** 		start = 0;
  53:src/MightyBoard/shared/CircularBuffer.hh **** 		overflow = false;
  54:src/MightyBoard/shared/CircularBuffer.hh **** 		underflow = false;
  55:src/MightyBoard/shared/CircularBuffer.hh **** 	}
  56:src/MightyBoard/shared/CircularBuffer.hh **** 	/// Append a byte to the tail of the buffer
  57:src/MightyBoard/shared/CircularBuffer.hh **** 	inline void push(BufDataType b) {
  58:src/MightyBoard/shared/CircularBuffer.hh **** 		if (length < size) {
  59:src/MightyBoard/shared/CircularBuffer.hh **** 			operator[](length) = b;
  60:src/MightyBoard/shared/CircularBuffer.hh **** 			length++;
  61:src/MightyBoard/shared/CircularBuffer.hh **** 		} else {
  62:src/MightyBoard/shared/CircularBuffer.hh **** 			overflow = true;
  63:src/MightyBoard/shared/CircularBuffer.hh **** 		}
  64:src/MightyBoard/shared/CircularBuffer.hh **** 	}
  65:src/MightyBoard/shared/CircularBuffer.hh **** 	/// Pop a byte off the head of the buffer
  66:src/MightyBoard/shared/CircularBuffer.hh **** 	inline BufDataType pop() {
  67:src/MightyBoard/shared/CircularBuffer.hh **** 		if (isEmpty()) {
  68:src/MightyBoard/shared/CircularBuffer.hh **** 			underflow = true;
 797              	 .loc 3 68 0
 798 0024 4FF00106 	 mov r6,#1
  69:src/MightyBoard/shared/CircularBuffer.hh **** 			return BufDataType();
 799              	 .loc 3 69 0
 800 0028 1D46     	 mov r5,r3
 801              	.LVL57:
 802              	.L53:
 803              	.LBE231:
 804              	.LBE230:
 486:src/MightyBoard/Motherboard/Host.cc **** 				newName[idx++] = buf.pop();		
 805              	 .loc 1 486 0 discriminator 1
 806 002a 1C46     	 mov r4,r3
 807              	.LVL58:
 808              	.LBB238:
 809              	.LBB236:
 810              	.LBB232:
 811              	.LBB233:
  70:src/MightyBoard/shared/CircularBuffer.hh **** 		}
  71:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufDataType& popped_byte = operator[](0);
  72:src/MightyBoard/shared/CircularBuffer.hh **** 		start = (start + 1) % size;
  73:src/MightyBoard/shared/CircularBuffer.hh **** 		length--;
  74:src/MightyBoard/shared/CircularBuffer.hh **** 		return popped_byte;
  75:src/MightyBoard/shared/CircularBuffer.hh **** 	}
  76:src/MightyBoard/shared/CircularBuffer.hh **** 
  77:src/MightyBoard/shared/CircularBuffer.hh **** 	/// Pop a number of bytes off the head of the buffer.  If there
  78:src/MightyBoard/shared/CircularBuffer.hh **** 	/// are not enough bytes to complete the pop, pop what we can and
  79:src/MightyBoard/shared/CircularBuffer.hh **** 	/// set the underflow flag.
  80:src/MightyBoard/shared/CircularBuffer.hh **** 	inline void pop(BufSizeType sz) {
  81:src/MightyBoard/shared/CircularBuffer.hh **** 		if (length < sz) {
  82:src/MightyBoard/shared/CircularBuffer.hh **** 			underflow = true;
  83:src/MightyBoard/shared/CircularBuffer.hh **** 			sz = length;
  84:src/MightyBoard/shared/CircularBuffer.hh **** 		}
  85:src/MightyBoard/shared/CircularBuffer.hh **** 		start = (start + sz) % size;
  86:src/MightyBoard/shared/CircularBuffer.hh **** 		length -= sz;
  87:src/MightyBoard/shared/CircularBuffer.hh **** 	}
  88:src/MightyBoard/shared/CircularBuffer.hh **** 
  89:src/MightyBoard/shared/CircularBuffer.hh **** 	/// Get the length of the buffer
  90:src/MightyBoard/shared/CircularBuffer.hh **** 	inline const BufSizeType getLength() const {
  91:src/MightyBoard/shared/CircularBuffer.hh **** 		return length;
  92:src/MightyBoard/shared/CircularBuffer.hh **** 	}
  93:src/MightyBoard/shared/CircularBuffer.hh **** 
  94:src/MightyBoard/shared/CircularBuffer.hh **** 	/// Get the remaining capacity of this buffer
  95:src/MightyBoard/shared/CircularBuffer.hh **** 	inline const BufSizeType getRemainingCapacity() const {
  96:src/MightyBoard/shared/CircularBuffer.hh **** 		return size - length;
  97:src/MightyBoard/shared/CircularBuffer.hh **** 	}
  98:src/MightyBoard/shared/CircularBuffer.hh **** 
  99:src/MightyBoard/shared/CircularBuffer.hh **** 	/// Check if the buffer is empty
 100:src/MightyBoard/shared/CircularBuffer.hh **** 	inline const bool isEmpty() const {
 101:src/MightyBoard/shared/CircularBuffer.hh **** 		return length == 0;
 812              	 .loc 3 101 0 discriminator 1
 813 002c 4288     	 ldrh r2,[r0,#2]
 814 002e 92B2     	 uxth r2,r2
 815              	.LBE233:
 816              	.LBE232:
  67:src/MightyBoard/shared/CircularBuffer.hh **** 		if (isEmpty()) {
 817              	 .loc 3 67 0 discriminator 1
 818 0030 12B9     	 cbnz r2,.L55
 819              	.LVL59:
  68:src/MightyBoard/shared/CircularBuffer.hh **** 			underflow = true;
 820              	 .loc 3 68 0
 821 0032 4673     	 strb r6,[r0,#13]
  69:src/MightyBoard/shared/CircularBuffer.hh **** 			return BufDataType();
 822              	 .loc 3 69 0
 823 0034 2946     	 mov r1,r5
 824 0036 1AE0     	 b .L56
 825              	.L55:
 826              	.LVL60:
 827              	.LBB234:
 828              	.LBB235:
 102:src/MightyBoard/shared/CircularBuffer.hh **** 	}
 103:src/MightyBoard/shared/CircularBuffer.hh **** 	/// Read the buffer directly
 104:src/MightyBoard/shared/CircularBuffer.hh **** 	inline BufDataType& operator[](BufSizeType index) {
 105:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufSizeType actual_index = (index + start) % size;
 829              	 .loc 3 105 0
 830 0038 8188     	 ldrh r1,[r0,#4]
 831 003a 89B2     	 uxth r1,r1
 832 003c 0288     	 ldrh r2,[r0,#0]
 833              	.LVL61:
 834 003e 91FBF2F7 	 sdiv r7,r1,r2
 835 0042 02FB1711 	 mls r1,r2,r7,r1
 836              	.LVL62:
 106:src/MightyBoard/shared/CircularBuffer.hh **** 		return data[actual_index];
 837              	 .loc 3 106 0
 838 0046 8FB2     	 uxth r7,r1
 839 0048 D0F808E0 	 ldr lr,[r0,#8]
 840              	.LBE235:
 841              	.LBE234:
  72:src/MightyBoard/shared/CircularBuffer.hh **** 		start = (start + 1) % size;
 842              	 .loc 3 72 0
 843 004c 8188     	 ldrh r1,[r0,#4]
 844 004e 89B2     	 uxth r1,r1
 845 0050 01F10101 	 add r1,r1,#1
 846 0054 91FBF2FC 	 sdiv ip,r1,r2
 847 0058 02FB1C12 	 mls r2,r2,ip,r1
 848 005c 92B2     	 uxth r2,r2
 849 005e 8280     	 strh r2,[r0,#4]
  73:src/MightyBoard/shared/CircularBuffer.hh **** 		length--;
 850              	 .loc 3 73 0
 851 0060 4288     	 ldrh r2,[r0,#2]
 852 0062 02F1FF32 	 add r2,r2,#-1
 853 0066 92B2     	 uxth r2,r2
 854 0068 4280     	 strh r2,[r0,#2]
  74:src/MightyBoard/shared/CircularBuffer.hh **** 		return popped_byte;
 855              	 .loc 3 74 0
 856 006a 1EF80710 	 ldrb r1,[lr,r7]
 857              	.LVL63:
 858              	.L56:
 859              	.LBE236:
 860              	.LBE238:
 486:src/MightyBoard/Motherboard/Host.cc **** 				newName[idx++] = buf.pop();		
 861              	 .loc 1 486 0
 862 006e 08AF     	 add r7,sp,#32
 863 0070 3A19     	 adds r2,r7,r4
 864 0072 02F8201C 	 strb r1,[r2,#-32]
 865 0076 03F10103 	 add r3,r3,#1
 866              	.LVL64:
 867 007a DBB2     	 uxtb r3,r3
 868              	.LVL65:
 487:src/MightyBoard/Motherboard/Host.cc **** 			} while (newName[idx-1] != '\0');
 869              	 .loc 1 487 0
 870 007c FA18     	 adds r2,r7,r3
 485:src/MightyBoard/Motherboard/Host.cc **** 			do {
 871              	 .loc 1 485 0
 872 007e 12F8212C 	 ldrb r2,[r2,#-33]
 873 0082 002A     	 cmp r2,#0
 874 0084 D1D1     	 bne .L53
 488:src/MightyBoard/Motherboard/Host.cc **** 			if(strcmp(newName, "RepG Build"))
 875              	 .loc 1 488 0
 876 0086 6846     	 mov r0,sp
 877              	.LVL66:
 878 0088 40F20001 	 movw r1,#:lower16:.LC0
 879 008c C0F20001 	 movt r1,#:upper16:.LC0
 880 0090 FFF7FEFF 	 bl strcmp
 881              	.LVL67:
 882 0094 0028     	 cmp r0,#0
 883 0096 43D0     	 beq .L50
 489:src/MightyBoard/Motherboard/Host.cc **** 				strcpy(buildName, newName);
 884              	 .loc 1 489 0
 885 0098 40F20000 	 movw r0,#:lower16:.LANCHOR4
 886 009c C0F20000 	 movt r0,#:upper16:.LANCHOR4
 887 00a0 6946     	 mov r1,sp
 888 00a2 FFF7FEFF 	 bl strcpy
 889 00a6 3BE0     	 b .L50
 890              	.LVL68:
 891              	.L51:
 492:src/MightyBoard/Motherboard/Host.cc **** 			currentState = HOST_STATE_BUILDING;
 892              	 .loc 1 492 0
 893 00a8 40F20003 	 movw r3,#:lower16:.LANCHOR0
 894 00ac C0F20003 	 movt r3,#:upper16:.LANCHOR0
 895 00b0 4FF00102 	 mov r2,#1
 896 00b4 1A70     	 strb r2,[r3,#0]
 897              	.L52:
 898              	.LBB239:
 899              	.LBB237:
  69:src/MightyBoard/shared/CircularBuffer.hh **** 			return BufDataType();
 900              	 .loc 3 69 0 discriminator 1
 901 00b6 4FF00003 	 mov r3,#0
 902              	.LBE237:
 903              	.LBE239:
 904              	.LBB240:
 905              	.LBB241:
  68:src/MightyBoard/shared/CircularBuffer.hh **** 			underflow = true;
 906              	 .loc 3 68 0 discriminator 1
 907 00ba 4FF00107 	 mov r7,#1
  69:src/MightyBoard/shared/CircularBuffer.hh **** 			return BufDataType();
 908              	 .loc 3 69 0 discriminator 1
 909 00be 1E46     	 mov r6,r3
 910              	.LBE241:
 911              	.LBE240:
 496:src/MightyBoard/Motherboard/Host.cc **** 				buildName[idx++] = buf.pop();		
 912              	 .loc 1 496 0 discriminator 1
 913 00c0 40F20001 	 movw r1,#:lower16:.LANCHOR4
 914 00c4 C0F20001 	 movt r1,#:upper16:.LANCHOR4
 915              	.LVL69:
 916              	.L59:
 917 00c8 1C46     	 mov r4,r3
 918              	.LVL70:
 919              	.LBB247:
 920              	.LBB246:
 921              	.LBB242:
 922              	.LBB243:
 101:src/MightyBoard/shared/CircularBuffer.hh **** 		return length == 0;
 923              	 .loc 3 101 0 discriminator 1
 924 00ca 4288     	 ldrh r2,[r0,#2]
 925 00cc 92B2     	 uxth r2,r2
 926              	.LBE243:
 927              	.LBE242:
  67:src/MightyBoard/shared/CircularBuffer.hh **** 		if (isEmpty()) {
 928              	 .loc 3 67 0 discriminator 1
 929 00ce 12B9     	 cbnz r2,.L57
 930              	.LVL71:
  68:src/MightyBoard/shared/CircularBuffer.hh **** 			underflow = true;
 931              	 .loc 3 68 0
 932 00d0 4773     	 strb r7,[r0,#13]
  69:src/MightyBoard/shared/CircularBuffer.hh **** 			return BufDataType();
 933              	 .loc 3 69 0
 934 00d2 3246     	 mov r2,r6
 935 00d4 1BE0     	 b .L58
 936              	.L57:
 937              	.LVL72:
 938              	.LBB244:
 939              	.LBB245:
 105:src/MightyBoard/shared/CircularBuffer.hh **** 		const BufSizeType actual_index = (index + start) % size;
 940              	 .loc 3 105 0
 941 00d6 8588     	 ldrh r5,[r0,#4]
 942 00d8 ADB2     	 uxth r5,r5
 943 00da 0288     	 ldrh r2,[r0,#0]
 944              	.LVL73:
 945 00dc 95FBF2FE 	 sdiv lr,r5,r2
 946 00e0 02FB1E55 	 mls r5,r2,lr,r5
 947              	.LVL74:
 948              	 .loc 3 106 0
 949 00e4 1FFA85FE 	 uxth lr,r5
 950 00e8 D0F808C0 	 ldr ip,[r0,#8]
 951              	.LBE245:
 952              	.LBE244:
  72:src/MightyBoard/shared/CircularBuffer.hh **** 		start = (start + 1) % size;
 953              	 .loc 3 72 0
 954 00ec 8588     	 ldrh r5,[r0,#4]
 955 00ee ADB2     	 uxth r5,r5
 956 00f0 05F10105 	 add r5,r5,#1
 957 00f4 95FBF2F8 	 sdiv r8,r5,r2
 958 00f8 02FB1852 	 mls r2,r2,r8,r5
 959 00fc 92B2     	 uxth r2,r2
 960 00fe 8280     	 strh r2,[r0,#4]
  73:src/MightyBoard/shared/CircularBuffer.hh **** 		length--;
 961              	 .loc 3 73 0
 962 0100 4288     	 ldrh r2,[r0,#2]
 963 0102 02F1FF32 	 add r2,r2,#-1
 964 0106 92B2     	 uxth r2,r2
 965 0108 4280     	 strh r2,[r0,#2]
  74:src/MightyBoard/shared/CircularBuffer.hh **** 		return popped_byte;
 966              	 .loc 3 74 0
 967 010a 1CF80E20 	 ldrb r2,[ip,lr]
 968              	.LVL75:
 969              	.L58:
 970              	.LBE246:
 971              	.LBE247:
 496:src/MightyBoard/Motherboard/Host.cc **** 				buildName[idx++] = buf.pop();		
 972              	 .loc 1 496 0
 973 010e 0A55     	 strb r2,[r1,r4]
 974 0110 03F10103 	 add r3,r3,#1
 975              	.LVL76:
 976 0114 DBB2     	 uxtb r3,r3
 977              	.LVL77:
 497:src/MightyBoard/Motherboard/Host.cc **** 			} while (buildName[idx-1] != '\0');
 978              	 .loc 1 497 0
 979 0116 CA18     	 adds r2,r1,r3
 495:src/MightyBoard/Motherboard/Host.cc **** 			do {
 980              	 .loc 1 495 0
 981 0118 12F8012C 	 ldrb r2,[r2,#-1]
 982 011c 002A     	 cmp r2,#0
 983 011e D3D1     	 bne .L59
 984              	.LVL78:
 985              	.L50:
 500:src/MightyBoard/Motherboard/Host.cc **** 	startPrintTime();
 986              	 .loc 1 500 0
 987 0120 FFF7FEFF 	 bl _ZN4host14startPrintTimeEv
 501:src/MightyBoard/Motherboard/Host.cc **** 	command::clearLineNumber();
 988              	 .loc 1 501 0
 989 0124 FFF7FEFF 	 bl _ZN7command15clearLineNumberEv
 502:src/MightyBoard/Motherboard/Host.cc **** 	buildState = BUILD_RUNNING;
 990              	 .loc 1 502 0
 991 0128 40F20003 	 movw r3,#:lower16:.LANCHOR5
 992 012c C0F20003 	 movt r3,#:upper16:.LANCHOR5
 993 0130 4FF00102 	 mov r2,#1
 994 0134 1A70     	 strb r2,[r3,#0]
 995              	.LBE229:
 503:src/MightyBoard/Motherboard/Host.cc **** }
 996              	 .loc 1 503 0
 997 0136 08B0     	 add sp,sp,#32
 998 0138 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 999              	 .cfi_endproc
 1000              	.LFE136:
 1002              	 .section .text._ZN4host15managePrintTimeEv,"ax",%progbits
 1003              	 .align 2
 1004              	 .global _ZN4host15managePrintTimeEv
 1005              	 .thumb
 1006              	 .thumb_func
 1008              	_ZN4host15managePrintTimeEv:
 1009              	.LFB150:
 727:src/MightyBoard/Motherboard/Host.cc **** 
 728:src/MightyBoard/Motherboard/Host.cc **** void stopPrintTime(){
 729:src/MightyBoard/Motherboard/Host.cc **** 	
 730:src/MightyBoard/Motherboard/Host.cc **** 	getPrintTime(last_print_hours, last_print_minutes);
 731:src/MightyBoard/Motherboard/Host.cc **** 	eeprom::updateBuildTime(last_print_hours, last_print_minutes);
 732:src/MightyBoard/Motherboard/Host.cc **** 	print_time = Timeout();
 733:src/MightyBoard/Motherboard/Host.cc **** 	print_time_hours = 0;
 734:src/MightyBoard/Motherboard/Host.cc **** }
 735:src/MightyBoard/Motherboard/Host.cc **** 
 736:src/MightyBoard/Motherboard/Host.cc **** void managePrintTime(){
 1010              	 .loc 1 736 0
 1011              	 .cfi_startproc
 1012              	 
 1013              	 
 1014 0000 08B5     	 push {r3,lr}
 1015              	.LCFI12:
 1016              	 .cfi_def_cfa_offset 8
 1017              	 .cfi_offset 14,-4
 1018              	 .cfi_offset 3,-8
 737:src/MightyBoard/Motherboard/Host.cc **** 
 738:src/MightyBoard/Motherboard/Host.cc **** 	/// print time is precise to the host loop frequency 
 739:src/MightyBoard/Motherboard/Host.cc **** 	if (print_time.hasElapsed()){
 1019              	 .loc 1 739 0
 1020 0002 40F20000 	 movw r0,#:lower16:.LANCHOR6
 1021 0006 C0F20000 	 movt r0,#:upper16:.LANCHOR6
 1022 000a FFF7FEFF 	 bl _ZN7Timeout10hasElapsedEv
 1023 000e 88B1     	 cbz r0,.L63
 740:src/MightyBoard/Motherboard/Host.cc **** 		print_time.start(ONE_HOUR);
 1024              	 .loc 1 740 0
 1025 0010 40F20000 	 movw r0,#:lower16:.LANCHOR6
 1026 0014 C0F20000 	 movt r0,#:upper16:.LANCHOR6
 1027 0018 4FF42441 	 mov r1,#41984
 1028 001c CDF29361 	 movt r1,54931
 1029 0020 FFF7FEFF 	 bl _ZN7Timeout5startEm
 741:src/MightyBoard/Motherboard/Host.cc **** 		print_time_hours++;
 1030              	 .loc 1 741 0
 1031 0024 40F20003 	 movw r3,#:lower16:.LANCHOR7
 1032 0028 C0F20003 	 movt r3,#:upper16:.LANCHOR7
 1033 002c 1A78     	 ldrb r2,[r3,#0]
 1034 002e 02F10102 	 add r2,r2,#1
 1035 0032 1A70     	 strb r2,[r3,#0]
 1036              	.L63:
 1037 0034 08BD     	 pop {r3,pc}
 1038              	 .cfi_endproc
 1039              	.LFE150:
 1041 0036 00BF     	 .section .text._ZN4host12getPrintTimeERhS0_,"ax",%progbits
 1042              	 .align 2
 1043              	 .global _ZN4host12getPrintTimeERhS0_
 1044              	 .thumb
 1045              	 .thumb_func
 1047              	_ZN4host12getPrintTimeERhS0_:
 1048              	.LFB151:
 742:src/MightyBoard/Motherboard/Host.cc **** 	}
 743:src/MightyBoard/Motherboard/Host.cc **** }
 744:src/MightyBoard/Motherboard/Host.cc **** 
 745:src/MightyBoard/Motherboard/Host.cc **** /// returns time hours and minutes since the start of the print
 746:src/MightyBoard/Motherboard/Host.cc **** void getPrintTime(uint8_t& hours, uint8_t& minutes){
 1049              	 .loc 1 746 0
 1050              	 .cfi_startproc
 1051              	 
 1052              	 
 1053              	.LVL79:
 1054 0000 10B5     	 push {r4,lr}
 1055              	.LCFI13:
 1056              	 .cfi_def_cfa_offset 8
 1057              	 .cfi_offset 14,-4
 1058              	 .cfi_offset 4,-8
 1059 0002 0C46     	 mov r4,r1
 1060              	.LVL80:
 1061              	.LBB248:
 1062              	.LBB249:
 1063              	 .file 4 "src/MightyBoard/shared/Timeout.hh"
   1:src/MightyBoard/shared/Timeout.hh **** /*
   2:src/MightyBoard/shared/Timeout.hh ****  * Copyright 2010 by Adam Mayer	 <adam@makerbot.com>
   3:src/MightyBoard/shared/Timeout.hh ****  *
   4:src/MightyBoard/shared/Timeout.hh ****  * This program is free software: you can redistribute it and/or modify
   5:src/MightyBoard/shared/Timeout.hh ****  * it under the terms of the GNU General Public License as published by
   6:src/MightyBoard/shared/Timeout.hh ****  * the Free Software Foundation, either version 3 of the License, or
   7:src/MightyBoard/shared/Timeout.hh ****  * (at your option) any later version.
   8:src/MightyBoard/shared/Timeout.hh ****  *
   9:src/MightyBoard/shared/Timeout.hh ****  * This program is distributed in the hope that it will be useful,
  10:src/MightyBoard/shared/Timeout.hh ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:src/MightyBoard/shared/Timeout.hh ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:src/MightyBoard/shared/Timeout.hh ****  * GNU General Public License for more details.
  13:src/MightyBoard/shared/Timeout.hh ****  *
  14:src/MightyBoard/shared/Timeout.hh ****  * You should have received a copy of the GNU General Public License
  15:src/MightyBoard/shared/Timeout.hh ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>
  16:src/MightyBoard/shared/Timeout.hh ****  */
  17:src/MightyBoard/shared/Timeout.hh **** 
  18:src/MightyBoard/shared/Timeout.hh **** #ifndef TIMEOUT_HH_
  19:src/MightyBoard/shared/Timeout.hh **** #define TIMEOUT_HH_
  20:src/MightyBoard/shared/Timeout.hh **** 
  21:src/MightyBoard/shared/Timeout.hh **** #include <stdint.h>
  22:src/MightyBoard/shared/Timeout.hh **** #include "Types.hh"
  23:src/MightyBoard/shared/Timeout.hh **** 
  24:src/MightyBoard/shared/Timeout.hh **** /// The timeout object is a simple 1-shot timer, which can be used to schedule a low-frequency
  25:src/MightyBoard/shared/Timeout.hh **** /// event such as polling a temperature sensor. To start a timeout, call the #start() function with
  26:src/MightyBoard/shared/Timeout.hh **** /// the minimum number of microseconds to wait before
  27:src/MightyBoard/shared/Timeout.hh **** ///
  28:src/MightyBoard/shared/Timeout.hh **** /// Timeout objects maintain timestamps and check the universal clock to figure out when they've
  29:src/MightyBoard/shared/Timeout.hh **** /// elapsed.  Resolution is at best that of the system interval.  Maximum timeout length is
  30:src/MightyBoard/shared/Timeout.hh **** /// 4294967295 microseconds.
  31:src/MightyBoard/shared/Timeout.hh **** /// Timeouts must be checked before the maximum timeout length to remain valid 
  32:src/MightyBoard/shared/Timeout.hh **** /// After a timeout has elapsed, it can not go back to a valid state without being explicitly reset
  33:src/MightyBoard/shared/Timeout.hh **** /// \ingroup SoftwareLibraries
  34:src/MightyBoard/shared/Timeout.hh **** class Timeout {
  35:src/MightyBoard/shared/Timeout.hh **** private:
  36:src/MightyBoard/shared/Timeout.hh ****         bool active;                    ///< True if the timeout object is actively counting down.
  37:src/MightyBoard/shared/Timeout.hh ****         bool elapsed;                   ///< True if the timeout object has elapsed.
  38:src/MightyBoard/shared/Timeout.hh ****         bool is_paused;					///< True if the timeout object is paused
  39:src/MightyBoard/shared/Timeout.hh **** 
  40:src/MightyBoard/shared/Timeout.hh ****         //TODO: Instead of storing start and duration, precompute and store the elapse time.
  41:src/MightyBoard/shared/Timeout.hh **** 	micros_t start_stamp_micros;
  42:src/MightyBoard/shared/Timeout.hh **** 	micros_t duration_micros;
  43:src/MightyBoard/shared/Timeout.hh **** 	micros_t pause_micros;
  44:src/MightyBoard/shared/Timeout.hh **** public:
  45:src/MightyBoard/shared/Timeout.hh ****         /// Instantiate a new timeout object.
  46:src/MightyBoard/shared/Timeout.hh **** 	Timeout();
  47:src/MightyBoard/shared/Timeout.hh **** 
  48:src/MightyBoard/shared/Timeout.hh ****         /// Start a new timeout cycle that will elapse after the given amount of time.
  49:src/MightyBoard/shared/Timeout.hh ****         /// \param [in] duration_micros Microseconds until the timeout cycle should elapse.
  50:src/MightyBoard/shared/Timeout.hh **** 	void start(micros_t duration_micros);
  51:src/MightyBoard/shared/Timeout.hh **** 
  52:src/MightyBoard/shared/Timeout.hh ****         /// Test whether the current timeout cycle has elapsed. When called, this function will
  53:src/MightyBoard/shared/Timeout.hh ****         /// compare the system time to the calculated time that the timeout should expire, and
  54:src/MightyBoard/shared/Timeout.hh ****         /// if it has, the timer is marked as elapsed and not active.
  55:src/MightyBoard/shared/Timeout.hh ****         /// \return True if the timeout has elapsed.
  56:src/MightyBoard/shared/Timeout.hh **** 	bool hasElapsed();
  57:src/MightyBoard/shared/Timeout.hh **** 
  58:src/MightyBoard/shared/Timeout.hh ****         ///
  59:src/MightyBoard/shared/Timeout.hh ****         /// \return True if the timeout is still running.
  60:src/MightyBoard/shared/Timeout.hh **** 	bool isActive() const { return active; }
 1064              	 .loc 4 60 0
 1065 0004 40F20003 	 movw r3,#:lower16:.LANCHOR6
 1066 0008 C0F20003 	 movt r3,#:upper16:.LANCHOR6
 1067              	.LBE249:
 1068              	.LBE248:
 747:src/MightyBoard/Motherboard/Host.cc **** 	
 748:src/MightyBoard/Motherboard/Host.cc **** 	if(!print_time.isActive()){
 1069              	 .loc 1 748 0
 1070 000c 1B78     	 ldrb r3,[r3,#0]
 1071 000e 63B9     	 cbnz r3,.L66
 749:src/MightyBoard/Motherboard/Host.cc **** 		hours = last_print_hours;
 1072              	 .loc 1 749 0
 1073 0010 40F20003 	 movw r3,#:lower16:.LANCHOR8
 1074 0014 C0F20003 	 movt r3,#:upper16:.LANCHOR8
 1075 0018 1B78     	 ldrb r3,[r3,#0]
 1076 001a 0370     	 strb r3,[r0,#0]
 750:src/MightyBoard/Motherboard/Host.cc **** 		minutes = last_print_minutes;
 1077              	 .loc 1 750 0
 1078 001c 40F20003 	 movw r3,#:lower16:.LANCHOR9
 1079 0020 C0F20003 	 movt r3,#:upper16:.LANCHOR9
 1080 0024 1B78     	 ldrb r3,[r3,#0]
 1081 0026 0B70     	 strb r3,[r1,#0]
 1082 0028 10BD     	 pop {r4,pc}
 1083              	.L66:
 751:src/MightyBoard/Motherboard/Host.cc **** 	} else{
 752:src/MightyBoard/Motherboard/Host.cc **** 		hours = print_time_hours;
 1084              	 .loc 1 752 0
 1085 002a 40F20003 	 movw r3,#:lower16:.LANCHOR7
 1086 002e C0F20003 	 movt r3,#:upper16:.LANCHOR7
 1087 0032 1B78     	 ldrb r3,[r3,#0]
 1088 0034 0370     	 strb r3,[r0,#0]
 753:src/MightyBoard/Motherboard/Host.cc **** 		minutes = print_time.getCurrentElapsed() / 60000000;
 1089              	 .loc 1 753 0
 1090 0036 40F20000 	 movw r0,#:lower16:.LANCHOR6
 1091              	.LVL81:
 1092 003a C0F20000 	 movt r0,#:upper16:.LANCHOR6
 1093 003e FFF7FEFF 	 bl _ZN7Timeout17getCurrentElapsedEv
 1094              	.LVL82:
 1095 0042 4FEA1020 	 lsr r0,r0,#8
 1096 0046 45F2C743 	 movw r3,#21703
 1097 004a C0F21E13 	 movt r3,286
 1098 004e A3FB0023 	 umull r2,r3,r3,r0
 1099 0052 4FEA9323 	 lsr r3,r3,#10
 1100 0056 2370     	 strb r3,[r4,#0]
 1101 0058 10BD     	 pop {r4,pc}
 1102              	 .cfi_endproc
 1103              	.LFE151:
 1105 005a 00BF     	 .section .text._ZN4host13stopPrintTimeEv,"ax",%progbits
 1106              	 .align 2
 1107              	 .global _ZN4host13stopPrintTimeEv
 1108              	 .thumb
 1109              	 .thumb_func
 1111              	_ZN4host13stopPrintTimeEv:
 1112              	.LFB149:
 728:src/MightyBoard/Motherboard/Host.cc **** void stopPrintTime(){
 1113              	 .loc 1 728 0
 1114              	 .cfi_startproc
 1115              	 
 1116              	 
 1117 0000 30B5     	 push {r4,r5,lr}
 1118              	.LCFI14:
 1119              	 .cfi_def_cfa_offset 12
 1120              	 .cfi_offset 14,-4
 1121              	 .cfi_offset 5,-8
 1122              	 .cfi_offset 4,-12
 1123 0002 85B0     	 sub sp,sp,#20
 1124              	.LCFI15:
 1125              	 .cfi_def_cfa_offset 32
 730:src/MightyBoard/Motherboard/Host.cc **** 	getPrintTime(last_print_hours, last_print_minutes);
 1126              	 .loc 1 730 0
 1127 0004 40F20005 	 movw r5,#:lower16:.LANCHOR8
 1128 0008 C0F20005 	 movt r5,#:upper16:.LANCHOR8
 1129 000c 40F20004 	 movw r4,#:lower16:.LANCHOR9
 1130 0010 C0F20004 	 movt r4,#:upper16:.LANCHOR9
 1131 0014 2846     	 mov r0,r5
 1132 0016 2146     	 mov r1,r4
 1133 0018 FFF7FEFF 	 bl _ZN4host12getPrintTimeERhS0_
 731:src/MightyBoard/Motherboard/Host.cc **** 	eeprom::updateBuildTime(last_print_hours, last_print_minutes);
 1134              	 .loc 1 731 0
 1135 001c 2878     	 ldrb r0,[r5,#0]
 1136 001e 2178     	 ldrb r1,[r4,#0]
 1137 0020 FFF7FEFF 	 bl _ZN6eeprom15updateBuildTimeEhh
 732:src/MightyBoard/Motherboard/Host.cc **** 	print_time = Timeout();
 1138              	 .loc 1 732 0
 1139 0024 6846     	 mov r0,sp
 1140 0026 FFF7FEFF 	 bl _ZN7TimeoutC1Ev
 1141 002a 40F20005 	 movw r5,#:lower16:.LANCHOR6
 1142 002e C0F20005 	 movt r5,#:upper16:.LANCHOR6
 1143 0032 9DE80F00 	 ldmia sp,{r0,r1,r2,r3}
 1144 0036 85E80F00 	 stmia r5,{r0,r1,r2,r3}
 733:src/MightyBoard/Motherboard/Host.cc **** 	print_time_hours = 0;
 1145              	 .loc 1 733 0
 1146 003a 40F20003 	 movw r3,#:lower16:.LANCHOR7
 1147 003e C0F20003 	 movt r3,#:upper16:.LANCHOR7
 1148 0042 4FF00002 	 mov r2,#0
 1149 0046 1A70     	 strb r2,[r3,#0]
 734:src/MightyBoard/Motherboard/Host.cc **** }
 1150              	 .loc 1 734 0
 1151 0048 05B0     	 add sp,sp,#20
 1152 004a 30BD     	 pop {r4,r5,pc}
 1153              	 .cfi_endproc
 1154              	.LFE149:
 1156              	 .section .text._ZN4host9stopBuildEv,"ax",%progbits
 1157              	 .align 2
 1158              	 .global _ZN4host9stopBuildEv
 1159              	 .thumb
 1160              	 .thumb_func
 1162              	_ZN4host9stopBuildEv:
 1163              	.LFB146:
 692:src/MightyBoard/Motherboard/Host.cc **** void stopBuild() {
 1164              	 .loc 1 692 0
 1165              	 .cfi_startproc
 1166              	 
 1167              	 
 1168 0000 08B5     	 push {r3,lr}
 1169              	.LCFI16:
 1170              	 .cfi_def_cfa_offset 8
 1171              	 .cfi_offset 14,-4
 1172              	 .cfi_offset 3,-8
 694:src/MightyBoard/Motherboard/Host.cc **** 	if(currentState == HOST_STATE_BUILDING)
 1173              	 .loc 1 694 0
 1174 0002 40F20003 	 movw r3,#:lower16:.LANCHOR0
 1175 0006 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 1176 000a 1B78     	 ldrb r3,[r3,#0]
 1177 000c 012B     	 cmp r3,#1
 1178 000e 17D1     	 bne .L70
 696:src/MightyBoard/Motherboard/Host.cc **** 		currentState = HOST_STATE_CANCEL_BUILD;
 1179              	 .loc 1 696 0
 1180 0010 40F20003 	 movw r3,#:lower16:.LANCHOR0
 1181 0014 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 1182 0018 4FF00402 	 mov r2,#4
 1183 001c 1A70     	 strb r2,[r3,#0]
 697:src/MightyBoard/Motherboard/Host.cc **** 		cancel_timeout.start(1000000); //look for commands from repG for one second before resetting
 1184              	 .loc 1 697 0
 1185 001e 40F20000 	 movw r0,#:lower16:.LANCHOR10
 1186 0022 C0F20000 	 movt r0,#:upper16:.LANCHOR10
 1187 0026 44F24021 	 movw r1,#16960
 1188 002a C0F20F01 	 movt r1,15
 1189 002e FFF7FEFF 	 bl _ZN7Timeout5startEm
 698:src/MightyBoard/Motherboard/Host.cc **** 		cancelBuild = true;
 1190              	 .loc 1 698 0
 1191 0032 40F20003 	 movw r3,#:lower16:.LANCHOR1
 1192 0036 C0F20003 	 movt r3,#:upper16:.LANCHOR1
 1193 003a 4FF00102 	 mov r2,#1
 1194 003e 1A70     	 strb r2,[r3,#0]
 1195              	.L70:
 700:src/MightyBoard/Motherboard/Host.cc **** 	last_print_line = command::getLineNumber();
 1196              	 .loc 1 700 0
 1197 0040 FFF7FEFF 	 bl _ZN7command13getLineNumberEv
 1198 0044 40F20003 	 movw r3,#:lower16:.LANCHOR11
 1199 0048 C0F20003 	 movt r3,#:upper16:.LANCHOR11
 1200 004c 1860     	 str r0,[r3,#0]
 701:src/MightyBoard/Motherboard/Host.cc **** 	stopPrintTime();
 1201              	 .loc 1 701 0
 1202 004e FFF7FEFF 	 bl _ZN4host13stopPrintTimeEv
 702:src/MightyBoard/Motherboard/Host.cc **** 	do_host_reset = true; // indicate reset after response has been sent
 1203              	 .loc 1 702 0
 1204 0052 40F20003 	 movw r3,#:lower16:.LANCHOR12
 1205 0056 C0F20003 	 movt r3,#:upper16:.LANCHOR12
 1206 005a 4FF00102 	 mov r2,#1
 1207 005e 1A70     	 strb r2,[r3,#0]
 703:src/MightyBoard/Motherboard/Host.cc **** 	buildState = BUILD_CANCELED;
 1208              	 .loc 1 703 0
 1209 0060 40F20003 	 movw r3,#:lower16:.LANCHOR5
 1210 0064 C0F20003 	 movt r3,#:upper16:.LANCHOR5
 1211 0068 4FF00402 	 mov r2,#4
 1212 006c 1A70     	 strb r2,[r3,#0]
 704:src/MightyBoard/Motherboard/Host.cc **** }
 1213              	 .loc 1 704 0
 1214 006e 08BD     	 pop {r3,pc}
 1215              	 .cfi_endproc
 1216              	.LFE146:
 1218              	 .section .text._ZN4host27handleBuildStopNotificationEh,"ax",%progbits
 1219              	 .align 2
 1220              	 .global _ZN4host27handleBuildStopNotificationEh
 1221              	 .thumb
 1222              	 .thumb_func
 1224              	_ZN4host27handleBuildStopNotificationEh:
 1225              	.LFB137:
 506:src/MightyBoard/Motherboard/Host.cc **** void handleBuildStopNotification(uint8_t stopFlags) {
 1226              	 .loc 1 506 0
 1227              	 .cfi_startproc
 1228              	 
 1229              	 
 1230              	.LVL83:
 1231 0000 08B5     	 push {r3,lr}
 1232              	.LCFI17:
 1233              	 .cfi_def_cfa_offset 8
 1234              	 .cfi_offset 14,-4
 1235              	 .cfi_offset 3,-8
 1236              	.LBB250:
 509:src/MightyBoard/Motherboard/Host.cc **** 	stopPrintTime();
 1237              	 .loc 1 509 0
 1238 0002 FFF7FEFF 	 bl _ZN4host13stopPrintTimeEv
 1239              	.LVL84:
 510:src/MightyBoard/Motherboard/Host.cc **** 	last_print_line = command::getLineNumber();
 1240              	 .loc 1 510 0
 1241 0006 FFF7FEFF 	 bl _ZN7command13getLineNumberEv
 1242 000a 40F20003 	 movw r3,#:lower16:.LANCHOR11
 1243 000e C0F20003 	 movt r3,#:upper16:.LANCHOR11
 1244 0012 1860     	 str r0,[r3,#0]
 511:src/MightyBoard/Motherboard/Host.cc **** 	buildState = BUILD_FINISHED_NORMALLY;
 1245              	 .loc 1 511 0
 1246 0014 40F20003 	 movw r3,#:lower16:.LANCHOR5
 1247 0018 C0F20003 	 movt r3,#:upper16:.LANCHOR5
 1248 001c 4FF00202 	 mov r2,#2
 1249 0020 1A70     	 strb r2,[r3,#0]
 512:src/MightyBoard/Motherboard/Host.cc **** 	currentState = HOST_STATE_READY;
 1250              	 .loc 1 512 0
 1251 0022 40F20003 	 movw r3,#:lower16:.LANCHOR0
 1252 0026 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 1253 002a 4FF00002 	 mov r2,#0
 1254 002e 1A70     	 strb r2,[r3,#0]
 1255              	.LBE250:
 513:src/MightyBoard/Motherboard/Host.cc **** }
 1256              	 .loc 1 513 0
 1257 0030 08BD     	 pop {r3,pc}
 1258              	 .cfi_endproc
 1259              	.LFE137:
 1261 0032 00BF     	 .section .text._ZN4host26processExtruderQueryPacketERK8InPacketR9OutPacket,"ax",%progbits
 1262              	 .align 2
 1263              	 .global _ZN4host26processExtruderQueryPacketERK8InPacketR9OutPacket
 1264              	 .thumb
 1265              	 .thumb_func
 1267              	_ZN4host26processExtruderQueryPacketERK8InPacketR9OutPacket:
 1268              	.LFB152:
 754:src/MightyBoard/Motherboard/Host.cc **** 	}
 755:src/MightyBoard/Motherboard/Host.cc **** 	return;
 756:src/MightyBoard/Motherboard/Host.cc **** }
 757:src/MightyBoard/Motherboard/Host.cc **** 
 758:src/MightyBoard/Motherboard/Host.cc ****     // legacy tool / motherboard breakout of query commands
 759:src/MightyBoard/Motherboard/Host.cc **** bool processExtruderQueryPacket(const InPacket& from_host, OutPacket& to_host) {
 1269              	 .loc 1 759 0
 1270              	 .cfi_startproc
 1271              	 
 1272              	 
 1273              	.LVL85:
 1274 0000 70B5     	 push {r4,r5,r6,lr}
 1275              	.LCFI18:
 1276              	 .cfi_def_cfa_offset 16
 1277              	 .cfi_offset 14,-4
 1278              	 .cfi_offset 6,-8
 1279              	 .cfi_offset 5,-12
 1280              	 .cfi_offset 4,-16
 1281 0002 0446     	 mov r4,r0
 1282 0004 0D46     	 mov r5,r1
 1283              	.LVL86:
 1284              	.LBB251:
 1285              	.LBB252:
 1286              	.LBB253:
 1287              	.LBB254:
 1288              	 .loc 2 97 0
 1289 0006 0378     	 ldrb r3,[r0,#0]
 1290              	.LBE254:
 1291              	.LBE253:
 760:src/MightyBoard/Motherboard/Host.cc **** 	Motherboard& board = Motherboard::getBoard();
 761:src/MightyBoard/Motherboard/Host.cc **** 	if (from_host.getLength() >= 1) {
 1292              	 .loc 1 761 0
 1293 0008 002B     	 cmp r3,#0
 1294 000a 00F01C81 	 beq .L94
 1295              	.LBB255:
 762:src/MightyBoard/Motherboard/Host.cc **** 			
 763:src/MightyBoard/Motherboard/Host.cc ****         uint8_t	id = from_host.read8(1);
 1296              	 .loc 1 763 0
 1297 000e 4FF00101 	 mov r1,#1
 1298              	.LVL87:
 1299 0012 FFF7FEFF 	 bl _ZNK6Packet5read8Eh
 1300              	.LVL88:
 1301 0016 0646     	 mov r6,r0
 1302              	.LVL89:
 764:src/MightyBoard/Motherboard/Host.cc **** 		uint8_t command = from_host.read8(2);
 1303              	 .loc 1 764 0
 1304 0018 2046     	 mov r0,r4
 1305              	.LVL90:
 1306 001a 4FF00201 	 mov r1,#2
 1307 001e FFF7FEFF 	 bl _ZNK6Packet5read8Eh
 1308              	.LVL91:
 765:src/MightyBoard/Motherboard/Host.cc **** 		// All commands are query commands.	
 766:src/MightyBoard/Motherboard/Host.cc **** 		switch (command) {
 1309              	 .loc 1 766 0
 1310 0022 2528     	 cmp r0,#37
 1311 0024 00F21281 	 bhi .L95
 1312 0028 DFE810F0 	 tbh [pc,r0,lsl#1]
 1313              	.L83:
 1314 002c 2600     	 .2byte (.L74-.L83)/2
 1315 002e 1001     	 .2byte (.L95-.L83)/2
 1316 0030 3300     	 .2byte (.L75-.L83)/2
 1317 0032 1001     	 .2byte (.L95-.L83)/2
 1318 0034 1001     	 .2byte (.L95-.L83)/2
 1319 0036 1001     	 .2byte (.L95-.L83)/2
 1320 0038 1001     	 .2byte (.L95-.L83)/2
 1321 003a 1001     	 .2byte (.L95-.L83)/2
 1322 003c 1001     	 .2byte (.L95-.L83)/2
 1323 003e 1001     	 .2byte (.L95-.L83)/2
 1324 0040 1001     	 .2byte (.L95-.L83)/2
 1325 0042 1001     	 .2byte (.L95-.L83)/2
 1326 0044 1001     	 .2byte (.L95-.L83)/2
 1327 0046 1001     	 .2byte (.L95-.L83)/2
 1328 0048 1001     	 .2byte (.L95-.L83)/2
 1329 004a 1001     	 .2byte (.L95-.L83)/2
 1330 004c 1001     	 .2byte (.L95-.L83)/2
 1331 004e 1001     	 .2byte (.L95-.L83)/2
 1332 0050 1001     	 .2byte (.L95-.L83)/2
 1333 0052 1001     	 .2byte (.L95-.L83)/2
 1334 0054 1001     	 .2byte (.L95-.L83)/2
 1335 0056 1001     	 .2byte (.L95-.L83)/2
 1336 0058 4900     	 .2byte (.L76-.L83)/2
 1337 005a 1001     	 .2byte (.L95-.L83)/2
 1338 005c 1001     	 .2byte (.L95-.L83)/2
 1339 005e 1001     	 .2byte (.L95-.L83)/2
 1340 0060 1001     	 .2byte (.L95-.L83)/2
 1341 0062 1001     	 .2byte (.L95-.L83)/2
 1342 0064 1001     	 .2byte (.L95-.L83)/2
 1343 0066 1001     	 .2byte (.L95-.L83)/2
 1344 0068 5F00     	 .2byte (.L77-.L83)/2
 1345 006a 1001     	 .2byte (.L95-.L83)/2
 1346 006c 6E00     	 .2byte (.L78-.L83)/2
 1347 006e 8400     	 .2byte (.L79-.L83)/2
 1348 0070 1001     	 .2byte (.L95-.L83)/2
 1349 0072 9300     	 .2byte (.L80-.L83)/2
 1350 0074 A200     	 .2byte (.L81-.L83)/2
 1351 0076 D400     	 .2byte (.L82-.L83)/2
 1352              	.L74:
 767:src/MightyBoard/Motherboard/Host.cc **** 		case SLAVE_CMD_VERSION:
 768:src/MightyBoard/Motherboard/Host.cc **** 			to_host.append8(RC_OK);
 1353              	 .loc 1 768 0
 1354 0078 2846     	 mov r0,r5
 1355              	.LVL92:
 1356 007a 4FF08101 	 mov r1,#129
 1357 007e FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 769:src/MightyBoard/Motherboard/Host.cc **** 			to_host.append16(firmware_version);
 1358              	 .loc 1 769 0
 1359 0082 2846     	 mov r0,r5
 1360 0084 40F22A21 	 movw r1,#554
 1361 0088 FFF7FEFF 	 bl _ZN9OutPacket8append16Et
 770:src/MightyBoard/Motherboard/Host.cc **** 			return true;
 1362              	 .loc 1 770 0
 1363 008c 4FF00100 	 mov r0,#1
 1364 0090 70BD     	 pop {r4,r5,r6,pc}
 1365              	.LVL93:
 1366              	.L75:
 771:src/MightyBoard/Motherboard/Host.cc **** 		case SLAVE_CMD_GET_TEMP:
 772:src/MightyBoard/Motherboard/Host.cc **** //			xprintf("SLAVE_CMD_GET_TEMP" " (%s:%d)\n",_F_,_L_);
 773:src/MightyBoard/Motherboard/Host.cc **** 			to_host.append8(RC_OK);
 1367              	 .loc 1 773 0
 1368 0092 2846     	 mov r0,r5
 1369              	.LVL94:
 1370 0094 4FF08101 	 mov r1,#129
 1371 0098 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 1372              	.LVL95:
 1373              	.LBB256:
 1374              	.LBB257:
 1375              	 .file 5 "src/MightyBoard/Motherboard/Motherboard.hh"
   1:src/MightyBoard/Motherboard/Motherboard.hh **** /*
   2:src/MightyBoard/Motherboard/Motherboard.hh ****  * Copyright 2010 by Adam Mayer	 <adam@makerbot.com>
   3:src/MightyBoard/Motherboard/Motherboard.hh ****  *
   4:src/MightyBoard/Motherboard/Motherboard.hh ****  * This program is free software: you can redistribute it and/or modify
   5:src/MightyBoard/Motherboard/Motherboard.hh ****  * it under the terms of the GNU General Public License as published by
   6:src/MightyBoard/Motherboard/Motherboard.hh ****  * the Free Software Foundation, either version 3 of the License, or
   7:src/MightyBoard/Motherboard/Motherboard.hh ****  * (at your option) any later version.
   8:src/MightyBoard/Motherboard/Motherboard.hh ****  *
   9:src/MightyBoard/Motherboard/Motherboard.hh ****  * This program is distributed in the hope that it will be useful,
  10:src/MightyBoard/Motherboard/Motherboard.hh ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:src/MightyBoard/Motherboard/Motherboard.hh ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:src/MightyBoard/Motherboard/Motherboard.hh ****  * GNU General Public License for more details.
  13:src/MightyBoard/Motherboard/Motherboard.hh ****  *
  14:src/MightyBoard/Motherboard/Motherboard.hh ****  * You should have received a copy of the GNU General Public License
  15:src/MightyBoard/Motherboard/Motherboard.hh ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>
  16:src/MightyBoard/Motherboard/Motherboard.hh ****  */
  17:src/MightyBoard/Motherboard/Motherboard.hh **** 
  18:src/MightyBoard/Motherboard/Motherboard.hh **** #ifndef BOARDS_MB40_MOTHERBOARD_HH_
  19:src/MightyBoard/Motherboard/Motherboard.hh **** #define BOARDS_MB40_MOTHERBOARD_HH_
  20:src/MightyBoard/Motherboard/Motherboard.hh **** 
  21:src/MightyBoard/Motherboard/Motherboard.hh **** #include "UART.hh"
  22:src/MightyBoard/Motherboard/Motherboard.hh **** #include "DigiPots.hh"
  23:src/MightyBoard/Motherboard/Motherboard.hh **** #include "Types.hh"
  24:src/MightyBoard/Motherboard/Motherboard.hh **** #include "PSU.hh"
  25:src/MightyBoard/Motherboard/Motherboard.hh **** #include "Configuration.hh"
  26:src/MightyBoard/Motherboard/Motherboard.hh **** #include "Timeout.hh"
  27:src/MightyBoard/Motherboard/Motherboard.hh **** //#include "Menu.hh"
  28:src/MightyBoard/Motherboard/Motherboard.hh **** //#include "InterfaceBoard.hh"
  29:src/MightyBoard/Motherboard/Motherboard.hh **** //#include "LiquidCrystalSerial.hh"
  30:src/MightyBoard/Motherboard/Motherboard.hh **** //#include "ButtonArray.hh"
  31:src/MightyBoard/Motherboard/Motherboard.hh **** #include "Thermistor.hh"
  32:src/MightyBoard/Motherboard/Motherboard.hh **** #include "HeatingElement.hh"
  33:src/MightyBoard/Motherboard/Motherboard.hh **** #include "Heater.hh"
  34:src/MightyBoard/Motherboard/Motherboard.hh **** #include "ExtruderBoard.hh"
  35:src/MightyBoard/Motherboard/Motherboard.hh **** #include "Cutoff.hh"
  36:src/MightyBoard/Motherboard/Motherboard.hh **** 
  37:src/MightyBoard/Motherboard/Motherboard.hh **** enum status_states{
  38:src/MightyBoard/Motherboard/Motherboard.hh **** 	STATUS_NONE = 0,
  39:src/MightyBoard/Motherboard/Motherboard.hh **** 	STATUS_HEAT_INACTIVE_SHUTDOWN = 0x40
  40:src/MightyBoard/Motherboard/Motherboard.hh **** };
  41:src/MightyBoard/Motherboard/Motherboard.hh **** 
  42:src/MightyBoard/Motherboard/Motherboard.hh **** 
  43:src/MightyBoard/Motherboard/Motherboard.hh **** /// Build platform heating element on v34 Extruder controller
  44:src/MightyBoard/Motherboard/Motherboard.hh **** /// \ingroup ECv34
  45:src/MightyBoard/Motherboard/Motherboard.hh **** class BuildPlatformHeatingElement : public HeatingElement {
  46:src/MightyBoard/Motherboard/Motherboard.hh **** public:
  47:src/MightyBoard/Motherboard/Motherboard.hh **** 	void setHeatingElement(uint8_t value);
  48:src/MightyBoard/Motherboard/Motherboard.hh **** };
  49:src/MightyBoard/Motherboard/Motherboard.hh **** 
  50:src/MightyBoard/Motherboard/Motherboard.hh **** /// Main class for Motherboard version 4.0+ (Gen4 electronics)
  51:src/MightyBoard/Motherboard/Motherboard.hh **** /// \ingroup HardwareLibraries
  52:src/MightyBoard/Motherboard/Motherboard.hh **** /// \ingroup MBv40
  53:src/MightyBoard/Motherboard/Motherboard.hh **** class Motherboard {
  54:src/MightyBoard/Motherboard/Motherboard.hh **** private:
  55:src/MightyBoard/Motherboard/Motherboard.hh ****         // TODO: Declare this in main, drop the singleton.
  56:src/MightyBoard/Motherboard/Motherboard.hh ****         /// Static instance of the motherboard
  57:src/MightyBoard/Motherboard/Motherboard.hh ****         static Motherboard motherboard;
  58:src/MightyBoard/Motherboard/Motherboard.hh **** 
  59:src/MightyBoard/Motherboard/Motherboard.hh **** public:
  60:src/MightyBoard/Motherboard/Motherboard.hh ****         /// Get the motherboard instance.
  61:src/MightyBoard/Motherboard/Motherboard.hh ****         static Motherboard& getBoard() { return motherboard; }
  62:src/MightyBoard/Motherboard/Motherboard.hh ****        ExtruderBoard& getExtruderBoard(uint8_t id) { if(id == 1){ return Extruder_Two;} else  { ret
 1376              	 .loc 5 62 0
 1377 009c 7A4B     	 ldr r3,.L102
 1378 009e A3F1E000 	 sub r0,r3,#224
 1379 00a2 012E     	 cmp r6,#1
 1380 00a4 08BF     	 it eq
 1381 00a6 1846     	 moveq r0,r3
 1382              	.LVL96:
 1383              	.LBE257:
 1384              	.LBE256:
 774:src/MightyBoard/Motherboard/Host.cc **** 			to_host.append16(board.getExtruderBoard(id).getExtruderHeater().get_current_temperature());
 1385              	 .loc 1 774 0
 1386 00a8 00F12800 	 add r0,r0,#40
 1387              	.LVL97:
 1388 00ac FFF7FEFF 	 bl _ZN6Heater23get_current_temperatureEv
 1389              	.LVL98:
 1390 00b0 81B2     	 uxth r1,r0
 1391 00b2 2846     	 mov r0,r5
 1392 00b4 FFF7FEFF 	 bl _ZN9OutPacket8append16Et
 775:src/MightyBoard/Motherboard/Host.cc **** 			return true;
 1393              	 .loc 1 775 0
 1394 00b8 4FF00100 	 mov r0,#1
 1395 00bc 70BD     	 pop {r4,r5,r6,pc}
 1396              	.LVL99:
 1397              	.L76:
 776:src/MightyBoard/Motherboard/Host.cc **** 		case SLAVE_CMD_IS_TOOL_READY:
 777:src/MightyBoard/Motherboard/Host.cc **** 			to_host.append8(RC_OK);
 1398              	 .loc 1 777 0
 1399 00be 2846     	 mov r0,r5
 1400              	.LVL100:
 1401 00c0 4FF08101 	 mov r1,#129
 1402 00c4 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 1403              	.LVL101:
 1404              	.LBB258:
 1405              	.LBB259:
 1406              	 .loc 5 62 0
 1407 00c8 6F4B     	 ldr r3,.L102
 1408 00ca A3F1E000 	 sub r0,r3,#224
 1409 00ce 012E     	 cmp r6,#1
 1410 00d0 08BF     	 it eq
 1411 00d2 1846     	 moveq r0,r3
 1412              	.LVL102:
 1413              	.LBE259:
 1414              	.LBE258:
 778:src/MightyBoard/Motherboard/Host.cc **** 			to_host.append8(board.getExtruderBoard(id).getExtruderHeater().has_reached_target_temperature()?
 1415              	 .loc 1 778 0
 1416 00d4 00F12800 	 add r0,r0,#40
 1417              	.LVL103:
 1418 00d8 FFF7FEFF 	 bl _ZN6Heater30has_reached_target_temperatureEv
 1419              	.LVL104:
 1420 00dc 0146     	 mov r1,r0
 1421 00de 2846     	 mov r0,r5
 1422 00e0 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 779:src/MightyBoard/Motherboard/Host.cc **** 			return true;
 1423              	 .loc 1 779 0
 1424 00e4 4FF00100 	 mov r0,#1
 1425 00e8 70BD     	 pop {r4,r5,r6,pc}
 1426              	.LVL105:
 1427              	.L77:
 780:src/MightyBoard/Motherboard/Host.cc **** 		case SLAVE_CMD_GET_PLATFORM_TEMP:
 781:src/MightyBoard/Motherboard/Host.cc **** //			xprintf("SLAVE_CMD_GET_PLATFORM_TEMP" " (%s:%d)\n",_F_,_L_);
 782:src/MightyBoard/Motherboard/Host.cc **** 			to_host.append8(RC_OK);
 1428              	 .loc 1 782 0
 1429 00ea 2846     	 mov r0,r5
 1430              	.LVL106:
 1431 00ec 4FF08101 	 mov r1,#129
 1432 00f0 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 1433              	.LVL107:
 783:src/MightyBoard/Motherboard/Host.cc **** 			to_host.append16(board.getPlatformHeater().get_current_temperature());
 1434              	 .loc 1 783 0
 1435 00f4 6548     	 ldr r0,.L102+4
 1436 00f6 FFF7FEFF 	 bl _ZN6Heater23get_current_temperatureEv
 1437 00fa 81B2     	 uxth r1,r0
 1438 00fc 2846     	 mov r0,r5
 1439 00fe FFF7FEFF 	 bl _ZN9OutPacket8append16Et
 784:src/MightyBoard/Motherboard/Host.cc **** 			return true;
 1440              	 .loc 1 784 0
 1441 0102 4FF00100 	 mov r0,#1
 1442 0106 70BD     	 pop {r4,r5,r6,pc}
 1443              	.LVL108:
 1444              	.L78:
 785:src/MightyBoard/Motherboard/Host.cc **** 		case SLAVE_CMD_GET_SP:
 786:src/MightyBoard/Motherboard/Host.cc **** 			to_host.append8(RC_OK);
 1445              	 .loc 1 786 0
 1446 0108 2846     	 mov r0,r5
 1447              	.LVL109:
 1448 010a 4FF08101 	 mov r1,#129
 1449 010e FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 1450              	.LVL110:
 1451              	.LBB260:
 1452              	.LBB261:
 1453              	 .loc 5 62 0
 1454 0112 5D4B     	 ldr r3,.L102
 1455 0114 A3F1E000 	 sub r0,r3,#224
 1456 0118 012E     	 cmp r6,#1
 1457 011a 08BF     	 it eq
 1458 011c 1846     	 moveq r0,r3
 1459              	.LVL111:
 1460              	.LBE261:
 1461              	.LBE260:
 787:src/MightyBoard/Motherboard/Host.cc **** 			to_host.append16(board.getExtruderBoard(id).getExtruderHeater().get_set_temperature());
 1462              	 .loc 1 787 0
 1463 011e 00F12800 	 add r0,r0,#40
 1464              	.LVL112:
 1465 0122 FFF7FEFF 	 bl _ZN6Heater19get_set_temperatureEv
 1466              	.LVL113:
 1467 0126 81B2     	 uxth r1,r0
 1468 0128 2846     	 mov r0,r5
 1469 012a FFF7FEFF 	 bl _ZN9OutPacket8append16Et
 788:src/MightyBoard/Motherboard/Host.cc **** 			return true;
 1470              	 .loc 1 788 0
 1471 012e 4FF00100 	 mov r0,#1
 1472 0132 70BD     	 pop {r4,r5,r6,pc}
 1473              	.LVL114:
 1474              	.L79:
 789:src/MightyBoard/Motherboard/Host.cc **** 		case SLAVE_CMD_GET_PLATFORM_SP:
 790:src/MightyBoard/Motherboard/Host.cc **** 			to_host.append8(RC_OK);
 1475              	 .loc 1 790 0
 1476 0134 2846     	 mov r0,r5
 1477              	.LVL115:
 1478 0136 4FF08101 	 mov r1,#129
 1479 013a FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 1480              	.LVL116:
 791:src/MightyBoard/Motherboard/Host.cc **** 			to_host.append16(board.getPlatformHeater().get_set_temperature());
 1481              	 .loc 1 791 0
 1482 013e 5348     	 ldr r0,.L102+4
 1483 0140 FFF7FEFF 	 bl _ZN6Heater19get_set_temperatureEv
 1484 0144 81B2     	 uxth r1,r0
 1485 0146 2846     	 mov r0,r5
 1486 0148 FFF7FEFF 	 bl _ZN9OutPacket8append16Et
 792:src/MightyBoard/Motherboard/Host.cc **** 			return true;
 1487              	 .loc 1 792 0
 1488 014c 4FF00100 	 mov r0,#1
 1489 0150 70BD     	 pop {r4,r5,r6,pc}
 1490              	.LVL117:
 1491              	.L80:
 793:src/MightyBoard/Motherboard/Host.cc **** 		case SLAVE_CMD_IS_PLATFORM_READY:
 794:src/MightyBoard/Motherboard/Host.cc **** 			to_host.append8(RC_OK);
 1492              	 .loc 1 794 0
 1493 0152 2846     	 mov r0,r5
 1494              	.LVL118:
 1495 0154 4FF08101 	 mov r1,#129
 1496 0158 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 1497              	.LVL119:
 795:src/MightyBoard/Motherboard/Host.cc **** 			to_host.append8(board.getPlatformHeater().has_reached_target_temperature()?1:0);
 1498              	 .loc 1 795 0
 1499 015c 4B48     	 ldr r0,.L102+4
 1500 015e FFF7FEFF 	 bl _ZN6Heater30has_reached_target_temperatureEv
 1501 0162 0146     	 mov r1,r0
 1502 0164 2846     	 mov r0,r5
 1503 0166 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 796:src/MightyBoard/Motherboard/Host.cc **** 			return true;
 1504              	 .loc 1 796 0
 1505 016a 4FF00100 	 mov r0,#1
 1506 016e 70BD     	 pop {r4,r5,r6,pc}
 1507              	.LVL120:
 1508              	.L81:
 797:src/MightyBoard/Motherboard/Host.cc **** 		case SLAVE_CMD_GET_TOOL_STATUS:
 798:src/MightyBoard/Motherboard/Host.cc **** 			to_host.append8(RC_OK);
 1509              	 .loc 1 798 0
 1510 0170 2846     	 mov r0,r5
 1511              	.LVL121:
 1512 0172 4FF08101 	 mov r1,#129
 1513 0176 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 1514              	.LVL122:
 1515              	.LBB262:
 1516              	.LBB263:
 1517              	 .loc 5 62 0
 1518 017a 434B     	 ldr r3,.L102
 1519 017c A3F1E000 	 sub r0,r3,#224
 1520 0180 012E     	 cmp r6,#1
 1521 0182 08BF     	 it eq
 1522 0184 1846     	 moveq r0,r3
 1523              	.LVL123:
 1524              	.LBE263:
 1525              	.LBE262:
 799:src/MightyBoard/Motherboard/Host.cc **** 			to_host.append8((board.getExtruderBoard(id).getExtruderHeater().has_failed()?128:0)
 1526              	 .loc 1 799 0
 1527 0186 00F12800 	 add r0,r0,#40
 1528              	.LVL124:
 1529 018a FFF7FEFF 	 bl _ZN6Heater10has_failedEv
 1530              	.LVL125:
 800:src/MightyBoard/Motherboard/Host.cc **** 							| (board.getPlatformHeater().has_failed()?64:0)
 801:src/MightyBoard/Motherboard/Host.cc **** 							| (board.getExtruderBoard(id).getExtruderHeater().GetFailMode())
 802:src/MightyBoard/Motherboard/Host.cc **** 							| (board.getExtruderBoard(id).getExtruderHeater().has_reached_target_temperature()?1:0));
 1531              	 .loc 1 802 0
 1532 018e 0028     	 cmp r0,#0
 1533 0190 14BF     	 ite ne
 1534 0192 8024     	 movne r4,#128
 1535 0194 0024     	 moveq r4,#0
 1536              	.LVL126:
 800:src/MightyBoard/Motherboard/Host.cc **** 							| (board.getPlatformHeater().has_failed()?64:0)
 1537              	 .loc 1 800 0
 1538 0196 3D48     	 ldr r0,.L102+4
 1539 0198 FFF7FEFF 	 bl _ZN6Heater10has_failedEv
 1540              	 .loc 1 802 0
 1541 019c 0028     	 cmp r0,#0
 1542 019e 14BF     	 ite ne
 1543 01a0 4020     	 movne r0,#64
 1544 01a2 0020     	 moveq r0,#0
 1545 01a4 0443     	 orrs r4,r4,r0
 1546              	.LVL127:
 1547              	.LBB264:
 1548              	.LBB265:
 1549              	 .loc 5 62 0
 1550 01a6 012E     	 cmp r6,#1
 1551 01a8 53D1     	 bne .L90
 1552              	.LVL128:
 1553              	.LBE265:
 1554              	.LBE264:
 801:src/MightyBoard/Motherboard/Host.cc **** 							| (board.getExtruderBoard(id).getExtruderHeater().GetFailMode())
 1555              	 .loc 1 801 0
 1556 01aa 394E     	 ldr r6,.L102+8
 1557              	.LVL129:
 1558 01ac 3046     	 mov r0,r6
 1559 01ae FFF7FEFF 	 bl _ZN6Heater11GetFailModeEv
 1560              	 .loc 1 802 0
 1561 01b2 0443     	 orrs r4,r4,r0
 1562 01b4 E4B2     	 uxtb r4,r4
 1563              	.LVL130:
 1564              	 .loc 5 62 0
 1565 01b6 A6F12800 	 sub r0,r6,#40
 1566              	.LVL131:
 1567              	.L92:
 1568              	 .loc 1 802 0
 1569 01ba 00F12800 	 add r0,r0,#40
 1570              	.LVL132:
 1571 01be FFF7FEFF 	 bl _ZN6Heater30has_reached_target_temperatureEv
 1572              	.LVL133:
 1573 01c2 40EA0401 	 orr r1,r0,r4
 1574 01c6 2846     	 mov r0,r5
 1575 01c8 C9B2     	 uxtb r1,r1
 1576 01ca FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 803:src/MightyBoard/Motherboard/Host.cc **** 			return true;
 1577              	 .loc 1 803 0
 1578 01ce 4FF00100 	 mov r0,#1
 1579 01d2 70BD     	 pop {r4,r5,r6,pc}
 1580              	.LVL134:
 1581              	.L82:
 804:src/MightyBoard/Motherboard/Host.cc **** 		case SLAVE_CMD_GET_PID_STATE:
 805:src/MightyBoard/Motherboard/Host.cc **** 			to_host.append8(RC_OK);
 1582              	 .loc 1 805 0
 1583 01d4 2846     	 mov r0,r5
 1584              	.LVL135:
 1585 01d6 4FF08101 	 mov r1,#129
 1586 01da FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 1587              	.LVL136:
 1588              	.LBB266:
 1589              	.LBB267:
 1590              	 .loc 5 62 0
 1591 01de 012E     	 cmp r6,#1
 1592 01e0 40D1     	 bne .L91
 1593              	.LVL137:
 1594              	.LBE267:
 1595              	.LBE266:
 806:src/MightyBoard/Motherboard/Host.cc **** 			to_host.append16(board.getExtruderBoard(id).getExtruderHeater().getPIDErrorTerm());
 1596              	 .loc 1 806 0
 1597 01e2 2B4C     	 ldr r4,.L102+8
 1598              	.LVL138:
 1599 01e4 2046     	 mov r0,r4
 1600 01e6 FFF7FEFF 	 bl _ZN6Heater15getPIDErrorTermEv
 1601 01ea 81B2     	 uxth r1,r0
 1602 01ec 2846     	 mov r0,r5
 1603 01ee FFF7FEFF 	 bl _ZN9OutPacket8append16Et
 1604              	.LVL139:
 807:src/MightyBoard/Motherboard/Host.cc **** 			to_host.append16(board.getExtruderBoard(id).getExtruderHeater().getPIDDeltaTerm());
 1605              	 .loc 1 807 0
 1606 01f2 2046     	 mov r0,r4
 1607 01f4 FFF7FEFF 	 bl _ZN6Heater15getPIDDeltaTermEv
 1608 01f8 81B2     	 uxth r1,r0
 1609 01fa 2846     	 mov r0,r5
 1610 01fc FFF7FEFF 	 bl _ZN9OutPacket8append16Et
 1611              	.LVL140:
 1612              	 .loc 5 62 0
 1613 0200 A4F12800 	 sub r0,r4,#40
 1614              	.LVL141:
 1615              	.L93:
 808:src/MightyBoard/Motherboard/Host.cc **** 			to_host.append16(board.getExtruderBoard(id).getExtruderHeater().getPIDLastOutput());
 1616              	 .loc 1 808 0
 1617 0204 00F12800 	 add r0,r0,#40
 1618              	.LVL142:
 1619 0208 FFF7FEFF 	 bl _ZN6Heater16getPIDLastOutputEv
 1620              	.LVL143:
 1621 020c 81B2     	 uxth r1,r0
 1622 020e 2846     	 mov r0,r5
 1623 0210 FFF7FEFF 	 bl _ZN9OutPacket8append16Et
 1624              	.LVL144:
 809:src/MightyBoard/Motherboard/Host.cc **** 			to_host.append16(board.getPlatformHeater().getPIDErrorTerm());
 1625              	 .loc 1 809 0
 1626 0214 1D4C     	 ldr r4,.L102+4
 1627 0216 2046     	 mov r0,r4
 1628 0218 FFF7FEFF 	 bl _ZN6Heater15getPIDErrorTermEv
 1629 021c 81B2     	 uxth r1,r0
 1630 021e 2846     	 mov r0,r5
 1631 0220 FFF7FEFF 	 bl _ZN9OutPacket8append16Et
 1632              	.LVL145:
 810:src/MightyBoard/Motherboard/Host.cc **** 			to_host.append16(board.getPlatformHeater().getPIDDeltaTerm());
 1633              	 .loc 1 810 0
 1634 0224 2046     	 mov r0,r4
 1635 0226 FFF7FEFF 	 bl _ZN6Heater15getPIDDeltaTermEv
 1636 022a 81B2     	 uxth r1,r0
 1637 022c 2846     	 mov r0,r5
 1638 022e FFF7FEFF 	 bl _ZN9OutPacket8append16Et
 1639              	.LVL146:
 811:src/MightyBoard/Motherboard/Host.cc **** 			to_host.append16(board.getPlatformHeater().getPIDLastOutput());
 1640              	 .loc 1 811 0
 1641 0232 2046     	 mov r0,r4
 1642 0234 FFF7FEFF 	 bl _ZN6Heater16getPIDLastOutputEv
 1643 0238 81B2     	 uxth r1,r0
 1644 023a 2846     	 mov r0,r5
 1645 023c FFF7FEFF 	 bl _ZN9OutPacket8append16Et
 812:src/MightyBoard/Motherboard/Host.cc **** 			return true;
 1646              	 .loc 1 812 0
 1647 0240 4FF00100 	 mov r0,#1
 1648 0244 70BD     	 pop {r4,r5,r6,pc}
 1649              	.LVL147:
 1650              	.L94:
 1651              	.LBE255:
 813:src/MightyBoard/Motherboard/Host.cc **** 		}
 814:src/MightyBoard/Motherboard/Host.cc **** 	}
 815:src/MightyBoard/Motherboard/Host.cc **** 	return false;
 1652              	 .loc 1 815 0
 1653 0246 4FF00000 	 mov r0,#0
 1654              	.LVL148:
 1655 024a 70BD     	 pop {r4,r5,r6,pc}
 1656              	.LVL149:
 1657              	.L95:
 1658              	.LBB268:
 1659 024c 4FF00000 	 mov r0,#0
 1660              	.LVL150:
 1661              	.LBE268:
 1662              	.LBE252:
 1663              	.LBE251:
 816:src/MightyBoard/Motherboard/Host.cc **** }
 1664              	 .loc 1 816 0
 1665 0250 70BD     	 pop {r4,r5,r6,pc}
 1666              	.LVL151:
 1667              	.L90:
 1668              	.LBB271:
 1669              	.LBB270:
 1670              	.LBB269:
 801:src/MightyBoard/Motherboard/Host.cc **** 							| (board.getExtruderBoard(id).getExtruderHeater().GetFailMode())
 1671              	 .loc 1 801 0
 1672 0252 104E     	 ldr r6,.L102+12
 1673              	.LVL152:
 1674 0254 3046     	 mov r0,r6
 1675 0256 FFF7FEFF 	 bl _ZN6Heater11GetFailModeEv
 802:src/MightyBoard/Motherboard/Host.cc **** 							| (board.getExtruderBoard(id).getExtruderHeater().has_reached_target_temperature()?1:0));
 1676              	 .loc 1 802 0
 1677 025a 0443     	 orrs r4,r4,r0
 1678 025c E4B2     	 uxtb r4,r4
 1679              	.LVL153:
 1680              	 .loc 5 62 0
 1681 025e A6F12800 	 sub r0,r6,#40
 1682 0262 AAE7     	 b .L92
 1683              	.LVL154:
 1684              	.L91:
 806:src/MightyBoard/Motherboard/Host.cc **** 			to_host.append16(board.getExtruderBoard(id).getExtruderHeater().getPIDErrorTerm());
 1685              	 .loc 1 806 0
 1686 0264 0B4C     	 ldr r4,.L102+12
 1687              	.LVL155:
 1688 0266 2046     	 mov r0,r4
 1689 0268 FFF7FEFF 	 bl _ZN6Heater15getPIDErrorTermEv
 1690 026c 81B2     	 uxth r1,r0
 1691 026e 2846     	 mov r0,r5
 1692 0270 FFF7FEFF 	 bl _ZN9OutPacket8append16Et
 1693              	.LVL156:
 807:src/MightyBoard/Motherboard/Host.cc **** 			to_host.append16(board.getExtruderBoard(id).getExtruderHeater().getPIDDeltaTerm());
 1694              	 .loc 1 807 0
 1695 0274 2046     	 mov r0,r4
 1696 0276 FFF7FEFF 	 bl _ZN6Heater15getPIDDeltaTermEv
 1697 027a 81B2     	 uxth r1,r0
 1698 027c 2846     	 mov r0,r5
 1699 027e FFF7FEFF 	 bl _ZN9OutPacket8append16Et
 1700              	.LVL157:
 1701              	 .loc 5 62 0
 1702 0282 A4F12800 	 sub r0,r4,#40
 1703 0286 BDE7     	 b .L93
 1704              	.L103:
 1705              	 .align 2
 1706              	.L102:
 1707 0288 08010000 	 .word _ZN11Motherboard11motherboardE+264
 1708 028c 0C020000 	 .word _ZN11Motherboard11motherboardE+524
 1709 0290 30010000 	 .word _ZN11Motherboard11motherboardE+304
 1710 0294 50000000 	 .word _ZN11Motherboard11motherboardE+80
 1711              	.LBE269:
 1712              	.LBE270:
 1713              	.LBE271:
 1714              	 .cfi_endproc
 1715              	.LFE152:
 1717              	 .section .text._ZN4host18processQueryPacketERK8InPacketR9OutPacket,"ax",%progbits
 1718              	 .align 2
 1719              	 .global _ZN4host18processQueryPacketERK8InPacketR9OutPacket
 1720              	 .thumb
 1721              	 .thumb_func
 1723              	_ZN4host18processQueryPacketERK8InPacketR9OutPacket:
 1724              	.LFB140:
 542:src/MightyBoard/Motherboard/Host.cc **** bool processQueryPacket(const InPacket& from_host, OutPacket& to_host) {
 1725              	 .loc 1 542 0
 1726              	 .cfi_startproc
 1727              	 
 1728              	 
 1729              	.LVL158:
 1730 0000 2DE9F047 	 push {r4,r5,r6,r7,r8,r9,sl,lr}
 1731              	.LCFI19:
 1732              	 .cfi_def_cfa_offset 32
 1733              	 .cfi_offset 14,-4
 1734              	 .cfi_offset 10,-8
 1735              	 .cfi_offset 9,-12
 1736              	 .cfi_offset 8,-16
 1737              	 .cfi_offset 7,-20
 1738              	 .cfi_offset 6,-24
 1739              	 .cfi_offset 5,-28
 1740              	 .cfi_offset 4,-32
 1741 0004 86B0     	 sub sp,sp,#24
 1742              	.LCFI20:
 1743              	 .cfi_def_cfa_offset 56
 1744 0006 0446     	 mov r4,r0
 1745 0008 0E46     	 mov r6,r1
 1746              	.LVL159:
 1747              	.LBB315:
 1748              	.LBB316:
 1749              	.LBB317:
 1750              	 .loc 2 97 0
 1751 000a 0378     	 ldrb r3,[r0,#0]
 1752              	.LBE317:
 1753              	.LBE316:
 543:src/MightyBoard/Motherboard/Host.cc **** 	if (from_host.getLength() >= 1) {
 1754              	 .loc 1 543 0
 1755 000c 002B     	 cmp r3,#0
 1756 000e 00F04C82 	 beq .L139
 1757              	.LBB318:
 544:src/MightyBoard/Motherboard/Host.cc **** 		uint8_t command = from_host.read8(0);
 1758              	 .loc 1 544 0
 1759 0012 0746     	 mov r7,r0
 1760 0014 4FF00001 	 mov r1,#0
 1761              	.LVL160:
 1762 0018 FFF7FEFF 	 bl _ZNK6Packet5read8Eh
 1763              	.LVL161:
 545:src/MightyBoard/Motherboard/Host.cc **** 		if ((command & 0x80) == 0) {
 1764              	 .loc 1 545 0
 1765 001c 10F0800F 	 tst r0,#128
 624:src/MightyBoard/Motherboard/Host.cc **** 	return false;
 1766              	 .loc 1 624 0
 1767 0020 18BF     	 it ne
 1768 0022 0020     	 movne r0,#0
 1769              	.LVL162:
 545:src/MightyBoard/Motherboard/Host.cc **** 		if ((command & 0x80) == 0) {
 1770              	 .loc 1 545 0
 1771 0024 40F04982 	 bne .L105
 547:src/MightyBoard/Motherboard/Host.cc **** 			switch (command) {
 1772              	 .loc 1 547 0
 1773 0028 1B28     	 cmp r0,#27
 1774 002a 00F24182 	 bhi .L141
 1775 002e DFE810F0 	 tbh [pc,r0,lsl#1]
 1776              	.L126:
 1777 0032 1C00     	 .2byte (.L106-.L126)/2
 1778 0034 5600     	 .2byte (.L107-.L126)/2
 1779 0036 8500     	 .2byte (.L108-.L126)/2
 1780 0038 5E00     	 .2byte (.L109-.L126)/2
 1781 003a 9300     	 .2byte (.L110-.L126)/2
 1782 003c 3F02     	 .2byte (.L141-.L126)/2
 1783 003e 3F02     	 .2byte (.L141-.L126)/2
 1784 0040 5E00     	 .2byte (.L109-.L126)/2
 1785 0042 4B01     	 .2byte (.L111-.L126)/2
 1786 0044 3F02     	 .2byte (.L141-.L126)/2
 1787 0046 5A01     	 .2byte (.L112-.L126)/2
 1788 0048 5F01     	 .2byte (.L113-.L126)/2
 1789 004a 7401     	 .2byte (.L114-.L126)/2
 1790 004c 7B01     	 .2byte (.L115-.L126)/2
 1791 004e FD00     	 .2byte (.L116-.L126)/2
 1792 0050 0D01     	 .2byte (.L117-.L126)/2
 1793 0052 1D01     	 .2byte (.L118-.L126)/2
 1794 0054 5E00     	 .2byte (.L109-.L126)/2
 1795 0056 4401     	 .2byte (.L119-.L126)/2
 1796 0058 3F02     	 .2byte (.L141-.L126)/2
 1797 005a 3D00     	 .2byte (.L120-.L126)/2
 1798 005c BF00     	 .2byte (.L121-.L126)/2
 1799 005e AD01     	 .2byte (.L122-.L126)/2
 1800 0060 CA01     	 .2byte (.L123-.L126)/2
 1801 0062 DC01     	 .2byte (.L124-.L126)/2
 1802 0064 3F02     	 .2byte (.L141-.L126)/2
 1803 0066 3F02     	 .2byte (.L141-.L126)/2
 1804 0068 1B02     	 .2byte (.L125-.L126)/2
 1805              	.L106:
 1806              	.LVL163:
 1807              	.LBB319:
 1808              	.LBB320:
 275:src/MightyBoard/Motherboard/Host.cc ****     if(from_host.read16(1)  <=  25   ) {
 1809              	 .loc 1 275 0
 1810 006a 2046     	 mov r0,r4
 1811 006c 4FF00101 	 mov r1,#1
 1812 0070 FFF7FEFF 	 bl _ZNK6Packet6read16Eh
 1813 0074 1928     	 cmp r0,#25
 1814 0076 0CD8     	 bhi .L127
 276:src/MightyBoard/Motherboard/Host.cc ****         to_host.append8(RC_OK);
 1815              	 .loc 1 276 0
 1816 0078 3046     	 mov r0,r6
 1817 007a 4FF08101 	 mov r1,#129
 1818 007e FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 277:src/MightyBoard/Motherboard/Host.cc ****         to_host.append16(0x0000);
 1819              	 .loc 1 277 0
 1820 0082 3046     	 mov r0,r6
 1821 0084 4FF00001 	 mov r1,#0
 1822 0088 FFF7FEFF 	 bl _ZN9OutPacket8append16Et
 550:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 1823              	 .loc 1 550 0
 1824 008c 4FF00100 	 mov r0,#1
 1825 0090 13E2     	 b .L105
 1826              	.L127:
 280:src/MightyBoard/Motherboard/Host.cc ****         to_host.append8(RC_OK);
 1827              	 .loc 1 280 0
 1828 0092 3046     	 mov r0,r6
 1829 0094 4FF08101 	 mov r1,#129
 1830 0098 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 281:src/MightyBoard/Motherboard/Host.cc ****         to_host.append16(firmware_version);
 1831              	 .loc 1 281 0
 1832 009c 3046     	 mov r0,r6
 1833 009e 40F22A21 	 movw r1,#554
 1834 00a2 FFF7FEFF 	 bl _ZN9OutPacket8append16Et
 550:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 1835              	 .loc 1 550 0
 1836 00a6 4FF00100 	 mov r0,#1
 1837 00aa 06E2     	 b .L105
 1838              	.LVL164:
 1839              	.L120:
 1840              	.LBE320:
 1841              	.LBE319:
 1842              	.LBB321:
 1843              	.LBB322:
 303:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append8(RC_OK);
 1844              	 .loc 1 303 0
 1845 00ac 3046     	 mov r0,r6
 1846 00ae 4FF08101 	 mov r1,#129
 1847 00b2 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 1848              	.LVL165:
 1849 00b6 40F20004 	 movw r4,#:lower16:.LANCHOR4
 1850              	.LVL166:
 1851 00ba C0F20004 	 movt r4,#:upper16:.LANCHOR4
 542:src/MightyBoard/Motherboard/Host.cc **** bool processQueryPacket(const InPacket& from_host, OutPacket& to_host) {
 1852              	 .loc 1 542 0
 1853 00be 04F11F05 	 add r5,r4,#31
 1854              	.LVL167:
 1855              	.L128:
 1856              	.LBB323:
 305:src/MightyBoard/Motherboard/Host.cc **** 	  to_host.append8(buildName[idx]);
 1857              	 .loc 1 305 0
 1858 00c2 3046     	 mov r0,r6
 1859 00c4 2178     	 ldrb r1,[r4,#0]
 1860 00c6 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 306:src/MightyBoard/Motherboard/Host.cc **** 	  if (buildName[idx] == '\0') { break; }
 1861              	 .loc 1 306 0
 1862 00ca 14F8013B 	 ldrb r3,[r4],#1
 1863 00ce 002B     	 cmp r3,#0
 1864 00d0 00F0F181 	 beq .L142
 304:src/MightyBoard/Motherboard/Host.cc **** 	for (uint8_t idx = 0; idx < MAX_FILE_LEN; idx++) {
 1865              	 .loc 1 304 0
 1866 00d4 AC42     	 cmp r4,r5
 1867 00d6 F4D1     	 bne .L128
 553:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 1868              	 .loc 1 553 0
 1869 00d8 4FF00100 	 mov r0,#1
 1870 00dc EDE1     	 b .L105
 1871              	.LVL168:
 1872              	.L107:
 1873              	.LBE323:
 1874              	.LBE322:
 1875              	.LBE321:
 557:src/MightyBoard/Motherboard/Host.cc **** 				to_host.append8(RC_OK);
 1876              	 .loc 1 557 0
 1877 00de 3046     	 mov r0,r6
 1878 00e0 4FF08101 	 mov r1,#129
 1879 00e4 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 558:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 1880              	 .loc 1 558 0
 1881 00e8 4FF00100 	 mov r0,#1
 1882 00ec E5E1     	 b .L105
 1883              	.L109:
 562:src/MightyBoard/Motherboard/Host.cc **** 				if (currentState == HOST_STATE_BUILDING
 1884              	 .loc 1 562 0
 1885 00ee 40F20003 	 movw r3,#:lower16:.LANCHOR0
 1886 00f2 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 1887 00f6 1B78     	 ldrb r3,[r3,#0]
 1888 00f8 03F1FF32 	 add r2,r3,#-1
 1889 00fc D2B2     	 uxtb r2,r2
 1890 00fe 052B     	 cmp r3,#5
 1891 0100 14BF     	 ite ne
 1892 0102 0023     	 movne r3,#0
 1893 0104 0123     	 moveq r3,#1
 1894 0106 012A     	 cmp r2,#1
 1895 0108 98BF     	 it ls
 1896 010a 43F00103 	 orrls r3,r3,#1
 1897 010e 3BB1     	 cbz r3,.L129
 565:src/MightyBoard/Motherboard/Host.cc **** 					Motherboard::getBoard().indicateError(ERR_RESET_DURING_BUILD);
 1898              	 .loc 1 565 0
 1899 0110 40F20000 	 movw r0,#:lower16:_ZN11Motherboard11motherboardE
 1900 0114 C0F20000 	 movt r0,#:upper16:_ZN11Motherboard11motherboardE
 1901 0118 4FF00401 	 mov r1,#4
 1902 011c FFF7FEFF 	 bl _ZN11Motherboard13indicateErrorEi
 1903              	.L129:
 567:src/MightyBoard/Motherboard/Host.cc **** 				do_host_reset = true; // indicate reset after response has been sent
 1904              	 .loc 1 567 0
 1905 0120 40F20003 	 movw r3,#:lower16:.LANCHOR12
 1906 0124 C0F20003 	 movt r3,#:upper16:.LANCHOR12
 1907 0128 4FF00104 	 mov r4,#1
 1908 012c 1C70     	 strb r4,[r3,#0]
 568:src/MightyBoard/Motherboard/Host.cc **** 				to_host.append8(RC_OK);
 1909              	 .loc 1 568 0
 1910 012e 3046     	 mov r0,r6
 1911 0130 4FF08101 	 mov r1,#129
 1912 0134 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 569:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 1913              	 .loc 1 569 0
 1914 0138 2046     	 mov r0,r4
 1915 013a BEE1     	 b .L105
 1916              	.L108:
 1917              	.LVL169:
 1918              	.LBB326:
 1919              	.LBB327:
 311:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append8(RC_OK);
 1920              	 .loc 1 311 0
 1921 013c 3046     	 mov r0,r6
 1922 013e 4FF08101 	 mov r1,#129
 1923 0142 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 312:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append32(command::getRemainingCapacity());
 1924              	 .loc 1 312 0
 1925 0146 FFF7FEFF 	 bl _ZN7command20getRemainingCapacityEv
 1926 014a 0146     	 mov r1,r0
 1927 014c 3046     	 mov r0,r6
 1928 014e FFF7FEFF 	 bl _ZN9OutPacket8append32Em
 1929              	.LBE327:
 1930              	.LBE326:
 572:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 1931              	 .loc 1 572 0
 1932 0152 4FF00100 	 mov r0,#1
 1933 0156 B0E1     	 b .L105
 1934              	.LVL170:
 1935              	.L110:
 1936              	.LBB328:
 1937              	.LBB329:
 317:src/MightyBoard/Motherboard/Host.cc **** 		const Point p = planner::getPosition();
 1938              	 .loc 1 317 0
 1939 0158 6846     	 mov r0,sp
 1940 015a FFF7FEFF 	 bl _ZN7planner11getPositionEv
 318:src/MightyBoard/Motherboard/Host.cc **** 		to_host.append8(RC_OK);
 1941              	 .loc 1 318 0
 1942 015e 3046     	 mov r0,r6
 1943 0160 4FF08101 	 mov r1,#129
 1944 0164 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 319:src/MightyBoard/Motherboard/Host.cc **** 		to_host.append32(p[0]);
 1945              	 .loc 1 319 0
 1946 0168 6846     	 mov r0,sp
 1947 016a 4FF00001 	 mov r1,#0
 1948 016e FFF7FEFF 	 bl _ZNK5PointixEj
 1949 0172 0168     	 ldr r1,[r0,#0]
 1950 0174 3046     	 mov r0,r6
 1951 0176 FFF7FEFF 	 bl _ZN9OutPacket8append32Em
 320:src/MightyBoard/Motherboard/Host.cc **** 		to_host.append32(p[1]);
 1952              	 .loc 1 320 0
 1953 017a 6846     	 mov r0,sp
 1954 017c 4FF00101 	 mov r1,#1
 1955 0180 FFF7FEFF 	 bl _ZNK5PointixEj
 1956 0184 0168     	 ldr r1,[r0,#0]
 1957 0186 3046     	 mov r0,r6
 1958 0188 FFF7FEFF 	 bl _ZN9OutPacket8append32Em
 321:src/MightyBoard/Motherboard/Host.cc **** 		to_host.append32(p[2]);
 1959              	 .loc 1 321 0
 1960 018c 6846     	 mov r0,sp
 1961 018e 4FF00201 	 mov r1,#2
 1962 0192 FFF7FEFF 	 bl _ZNK5PointixEj
 1963 0196 0168     	 ldr r1,[r0,#0]
 1964 0198 3046     	 mov r0,r6
 1965 019a FFF7FEFF 	 bl _ZN9OutPacket8append32Em
 325:src/MightyBoard/Motherboard/Host.cc **** 		uint8_t endstop_status = steppers::getEndstopStatus();
 1966              	 .loc 1 325 0
 1967 019e FFF7FEFF 	 bl _ZN8steppers16getEndstopStatusEv
 1968 01a2 0146     	 mov r1,r0
 1969              	.LVL171:
 326:src/MightyBoard/Motherboard/Host.cc **** 		to_host.append8(endstop_status);
 1970              	 .loc 1 326 0
 1971 01a4 3046     	 mov r0,r6
 1972              	.LVL172:
 1973 01a6 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 1974              	.LVL173:
 575:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 1975              	 .loc 1 575 0
 1976 01aa 4FF00100 	 mov r0,#1
 1977 01ae 84E1     	 b .L105
 1978              	.LVL174:
 1979              	.L121:
 1980              	.LBE329:
 1981              	.LBE328:
 1982              	.LBB330:
 1983              	.LBB331:
 332:src/MightyBoard/Motherboard/Host.cc **** 		const Point p = planner::getPosition();
 1984              	 .loc 1 332 0
 1985 01b0 6846     	 mov r0,sp
 1986 01b2 FFF7FEFF 	 bl _ZN7planner11getPositionEv
 333:src/MightyBoard/Motherboard/Host.cc **** 		to_host.append8(RC_OK);
 1987              	 .loc 1 333 0
 1988 01b6 3046     	 mov r0,r6
 1989 01b8 4FF08101 	 mov r1,#129
 1990 01bc FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 334:src/MightyBoard/Motherboard/Host.cc **** 		to_host.append32(p[0]);
 1991              	 .loc 1 334 0
 1992 01c0 6846     	 mov r0,sp
 1993 01c2 4FF00001 	 mov r1,#0
 1994 01c6 FFF7FEFF 	 bl _ZNK5PointixEj
 1995 01ca 0168     	 ldr r1,[r0,#0]
 1996 01cc 3046     	 mov r0,r6
 1997 01ce FFF7FEFF 	 bl _ZN9OutPacket8append32Em
 335:src/MightyBoard/Motherboard/Host.cc **** 		to_host.append32(p[1]);
 1998              	 .loc 1 335 0
 1999 01d2 6846     	 mov r0,sp
 2000 01d4 4FF00101 	 mov r1,#1
 2001 01d8 FFF7FEFF 	 bl _ZNK5PointixEj
 2002 01dc 0168     	 ldr r1,[r0,#0]
 2003 01de 3046     	 mov r0,r6
 2004 01e0 FFF7FEFF 	 bl _ZN9OutPacket8append32Em
 336:src/MightyBoard/Motherboard/Host.cc **** 		to_host.append32(p[2]);
 2005              	 .loc 1 336 0
 2006 01e4 6846     	 mov r0,sp
 2007 01e6 4FF00201 	 mov r1,#2
 2008 01ea FFF7FEFF 	 bl _ZNK5PointixEj
 2009 01ee 0168     	 ldr r1,[r0,#0]
 2010 01f0 3046     	 mov r0,r6
 2011 01f2 FFF7FEFF 	 bl _ZN9OutPacket8append32Em
 338:src/MightyBoard/Motherboard/Host.cc **** 		to_host.append32(p[3]);
 2012              	 .loc 1 338 0
 2013 01f6 6846     	 mov r0,sp
 2014 01f8 4FF00301 	 mov r1,#3
 2015 01fc FFF7FEFF 	 bl _ZNK5PointixEj
 2016 0200 0168     	 ldr r1,[r0,#0]
 2017 0202 3046     	 mov r0,r6
 2018 0204 FFF7FEFF 	 bl _ZN9OutPacket8append32Em
 339:src/MightyBoard/Motherboard/Host.cc **** 		to_host.append32(p[4]);
 2019              	 .loc 1 339 0
 2020 0208 6846     	 mov r0,sp
 2021 020a 4FF00401 	 mov r1,#4
 2022 020e FFF7FEFF 	 bl _ZNK5PointixEj
 2023 0212 0168     	 ldr r1,[r0,#0]
 2024 0214 3046     	 mov r0,r6
 2025 0216 FFF7FEFF 	 bl _ZN9OutPacket8append32Em
 347:src/MightyBoard/Motherboard/Host.cc **** 		uint8_t endstop_status = steppers::getEndstopStatus();
 2026              	 .loc 1 347 0
 2027 021a FFF7FEFF 	 bl _ZN8steppers16getEndstopStatusEv
 2028 021e 0146     	 mov r1,r0
 2029              	.LVL175:
 349:src/MightyBoard/Motherboard/Host.cc **** 		to_host.append16((uint16_t)endstop_status);
 2030              	 .loc 1 349 0
 2031 0220 3046     	 mov r0,r6
 2032              	.LVL176:
 2033 0222 FFF7FEFF 	 bl _ZN9OutPacket8append16Et
 2034              	.LVL177:
 579:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 2035              	 .loc 1 579 0
 2036 0226 4FF00100 	 mov r0,#1
 2037 022a 46E1     	 b .L105
 2038              	.LVL178:
 2039              	.L116:
 2040              	.LBE331:
 2041              	.LBE330:
 2042              	.LBB332:
 2043              	.LBB333:
 356:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append8(RC_OK);
 2044              	 .loc 1 356 0
 2045 022c 3046     	 mov r0,r6
 2046 022e 4FF08101 	 mov r1,#129
 2047 0232 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 357:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append8(sdcard::startCapture(p));
 2048              	 .loc 1 357 0
 2049 0236 04F10300 	 add r0,r4,#3
 2050 023a FFF7FEFF 	 bl _ZN6sdcard12startCaptureEPc
 2051 023e 0146     	 mov r1,r0
 2052 0240 3046     	 mov r0,r6
 2053 0242 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 2054              	.LBE333:
 2055              	.LBE332:
 582:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 2056              	 .loc 1 582 0
 2057 0246 4FF00100 	 mov r0,#1
 2058 024a 36E1     	 b .L105
 2059              	.LVL179:
 2060              	.L117:
 2061              	.LBB334:
 2062              	.LBB335:
 361:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append8(RC_OK);
 2063              	 .loc 1 361 0
 2064 024c 3046     	 mov r0,r6
 2065 024e 4FF08101 	 mov r1,#129
 2066 0252 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 362:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append32(sdcard::finishCapture());
 2067              	 .loc 1 362 0
 2068 0256 FFF7FEFF 	 bl _ZN6sdcard13finishCaptureEv
 2069 025a 0146     	 mov r1,r0
 2070 025c 3046     	 mov r0,r6
 2071 025e FFF7FEFF 	 bl _ZN9OutPacket8append32Em
 363:src/MightyBoard/Motherboard/Host.cc **** 	sdcard::reset();
 2072              	 .loc 1 363 0
 2073 0262 FFF7FEFF 	 bl _ZN6sdcard5resetEv
 2074              	.LBE335:
 2075              	.LBE334:
 585:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 2076              	 .loc 1 585 0
 2077 0266 4FF00100 	 mov r0,#1
 2078 026a 26E1     	 b .L105
 2079              	.LVL180:
 2080              	.L118:
 2081              	.LBB336:
 2082              	.LBB337:
 368:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append8(RC_OK);
 2083              	 .loc 1 368 0
 2084 026c 3046     	 mov r0,r6
 2085 026e 4FF08101 	 mov r1,#129
 2086 0272 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 2087              	.LVL181:
 2088              	.LBB338:
 2089              	.LBB339:
 2090              	.LBB340:
 2091              	 .loc 2 97 0
 2092 0276 2378     	 ldrb r3,[r4,#0]
 2093              	.LBE340:
 2094              	.LBE339:
 369:src/MightyBoard/Motherboard/Host.cc **** 	for (int idx = 1; idx < from_host.getLength(); idx++) {
 2095              	 .loc 1 369 0
 2096 0278 012B     	 cmp r3,#1
 2097 027a 0EDD     	 ble .L130
 2098 027c DFF84082 	 ldr r8,.L148
 2099 0280 4FF00105 	 mov r5,#1
 2100              	.LVL182:
 2101              	.L131:
 370:src/MightyBoard/Motherboard/Host.cc **** 		buildName[idx-1] = from_host.read8(idx);
 2102              	 .loc 1 370 0
 2103 0284 3846     	 mov r0,r7
 2104 0286 E9B2     	 uxtb r1,r5
 2105 0288 FFF7FEFF 	 bl _ZNK6Packet5read8Eh
 2106 028c 08F8010F 	 strb r0,[r8,#1]!
 369:src/MightyBoard/Motherboard/Host.cc **** 	for (int idx = 1; idx < from_host.getLength(); idx++) {
 2107              	 .loc 1 369 0
 2108 0290 05F10105 	 add r5,r5,#1
 2109              	.LVL183:
 2110              	.LBB342:
 2111              	.LBB341:
 2112              	 .loc 2 97 0
 2113 0294 2378     	 ldrb r3,[r4,#0]
 2114              	.LBE341:
 2115              	.LBE342:
 369:src/MightyBoard/Motherboard/Host.cc **** 	for (int idx = 1; idx < from_host.getLength(); idx++) {
 2116              	 .loc 1 369 0
 2117 0296 9D42     	 cmp r5,r3
 2118 0298 F4DB     	 blt .L131
 2119              	.LVL184:
 2120              	.L130:
 2121              	.LBE338:
 372:src/MightyBoard/Motherboard/Host.cc **** 	buildName[MAX_FILE_LEN-1] = '\0';
 2122              	 .loc 1 372 0
 2123 029a 40F20003 	 movw r3,#:lower16:.LANCHOR4
 2124 029e C0F20003 	 movt r3,#:upper16:.LANCHOR4
 2125 02a2 4FF00002 	 mov r2,#0
 2126 02a6 9A77     	 strb r2,[r3,#30]
 374:src/MightyBoard/Motherboard/Host.cc **** 	uint8_t response = startBuildFromSD();
 2127              	 .loc 1 374 0
 2128 02a8 FFF7FEFF 	 bl _ZN4host16startBuildFromSDEv
 2129 02ac 0146     	 mov r1,r0
 2130              	.LVL185:
 375:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append8(response);
 2131              	 .loc 1 375 0
 2132 02ae 3046     	 mov r0,r6
 2133              	.LVL186:
 2134 02b0 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 2135              	.LVL187:
 2136              	.LBE337:
 2137              	.LBE336:
 588:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 2138              	 .loc 1 588 0
 2139 02b4 4FF00100 	 mov r0,#1
 2140 02b8 FFE0     	 b .L105
 2141              	.LVL188:
 2142              	.L119:
 590:src/MightyBoard/Motherboard/Host.cc **** 				handleNextFilename(from_host,to_host);
 2143              	 .loc 1 590 0
 2144 02ba 2046     	 mov r0,r4
 2145 02bc 3146     	 mov r1,r6
 2146 02be FFF7FEFF 	 bl _ZN4host18handleNextFilenameERK8InPacketR9OutPacket
 591:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 2147              	 .loc 1 591 0
 2148 02c2 4FF00100 	 mov r0,#1
 2149 02c6 F8E0     	 b .L105
 2150              	.L111:
 2151              	.LVL189:
 2152              	.LBB343:
 2153              	.LBB344:
 409:src/MightyBoard/Motherboard/Host.cc **** 	pauseBuild(!command::isPaused());
 2154              	 .loc 1 409 0
 2155 02c8 FFF7FEFF 	 bl _ZN7command8isPausedEv
 2156 02cc 80F00100 	 eor r0,r0,#1
 2157 02d0 C0B2     	 uxtb r0,r0
 2158 02d2 FFF7FEFF 	 bl _ZN4host10pauseBuildEb
 410:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append8(RC_OK);
 2159              	 .loc 1 410 0
 2160 02d6 3046     	 mov r0,r6
 2161 02d8 4FF08101 	 mov r1,#129
 2162 02dc FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 2163              	.LBE344:
 2164              	.LBE343:
 594:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 2165              	 .loc 1 594 0
 2166 02e0 4FF00100 	 mov r0,#1
 2167 02e4 E9E0     	 b .L105
 2168              	.LVL190:
 2169              	.L112:
 597:src/MightyBoard/Motherboard/Host.cc **** 				if(processExtruderQueryPacket(from_host,to_host)){
 2170              	 .loc 1 597 0
 2171 02e6 2046     	 mov r0,r4
 2172 02e8 3146     	 mov r1,r6
 2173 02ea FFF7FEFF 	 bl _ZN4host26processExtruderQueryPacketERK8InPacketR9OutPacket
 2174 02ee E4E0     	 b .L105
 2175              	.L113:
 2176              	.LVL191:
 2177              	.LBB345:
 2178              	.LBB346:
 415:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append8(RC_OK);
 2179              	 .loc 1 415 0
 2180 02f0 3046     	 mov r0,r6
 2181 02f2 4FF08101 	 mov r1,#129
 2182 02f6 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 417:src/MightyBoard/Motherboard/Host.cc **** 		bool done = !steppers::isRunning() && command::isEmpty();
 2183              	 .loc 1 417 0
 2184 02fa FFF7FEFF 	 bl _ZN8steppers9isRunningEv
 2185 02fe 4FF00001 	 mov r1,#0
 2186 0302 20B9     	 cbnz r0,.L132
 2187 0304 FFF7FEFF 	 bl _ZN7command7isEmptyEv
 2188 0308 011C     	 adds r1,r0,#0
 2189 030a 18BF     	 it ne
 2190 030c 0121     	 movne r1,#1
 2191              	.L132:
 2192              	.LVL192:
 418:src/MightyBoard/Motherboard/Host.cc **** 		to_host.append8(done?1:0);
 2193              	 .loc 1 418 0
 2194 030e 3046     	 mov r0,r6
 2195 0310 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 2196              	.LVL193:
 2197              	.LBE346:
 2198              	.LBE345:
 602:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 2199              	 .loc 1 602 0
 2200 0314 4FF00100 	 mov r0,#1
 2201 0318 CFE0     	 b .L105
 2202              	.LVL194:
 2203              	.L114:
 604:src/MightyBoard/Motherboard/Host.cc **** 				handleReadEeprom(from_host,to_host);
 2204              	 .loc 1 604 0
 2205 031a 2046     	 mov r0,r4
 2206 031c 3146     	 mov r1,r6
 2207 031e FFF7FEFF 	 bl _ZN4host16handleReadEepromERK8InPacketR9OutPacket
 605:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 2208              	 .loc 1 605 0
 2209 0322 4FF00100 	 mov r0,#1
 2210 0326 C8E0     	 b .L105
 2211              	.L115:
 2212              	.LVL195:
 2213              	.LBB347:
 2214              	.LBB348:
 440:src/MightyBoard/Motherboard/Host.cc ****     uint16_t offset = from_host.read16(1);
 2215              	 .loc 1 440 0
 2216 0328 2046     	 mov r0,r4
 2217 032a 4FF00101 	 mov r1,#1
 2218 032e FFF7FEFF 	 bl _ZNK6Packet6read16Eh
 2219 0332 8046     	 mov r8,r0
 2220              	.LVL196:
 441:src/MightyBoard/Motherboard/Host.cc ****     uint8_t length = from_host.read8(3);
 2221              	 .loc 1 441 0
 2222 0334 2046     	 mov r0,r4
 2223              	.LVL197:
 2224 0336 4FF00301 	 mov r1,#3
 2225 033a FFF7FEFF 	 bl _ZNK6Packet5read8Eh
 2226 033e 8246     	 mov sl,r0
 2227              	.LVL198:
 2228              	.LBB349:
 446:src/MightyBoard/Motherboard/Host.cc ****     for (int i = 0; i < length; i++) {
 2229              	 .loc 1 446 0
 2230 0340 8146     	 mov r9,r0
 2231 0342 0028     	 cmp r0,#0
 2232 0344 16DD     	 ble .L133
 2233 0346 4FF00404 	 mov r4,#4
 2234 034a 4FF00005 	 mov r5,#0
 2235              	.LVL199:
 2236              	.L134:
 447:src/MightyBoard/Motherboard/Host.cc ****     	eeprom::setEeprom8(offset + i, from_host.read8(i + 4));
 2237              	 .loc 1 447 0
 2238 034e 3846     	 mov r0,r7
 2239 0350 2146     	 mov r1,r4
 2240 0352 FFF7FEFF 	 bl _ZNK6Packet5read8Eh
 2241 0356 0146     	 mov r1,r0
 2242 0358 4046     	 mov r0,r8
 2243 035a FFF7FEFF 	 bl _ZN6eeprom10setEeprom8Eth
 446:src/MightyBoard/Motherboard/Host.cc ****     for (int i = 0; i < length; i++) {
 2244              	 .loc 1 446 0
 2245 035e 05F10105 	 add r5,r5,#1
 2246              	.LVL200:
 2247 0362 04F10104 	 add r4,r4,#1
 2248 0366 E4B2     	 uxtb r4,r4
 2249 0368 08F10108 	 add r8,r8,#1
 2250 036c 1FFA88F8 	 uxth r8,r8
 2251 0370 4D45     	 cmp r5,r9
 2252 0372 ECDB     	 blt .L134
 2253              	.LVL201:
 2254              	.L133:
 2255              	.LBE349:
 455:src/MightyBoard/Motherboard/Host.cc ****     to_host.append8(RC_OK);
 2256              	 .loc 1 455 0
 2257 0374 3046     	 mov r0,r6
 2258 0376 4FF08101 	 mov r1,#129
 2259 037a FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 456:src/MightyBoard/Motherboard/Host.cc ****     to_host.append8(length);
 2260              	 .loc 1 456 0
 2261 037e 3046     	 mov r0,r6
 2262 0380 5146     	 mov r1,sl
 2263 0382 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 2264              	.LBE348:
 2265              	.LBE347:
 608:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 2266              	 .loc 1 608 0
 2267 0386 4FF00100 	 mov r0,#1
 2268 038a 96E0     	 b .L105
 2269              	.LVL202:
 2270              	.L122:
 2271              	.LBB350:
 2272              	.LBB351:
 466:src/MightyBoard/Motherboard/Host.cc **** 	uint8_t flags = from_host.read8(1);
 2273              	 .loc 1 466 0
 2274 038c 2046     	 mov r0,r4
 2275 038e 4FF00101 	 mov r1,#1
 2276 0392 FFF7FEFF 	 bl _ZNK6Packet5read8Eh
 2277 0396 0446     	 mov r4,r0
 2278              	.LVL203:
 467:src/MightyBoard/Motherboard/Host.cc **** 	if (flags & _BV(ES_STEPPERS)) {
 2279              	 .loc 1 467 0
 2280 0398 10F0010F 	 tst r0,#1
 2281 039c 01D0     	 beq .L135
 468:src/MightyBoard/Motherboard/Host.cc **** 		planner::abort();
 2282              	 .loc 1 468 0
 2283 039e FFF7FEFF 	 bl _ZN7planner5abortEv
 2284              	.LVL204:
 2285              	.L135:
 470:src/MightyBoard/Motherboard/Host.cc **** 	if (flags & _BV(ES_COMMANDS)) {
 2286              	 .loc 1 470 0
 2287 03a2 14F0020F 	 tst r4,#2
 2288 03a6 01D0     	 beq .L136
 471:src/MightyBoard/Motherboard/Host.cc **** 		command::reset();
 2289              	 .loc 1 471 0
 2290 03a8 FFF7FEFF 	 bl _ZN7command5resetEv
 2291              	.L136:
 474:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append8(RC_OK);
 2292              	 .loc 1 474 0
 2293 03ac 3046     	 mov r0,r6
 2294 03ae 4FF08101 	 mov r1,#129
 2295 03b2 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 475:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append8(0);
 2296              	 .loc 1 475 0
 2297 03b6 3046     	 mov r0,r6
 2298 03b8 4FF00001 	 mov r1,#0
 2299 03bc FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 2300              	.LBE351:
 2301              	.LBE350:
 611:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 2302              	 .loc 1 611 0
 2303 03c0 4FF00100 	 mov r0,#1
 2304 03c4 79E0     	 b .L105
 2305              	.LVL205:
 2306              	.L123:
 2307              	.LBB352:
 2308              	.LBB353:
 537:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append8(RC_OK);
 2309              	 .loc 1 537 0
 2310 03c6 3046     	 mov r0,r6
 2311 03c8 4FF08101 	 mov r1,#129
 2312 03cc FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 538:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append8(board.GetErrorStatus());
 2313              	 .loc 1 538 0
 2314 03d0 40F20000 	 movw r0,#:lower16:_ZN11Motherboard11motherboardE
 2315 03d4 C0F20000 	 movt r0,#:upper16:_ZN11Motherboard11motherboardE
 2316 03d8 FFF7FEFF 	 bl _ZN11Motherboard14GetErrorStatusEv
 2317 03dc 0146     	 mov r1,r0
 2318 03de 3046     	 mov r0,r6
 2319 03e0 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 2320              	.LBE353:
 2321              	.LBE352:
 614:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 2322              	 .loc 1 614 0
 2323 03e4 4FF00100 	 mov r0,#1
 2324 03e8 67E0     	 b .L105
 2325              	.LVL206:
 2326              	.L124:
 2327              	.LBB354:
 2328              	.LBB355:
 517:src/MightyBoard/Motherboard/Host.cc ****         to_host.append8(RC_OK);
 2329              	 .loc 1 517 0
 2330 03ea 3046     	 mov r0,r6
 2331 03ec 4FF08101 	 mov r1,#129
 2332 03f0 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 522:src/MightyBoard/Motherboard/Host.cc **** 		getPrintTime(hours, minutes);
 2333              	 .loc 1 522 0
 2334 03f4 0DF11600 	 add r0,sp,#22
 2335 03f8 0DF11701 	 add r1,sp,#23
 2336 03fc FFF7FEFF 	 bl _ZN4host12getPrintTimeERhS0_
 524:src/MightyBoard/Motherboard/Host.cc ****         to_host.append8(buildState);
 2337              	 .loc 1 524 0
 2338 0400 40F20004 	 movw r4,#:lower16:.LANCHOR5
 2339 0404 C0F20004 	 movt r4,#:upper16:.LANCHOR5
 2340 0408 3046     	 mov r0,r6
 2341 040a 2178     	 ldrb r1,[r4,#0]
 2342 040c FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 525:src/MightyBoard/Motherboard/Host.cc ****         to_host.append8(hours);
 2343              	 .loc 1 525 0
 2344 0410 3046     	 mov r0,r6
 2345              	.LVL207:
 2346 0412 9DF81610 	 ldrb r1,[sp,#22]
 2347 0416 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 526:src/MightyBoard/Motherboard/Host.cc ****         to_host.append8(minutes);
 2348              	 .loc 1 526 0
 2349 041a 3046     	 mov r0,r6
 2350              	.LVL208:
 2351 041c 9DF81710 	 ldrb r1,[sp,#23]
 2352 0420 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 527:src/MightyBoard/Motherboard/Host.cc ****         if((buildState == BUILD_RUNNING) || (buildState == BUILD_PAUSED)){
 2353              	 .loc 1 527 0
 2354 0424 2378     	 ldrb r3,[r4,#0]
 2355 0426 032B     	 cmp r3,#3
 2356 0428 14BF     	 ite ne
 2357 042a 0022     	 movne r2,#0
 2358 042c 0122     	 moveq r2,#1
 2359 042e 012B     	 cmp r3,#1
 2360 0430 14BF     	 ite ne
 2361 0432 1346     	 movne r3,r2
 2362 0434 42F00103 	 orreq r3,r2,#1
 2363 0438 33B1     	 cbz r3,.L137
 528:src/MightyBoard/Motherboard/Host.cc **** 			to_host.append32(command::getLineNumber());
 2364              	 .loc 1 528 0
 2365 043a FFF7FEFF 	 bl _ZN7command13getLineNumberEv
 2366 043e 0146     	 mov r1,r0
 2367 0440 3046     	 mov r0,r6
 2368 0442 FFF7FEFF 	 bl _ZN9OutPacket8append32Em
 2369 0446 07E0     	 b .L138
 2370              	.L137:
 530:src/MightyBoard/Motherboard/Host.cc **** 			to_host.append32(last_print_line);
 2371              	 .loc 1 530 0
 2372 0448 40F20003 	 movw r3,#:lower16:.LANCHOR11
 2373 044c C0F20003 	 movt r3,#:upper16:.LANCHOR11
 2374 0450 3046     	 mov r0,r6
 2375 0452 1968     	 ldr r1,[r3,#0]
 2376 0454 FFF7FEFF 	 bl _ZN9OutPacket8append32Em
 2377              	.L138:
 532:src/MightyBoard/Motherboard/Host.cc ****         to_host.append32(0);// open spot for filament detect info
 2378              	 .loc 1 532 0
 2379 0458 3046     	 mov r0,r6
 2380 045a 4FF00001 	 mov r1,#0
 2381 045e FFF7FEFF 	 bl _ZN9OutPacket8append32Em
 617:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 2382              	 .loc 1 617 0
 2383 0462 4FF00100 	 mov r0,#1
 2384 0466 28E0     	 b .L105
 2385              	.LVL209:
 2386              	.L125:
 2387              	.LBE355:
 2388              	.LBE354:
 2389              	.LBB356:
 2390              	.LBB357:
 291:src/MightyBoard/Motherboard/Host.cc **** 	uint16_t host_version = from_host.read16(1);
 2391              	 .loc 1 291 0
 2392 0468 2046     	 mov r0,r4
 2393 046a 4FF00101 	 mov r1,#1
 2394 046e FFF7FEFF 	 bl _ZNK6Packet6read16Eh
 293:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append8(RC_OK);
 2395              	 .loc 1 293 0
 2396 0472 3046     	 mov r0,r6
 2397 0474 4FF08101 	 mov r1,#129
 2398 0478 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 294:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append16(firmware_version);
 2399              	 .loc 1 294 0
 2400 047c 3046     	 mov r0,r6
 2401 047e 40F22A21 	 movw r1,#554
 2402 0482 FFF7FEFF 	 bl _ZN9OutPacket8append16Et
 295:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append16(internal_version);
 2403              	 .loc 1 295 0
 2404 0486 3046     	 mov r0,r6
 2405 0488 4FF00001 	 mov r1,#0
 2406 048c FFF7FEFF 	 bl _ZN9OutPacket8append16Et
 296:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append16(0);
 2407              	 .loc 1 296 0
 2408 0490 3046     	 mov r0,r6
 2409 0492 4FF00001 	 mov r1,#0
 2410 0496 FFF7FEFF 	 bl _ZN9OutPacket8append16Et
 297:src/MightyBoard/Motherboard/Host.cc **** 	to_host.append16(0);
 2411              	 .loc 1 297 0
 2412 049a 3046     	 mov r0,r6
 2413 049c 4FF00001 	 mov r1,#0
 2414 04a0 FFF7FEFF 	 bl _ZN9OutPacket8append16Et
 2415              	.LBE357:
 2416              	.LBE356:
 620:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 2417              	 .loc 1 620 0
 2418 04a4 4FF00100 	 mov r0,#1
 2419 04a8 07E0     	 b .L105
 2420              	.LVL210:
 2421              	.L139:
 2422              	.LBE318:
 624:src/MightyBoard/Motherboard/Host.cc **** 	return false;
 2423              	 .loc 1 624 0
 2424 04aa 4FF00000 	 mov r0,#0
 2425              	.LVL211:
 2426 04ae 04E0     	 b .L105
 2427              	.L141:
 2428              	.LBB359:
 2429 04b0 4FF00000 	 mov r0,#0
 2430 04b4 01E0     	 b .L105
 2431              	.LVL212:
 2432              	.L142:
 2433              	.LBB358:
 2434              	.LBB325:
 2435              	.LBB324:
 553:src/MightyBoard/Motherboard/Host.cc **** 				return true;
 2436              	 .loc 1 553 0
 2437 04b6 4FF00100 	 mov r0,#1
 2438              	.LVL213:
 2439              	.L105:
 2440              	.LBE324:
 2441              	.LBE325:
 2442              	.LBE358:
 2443              	.LBE359:
 2444              	.LBE315:
 625:src/MightyBoard/Motherboard/Host.cc **** }
 2445              	 .loc 1 625 0
 2446 04ba 06B0     	 add sp,sp,#24
 2447 04bc BDE8F087 	 pop {r4,r5,r6,r7,r8,r9,sl,pc}
 2448              	.L149:
 2449              	 .align 2
 2450              	.L148:
 2451 04c0 FFFFFFFF 	 .word .LANCHOR4-1
 2452              	 .cfi_endproc
 2453              	.LFE140:
 2455              	 .section .text._ZN4host12runHostSliceEv,"ax",%progbits
 2456              	 .align 2
 2457              	 .global _ZN4host12runHostSliceEv
 2458              	 .thumb
 2459              	 .thumb_func
 2461              	_ZN4host12runHostSliceEv:
 2462              	.LFB118:
  98:src/MightyBoard/Motherboard/Host.cc **** void runHostSlice() {
 2463              	 .loc 1 98 0
 2464              	 .cfi_startproc
 2465              	 
 2466              	 
 2467 0000 30B5     	 push {r4,r5,lr}
 2468              	.LCFI21:
 2469              	 .cfi_def_cfa_offset 12
 2470              	 .cfi_offset 14,-4
 2471              	 .cfi_offset 5,-8
 2472              	 .cfi_offset 4,-12
 2473 0002 85B0     	 sub sp,sp,#20
 2474              	.LCFI22:
 2475              	 .cfi_def_cfa_offset 32
 2476              	.LBB388:
 2477              	.LBB389:
 2478              	.LBB390:
 2479              	 .file 6 "src/MightyBoard/shared/UART.hh"
   1:src/MightyBoard/shared/UART.hh **** /*
   2:src/MightyBoard/shared/UART.hh ****  * Copyright 2010 by Adam Mayer	 <adam@makerbot.com>
   3:src/MightyBoard/shared/UART.hh ****  *
   4:src/MightyBoard/shared/UART.hh ****  * This program is free software: you can redistribute it and/or modify
   5:src/MightyBoard/shared/UART.hh ****  * it under the terms of the GNU General Public License as published by
   6:src/MightyBoard/shared/UART.hh ****  * the Free Software Foundation, either version 3 of the License, or
   7:src/MightyBoard/shared/UART.hh ****  * (at your option) any later version.
   8:src/MightyBoard/shared/UART.hh ****  *
   9:src/MightyBoard/shared/UART.hh ****  * This program is distributed in the hope that it will be useful,
  10:src/MightyBoard/shared/UART.hh ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:src/MightyBoard/shared/UART.hh ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:src/MightyBoard/shared/UART.hh ****  * GNU General Public License for more details.
  13:src/MightyBoard/shared/UART.hh ****  *
  14:src/MightyBoard/shared/UART.hh ****  * You should have received a copy of the GNU General Public License
  15:src/MightyBoard/shared/UART.hh ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>
  16:src/MightyBoard/shared/UART.hh ****  */
  17:src/MightyBoard/shared/UART.hh **** 
  18:src/MightyBoard/shared/UART.hh **** #ifndef UART_HH_
  19:src/MightyBoard/shared/UART.hh **** #define UART_HH_
  20:src/MightyBoard/shared/UART.hh **** 
  21:src/MightyBoard/shared/UART.hh **** #include "Packet.hh"
  22:src/MightyBoard/shared/UART.hh **** #include "Configuration.hh"
  23:src/MightyBoard/shared/UART.hh **** #include <stdint.h>
  24:src/MightyBoard/shared/UART.hh **** 
  25:src/MightyBoard/shared/UART.hh **** // TODO: Move to UART class
  26:src/MightyBoard/shared/UART.hh **** /// Communication mode selection
  27:src/MightyBoard/shared/UART.hh **** enum communication_mode {
  28:src/MightyBoard/shared/UART.hh ****     RS232,  // USB        ///< Act as an asynchronous, full duplex RS232 transciever
  29:src/MightyBoard/shared/UART.hh ****     RS485   // RS485        ///< Act as an asynchronous, half duplex RS485 transciever
  30:src/MightyBoard/shared/UART.hh **** };
  31:src/MightyBoard/shared/UART.hh **** 
  32:src/MightyBoard/shared/UART.hh **** 
  33:src/MightyBoard/shared/UART.hh **** /// The UART object implements the serial communication protocol using one
  34:src/MightyBoard/shared/UART.hh **** /// or two hardware UART libraries.
  35:src/MightyBoard/shared/UART.hh **** ///
  36:src/MightyBoard/shared/UART.hh **** /// UARTs, when constructed, start off disabled.
  37:src/MightyBoard/shared/UART.hh **** /// They begin receiving data only after an enable(true)
  38:src/MightyBoard/shared/UART.hh **** /// call is made.  beginSend() calls will send completed
  39:src/MightyBoard/shared/UART.hh **** /// packets.
  40:src/MightyBoard/shared/UART.hh **** ///
  41:src/MightyBoard/shared/UART.hh **** /// Porting notes:
  42:src/MightyBoard/shared/UART.hh **** /// The current implementation supports one UART on the atmega168/328, and two UARTs
  43:src/MightyBoard/shared/UART.hh **** /// on the atmega644 and atmega1280/2560. The code will need to be updated to support
  44:src/MightyBoard/shared/UART.hh **** /// new architectures.
  45:src/MightyBoard/shared/UART.hh **** /// \ingroup HardwareLibraries
  46:src/MightyBoard/shared/UART.hh **** class UART {
  47:src/MightyBoard/shared/UART.hh **** private:
  48:src/MightyBoard/shared/UART.hh **** //	static UART hostUART;       ///< The controller accepts commands from the host UART
  49:src/MightyBoard/shared/UART.hh **** #if HAS_SLAVE_UART
  50:src/MightyBoard/shared/UART.hh **** //	static UART slaveUART;      ///< The controller can forward commands to the slave UART
  51:src/MightyBoard/shared/UART.hh **** #endif
  52:src/MightyBoard/shared/UART.hh **** 
  53:src/MightyBoard/shared/UART.hh **** public:
  54:src/MightyBoard/shared/UART.hh ****     /// Get a reference to the host UART
  55:src/MightyBoard/shared/UART.hh ****     /// \return hostUART instance, which should act as a slave to a computer (or motherboard)
  56:src/MightyBoard/shared/UART.hh ****     static UART& getHostUART() {static UART hostUART(0,RS232); return hostUART; }
 2480              	 .loc 6 56 0
 2481 0004 40F20003 	 movw r3,#:lower16:_ZGVZN4UART11getHostUARTEvE8hostUART
 2482 0008 C0F20003 	 movt r3,#:upper16:_ZGVZN4UART11getHostUARTEvE8hostUART
 2483 000c 1B68     	 ldr r3,[r3,#0]
 2484 000e 13F0010F 	 tst r3,#1
 2485 0012 33D1     	 bne .L151
 2486 0014 40F20000 	 movw r0,#:lower16:_ZGVZN4UART11getHostUARTEvE8hostUART
 2487 0018 C0F20000 	 movt r0,#:upper16:_ZGVZN4UART11getHostUARTEvE8hostUART
 2488 001c FFF7FEFF 	 bl __cxa_guard_acquire
 2489 0020 70B1     	 cbz r0,.L152
 2490 0022 40F20000 	 movw r0,#:lower16:_ZZN4UART11getHostUARTEvE8hostUART
 2491 0026 C0F20000 	 movt r0,#:upper16:_ZZN4UART11getHostUARTEvE8hostUART
 2492 002a 4FF00001 	 mov r1,#0
 2493 002e 0A46     	 mov r2,r1
 2494 0030 FFF7FEFF 	 bl _ZN4UARTC1Eh18communication_mode
 2495 0034 40F20000 	 movw r0,#:lower16:_ZGVZN4UART11getHostUARTEvE8hostUART
 2496 0038 C0F20000 	 movt r0,#:upper16:_ZGVZN4UART11getHostUARTEvE8hostUART
 2497 003c FFF7FEFF 	 bl __cxa_guard_release
 2498              	.L152:
 2499              	.LVL214:
 2500              	.LBE390:
 2501              	.LBE389:
 2502              	.LBB391:
 2503              	.LBB392:
 2504 0040 40F20003 	 movw r3,#:lower16:_ZGVZN4UART11getHostUARTEvE8hostUART
 2505 0044 C0F20003 	 movt r3,#:upper16:_ZGVZN4UART11getHostUARTEvE8hostUART
 2506 0048 1B68     	 ldr r3,[r3,#0]
 2507 004a 13F0010F 	 tst r3,#1
 2508 004e 15D1     	 bne .L151
 2509 0050 40F20000 	 movw r0,#:lower16:_ZGVZN4UART11getHostUARTEvE8hostUART
 2510 0054 C0F20000 	 movt r0,#:upper16:_ZGVZN4UART11getHostUARTEvE8hostUART
 2511 0058 FFF7FEFF 	 bl __cxa_guard_acquire
 2512 005c 70B1     	 cbz r0,.L151
 2513 005e 40F20000 	 movw r0,#:lower16:_ZZN4UART11getHostUARTEvE8hostUART
 2514 0062 C0F20000 	 movt r0,#:upper16:_ZZN4UART11getHostUARTEvE8hostUART
 2515 0066 4FF00001 	 mov r1,#0
 2516 006a 0A46     	 mov r2,r1
 2517 006c FFF7FEFF 	 bl _ZN4UARTC1Eh18communication_mode
 2518 0070 40F20000 	 movw r0,#:lower16:_ZGVZN4UART11getHostUARTEvE8hostUART
 2519 0074 C0F20000 	 movt r0,#:upper16:_ZGVZN4UART11getHostUARTEvE8hostUART
 2520 0078 FFF7FEFF 	 bl __cxa_guard_release
 2521              	.LVL215:
 2522              	.L151:
 2523              	.LBE392:
 2524              	.LBE391:
 2525              	.LBB393:
 2526              	.LBB394:
  98:src/MightyBoard/shared/Packet.hh **** 
  99:src/MightyBoard/shared/Packet.hh **** 	bool hasError() const {
 100:src/MightyBoard/shared/Packet.hh **** 		return error_code != PacketError::NO_ERROR;
 101:src/MightyBoard/shared/Packet.hh **** 	}
 102:src/MightyBoard/shared/Packet.hh **** 
 103:src/MightyBoard/shared/Packet.hh **** 	uint8_t getErrorCode() const { return error_code; }
 104:src/MightyBoard/shared/Packet.hh **** 
 105:src/MightyBoard/shared/Packet.hh **** 	// Reads an 8-bit byte from the specified index of the payload
 106:src/MightyBoard/shared/Packet.hh **** 	uint8_t read8(uint8_t idx) const;
 107:src/MightyBoard/shared/Packet.hh **** 	uint16_t read16(uint8_t idx) const;
 108:src/MightyBoard/shared/Packet.hh **** 	uint32_t read32(uint8_t idx) const;
 109:src/MightyBoard/shared/Packet.hh **** 
 110:src/MightyBoard/shared/Packet.hh **** 	uint8_t debugGetState() const { return state; }
 111:src/MightyBoard/shared/Packet.hh **** 
 112:src/MightyBoard/shared/Packet.hh **** 	const volatile uint8_t* getData() const { return payload; }
 113:src/MightyBoard/shared/Packet.hh **** };
 114:src/MightyBoard/shared/Packet.hh **** 
 115:src/MightyBoard/shared/Packet.hh **** /// Input Packet.
 116:src/MightyBoard/shared/Packet.hh **** class InPacket: public Packet {
 117:src/MightyBoard/shared/Packet.hh **** private:
 118:src/MightyBoard/shared/Packet.hh **** 	volatile uint8_t expected_length;
 119:src/MightyBoard/shared/Packet.hh **** public:
 120:src/MightyBoard/shared/Packet.hh **** 	InPacket();
 121:src/MightyBoard/shared/Packet.hh **** 
 122:src/MightyBoard/shared/Packet.hh **** 	/// Reset the entire packet reception.
 123:src/MightyBoard/shared/Packet.hh **** 	void reset();
 124:src/MightyBoard/shared/Packet.hh **** 
 125:src/MightyBoard/shared/Packet.hh **** 	//process a byte for our packet.
 126:src/MightyBoard/shared/Packet.hh **** 	void processByte(uint8_t b);
 127:src/MightyBoard/shared/Packet.hh **** 
 128:src/MightyBoard/shared/Packet.hh **** 	bool isFinished() const {
 129:src/MightyBoard/shared/Packet.hh **** 		return state == PS_LAST;
 130:src/MightyBoard/shared/Packet.hh **** 	}
 131:src/MightyBoard/shared/Packet.hh **** 
 132:src/MightyBoard/shared/Packet.hh **** 	bool isStarted() const {
 133:src/MightyBoard/shared/Packet.hh **** 		return state != PS_START;
 134:src/MightyBoard/shared/Packet.hh **** 	}
 135:src/MightyBoard/shared/Packet.hh **** 
 136:src/MightyBoard/shared/Packet.hh **** 	/// Indicate that this packet has timed out.  This means:
 137:src/MightyBoard/shared/Packet.hh **** 	/// * setting the PACKET_TIMEOUT error on the packet
 138:src/MightyBoard/shared/Packet.hh **** 	/// * the packet gets reset
 139:src/MightyBoard/shared/Packet.hh **** 	void timeout() {
 140:src/MightyBoard/shared/Packet.hh **** 		error(PacketError::PACKET_TIMEOUT);
 141:src/MightyBoard/shared/Packet.hh **** 	}
 142:src/MightyBoard/shared/Packet.hh **** };
 143:src/MightyBoard/shared/Packet.hh **** 
 144:src/MightyBoard/shared/Packet.hh **** /// Output Packet.
 145:src/MightyBoard/shared/Packet.hh **** class OutPacket: public Packet {
 146:src/MightyBoard/shared/Packet.hh **** private:
 147:src/MightyBoard/shared/Packet.hh **** 	uint8_t send_payload_index;
 148:src/MightyBoard/shared/Packet.hh **** public:
 149:src/MightyBoard/shared/Packet.hh **** 	OutPacket();
 150:src/MightyBoard/shared/Packet.hh **** 
 151:src/MightyBoard/shared/Packet.hh **** 	/// Reset the entire packet transmission.
 152:src/MightyBoard/shared/Packet.hh **** 	void reset();
 153:src/MightyBoard/shared/Packet.hh **** 
 154:src/MightyBoard/shared/Packet.hh **** 	bool isFinished() const {
 155:src/MightyBoard/shared/Packet.hh **** 		return state == PS_LAST;
 156:src/MightyBoard/shared/Packet.hh **** 	}
 157:src/MightyBoard/shared/Packet.hh **** 
 158:src/MightyBoard/shared/Packet.hh **** 	bool isSending() const {
 159:src/MightyBoard/shared/Packet.hh **** 		return state != PS_START && state != PS_LAST;
 2527              	 .loc 2 159 0
 2528 007c 40F20003 	 movw r3,#:lower16:_ZZN4UART11getHostUARTEvE8hostUART
 2529 0080 C0F20003 	 movt r3,#:upper16:_ZZN4UART11getHostUARTEvE8hostUART
 2530 0084 93F84B30 	 ldrb r3,[r3,#75]
 2531 0088 002B     	 cmp r3,#0
 2532 008a 00F04D81 	 beq .L153
 2533 008e 40F20003 	 movw r3,#:lower16:_ZZN4UART11getHostUARTEvE8hostUART
 2534 0092 C0F20003 	 movt r3,#:upper16:_ZZN4UART11getHostUARTEvE8hostUART
 2535 0096 93F84B30 	 ldrb r3,[r3,#75]
 2536 009a 042B     	 cmp r3,#4
 2537 009c 40F05681 	 bne .L150
 2538 00a0 42E1     	 b .L153
 2539              	.L170:
 2540              	.LBE394:
 2541              	.LBE393:
 107:src/MightyBoard/Motherboard/Host.cc **** 	if (do_host_reset && (!cancelBuild || cancel_timeout.hasElapsed())){
 2542              	 .loc 1 107 0 discriminator 1
 2543 00a2 40F20003 	 movw r3,#:lower16:.LANCHOR1
 2544 00a6 C0F20003 	 movt r3,#:upper16:.LANCHOR1
 2545 00aa 1B78     	 ldrb r3,[r3,#0]
 2546 00ac 43B1     	 cbz r3,.L155
 107:src/MightyBoard/Motherboard/Host.cc **** 	if (do_host_reset && (!cancelBuild || cancel_timeout.hasElapsed())){
 2547              	 .loc 1 107 0 is_stmt 0 discriminator 4
 2548 00ae 40F20000 	 movw r0,#:lower16:.LANCHOR10
 2549 00b2 C0F20000 	 movt r0,#:upper16:.LANCHOR10
 2550 00b6 FFF7FEFF 	 bl _ZN7Timeout10hasElapsedEv
 2551 00ba 0028     	 cmp r0,#0
 2552 00bc 00F03C81 	 beq .L156
 2553              	.L155:
 111:src/MightyBoard/Motherboard/Host.cc **** 		if((buildState == BUILD_RUNNING) || (buildState == BUILD_PAUSED)){
 2554              	 .loc 1 111 0 is_stmt 1 discriminator 5
 2555 00c0 40F20003 	 movw r3,#:lower16:.LANCHOR5
 2556 00c4 C0F20003 	 movt r3,#:upper16:.LANCHOR5
 2557 00c8 1B78     	 ldrb r3,[r3,#0]
 2558 00ca 032B     	 cmp r3,#3
 2559 00cc 14BF     	 ite ne
 2560 00ce 0022     	 movne r2,#0
 2561 00d0 0122     	 moveq r2,#1
 2562 00d2 012B     	 cmp r3,#1
 2563 00d4 14BF     	 ite ne
 2564 00d6 1346     	 movne r3,r2
 2565 00d8 42F00103 	 orreq r3,r2,#1
 2566 00dc 0BB1     	 cbz r3,.L157
 112:src/MightyBoard/Motherboard/Host.cc **** 			stopBuild();
 2567              	 .loc 1 112 0
 2568 00de FFF7FEFF 	 bl _ZN4host9stopBuildEv
 2569              	.L157:
 114:src/MightyBoard/Motherboard/Host.cc **** 		do_host_reset = false;
 2570              	 .loc 1 114 0
 2571 00e2 40F20003 	 movw r3,#:lower16:.LANCHOR12
 2572 00e6 C0F20003 	 movt r3,#:upper16:.LANCHOR12
 2573 00ea 4FF00004 	 mov r4,#0
 2574 00ee 1C70     	 strb r4,[r3,#0]
 118:src/MightyBoard/Motherboard/Host.cc ****  		reset(hard_reset);
 2575              	 .loc 1 118 0
 2576 00f0 40F20005 	 movw r5,#:lower16:.LANCHOR13
 2577 00f4 C0F20005 	 movt r5,#:upper16:.LANCHOR13
 2578 00f8 2878     	 ldrb r0,[r5,#0]
 2579 00fa FFF7FEFF 	 bl _Z5resetb
 122:src/MightyBoard/Motherboard/Host.cc **** 		hard_reset = false;
 2580              	 .loc 1 122 0
 2581 00fe 2C70     	 strb r4,[r5,#0]
 123:src/MightyBoard/Motherboard/Host.cc **** 		packet_in_timeout.abort();
 2582              	 .loc 1 123 0
 2583 0100 40F20000 	 movw r0,#:lower16:.LANCHOR14
 2584 0104 C0F20000 	 movt r0,#:upper16:.LANCHOR14
 2585 0108 FFF7FEFF 	 bl _ZN7Timeout5abortEv
 126:src/MightyBoard/Motherboard/Host.cc **** 		machineName[0] = 0;
 2586              	 .loc 1 126 0
 2587 010c 40F20003 	 movw r3,#:lower16:.LANCHOR2
 2588 0110 C0F20003 	 movt r3,#:upper16:.LANCHOR2
 2589 0114 1C70     	 strb r4,[r3,#0]
 127:src/MightyBoard/Motherboard/Host.cc **** 		buildName[0] = 0;
 2590              	 .loc 1 127 0
 2591 0116 40F20003 	 movw r3,#:lower16:.LANCHOR4
 2592 011a C0F20003 	 movt r3,#:upper16:.LANCHOR4
 2593 011e 1C70     	 strb r4,[r3,#0]
 128:src/MightyBoard/Motherboard/Host.cc **** 		currentState = HOST_STATE_READY;
 2594              	 .loc 1 128 0
 2595 0120 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2596 0124 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2597 0128 1C70     	 strb r4,[r3,#0]
 130:src/MightyBoard/Motherboard/Host.cc **** 		return;
 2598              	 .loc 1 130 0
 2599 012a 0FE1     	 b .L150
 2600              	.LVL216:
 2601              	.L171:
 2602              	.LBB395:
 2603              	.LBB396:
 129:src/MightyBoard/shared/Packet.hh **** 		return state == PS_LAST;
 2604              	 .loc 2 129 0
 2605 012c 40F20003 	 movw r3,#:lower16:_ZZN4UART11getHostUARTEvE8hostUART
 2606 0130 C0F20003 	 movt r3,#:upper16:_ZZN4UART11getHostUARTEvE8hostUART
 2607 0134 93F82630 	 ldrb r3,[r3,#38]
 2608              	.LBE396:
 2609              	.LBE395:
 133:src/MightyBoard/Motherboard/Host.cc **** 	if (in.isStarted() && !in.isFinished()) {
 2610              	 .loc 1 133 0
 2611 0138 042B     	 cmp r3,#4
 2612 013a 1FD0     	 beq .L158
 2613              	.LVL217:
 2614              	.LBB397:
 2615              	.LBB398:
 2616              	 .loc 4 60 0
 2617 013c 40F20003 	 movw r3,#:lower16:.LANCHOR14
 2618 0140 C0F20003 	 movt r3,#:upper16:.LANCHOR14
 2619              	.LBE398:
 2620              	.LBE397:
 135:src/MightyBoard/Motherboard/Host.cc **** 		if (!packet_in_timeout.isActive()) {
 2621              	 .loc 1 135 0
 2622 0144 1B78     	 ldrb r3,[r3,#0]
 2623 0146 53B9     	 cbnz r3,.L159
 137:src/MightyBoard/Motherboard/Host.cc **** 			packet_in_timeout.start(HOST_PACKET_TIMEOUT_MICROS);
 2624              	 .loc 1 137 0
 2625 0148 40F20000 	 movw r0,#:lower16:.LANCHOR14
 2626 014c C0F20000 	 movt r0,#:upper16:.LANCHOR14
 2627 0150 4FF45461 	 mov r1,#3392
 2628 0154 C0F20301 	 movt r1,3
 2629 0158 FFF7FEFF 	 bl _ZN7Timeout5startEm
 2630 015c 0EE0     	 b .L158
 2631              	.L159:
 138:src/MightyBoard/Motherboard/Host.cc **** 		} else if (packet_in_timeout.hasElapsed()) {
 2632              	 .loc 1 138 0
 2633 015e 40F20000 	 movw r0,#:lower16:.LANCHOR14
 2634 0162 C0F20000 	 movt r0,#:upper16:.LANCHOR14
 2635 0166 FFF7FEFF 	 bl _ZN7Timeout10hasElapsedEv
 2636 016a 38B1     	 cbz r0,.L158
 2637              	.LVL218:
 2638              	.LBB399:
 2639              	.LBB400:
 2640              	.LBB401:
  93:src/MightyBoard/shared/Packet.hh **** 		reset();
 2641              	 .loc 2 93 0
 2642 016c 784C     	 ldr r4,.L172
 2643              	.LVL219:
 2644 016e 2046     	 mov r0,r4
 2645 0170 FFF7FEFF 	 bl _ZN6Packet5resetEv
  94:src/MightyBoard/shared/Packet.hh **** 		error_code = error_code_in;
 2646              	 .loc 2 94 0
 2647 0174 4FF00403 	 mov r3,#4
 2648 0178 84F82230 	 strb r3,[r4,#34]
 2649              	.LVL220:
 2650              	.L158:
 2651              	.LBE401:
 2652              	.LBE400:
 2653              	.LBE399:
 2654              	.LBB402:
 2655              	.LBB403:
 100:src/MightyBoard/shared/Packet.hh **** 		return error_code != PacketError::NO_ERROR;
 2656              	 .loc 2 100 0
 2657 017c 40F20003 	 movw r3,#:lower16:_ZZN4UART11getHostUARTEvE8hostUART
 2658 0180 C0F20003 	 movt r3,#:upper16:_ZZN4UART11getHostUARTEvE8hostUART
 2659 0184 93F82530 	 ldrb r3,[r3,#37]
 2660              	.LBE403:
 2661              	.LBE402:
 143:src/MightyBoard/Motherboard/Host.cc **** 	if (in.hasError()) {
 2662              	 .loc 1 143 0
 2663 0188 13B1     	 cbz r3,.L160
 165:src/MightyBoard/Motherboard/Host.cc **** 		in.reset();
 2664              	 .loc 1 165 0
 2665 018a 7148     	 ldr r0,.L172
 2666              	.LVL221:
 2667 018c FFF7FEFF 	 bl _ZN8InPacket5resetEv
 2668              	.LVL222:
 2669              	.L160:
 2670              	.LBB404:
 2671              	.LBB405:
 129:src/MightyBoard/shared/Packet.hh **** 		return state == PS_LAST;
 2672              	 .loc 2 129 0
 2673 0190 40F20003 	 movw r3,#:lower16:_ZZN4UART11getHostUARTEvE8hostUART
 2674 0194 C0F20003 	 movt r3,#:upper16:_ZZN4UART11getHostUARTEvE8hostUART
 2675 0198 93F82630 	 ldrb r3,[r3,#38]
 2676              	.LBE405:
 2677              	.LBE404:
 170:src/MightyBoard/Motherboard/Host.cc **** 	if (in.isFinished()) {
 2678              	 .loc 1 170 0
 2679 019c 042B     	 cmp r3,#4
 2680 019e 40F09D80 	 bne .L161
 172:src/MightyBoard/Motherboard/Host.cc **** 		DEBUG_PIN1.setValue(false);
 2681              	 .loc 1 172 0
 2682 01a2 03A8     	 add r0,sp,#12
 2683 01a4 4FF0FF01 	 mov r1,#255
 2684 01a8 FFF7FEFF 	 bl _ZN7LPCPortC1Eh
 2685 01ac 01A8     	 add r0,sp,#4
 2686 01ae 03A9     	 add r1,sp,#12
 2687 01b0 4FF0FF02 	 mov r2,#255
 2688 01b4 FFF7FEFF 	 bl _ZN3PinC1ERK7LPCPorth
 2689              	.LVL223:
 2690              	.LBB406:
 2691              	.LBB407:
 2692              	 .file 7 "src/MightyBoard/shared/Pin.hh"
   1:src/MightyBoard/shared/Pin.hh **** #ifndef PIN_HH
   2:src/MightyBoard/shared/Pin.hh **** #define PIN_HH
   3:src/MightyBoard/shared/Pin.hh **** 
   4:src/MightyBoard/shared/Pin.hh **** #include "LPCPort.hh"
   5:src/MightyBoard/shared/Pin.hh **** #include "Pin.hh"
   6:src/MightyBoard/shared/Pin.hh **** extern "C" {
   7:src/MightyBoard/shared/Pin.hh **** 	#include "lpc17xx_gpio.h"
   8:src/MightyBoard/shared/Pin.hh **** 	#include "lpc17xx_pinsel.h"
   9:src/MightyBoard/shared/Pin.hh **** 	#include "comm.h"
  10:src/MightyBoard/shared/Pin.hh **** }
  11:src/MightyBoard/shared/Pin.hh **** 
  12:src/MightyBoard/shared/Pin.hh **** /// \ingroup HardwareLibraries
  13:src/MightyBoard/shared/Pin.hh **** class Pin {
  14:src/MightyBoard/shared/Pin.hh **** private:
  15:src/MightyBoard/shared/Pin.hh **** 	uint8_t port_base;
  16:src/MightyBoard/shared/Pin.hh **** 	bool is_null;
  17:src/MightyBoard/shared/Pin.hh **** 	uint8_t pin_index;
  18:src/MightyBoard/shared/Pin.hh **** 	uint8_t pin_mask;
  19:src/MightyBoard/shared/Pin.hh **** 	uint8_t pin_mask_inverted;
  20:src/MightyBoard/shared/Pin.hh **** 
  21:src/MightyBoard/shared/Pin.hh **** public:
  22:src/MightyBoard/shared/Pin.hh **** 	Pin();
  23:src/MightyBoard/shared/Pin.hh **** 	Pin(const LPCPort& port_in, uint8_t pin_index_in);
  24:src/MightyBoard/shared/Pin.hh **** 	Pin(const Pin& other_pin);
  25:src/MightyBoard/shared/Pin.hh **** 	bool isNull() const;
  26:src/MightyBoard/shared/Pin.hh **** 	void setDirection(bool out) const;
  27:src/MightyBoard/shared/Pin.hh **** 	bool /*Pin::*/getValue() const {
  28:src/MightyBoard/shared/Pin.hh **** 		if (is_null)
  29:src/MightyBoard/shared/Pin.hh **** 			return false; // null pin is always low ... ?
  30:src/MightyBoard/shared/Pin.hh **** 		return ((uint8_t)(FIO_ReadValue(port_base) & _BV(pin_index))?1:0);
  31:src/MightyBoard/shared/Pin.hh **** //		return (uint8_t)((uint8_t)PINx & (uint8_t)pin_mask) != 0;
  32:src/MightyBoard/shared/Pin.hh **** 	};
  33:src/MightyBoard/shared/Pin.hh **** 
  34:src/MightyBoard/shared/Pin.hh **** 	void /*Pin::*/setValue(bool on) const {
  35:src/MightyBoard/shared/Pin.hh **** 		if (is_null)
 2693              	 .loc 7 35 0
 2694 01b8 9DF80530 	 ldrb r3,[sp,#5]
 2695 01bc 4BB9     	 cbnz r3,.L162
  36:src/MightyBoard/shared/Pin.hh **** 		 	return;
  37:src/MightyBoard/shared/Pin.hh **** 		// uint8_t oldSREG = SREG;
  38:src/MightyBoard/shared/Pin.hh **** 
  39:src/MightyBoard/shared/Pin.hh **** //		xprintf("on:%d port_base:%d pi_index:%d" " (%s:%d)\n",on,port_base,pin_index,_F_,_L_);
  40:src/MightyBoard/shared/Pin.hh **** 		// cli();
  41:src/MightyBoard/shared/Pin.hh **** 		if (on) {
  42:src/MightyBoard/shared/Pin.hh **** //			PORTx |= pin_mask;
  43:src/MightyBoard/shared/Pin.hh **** //			xprintf("%x (%s:%d)\n",&GPIO_SetValue,_F_,_L_);
  44:src/MightyBoard/shared/Pin.hh **** 			GPIO_SetValue(port_base, _BV(pin_index));
  45:src/MightyBoard/shared/Pin.hh **** 		} else {
  46:src/MightyBoard/shared/Pin.hh **** //			PORTx &= pin_mask_inverted;
  47:src/MightyBoard/shared/Pin.hh **** //			xprintf("%x (%s:%d)\n",&GPIO_ClearValue,_F_,_L_);
  48:src/MightyBoard/shared/Pin.hh **** 			GPIO_ClearValue(port_base, _BV(pin_index));
 2696              	 .loc 7 48 0
 2697 01be 9DF80630 	 ldrb r3,[sp,#6]
 2698 01c2 9DF80400 	 ldrb r0,[sp,#4]
 2699 01c6 4FF00101 	 mov r1,#1
 2700 01ca 01FA03F1 	 lsl r1,r1,r3
 2701 01ce FFF7FEFF 	 bl GPIO_ClearValue
 2702              	.L162:
 2703              	.LBE407:
 2704              	.LBE406:
 173:src/MightyBoard/Motherboard/Host.cc **** 		packet_in_timeout.abort();
 2705              	 .loc 1 173 0
 2706 01d2 40F20000 	 movw r0,#:lower16:.LANCHOR14
 2707 01d6 C0F20000 	 movt r0,#:upper16:.LANCHOR14
 2708 01da FFF7FEFF 	 bl _ZN7Timeout5abortEv
 174:src/MightyBoard/Motherboard/Host.cc **** 		out.reset();
 2709              	 .loc 1 174 0
 2710 01de 5D48     	 ldr r0,.L172+4
 2711 01e0 FFF7FEFF 	 bl _ZN9OutPacket5resetEv
 176:src/MightyBoard/Motherboard/Host.cc **** 		if(currentState == HOST_STATE_HEAT_SHUTDOWN){
 2712              	 .loc 1 176 0
 2713 01e4 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2714 01e8 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2715 01ec 1B78     	 ldrb r3,[r3,#0]
 2716 01ee 062B     	 cmp r3,#6
 2717 01f0 18D1     	 bne .L163
 177:src/MightyBoard/Motherboard/Host.cc **** 			if(cancelBuild){
 2718              	 .loc 1 177 0
 2719 01f2 40F20003 	 movw r3,#:lower16:.LANCHOR1
 2720 01f6 C0F20003 	 movt r3,#:upper16:.LANCHOR1
 2721 01fa 1B78     	 ldrb r3,[r3,#0]
 2722 01fc 63B1     	 cbz r3,.L164
 178:src/MightyBoard/Motherboard/Host.cc **** 				out.append8(RC_CANCEL_BUILD);
 2723              	 .loc 1 178 0
 2724 01fe 5548     	 ldr r0,.L172+4
 2725 0200 4FF08901 	 mov r1,#137
 2726 0204 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 179:src/MightyBoard/Motherboard/Host.cc **** 				cancelBuild= false;
 2727              	 .loc 1 179 0
 2728 0208 40F20003 	 movw r3,#:lower16:.LANCHOR1
 2729 020c C0F20003 	 movt r3,#:upper16:.LANCHOR1
 2730 0210 4FF00002 	 mov r2,#0
 2731 0214 1A70     	 strb r2,[r3,#0]
 2732 0216 3AE0     	 b .L165
 2733              	.L164:
 181:src/MightyBoard/Motherboard/Host.cc **** 				out.append8(RC_BOT_OVERHEAT);
 2734              	 .loc 1 181 0
 2735 0218 4E48     	 ldr r0,.L172+4
 2736 021a 4FF08B01 	 mov r1,#139
 2737 021e FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 2738 0222 34E0     	 b .L165
 2739              	.L163:
 183:src/MightyBoard/Motherboard/Host.cc **** 		}else if(cancelBuild){
 2740              	 .loc 1 183 0
 2741 0224 40F20003 	 movw r3,#:lower16:.LANCHOR1
 2742 0228 C0F20003 	 movt r3,#:upper16:.LANCHOR1
 2743 022c 1B78     	 ldrb r3,[r3,#0]
 2744 022e A3B1     	 cbz r3,.L166
 184:src/MightyBoard/Motherboard/Host.cc **** 			out.append8(RC_CANCEL_BUILD);
 2745              	 .loc 1 184 0
 2746 0230 4848     	 ldr r0,.L172+4
 2747 0232 4FF08901 	 mov r1,#137
 2748 0236 FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 185:src/MightyBoard/Motherboard/Host.cc **** 			cancelBuild = false;
 2749              	 .loc 1 185 0
 2750 023a 40F20003 	 movw r3,#:lower16:.LANCHOR1
 2751 023e C0F20003 	 movt r3,#:upper16:.LANCHOR1
 2752 0242 4FF00002 	 mov r2,#0
 2753 0246 1A70     	 strb r2,[r3,#0]
 186:src/MightyBoard/Motherboard/Host.cc **** 			Motherboard::getBoard().indicateError(6);
 2754              	 .loc 1 186 0
 2755 0248 40F20000 	 movw r0,#:lower16:_ZN11Motherboard11motherboardE
 2756 024c C0F20000 	 movt r0,#:upper16:_ZN11Motherboard11motherboardE
 2757 0250 4FF00601 	 mov r1,#6
 2758 0254 FFF7FEFF 	 bl _ZN11Motherboard13indicateErrorEi
 2759 0258 19E0     	 b .L165
 2760              	.L166:
 189:src/MightyBoard/Motherboard/Host.cc **** 		if (processDebugPacket(in, out)) {
 2761              	 .loc 1 189 0
 2762 025a 3D49     	 ldr r1,.L172
 2763              	.LVL224:
 2764 025c 0846     	 mov r0,r1
 2765 025e 01F12501 	 add r1,r1,#37
 2766              	.LVL225:
 2767 0262 FFF7FEFF 	 bl _Z18processDebugPacketRK8InPacketR9OutPacket
 2768              	.LVL226:
 2769 0266 90B9     	 cbnz r0,.L165
 193:src/MightyBoard/Motherboard/Host.cc **** 		if (processCommandPacket(in, out)) {
 2770              	 .loc 1 193 0
 2771 0268 3949     	 ldr r1,.L172
 2772              	.LVL227:
 2773 026a 0846     	 mov r0,r1
 2774 026c 01F12501 	 add r1,r1,#37
 2775              	.LVL228:
 2776 0270 FFF7FEFF 	 bl _ZN4host20processCommandPacketERK8InPacketR9OutPacket
 2777              	.LVL229:
 2778 0274 58B9     	 cbnz r0,.L165
 195:src/MightyBoard/Motherboard/Host.cc **** 		} else if (processQueryPacket(in, out)) {
 2779              	 .loc 1 195 0
 2780 0276 3649     	 ldr r1,.L172
 2781              	.LVL230:
 2782 0278 0846     	 mov r0,r1
 2783 027a 01F12501 	 add r1,r1,#37
 2784              	.LVL231:
 2785 027e FFF7FEFF 	 bl _ZN4host18processQueryPacketERK8InPacketR9OutPacket
 2786              	.LVL232:
 2787 0282 20B9     	 cbnz r0,.L165
 199:src/MightyBoard/Motherboard/Host.cc **** 			out.append8(RC_CMD_UNSUPPORTED);
 2788              	 .loc 1 199 0
 2789 0284 3348     	 ldr r0,.L172+4
 2790 0286 4FF08501 	 mov r1,#133
 2791 028a FFF7FEFF 	 bl _ZN9OutPacket7append8Eh
 2792              	.L165:
 201:src/MightyBoard/Motherboard/Host.cc **** 		in.reset();
 2793              	 .loc 1 201 0
 2794 028e 3048     	 ldr r0,.L172
 2795              	.LVL233:
 2796 0290 FFF7FEFF 	 bl _ZN8InPacket5resetEv
 2797              	.LVL234:
 2798              	.LBB408:
 2799              	.LBB409:
 2800              	 .loc 6 56 0
 2801 0294 40F20003 	 movw r3,#:lower16:_ZGVZN4UART11getHostUARTEvE8hostUART
 2802 0298 C0F20003 	 movt r3,#:upper16:_ZGVZN4UART11getHostUARTEvE8hostUART
 2803 029c 1B68     	 ldr r3,[r3,#0]
 2804 029e 13F0010F 	 tst r3,#1
 2805 02a2 15D1     	 bne .L167
 2806 02a4 40F20000 	 movw r0,#:lower16:_ZGVZN4UART11getHostUARTEvE8hostUART
 2807 02a8 C0F20000 	 movt r0,#:upper16:_ZGVZN4UART11getHostUARTEvE8hostUART
 2808 02ac FFF7FEFF 	 bl __cxa_guard_acquire
 2809 02b0 70B1     	 cbz r0,.L167
 2810 02b2 40F20000 	 movw r0,#:lower16:_ZZN4UART11getHostUARTEvE8hostUART
 2811 02b6 C0F20000 	 movt r0,#:upper16:_ZZN4UART11getHostUARTEvE8hostUART
 2812 02ba 4FF00001 	 mov r1,#0
 2813 02be 0A46     	 mov r2,r1
 2814 02c0 FFF7FEFF 	 bl _ZN4UARTC1Eh18communication_mode
 2815 02c4 40F20000 	 movw r0,#:lower16:_ZGVZN4UART11getHostUARTEvE8hostUART
 2816 02c8 C0F20000 	 movt r0,#:upper16:_ZGVZN4UART11getHostUARTEvE8hostUART
 2817 02cc FFF7FEFF 	 bl __cxa_guard_release
 2818              	.L167:
 2819              	.LBE409:
 2820              	.LBE408:
 202:src/MightyBoard/Motherboard/Host.cc ****                 UART::getHostUART().beginSend();
 2821              	 .loc 1 202 0
 2822 02d0 40F20000 	 movw r0,#:lower16:_ZZN4UART11getHostUARTEvE8hostUART
 2823 02d4 C0F20000 	 movt r0,#:upper16:_ZZN4UART11getHostUARTEvE8hostUART
 2824 02d8 FFF7FEFF 	 bl _ZN4UART9beginSendEv
 2825              	.LVL235:
 2826              	.L161:
 205:src/MightyBoard/Motherboard/Host.cc **** 	if(currentState==HOST_STATE_BUILDING_FROM_SD)
 2827              	 .loc 1 205 0
 2828 02dc 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2829 02e0 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2830 02e4 1B78     	 ldrb r3,[r3,#0]
 2831 02e6 022B     	 cmp r3,#2
 2832 02e8 0AD1     	 bne .L168
 207:src/MightyBoard/Motherboard/Host.cc **** 		if(!sdcard::isPlaying())
 2833              	 .loc 1 207 0
 2834 02ea FFF7FEFF 	 bl _ZN6sdcard9isPlayingEv
 2835 02ee 38B9     	 cbnz r0,.L168
 208:src/MightyBoard/Motherboard/Host.cc **** 			currentState = HOST_STATE_READY;
 2836              	 .loc 1 208 0
 2837 02f0 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2838 02f4 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2839 02f8 4FF00002 	 mov r2,#0
 2840 02fc 1A70     	 strb r2,[r3,#0]
 2841 02fe 10E0     	 b .L169
 2842              	.L168:
 211:src/MightyBoard/Motherboard/Host.cc **** 	if((currentState==HOST_STATE_BUILDING_ONBOARD))
 2843              	 .loc 1 211 0
 2844 0300 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2845 0304 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2846 0308 1B78     	 ldrb r3,[r3,#0]
 2847 030a 052B     	 cmp r3,#5
 2848 030c 09D1     	 bne .L169
 213:src/MightyBoard/Motherboard/Host.cc **** 		if(!utility::isPlaying()){
 2849              	 .loc 1 213 0
 2850 030e FFF7FEFF 	 bl _ZN7utility9isPlayingEv
 2851 0312 30B9     	 cbnz r0,.L169
 214:src/MightyBoard/Motherboard/Host.cc **** 			currentState = HOST_STATE_READY;
 2852              	 .loc 1 214 0
 2853 0314 40F20003 	 movw r3,#:lower16:.LANCHOR0
 2854 0318 C0F20003 	 movt r3,#:upper16:.LANCHOR0
 2855 031c 4FF00002 	 mov r2,#0
 2856 0320 1A70     	 strb r2,[r3,#0]
 2857              	.L169:
 217:src/MightyBoard/Motherboard/Host.cc **** 	managePrintTime();
 2858              	 .loc 1 217 0
 2859 0322 FFF7FEFF 	 bl _ZN4host15managePrintTimeEv
 2860 0326 11E0     	 b .L150
 2861              	.LVL236:
 2862              	.L153:
 107:src/MightyBoard/Motherboard/Host.cc **** 	if (do_host_reset && (!cancelBuild || cancel_timeout.hasElapsed())){
 2863              	 .loc 1 107 0
 2864 0328 40F20003 	 movw r3,#:lower16:.LANCHOR12
 2865 032c C0F20003 	 movt r3,#:upper16:.LANCHOR12
 2866 0330 1B78     	 ldrb r3,[r3,#0]
 2867 0332 002B     	 cmp r3,#0
 2868 0334 7FF4B5AE 	 bne .L170
 2869              	.L156:
 2870              	.LVL237:
 2871              	.LBB410:
 2872              	.LBB411:
 133:src/MightyBoard/shared/Packet.hh **** 		return state != PS_START;
 2873              	 .loc 2 133 0
 2874 0338 40F20003 	 movw r3,#:lower16:_ZZN4UART11getHostUARTEvE8hostUART
 2875 033c C0F20003 	 movt r3,#:upper16:_ZZN4UART11getHostUARTEvE8hostUART
 2876 0340 93F82630 	 ldrb r3,[r3,#38]
 2877              	.LBE411:
 2878              	.LBE410:
 133:src/MightyBoard/Motherboard/Host.cc **** 	if (in.isStarted() && !in.isFinished()) {
 2879              	 .loc 1 133 0
 2880 0344 002B     	 cmp r3,#0
 2881 0346 7FF4F1AE 	 bne .L171
 2882 034a 17E7     	 b .L158
 2883              	.LVL238:
 2884              	.L150:
 2885              	.LBE388:
 218:src/MightyBoard/Motherboard/Host.cc **** }
 2886              	 .loc 1 218 0
 2887 034c 05B0     	 add sp,sp,#20
 2888 034e 30BD     	 pop {r4,r5,pc}
 2889              	.L173:
 2890              	 .align 2
 2891              	.L172:
 2892 0350 03000000 	 .word _ZZN4UART11getHostUARTEvE8hostUART+3
 2893 0354 28000000 	 .word _ZZN4UART11getHostUARTEvE8hostUART+40
 2894              	 .cfi_endproc
 2895              	.LFE118:
 2897              	 .section .text._GLOBAL__sub_I__ZN4host17packet_in_timeoutE,"ax",%progbits
 2898              	 .align 2
 2899              	 .thumb
 2900              	 .thumb_func
 2902              	_GLOBAL__sub_I__ZN4host17packet_in_timeoutE:
 2903              	.LFB157:
 817:src/MightyBoard/Motherboard/Host.cc **** 
 818:src/MightyBoard/Motherboard/Host.cc **** }
 2904              	 .loc 1 818 0
 2905              	 .cfi_startproc
 2906              	 
 2907              	 
 2908 0000 10B5     	 push {r4,lr}
 2909              	.LCFI23:
 2910              	 .cfi_def_cfa_offset 8
 2911              	 .cfi_offset 14,-4
 2912              	 .cfi_offset 4,-8
 2913              	.LVL239:
 2914              	.LBB414:
 2915              	.LBB415:
 2916              	 .file 8 "src/MightyBoard/shared/LPCPort.hh"
   1:src/MightyBoard/shared/LPCPort.hh **** /*
   2:src/MightyBoard/shared/LPCPort.hh **** * Copyright 2010 by Adam Mayer	 <adam@makerbot.com>
   3:src/MightyBoard/shared/LPCPort.hh **** *
   4:src/MightyBoard/shared/LPCPort.hh **** * This program is free software: you can redistribute it and/or modify
   5:src/MightyBoard/shared/LPCPort.hh **** * it under the terms of the GNU General Public License as published by
   6:src/MightyBoard/shared/LPCPort.hh **** * the Free Software Foundation, either version 3 of the License, or
   7:src/MightyBoard/shared/LPCPort.hh **** * (at your option) any later version.
   8:src/MightyBoard/shared/LPCPort.hh **** *
   9:src/MightyBoard/shared/LPCPort.hh **** * This program is distributed in the hope that it will be useful,
  10:src/MightyBoard/shared/LPCPort.hh **** * but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:src/MightyBoard/shared/LPCPort.hh **** * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:src/MightyBoard/shared/LPCPort.hh **** * GNU General Public License for more details.
  13:src/MightyBoard/shared/LPCPort.hh **** *
  14:src/MightyBoard/shared/LPCPort.hh **** * You should have received a copy of the GNU General Public License
  15:src/MightyBoard/shared/LPCPort.hh **** * along with this program.  If not, see <http://www.gnu.org/licenses/>
  16:src/MightyBoard/shared/LPCPort.hh **** */
  17:src/MightyBoard/shared/LPCPort.hh **** 
  18:src/MightyBoard/shared/LPCPort.hh **** #ifndef SHARED_AVR_PORT_HH_
  19:src/MightyBoard/shared/LPCPort.hh **** #define SHARED_AVR_PORT_HH_
  20:src/MightyBoard/shared/LPCPort.hh **** 
  21:src/MightyBoard/shared/LPCPort.hh **** #define __STDC_LIMIT_MACROS
  22:src/MightyBoard/shared/LPCPort.hh **** //#include <stdint.h>
  23:src/MightyBoard/shared/LPCPort.hh **** //#include <util/atomic.h>
  24:src/MightyBoard/shared/LPCPort.hh **** 
  25:src/MightyBoard/shared/LPCPort.hh **** extern "C" {
  26:src/MightyBoard/shared/LPCPort.hh **** 	#include "lpc_types.h"
  27:src/MightyBoard/shared/LPCPort.hh **** 	#include "lpc17xx_gpio.h"
  28:src/MightyBoard/shared/LPCPort.hh **** }
  29:src/MightyBoard/shared/LPCPort.hh **** 
  30:src/MightyBoard/shared/LPCPort.hh **** 
  31:src/MightyBoard/shared/LPCPort.hh **** #define NULL_PORT 0xff
  32:src/MightyBoard/shared/LPCPort.hh **** 
  33:src/MightyBoard/shared/LPCPort.hh **** class LPCPort {
  34:src/MightyBoard/shared/LPCPort.hh **** private:
  35:src/MightyBoard/shared/LPCPort.hh **** 	const uint8_t port_base;
  36:src/MightyBoard/shared/LPCPort.hh **** 	friend class Pin;
  37:src/MightyBoard/shared/LPCPort.hh **** public:
  38:src/MightyBoard/shared/LPCPort.hh **** 	LPCPort();
  39:src/MightyBoard/shared/LPCPort.hh **** 	LPCPort(uint8_t port_base_in);
  40:src/MightyBoard/shared/LPCPort.hh **** 	bool isNull() const;
  41:src/MightyBoard/shared/LPCPort.hh **** 	void setPinDirectionOut(uint8_t pin_index) const;
  42:src/MightyBoard/shared/LPCPort.hh **** 	void setPinDirectionIn(uint8_t pin_index) const;
  43:src/MightyBoard/shared/LPCPort.hh **** 	bool getPin(uint8_t pin_index) const;
  44:src/MightyBoard/shared/LPCPort.hh **** 	void setPinOn(uint8_t pin_index) const;
  45:src/MightyBoard/shared/LPCPort.hh **** 	void setPinOff(uint8_t pin_index) const;
  46:src/MightyBoard/shared/LPCPort.hh **** };
  47:src/MightyBoard/shared/LPCPort.hh **** 
  48:src/MightyBoard/shared/LPCPort.hh **** 
  49:src/MightyBoard/shared/LPCPort.hh **** const LPCPort Port0(0);
 2917              	 .loc 8 49 0
 2918 0002 40F20000 	 movw r0,#:lower16:.LANCHOR15
 2919 0006 C0F20000 	 movt r0,#:upper16:.LANCHOR15
 2920 000a 4FF00001 	 mov r1,#0
 2921 000e FFF7FEFF 	 bl _ZN7LPCPortC1Eh
  50:src/MightyBoard/shared/LPCPort.hh **** const LPCPort Port1(1);
 2922              	 .loc 8 50 0
 2923 0012 40F20000 	 movw r0,#:lower16:.LANCHOR16
 2924 0016 C0F20000 	 movt r0,#:upper16:.LANCHOR16
 2925 001a 4FF00101 	 mov r1,#1
 2926 001e FFF7FEFF 	 bl _ZN7LPCPortC1Eh
  51:src/MightyBoard/shared/LPCPort.hh **** const LPCPort Port2(2);
 2927              	 .loc 8 51 0
 2928 0022 40F20000 	 movw r0,#:lower16:.LANCHOR17
 2929 0026 C0F20000 	 movt r0,#:upper16:.LANCHOR17
 2930 002a 4FF00201 	 mov r1,#2
 2931 002e FFF7FEFF 	 bl _ZN7LPCPortC1Eh
  52:src/MightyBoard/shared/LPCPort.hh **** const LPCPort Port3(3);
 2932              	 .loc 8 52 0
 2933 0032 40F20000 	 movw r0,#:lower16:.LANCHOR18
 2934 0036 C0F20000 	 movt r0,#:upper16:.LANCHOR18
 2935 003a 4FF00301 	 mov r1,#3
 2936 003e FFF7FEFF 	 bl _ZN7LPCPortC1Eh
  53:src/MightyBoard/shared/LPCPort.hh **** const LPCPort Port4(4);
 2937              	 .loc 8 53 0
 2938 0042 40F20000 	 movw r0,#:lower16:.LANCHOR19
 2939 0046 C0F20000 	 movt r0,#:upper16:.LANCHOR19
 2940 004a 4FF00401 	 mov r1,#4
 2941 004e FFF7FEFF 	 bl _ZN7LPCPortC1Eh
  54:src/MightyBoard/shared/LPCPort.hh **** 
  55:src/MightyBoard/shared/LPCPort.hh **** const LPCPort NullPort(0xff);
 2942              	 .loc 8 55 0
 2943 0052 40F20004 	 movw r4,#:lower16:.LANCHOR20
 2944 0056 C0F20004 	 movt r4,#:upper16:.LANCHOR20
 2945 005a 2046     	 mov r0,r4
 2946 005c 4FF0FF01 	 mov r1,#255
 2947 0060 FFF7FEFF 	 bl _ZN7LPCPortC1Eh
  49:src/MightyBoard/shared/Pin.hh **** 		}
  50:src/MightyBoard/shared/Pin.hh **** 		// SREG = oldSREG;
  51:src/MightyBoard/shared/Pin.hh **** 	};
  52:src/MightyBoard/shared/Pin.hh **** 
  53:src/MightyBoard/shared/Pin.hh **** 	void /*Pin::*/setValueOn() const {
  54:src/MightyBoard/shared/Pin.hh **** 		if (is_null)
  55:src/MightyBoard/shared/Pin.hh **** 		 	return;
  56:src/MightyBoard/shared/Pin.hh **** 		// uint8_t oldSREG = SREG;
  57:src/MightyBoard/shared/Pin.hh **** 		// cli();
  58:src/MightyBoard/shared/Pin.hh **** //		PORTx |= pin_mask;
  59:src/MightyBoard/shared/Pin.hh **** 		GPIO_SetValue(port_base, _BV(pin_index));
  60:src/MightyBoard/shared/Pin.hh **** 		// SREG = oldSREG;
  61:src/MightyBoard/shared/Pin.hh **** 	};
  62:src/MightyBoard/shared/Pin.hh **** 
  63:src/MightyBoard/shared/Pin.hh **** 	void /*Pin::*/setValueOff() const {
  64:src/MightyBoard/shared/Pin.hh **** 		// if (is_null)
  65:src/MightyBoard/shared/Pin.hh **** 		// 	return;
  66:src/MightyBoard/shared/Pin.hh **** 		// uint8_t oldSREG = SREG;
  67:src/MightyBoard/shared/Pin.hh **** 		// cli();
  68:src/MightyBoard/shared/Pin.hh **** //		PORTx &= pin_mask_inverted;
  69:src/MightyBoard/shared/Pin.hh **** 		GPIO_ClearValue(port_base, _BV(pin_index));
  70:src/MightyBoard/shared/Pin.hh **** 		// SREG = oldSREG;
  71:src/MightyBoard/shared/Pin.hh **** 	};
  72:src/MightyBoard/shared/Pin.hh **** 	// currently not used:
  73:src/MightyBoard/shared/Pin.hh **** 	//const uint8_t getPinIndex() const { return pin_index; }
  74:src/MightyBoard/shared/Pin.hh **** };
  75:src/MightyBoard/shared/Pin.hh **** 
  76:src/MightyBoard/shared/Pin.hh **** static const Pin NullPin(NullPort, 0);
 2948              	 .loc 7 76 0
 2949 0064 40F20000 	 movw r0,#:lower16:.LANCHOR21
 2950 0068 C0F20000 	 movt r0,#:upper16:.LANCHOR21
 2951 006c 2146     	 mov r1,r4
 2952 006e 4FF00002 	 mov r2,#0
 2953 0072 FFF7FEFF 	 bl _ZN3PinC1ERK7LPCPorth
  57:src/MightyBoard/Motherboard/Host.cc **** Timeout packet_in_timeout;
 2954              	 .loc 1 57 0
 2955 0076 40F20000 	 movw r0,#:lower16:.LANCHOR14
 2956 007a C0F20000 	 movt r0,#:upper16:.LANCHOR14
 2957 007e FFF7FEFF 	 bl _ZN7TimeoutC1Ev
  58:src/MightyBoard/Motherboard/Host.cc **** Timeout cancel_timeout;
 2958              	 .loc 1 58 0
 2959 0082 40F20000 	 movw r0,#:lower16:.LANCHOR10
 2960 0086 C0F20000 	 movt r0,#:upper16:.LANCHOR10
 2961 008a FFF7FEFF 	 bl _ZN7TimeoutC1Ev
  89:src/MightyBoard/Motherboard/Host.cc **** Timeout print_time;
 2962              	 .loc 1 89 0
 2963 008e 40F20000 	 movw r0,#:lower16:.LANCHOR6
 2964 0092 C0F20000 	 movt r0,#:upper16:.LANCHOR6
 2965 0096 FFF7FEFF 	 bl _ZN7TimeoutC1Ev
 2966              	.LBE415:
 2967              	.LBE414:
 2968              	 .loc 1 818 0
 2969 009a 10BD     	 pop {r4,pc}
 2970              	 .cfi_endproc
 2971              	.LFE157:
 2973              	 .section .init_array,"aw",%init_array
 2974              	 .align 2
 2975 0000 00000000 	 .word _GLOBAL__sub_I__ZN4host17packet_in_timeoutE(target1)
 2976              	 .global _ZN4host11cancelBuildE
 2977              	 .global _ZN4host10hard_resetE
 2978              	 .global _ZN4host13do_host_resetE
 2979              	 .global _ZN4host10print_timeE
 2980              	 .global _ZN4host16print_time_hoursE
 2981              	 .global _ZN4host15last_print_lineE
 2982              	 .global _ZN4host18last_print_minutesE
 2983              	 .global _ZN4host16last_print_hoursE
 2984              	 .global _ZN4host10buildStateE
 2985              	 .global _ZN4host12currentStateE
 2986              	 .global _ZN4host9buildNameE
 2987              	 .global _ZN4host11machineNameE
 2988              	 .global _ZN4host14cancel_timeoutE
 2989              	 .global _ZN4host17packet_in_timeoutE
 2990              	 .weak _ZGVZN4UART11getHostUARTEvE8hostUART
 2991              	 .section .bss._ZGVZN4UART11getHostUARTEvE8hostUART,"awG",%nobits,_ZGVZN4UART11getHostUARTEvE8hostUART,comdat
 2992              	 .align 2
 2995              	_ZGVZN4UART11getHostUARTEvE8hostUART:
 2996 0000 00000000 	 .space 4
 2997              	 .weak _ZZN4UART11getHostUARTEvE8hostUART
 2998              	 .section .bss._ZZN4UART11getHostUARTEvE8hostUART,"awG",%nobits,_ZZN4UART11getHostUARTEvE8hostUART,comdat
 2999              	 .align 2
 3002              	_ZZN4UART11getHostUARTEvE8hostUART:
 3003 0000 00000000 	 .space 77
 3003      00000000 
 3003      00000000 
 3003      00000000 
 3003      00000000 
 3004 004d 000000   	 .section .bss._ZN4host12currentStateE,"aw",%nobits
 3005              	 .set .LANCHOR0,.+0
 3008              	_ZN4host12currentStateE:
 3009 0000 00       	 .space 1
 3010              	 .section .bss._ZN4host15last_print_lineE,"aw",%nobits
 3011              	 .align 2
 3012              	 .set .LANCHOR11,.+0
 3015              	_ZN4host15last_print_lineE:
 3016 0000 00000000 	 .space 4
 3017              	 .section .bss._ZL5Port0,"aw",%nobits
 3018              	 .align 2
 3019              	 .set .LANCHOR15,.+0
 3022              	_ZL5Port0:
 3023 0000 00       	 .space 1
 3024 0001 000000   	 .section .bss._ZN4host16last_print_hoursE,"aw",%nobits
 3025              	 .set .LANCHOR8,.+0
 3028              	_ZN4host16last_print_hoursE:
 3029 0000 00       	 .space 1
 3030              	 .section .bss._ZL5Port1,"aw",%nobits
 3031              	 .align 2
 3032              	 .set .LANCHOR16,.+0
 3035              	_ZL5Port1:
 3036 0000 00       	 .space 1
 3037 0001 000000   	 .section .bss._ZL5Port2,"aw",%nobits
 3038              	 .align 2
 3039              	 .set .LANCHOR17,.+0
 3042              	_ZL5Port2:
 3043 0000 00       	 .space 1
 3044 0001 000000   	 .section .bss._ZN4host13do_host_resetE,"aw",%nobits
 3045              	 .set .LANCHOR12,.+0
 3048              	_ZN4host13do_host_resetE:
 3049 0000 00       	 .space 1
 3050              	 .section .bss._ZN4host11machineNameE,"aw",%nobits
 3051              	 .align 2
 3052              	 .set .LANCHOR2,.+0
 3055              	_ZN4host11machineNameE:
 3056 0000 00000000 	 .space 16
 3056      00000000 
 3056      00000000 
 3056      00000000 
 3057              	 .section .bss._ZN4host11cancelBuildE,"aw",%nobits
 3058              	 .set .LANCHOR1,.+0
 3061              	_ZN4host11cancelBuildE:
 3062 0000 00       	 .space 1
 3063              	 .section .rodata._ZZN4host14getMachineNameEvE18defaultMachineName,"a",%progbits
 3064              	 .align 2
 3065              	 .set .LANCHOR3,.+0
 3068              	_ZZN4host14getMachineNameEvE18defaultMachineName:
 3069 0000 54686520 	 .ascii "The Replicat0r\000"
 3069      5265706C 
 3069      69636174 
 3069      307200
 3070 000f 00       	 .section .bss._ZL5Port3,"aw",%nobits
 3071              	 .align 2
 3072              	 .set .LANCHOR18,.+0
 3075              	_ZL5Port3:
 3076 0000 00       	 .space 1
 3077 0001 000000   	 .section .bss._ZN4host10print_timeE,"aw",%nobits
 3078              	 .align 2
 3079              	 .set .LANCHOR6,.+0
 3082              	_ZN4host10print_timeE:
 3083 0000 00000000 	 .space 16
 3083      00000000 
 3083      00000000 
 3083      00000000 
 3084              	 .section .bss._ZL5Port4,"aw",%nobits
 3085              	 .align 2
 3086              	 .set .LANCHOR19,.+0
 3089              	_ZL5Port4:
 3090 0000 00       	 .space 1
 3091 0001 000000   	 .section .rodata.str1.4,"aMS",%progbits,1
 3092              	 .align 2
 3093              	.LC0:
 3094 0000 52657047 	 .ascii "RepG Build\000"
 3094      20427569 
 3094      6C6400
 3095 000b 00       	 .section .bss._ZN4host17packet_in_timeoutE,"aw",%nobits
 3096              	 .align 2
 3097              	 .set .LANCHOR14,.+0
 3100              	_ZN4host17packet_in_timeoutE:
 3101 0000 00000000 	 .space 16
 3101      00000000 
 3101      00000000 
 3101      00000000 
 3102              	 .section .bss._ZL8NullPort,"aw",%nobits
 3103              	 .align 2
 3104              	 .set .LANCHOR20,.+0
 3107              	_ZL8NullPort:
 3108 0000 00       	 .space 1
 3109 0001 000000   	 .section .bss._ZN4host14cancel_timeoutE,"aw",%nobits
 3110              	 .align 2
 3111              	 .set .LANCHOR10,.+0
 3114              	_ZN4host14cancel_timeoutE:
 3115 0000 00000000 	 .space 16
 3115      00000000 
 3115      00000000 
 3115      00000000 
 3116              	 .section .bss._ZN4host10hard_resetE,"aw",%nobits
 3117              	 .set .LANCHOR13,.+0
 3120              	_ZN4host10hard_resetE:
 3121 0000 00       	 .space 1
 3122              	 .section .bss._ZN4host18last_print_minutesE,"aw",%nobits
 3123              	 .set .LANCHOR9,.+0
 3126              	_ZN4host18last_print_minutesE:
 3127 0000 00       	 .space 1
 3128              	 .section .bss._ZL7NullPin,"aw",%nobits
 3129              	 .align 2
 3130              	 .set .LANCHOR21,.+0
 3133              	_ZL7NullPin:
 3134 0000 00000000 	 .space 5
 3134      00
 3135 0005 000000   	 .section .bss._ZN4host10buildStateE,"aw",%nobits
 3136              	 .set .LANCHOR5,.+0
 3139              	_ZN4host10buildStateE:
 3140 0000 00       	 .space 1
 3141              	 .section .bss._ZN4host9buildNameE,"aw",%nobits
 3142              	 .align 2
 3143              	 .set .LANCHOR4,.+0
 3146              	_ZN4host9buildNameE:
 3147 0000 00000000 	 .space 31
 3147      00000000 
 3147      00000000 
 3147      00000000 
 3147      00000000 
 3148 001f 00       	 .section .bss._ZN4host16print_time_hoursE,"aw",%nobits
 3149              	 .set .LANCHOR7,.+0
 3152              	_ZN4host16print_time_hoursE:
 3153 0000 00       	 .space 1
 3154              	 .text
 3155              	.Letext0:
 3156              	 .file 9 "c:\\program files\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/gcc/arm-none-eabi/4.6.3/../../../../arm-none-eabi/include/stdint.h"
 3157              	 .file 10 "src/MightyBoard/Motherboard/SDCard.hh"
 3158              	 .file 11 "src/MightyBoard/Motherboard/Host.hh"
 3159              	 .file 12 "src/MightyBoard/shared/Types.hh"
 3160              	 .file 13 "src/MightyBoard/Motherboard/Point.hh"
 3161              	 .file 14 "src/MightyBoard/shared/TemperatureSensor.hh"
 3162              	 .file 15 "src/MightyBoard/shared/PID.hh"
 3163              	 .file 16 "src/MightyBoard/shared/Heater.hh"
 3164              	 .file 17 "src/MightyBoard/shared/HeatingElement.hh"
 3165              	 .file 18 "src/MightyBoard/Motherboard/EepromMap.hh"
 3166              	 .file 19 "src/MightyBoard/shared/CoolingFan.hh"
 3167              	 .file 20 "src/MightyBoard/Motherboard/ExtruderBoard.hh"
 3168              	 .file 21 "src/MightyBoard/Motherboard/Cutoff.hh"
 3169              	 .file 22 "src/MightyBoard/Motherboard/Planner.hh"
 3170              	 .file 23 "src/MightyBoard/Motherboard/UtilityScripts.hh"
 3171              	 .file 24 "src/MightyBoard/Motherboard/system/core_cm3.h"
 3172              	 .file 25 "src/MightyBoard/Motherboard/Version.hh"
 3173              	 .file 26 "src/MightyBoard/Motherboard/Command.hh"
DEFINED SYMBOLS
                            *ABS*:00000000 Host.cc
    {standard input}:19     .text._ZN4host20processCommandPacketERK8InPacketR9OutPacket:00000000 $t
    {standard input}:24     .text._ZN4host20processCommandPacketERK8InPacketR9OutPacket:00000000 _ZN4host20processCommandPacketERK8InPacketR9OutPacket
    {standard input}:187    .text._ZN4host12heatShutdownEv:00000000 $t
    {standard input}:192    .text._ZN4host12heatShutdownEv:00000000 _ZN4host12heatShutdownEv
    {standard input}:3005   .bss._ZN4host12currentStateE:00000000 .LANCHOR0
    {standard input}:3058   .bss._ZN4host11cancelBuildE:00000000 .LANCHOR1
    {standard input}:215    .text._ZN4host18handleNextFilenameERK8InPacketR9OutPacket:00000000 $t
    {standard input}:220    .text._ZN4host18handleNextFilenameERK8InPacketR9OutPacket:00000000 _ZN4host18handleNextFilenameERK8InPacketR9OutPacket
    {standard input}:344    .text._ZN4host16handleReadEepromERK8InPacketR9OutPacket:00000000 $t
    {standard input}:349    .text._ZN4host16handleReadEepromERK8InPacketR9OutPacket:00000000 _ZN4host16handleReadEepromERK8InPacketR9OutPacket
    {standard input}:434    .text._ZN4host14getMachineNameEv:00000000 $t
    {standard input}:439    .text._ZN4host14getMachineNameEv:00000000 _ZN4host14getMachineNameEv
    {standard input}:3052   .bss._ZN4host11machineNameE:00000000 .LANCHOR2
    {standard input}:3065   .rodata._ZZN4host14getMachineNameEvE18defaultMachineName:00000000 .LANCHOR3
    {standard input}:509    .text._ZN4host14getMachineNameEv:00000060 $d
    {standard input}:514    .text._ZN4host12getBuildNameEv:00000000 $t
    {standard input}:519    .text._ZN4host12getBuildNameEv:00000000 _ZN4host12getBuildNameEv
    {standard input}:3143   .bss._ZN4host9buildNameE:00000000 .LANCHOR4
    {standard input}:534    .text._ZN4host12getHostStateEv:00000000 $t
    {standard input}:539    .text._ZN4host12getHostStateEv:00000000 _ZN4host12getHostStateEv
    {standard input}:556    .text._ZN4host16startBuildFromSDEv:00000000 $t
    {standard input}:561    .text._ZN4host16startBuildFromSDEv:00000000 _ZN4host16startBuildFromSDEv
    {standard input}:620    .text._ZN4host16startBuildFromSDEv:00000054 $d
    {standard input}:625    .text._ZN4host17startOnboardBuildEh:00000000 $t
    {standard input}:630    .text._ZN4host17startOnboardBuildEh:00000000 _ZN4host17startOnboardBuildEh
    {standard input}:662    .text._ZN4host10pauseBuildEb:00000000 $t
    {standard input}:667    .text._ZN4host10pauseBuildEb:00000000 _ZN4host10pauseBuildEb
    {standard input}:3136   .bss._ZN4host10buildStateE:00000000 .LANCHOR5
    {standard input}:3079   .bss._ZN4host10print_timeE:00000000 .LANCHOR6
    {standard input}:718    .text._ZN4host14startPrintTimeEv:00000000 $t
    {standard input}:723    .text._ZN4host14startPrintTimeEv:00000000 _ZN4host14startPrintTimeEv
    {standard input}:3149   .bss._ZN4host16print_time_hoursE:00000000 .LANCHOR7
    {standard input}:751    .text._ZN4host28handleBuildStartNotificationER19CircularBufferTemplIhE:00000000 $t
    {standard input}:756    .text._ZN4host28handleBuildStartNotificationER19CircularBufferTemplIhE:00000000 _ZN4host28handleBuildStartNotificationER19CircularBufferTemplIhE
    {standard input}:785    .text._ZN4host28handleBuildStartNotificationER19CircularBufferTemplIhE:0000001a $d
    {standard input}:791    .text._ZN4host28handleBuildStartNotificationER19CircularBufferTemplIhE:00000020 $t
    {standard input}:3093   .rodata.str1.4:00000000 .LC0
    {standard input}:1003   .text._ZN4host15managePrintTimeEv:00000000 $t
    {standard input}:1008   .text._ZN4host15managePrintTimeEv:00000000 _ZN4host15managePrintTimeEv
    {standard input}:1042   .text._ZN4host12getPrintTimeERhS0_:00000000 $t
    {standard input}:1047   .text._ZN4host12getPrintTimeERhS0_:00000000 _ZN4host12getPrintTimeERhS0_
    {standard input}:3025   .bss._ZN4host16last_print_hoursE:00000000 .LANCHOR8
    {standard input}:3123   .bss._ZN4host18last_print_minutesE:00000000 .LANCHOR9
    {standard input}:1106   .text._ZN4host13stopPrintTimeEv:00000000 $t
    {standard input}:1111   .text._ZN4host13stopPrintTimeEv:00000000 _ZN4host13stopPrintTimeEv
    {standard input}:1157   .text._ZN4host9stopBuildEv:00000000 $t
    {standard input}:1162   .text._ZN4host9stopBuildEv:00000000 _ZN4host9stopBuildEv
    {standard input}:3111   .bss._ZN4host14cancel_timeoutE:00000000 .LANCHOR10
    {standard input}:3012   .bss._ZN4host15last_print_lineE:00000000 .LANCHOR11
    {standard input}:3045   .bss._ZN4host13do_host_resetE:00000000 .LANCHOR12
    {standard input}:1219   .text._ZN4host27handleBuildStopNotificationEh:00000000 $t
    {standard input}:1224   .text._ZN4host27handleBuildStopNotificationEh:00000000 _ZN4host27handleBuildStopNotificationEh
    {standard input}:1262   .text._ZN4host26processExtruderQueryPacketERK8InPacketR9OutPacket:00000000 $t
    {standard input}:1267   .text._ZN4host26processExtruderQueryPacketERK8InPacketR9OutPacket:00000000 _ZN4host26processExtruderQueryPacketERK8InPacketR9OutPacket
    {standard input}:1314   .text._ZN4host26processExtruderQueryPacketERK8InPacketR9OutPacket:0000002c $d
    {standard input}:1354   .text._ZN4host26processExtruderQueryPacketERK8InPacketR9OutPacket:00000078 $t
    {standard input}:1707   .text._ZN4host26processExtruderQueryPacketERK8InPacketR9OutPacket:00000288 $d
    {standard input}:1718   .text._ZN4host18processQueryPacketERK8InPacketR9OutPacket:00000000 $t
    {standard input}:1723   .text._ZN4host18processQueryPacketERK8InPacketR9OutPacket:00000000 _ZN4host18processQueryPacketERK8InPacketR9OutPacket
    {standard input}:1777   .text._ZN4host18processQueryPacketERK8InPacketR9OutPacket:00000032 $d
    {standard input}:1810   .text._ZN4host18processQueryPacketERK8InPacketR9OutPacket:0000006a $t
    {standard input}:2451   .text._ZN4host18processQueryPacketERK8InPacketR9OutPacket:000004c0 $d
    {standard input}:2456   .text._ZN4host12runHostSliceEv:00000000 $t
    {standard input}:2461   .text._ZN4host12runHostSliceEv:00000000 _ZN4host12runHostSliceEv
    {standard input}:2995   .bss._ZGVZN4UART11getHostUARTEvE8hostUART:00000000 _ZGVZN4UART11getHostUARTEvE8hostUART
    {standard input}:3002   .bss._ZZN4UART11getHostUARTEvE8hostUART:00000000 _ZZN4UART11getHostUARTEvE8hostUART
    {standard input}:3117   .bss._ZN4host10hard_resetE:00000000 .LANCHOR13
    {standard input}:3097   .bss._ZN4host17packet_in_timeoutE:00000000 .LANCHOR14
    {standard input}:2892   .text._ZN4host12runHostSliceEv:00000350 $d
    {standard input}:2898   .text._GLOBAL__sub_I__ZN4host17packet_in_timeoutE:00000000 $t
    {standard input}:2902   .text._GLOBAL__sub_I__ZN4host17packet_in_timeoutE:00000000 _GLOBAL__sub_I__ZN4host17packet_in_timeoutE
    {standard input}:3019   .bss._ZL5Port0:00000000 .LANCHOR15
    {standard input}:3032   .bss._ZL5Port1:00000000 .LANCHOR16
    {standard input}:3039   .bss._ZL5Port2:00000000 .LANCHOR17
    {standard input}:3072   .bss._ZL5Port3:00000000 .LANCHOR18
    {standard input}:3086   .bss._ZL5Port4:00000000 .LANCHOR19
    {standard input}:3104   .bss._ZL8NullPort:00000000 .LANCHOR20
    {standard input}:3130   .bss._ZL7NullPin:00000000 .LANCHOR21
    {standard input}:2974   .init_array:00000000 $d
    {standard input}:3061   .bss._ZN4host11cancelBuildE:00000000 _ZN4host11cancelBuildE
    {standard input}:3120   .bss._ZN4host10hard_resetE:00000000 _ZN4host10hard_resetE
    {standard input}:3048   .bss._ZN4host13do_host_resetE:00000000 _ZN4host13do_host_resetE
    {standard input}:3082   .bss._ZN4host10print_timeE:00000000 _ZN4host10print_timeE
    {standard input}:3152   .bss._ZN4host16print_time_hoursE:00000000 _ZN4host16print_time_hoursE
    {standard input}:3015   .bss._ZN4host15last_print_lineE:00000000 _ZN4host15last_print_lineE
    {standard input}:3126   .bss._ZN4host18last_print_minutesE:00000000 _ZN4host18last_print_minutesE
    {standard input}:3028   .bss._ZN4host16last_print_hoursE:00000000 _ZN4host16last_print_hoursE
    {standard input}:3139   .bss._ZN4host10buildStateE:00000000 _ZN4host10buildStateE
    {standard input}:3008   .bss._ZN4host12currentStateE:00000000 _ZN4host12currentStateE
    {standard input}:3146   .bss._ZN4host9buildNameE:00000000 _ZN4host9buildNameE
    {standard input}:3055   .bss._ZN4host11machineNameE:00000000 _ZN4host11machineNameE
    {standard input}:3114   .bss._ZN4host14cancel_timeoutE:00000000 _ZN4host14cancel_timeoutE
    {standard input}:3100   .bss._ZN4host17packet_in_timeoutE:00000000 _ZN4host17packet_in_timeoutE
    {standard input}:2992   .bss._ZGVZN4UART11getHostUARTEvE8hostUART:00000000 $d
    {standard input}:2999   .bss._ZZN4UART11getHostUARTEvE8hostUART:00000000 $d
    {standard input}:3009   .bss._ZN4host12currentStateE:00000000 $d
    {standard input}:3011   .bss._ZN4host15last_print_lineE:00000000 $d
    {standard input}:3018   .bss._ZL5Port0:00000000 $d
    {standard input}:3022   .bss._ZL5Port0:00000000 _ZL5Port0
    {standard input}:3029   .bss._ZN4host16last_print_hoursE:00000000 $d
    {standard input}:3031   .bss._ZL5Port1:00000000 $d
    {standard input}:3035   .bss._ZL5Port1:00000000 _ZL5Port1
    {standard input}:3038   .bss._ZL5Port2:00000000 $d
    {standard input}:3042   .bss._ZL5Port2:00000000 _ZL5Port2
    {standard input}:3049   .bss._ZN4host13do_host_resetE:00000000 $d
    {standard input}:3051   .bss._ZN4host11machineNameE:00000000 $d
    {standard input}:3062   .bss._ZN4host11cancelBuildE:00000000 $d
    {standard input}:3064   .rodata._ZZN4host14getMachineNameEvE18defaultMachineName:00000000 $d
    {standard input}:3068   .rodata._ZZN4host14getMachineNameEvE18defaultMachineName:00000000 _ZZN4host14getMachineNameEvE18defaultMachineName
    {standard input}:3071   .bss._ZL5Port3:00000000 $d
    {standard input}:3075   .bss._ZL5Port3:00000000 _ZL5Port3
    {standard input}:3078   .bss._ZN4host10print_timeE:00000000 $d
    {standard input}:3085   .bss._ZL5Port4:00000000 $d
    {standard input}:3089   .bss._ZL5Port4:00000000 _ZL5Port4
    {standard input}:3092   .rodata.str1.4:00000000 $d
    {standard input}:3096   .bss._ZN4host17packet_in_timeoutE:00000000 $d
    {standard input}:3103   .bss._ZL8NullPort:00000000 $d
    {standard input}:3107   .bss._ZL8NullPort:00000000 _ZL8NullPort
    {standard input}:3110   .bss._ZN4host14cancel_timeoutE:00000000 $d
    {standard input}:3121   .bss._ZN4host10hard_resetE:00000000 $d
    {standard input}:3127   .bss._ZN4host18last_print_minutesE:00000000 $d
    {standard input}:3129   .bss._ZL7NullPin:00000000 $d
    {standard input}:3133   .bss._ZL7NullPin:00000000 _ZL7NullPin
    {standard input}:3140   .bss._ZN4host10buildStateE:00000000 $d
    {standard input}:3142   .bss._ZN4host9buildNameE:00000000 $d
    {standard input}:3153   .bss._ZN4host16print_time_hoursE:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
_ZNK6Packet5read8Eh
_ZN6sdcard11isCapturingEv
_ZN6sdcard13capturePacketERK6Packet
_ZN9OutPacket7append8Eh
_ZN6sdcard9isPlayingEv
_ZN7utility9isPlayingEv
_ZN7command4pushEh
_ZN7command20getRemainingCapacityEv
_ZN6sdcard14directoryResetEv
_ZN6sdcard18directoryNextEntryEPchPh
_ZNK6Packet6read16Eh
_ZN6eeprom10getEeprom8Eth
_ZN6sdcard13startPlaybackEPc
_ZN6Heater22set_target_temperatureEi
_ZN7command5resetEv
_ZN8steppers5resetEv
_ZN7planner5abortEv
_ZN11Motherboard11motherboardE
_ZN7utility13startPlaybackEh
_ZN7command8isPausedEv
_ZN7command5pauseEb
_ZN7Timeout5pauseEb
_ZN7Timeout5startEm
strcmp
strcpy
_ZN7command15clearLineNumberEv
_ZN7Timeout10hasElapsedEv
_ZN7Timeout17getCurrentElapsedEv
_ZN6eeprom15updateBuildTimeEhh
_ZN7TimeoutC1Ev
_ZN7command13getLineNumberEv
_ZN9OutPacket8append16Et
_ZN6Heater23get_current_temperatureEv
_ZN6Heater30has_reached_target_temperatureEv
_ZN6Heater19get_set_temperatureEv
_ZN6Heater10has_failedEv
_ZN6Heater11GetFailModeEv
_ZN6Heater15getPIDErrorTermEv
_ZN6Heater15getPIDDeltaTermEv
_ZN6Heater16getPIDLastOutputEv
_ZN11Motherboard13indicateErrorEi
_ZN9OutPacket8append32Em
_ZN7planner11getPositionEv
_ZNK5PointixEj
_ZN8steppers16getEndstopStatusEv
_ZN6sdcard12startCaptureEPc
_ZN6sdcard13finishCaptureEv
_ZN6sdcard5resetEv
_ZN8steppers9isRunningEv
_ZN7command7isEmptyEv
_ZN6eeprom10setEeprom8Eth
_ZN11Motherboard14GetErrorStatusEv
__cxa_guard_acquire
_ZN4UARTC1Eh18communication_mode
__cxa_guard_release
_Z5resetb
_ZN7Timeout5abortEv
_ZN6Packet5resetEv
_ZN8InPacket5resetEv
_ZN7LPCPortC1Eh
_ZN3PinC1ERK7LPCPorth
GPIO_ClearValue
_ZN9OutPacket5resetEv
_Z18processDebugPacketRK8InPacketR9OutPacket
_ZN4UART9beginSendEv
