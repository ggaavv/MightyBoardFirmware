   1              	 .syntax unified
   2              	 .cpu cortex-m3
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,1
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "fat.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.fat_get_next_cluster,"ax",%progbits
  19              	 .align 2
  20              	 .thumb
  21              	 .thumb_func
  23              	fat_get_next_cluster:
  24              	.LFB58:
  25              	 .file 1 "src/MightyBoard/Motherboard/lib_sd/fat.c"
   1:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
   2:src/MightyBoard/Motherboard/lib_sd/fat.c **** /* 
   3:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Copyright (c) 2006-2010 by Roland Riegel <feedback@roland-riegel.de>
   4:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
   5:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * This file is free software; you can redistribute it and/or modify
   6:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * it under the terms of either the GNU General Public License version 2
   7:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * or the GNU Lesser General Public License version 2.1, both as
   8:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * published by the Free Software Foundation.
   9:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
  10:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
  11:src/MightyBoard/Motherboard/lib_sd/fat.c **** #define __STDC_LIMIT_MACROS 1
  12:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
  13:src/MightyBoard/Motherboard/lib_sd/fat.c **** #include "byteordering.h"
  14:src/MightyBoard/Motherboard/lib_sd/fat.c **** #include "partition.h"
  15:src/MightyBoard/Motherboard/lib_sd/fat.c **** #include "fat.h"
  16:src/MightyBoard/Motherboard/lib_sd/fat.c **** #include "fat_config.h"
  17:src/MightyBoard/Motherboard/lib_sd/fat.c **** #include "sd-reader_config.h"
  18:src/MightyBoard/Motherboard/lib_sd/fat.c **** #include <string.h>
  19:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
  20:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if USE_DYNAMIC_MEMORY
  21:src/MightyBoard/Motherboard/lib_sd/fat.c ****     #include <stdlib.h>
  22:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
  23:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
  24:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
  25:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \addtogroup fat FAT support
  26:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
  27:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * This module implements FAT16/FAT32 read and write access.
  28:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * 
  29:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * The following features are supported:
  30:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * - File names up to 31 characters long.
  31:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * - Unlimited depth of subdirectories.
  32:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * - Short 8.3 and long filenames.
  33:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * - Creating and deleting files.
  34:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * - Reading and writing from and to files.
  35:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * - File resizing.
  36:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * - File sizes of up to 4 gigabytes.
  37:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * 
  38:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * @{
  39:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
  40:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
  41:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \file
  42:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * FAT implementation (license: GPLv2 or LGPLv2.1)
  43:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
  44:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \author Roland Riegel
  45:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
  46:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
  47:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
  48:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \addtogroup fat_config FAT configuration
  49:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Preprocessor defines to configure the FAT implementation.
  50:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
  51:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
  52:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
  53:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \addtogroup fat_fs FAT access
  54:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Basic functions for handling a FAT filesystem.
  55:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
  56:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
  57:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
  58:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \addtogroup fat_file FAT file functions
  59:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Functions for managing files.
  60:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
  61:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
  62:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
  63:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \addtogroup fat_dir FAT directory functions
  64:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Functions for managing directories.
  65:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
  66:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
  67:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
  68:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * @}
  69:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
  70:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
  71:src/MightyBoard/Motherboard/lib_sd/fat.c **** #define FAT16_CLUSTER_FREE 0x0000
  72:src/MightyBoard/Motherboard/lib_sd/fat.c **** #define FAT16_CLUSTER_RESERVED_MIN 0xfff0
  73:src/MightyBoard/Motherboard/lib_sd/fat.c **** #define FAT16_CLUSTER_RESERVED_MAX 0xfff6
  74:src/MightyBoard/Motherboard/lib_sd/fat.c **** #define FAT16_CLUSTER_BAD 0xfff7
  75:src/MightyBoard/Motherboard/lib_sd/fat.c **** #define FAT16_CLUSTER_LAST_MIN 0xfff8
  76:src/MightyBoard/Motherboard/lib_sd/fat.c **** #define FAT16_CLUSTER_LAST_MAX 0xffff
  77:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
  78:src/MightyBoard/Motherboard/lib_sd/fat.c **** #define FAT32_CLUSTER_FREE 0x00000000
  79:src/MightyBoard/Motherboard/lib_sd/fat.c **** #define FAT32_CLUSTER_RESERVED_MIN 0x0ffffff0
  80:src/MightyBoard/Motherboard/lib_sd/fat.c **** #define FAT32_CLUSTER_RESERVED_MAX 0x0ffffff6
  81:src/MightyBoard/Motherboard/lib_sd/fat.c **** #define FAT32_CLUSTER_BAD 0x0ffffff7
  82:src/MightyBoard/Motherboard/lib_sd/fat.c **** #define FAT32_CLUSTER_LAST_MIN 0x0ffffff8
  83:src/MightyBoard/Motherboard/lib_sd/fat.c **** #define FAT32_CLUSTER_LAST_MAX 0x0fffffff
  84:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
  85:src/MightyBoard/Motherboard/lib_sd/fat.c **** #define FAT_DIRENTRY_DELETED 0xe5
  86:src/MightyBoard/Motherboard/lib_sd/fat.c **** #define FAT_DIRENTRY_LFNLAST (1 << 6)
  87:src/MightyBoard/Motherboard/lib_sd/fat.c **** #define FAT_DIRENTRY_LFNSEQMASK ((1 << 6) - 1)
  88:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
  89:src/MightyBoard/Motherboard/lib_sd/fat.c **** /* Each entry within the directory table has a size of 32 bytes
  90:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * and either contains a 8.3 DOS-style file name or a part of a
  91:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * long file name, which may consist of several directory table
  92:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * entries at once.
  93:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
  94:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * multi-byte integer values are stored little-endian!
  95:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
  96:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * 8.3 file name entry:
  97:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * ====================
  98:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * offset  length  description
  99:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *      0       8  name (space padded)
 100:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *      8       3  extension (space padded)
 101:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *     11       1  attributes (FAT_ATTRIB_*)
 102:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
 103:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * long file name (lfn) entry ordering for a single file name:
 104:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * ===========================================================
 105:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * LFN entry n
 106:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *     ...
 107:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * LFN entry 2
 108:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * LFN entry 1
 109:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * 8.3 entry (see above)
 110:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * 
 111:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * lfn entry:
 112:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * ==========
 113:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * offset  length  description
 114:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *      0       1  ordinal field
 115:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *      1       2  unicode character 1
 116:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *      3       3  unicode character 2
 117:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *      5       3  unicode character 3
 118:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *      7       3  unicode character 4
 119:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *      9       3  unicode character 5
 120:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *     11       1  attribute (always 0x0f)
 121:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *     12       1  type (reserved, always 0)
 122:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *     13       1  checksum
 123:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *     14       2  unicode character 6
 124:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *     16       2  unicode character 7
 125:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *     18       2  unicode character 8
 126:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *     20       2  unicode character 9
 127:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *     22       2  unicode character 10
 128:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *     24       2  unicode character 11
 129:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *     26       2  cluster (unused, always 0)
 130:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *     28       2  unicode character 12
 131:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *     30       2  unicode character 13
 132:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * 
 133:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * The ordinal field contains a descending number, from n to 1.
 134:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * For the n'th lfn entry the ordinal field is or'ed with 0x40.
 135:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * For deleted lfn entries, the ordinal field is set to 0xe5.
 136:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
 137:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 138:src/MightyBoard/Motherboard/lib_sd/fat.c **** struct fat_header_struct
 139:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 140:src/MightyBoard/Motherboard/lib_sd/fat.c ****     offset_t size;
 141:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 142:src/MightyBoard/Motherboard/lib_sd/fat.c ****     offset_t fat_offset;
 143:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint32_t fat_size;
 144:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 145:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint16_t sector_size;
 146:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint16_t cluster_size;
 147:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 148:src/MightyBoard/Motherboard/lib_sd/fat.c ****     offset_t cluster_zero_offset;
 149:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 150:src/MightyBoard/Motherboard/lib_sd/fat.c ****     offset_t root_dir_offset;
 151:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_FAT32_SUPPORT
 152:src/MightyBoard/Motherboard/lib_sd/fat.c ****     cluster_t root_dir_cluster;
 153:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 154:src/MightyBoard/Motherboard/lib_sd/fat.c **** };
 155:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 156:src/MightyBoard/Motherboard/lib_sd/fat.c **** struct fat_fs_struct
 157:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 158:src/MightyBoard/Motherboard/lib_sd/fat.c ****     struct partition_struct* partition;
 159:src/MightyBoard/Motherboard/lib_sd/fat.c ****     struct fat_header_struct header;
 160:src/MightyBoard/Motherboard/lib_sd/fat.c ****     cluster_t cluster_free;
 161:src/MightyBoard/Motherboard/lib_sd/fat.c **** };
 162:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 163:src/MightyBoard/Motherboard/lib_sd/fat.c **** struct fat_file_struct
 164:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 165:src/MightyBoard/Motherboard/lib_sd/fat.c ****     struct fat_fs_struct* fs;
 166:src/MightyBoard/Motherboard/lib_sd/fat.c ****     struct fat_dir_entry_struct dir_entry;
 167:src/MightyBoard/Motherboard/lib_sd/fat.c ****     offset_t pos;
 168:src/MightyBoard/Motherboard/lib_sd/fat.c ****     cluster_t pos_cluster;
 169:src/MightyBoard/Motherboard/lib_sd/fat.c **** #ifdef FAT_DELAY_DIRENTRY_UPDATE
 170:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint8_t needs_write;
 171:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 172:src/MightyBoard/Motherboard/lib_sd/fat.c **** };
 173:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 174:src/MightyBoard/Motherboard/lib_sd/fat.c **** struct fat_dir_struct
 175:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 176:src/MightyBoard/Motherboard/lib_sd/fat.c ****     struct fat_fs_struct* fs;
 177:src/MightyBoard/Motherboard/lib_sd/fat.c ****     struct fat_dir_entry_struct dir_entry;
 178:src/MightyBoard/Motherboard/lib_sd/fat.c ****     cluster_t entry_cluster;
 179:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint16_t entry_offset;
 180:src/MightyBoard/Motherboard/lib_sd/fat.c **** };
 181:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 182:src/MightyBoard/Motherboard/lib_sd/fat.c **** struct fat_read_dir_callback_arg
 183:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 184:src/MightyBoard/Motherboard/lib_sd/fat.c ****     struct fat_dir_entry_struct* dir_entry;
 185:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uintptr_t bytes_read;
 186:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_LFN_SUPPORT
 187:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint8_t checksum;
 188:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 189:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint8_t finished;
 190:src/MightyBoard/Motherboard/lib_sd/fat.c **** };
 191:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 192:src/MightyBoard/Motherboard/lib_sd/fat.c **** struct fat_usage_count_callback_arg
 193:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 194:src/MightyBoard/Motherboard/lib_sd/fat.c ****     cluster_t cluster_count;
 195:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uintptr_t buffer_size;
 196:src/MightyBoard/Motherboard/lib_sd/fat.c **** };
 197:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 198:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if !USE_DYNAMIC_MEMORY
 199:src/MightyBoard/Motherboard/lib_sd/fat.c **** static struct fat_fs_struct fat_fs_handles[FAT_FS_COUNT];
 200:src/MightyBoard/Motherboard/lib_sd/fat.c **** static struct fat_file_struct fat_file_handles[FAT_FILE_COUNT];
 201:src/MightyBoard/Motherboard/lib_sd/fat.c **** static struct fat_dir_struct fat_dir_handles[FAT_DIR_COUNT];
 202:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 203:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 204:src/MightyBoard/Motherboard/lib_sd/fat.c **** static uint8_t fat_read_header(struct fat_fs_struct* fs);
 205:src/MightyBoard/Motherboard/lib_sd/fat.c **** static cluster_t fat_get_next_cluster(const struct fat_fs_struct* fs, cluster_t cluster_num);
 206:src/MightyBoard/Motherboard/lib_sd/fat.c **** static offset_t fat_cluster_offset(const struct fat_fs_struct* fs, cluster_t cluster_num);
 207:src/MightyBoard/Motherboard/lib_sd/fat.c **** static uint8_t fat_dir_entry_read_callback(uint8_t* buffer, offset_t offset, void* p);
 208:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_LFN_SUPPORT
 209:src/MightyBoard/Motherboard/lib_sd/fat.c **** static uint8_t fat_calc_83_checksum(const uint8_t* file_name_83);
 210:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 211:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 212:src/MightyBoard/Motherboard/lib_sd/fat.c **** static uint8_t fat_get_fs_free_16_callback(uint8_t* buffer, offset_t offset, void* p);
 213:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_FAT32_SUPPORT
 214:src/MightyBoard/Motherboard/lib_sd/fat.c **** static uint8_t fat_get_fs_free_32_callback(uint8_t* buffer, offset_t offset, void* p);
 215:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 216:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 217:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_WRITE_SUPPORT
 218:src/MightyBoard/Motherboard/lib_sd/fat.c **** static cluster_t fat_append_clusters(struct fat_fs_struct* fs, cluster_t cluster_num, cluster_t cou
 219:src/MightyBoard/Motherboard/lib_sd/fat.c **** static uint8_t fat_free_clusters(struct fat_fs_struct* fs, cluster_t cluster_num);
 220:src/MightyBoard/Motherboard/lib_sd/fat.c **** static uint8_t fat_terminate_clusters(struct fat_fs_struct* fs, cluster_t cluster_num);
 221:src/MightyBoard/Motherboard/lib_sd/fat.c **** static uint8_t fat_clear_cluster(const struct fat_fs_struct* fs, cluster_t cluster_num);
 222:src/MightyBoard/Motherboard/lib_sd/fat.c **** static uintptr_t fat_clear_cluster_callback(uint8_t* buffer, offset_t offset, void* p);
 223:src/MightyBoard/Motherboard/lib_sd/fat.c **** static offset_t fat_find_offset_for_dir_entry(struct fat_fs_struct* fs, const struct fat_dir_struct
 224:src/MightyBoard/Motherboard/lib_sd/fat.c **** static uint8_t fat_write_dir_entry(const struct fat_fs_struct* fs, struct fat_dir_entry_struct* dir
 225:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_DATETIME_SUPPORT
 226:src/MightyBoard/Motherboard/lib_sd/fat.c **** static void fat_set_file_modification_date(struct fat_dir_entry_struct* dir_entry, uint16_t year, u
 227:src/MightyBoard/Motherboard/lib_sd/fat.c **** static void fat_set_file_modification_time(struct fat_dir_entry_struct* dir_entry, uint8_t hour, ui
 228:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 229:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 230:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 231:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
 232:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_fs
 233:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Opens a FAT filesystem.
 234:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
 235:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] partition Discriptor of partition on which the filesystem resides.
 236:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \returns 0 on error, a FAT filesystem descriptor on success.
 237:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \see fat_close
 238:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
 239:src/MightyBoard/Motherboard/lib_sd/fat.c **** struct fat_fs_struct* fat_open(struct partition_struct* partition)
 240:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 241:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!partition ||
 242:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_WRITE_SUPPORT
 243:src/MightyBoard/Motherboard/lib_sd/fat.c ****        !partition->device_write ||
 244:src/MightyBoard/Motherboard/lib_sd/fat.c ****        !partition->device_write_interval
 245:src/MightyBoard/Motherboard/lib_sd/fat.c **** #else
 246:src/MightyBoard/Motherboard/lib_sd/fat.c ****        0
 247:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 248:src/MightyBoard/Motherboard/lib_sd/fat.c ****       )
 249:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 250:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 251:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if USE_DYNAMIC_MEMORY
 252:src/MightyBoard/Motherboard/lib_sd/fat.c ****     struct fat_fs_struct* fs = malloc(sizeof(*fs));
 253:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs)
 254:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 255:src/MightyBoard/Motherboard/lib_sd/fat.c **** #else
 256:src/MightyBoard/Motherboard/lib_sd/fat.c ****     struct fat_fs_struct* fs = fat_fs_handles;
 257:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint8_t i;
 258:src/MightyBoard/Motherboard/lib_sd/fat.c ****     for(i = 0; i < FAT_FS_COUNT; ++i)
 259:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
 260:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fs->partition)
 261:src/MightyBoard/Motherboard/lib_sd/fat.c ****             break;
 262:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 263:src/MightyBoard/Motherboard/lib_sd/fat.c ****         ++fs;
 264:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
 265:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(i >= FAT_FS_COUNT)
 266:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 267:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 268:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 269:src/MightyBoard/Motherboard/lib_sd/fat.c ****     memset(fs, 0, sizeof(*fs));
 270:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 271:src/MightyBoard/Motherboard/lib_sd/fat.c ****     fs->partition = partition;
 272:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fat_read_header(fs))
 273:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
 274:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if USE_DYNAMIC_MEMORY
 275:src/MightyBoard/Motherboard/lib_sd/fat.c ****         free(fs);
 276:src/MightyBoard/Motherboard/lib_sd/fat.c **** #else
 277:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fs->partition = 0;
 278:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 279:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 280:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
 281:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 282:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return fs;
 283:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 284:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 285:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
 286:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_fs
 287:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Closes a FAT filesystem.
 288:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
 289:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * When this function returns, the given filesystem descriptor
 290:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * will be invalid.
 291:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
 292:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] fs The filesystem to close.
 293:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \see fat_open
 294:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
 295:src/MightyBoard/Motherboard/lib_sd/fat.c **** void fat_close(struct fat_fs_struct* fs)
 296:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 297:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs)
 298:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return;
 299:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 300:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if USE_DYNAMIC_MEMORY
 301:src/MightyBoard/Motherboard/lib_sd/fat.c ****     free(fs);
 302:src/MightyBoard/Motherboard/lib_sd/fat.c **** #else
 303:src/MightyBoard/Motherboard/lib_sd/fat.c ****     fs->partition = 0;
 304:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 305:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 306:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 307:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
 308:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_fs
 309:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Reads and parses the header of a FAT filesystem.
 310:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
 311:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[inout] fs The filesystem for which to parse the header.
 312:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \returns 0 on failure, 1 on success.
 313:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
 314:src/MightyBoard/Motherboard/lib_sd/fat.c **** uint8_t fat_read_header(struct fat_fs_struct* fs)
 315:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 316:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs)
 317:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 318:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 319:src/MightyBoard/Motherboard/lib_sd/fat.c ****     struct partition_struct* partition = fs->partition;
 320:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!partition)
 321:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 322:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 323:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* read fat parameters */
 324:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_FAT32_SUPPORT
 325:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint8_t buffer[37];
 326:src/MightyBoard/Motherboard/lib_sd/fat.c **** #else
 327:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint8_t buffer[25];
 328:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 329:src/MightyBoard/Motherboard/lib_sd/fat.c ****     offset_t partition_offset = (offset_t) partition->offset * 512;
 330:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!partition->device_read(partition_offset + 0x0b, buffer, sizeof(buffer)))
 331:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 332:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 333:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint16_t bytes_per_sector = ltoh16(*((uint16_t*) &buffer[0x00]));
 334:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint16_t reserved_sectors = ltoh16(*((uint16_t*) &buffer[0x03]));
 335:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint8_t sectors_per_cluster = buffer[0x02];
 336:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint8_t fat_copies = buffer[0x05];
 337:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint16_t max_root_entries = ltoh16(*((uint16_t*) &buffer[0x06]));
 338:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint16_t sector_count_16 = ltoh16(*((uint16_t*) &buffer[0x08]));
 339:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint16_t sectors_per_fat = ltoh16(*((uint16_t*) &buffer[0x0b]));
 340:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint32_t sector_count = ltoh32(*((uint32_t*) &buffer[0x15]));
 341:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_FAT32_SUPPORT
 342:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint32_t sectors_per_fat32 = ltoh32(*((uint32_t*) &buffer[0x19]));
 343:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint32_t cluster_root_dir = ltoh32(*((uint32_t*) &buffer[0x21]));
 344:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 345:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 346:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(sector_count == 0)
 347:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
 348:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(sector_count_16 == 0)
 349:src/MightyBoard/Motherboard/lib_sd/fat.c ****             /* illegal volume size */
 350:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return 0;
 351:src/MightyBoard/Motherboard/lib_sd/fat.c ****         else
 352:src/MightyBoard/Motherboard/lib_sd/fat.c ****             sector_count = sector_count_16;
 353:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
 354:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_FAT32_SUPPORT
 355:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(sectors_per_fat != 0)
 356:src/MightyBoard/Motherboard/lib_sd/fat.c ****         sectors_per_fat32 = sectors_per_fat;
 357:src/MightyBoard/Motherboard/lib_sd/fat.c ****     else if(sectors_per_fat32 == 0)
 358:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* this is neither FAT16 nor FAT32 */
 359:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 360:src/MightyBoard/Motherboard/lib_sd/fat.c **** #else
 361:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(sectors_per_fat == 0)
 362:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* this is not a FAT16 */
 363:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 364:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 365:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 366:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* determine the type of FAT we have here */
 367:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint32_t data_sector_count = sector_count
 368:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                  - reserved_sectors
 369:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_FAT32_SUPPORT
 370:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                  - sectors_per_fat32 * fat_copies
 371:src/MightyBoard/Motherboard/lib_sd/fat.c **** #else
 372:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                  - (uint32_t) sectors_per_fat * fat_copies
 373:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 374:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                  - ((max_root_entries * 32 + bytes_per_sector - 1) / bytes_per_sect
 375:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint32_t data_cluster_count = data_sector_count / sectors_per_cluster;
 376:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(data_cluster_count < 4085)
 377:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* this is a FAT12, not supported */
 378:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 379:src/MightyBoard/Motherboard/lib_sd/fat.c ****     else if(data_cluster_count < 65525)
 380:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* this is a FAT16 */
 381:src/MightyBoard/Motherboard/lib_sd/fat.c ****         partition->type = PARTITION_TYPE_FAT16;
 382:src/MightyBoard/Motherboard/lib_sd/fat.c ****     else
 383:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* this is a FAT32 */
 384:src/MightyBoard/Motherboard/lib_sd/fat.c ****         partition->type = PARTITION_TYPE_FAT32;
 385:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 386:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* fill header information */
 387:src/MightyBoard/Motherboard/lib_sd/fat.c ****     struct fat_header_struct* header = &fs->header;
 388:src/MightyBoard/Motherboard/lib_sd/fat.c ****     memset(header, 0, sizeof(*header));
 389:src/MightyBoard/Motherboard/lib_sd/fat.c ****     
 390:src/MightyBoard/Motherboard/lib_sd/fat.c ****     header->size = (offset_t) sector_count * bytes_per_sector;
 391:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 392:src/MightyBoard/Motherboard/lib_sd/fat.c ****     header->fat_offset = /* jump to partition */
 393:src/MightyBoard/Motherboard/lib_sd/fat.c ****                          partition_offset +
 394:src/MightyBoard/Motherboard/lib_sd/fat.c ****                          /* jump to fat */
 395:src/MightyBoard/Motherboard/lib_sd/fat.c ****                          (offset_t) reserved_sectors * bytes_per_sector;
 396:src/MightyBoard/Motherboard/lib_sd/fat.c ****     header->fat_size = (data_cluster_count + 2) * (partition->type == PARTITION_TYPE_FAT16 ? 2 : 4)
 397:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 398:src/MightyBoard/Motherboard/lib_sd/fat.c ****     header->sector_size = bytes_per_sector;
 399:src/MightyBoard/Motherboard/lib_sd/fat.c ****     header->cluster_size = (uint16_t) bytes_per_sector * sectors_per_cluster;
 400:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 401:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_FAT32_SUPPORT
 402:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(partition->type == PARTITION_TYPE_FAT16)
 403:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 404:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
 405:src/MightyBoard/Motherboard/lib_sd/fat.c ****         header->root_dir_offset = /* jump to fats */
 406:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                   header->fat_offset +
 407:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                   /* jump to root directory entries */
 408:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                   (offset_t) fat_copies * sectors_per_fat * bytes_per_sector;
 409:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 410:src/MightyBoard/Motherboard/lib_sd/fat.c ****         header->cluster_zero_offset = /* jump to root directory entries */
 411:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                       header->root_dir_offset +
 412:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                       /* skip root directory entries */
 413:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                       (offset_t) max_root_entries * 32;
 414:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
 415:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_FAT32_SUPPORT
 416:src/MightyBoard/Motherboard/lib_sd/fat.c ****     else
 417:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
 418:src/MightyBoard/Motherboard/lib_sd/fat.c ****         header->cluster_zero_offset = /* jump to fats */
 419:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                       header->fat_offset +
 420:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                       /* skip fats */
 421:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                       (offset_t) fat_copies * sectors_per_fat32 * bytes_per_sector;
 422:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 423:src/MightyBoard/Motherboard/lib_sd/fat.c ****         header->root_dir_cluster = cluster_root_dir;
 424:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
 425:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 426:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 427:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return 1;
 428:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 429:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 430:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
 431:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_fs
 432:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Retrieves the next following cluster of a given cluster.
 433:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
 434:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Using the filesystem file allocation table, this function returns
 435:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * the number of the cluster containing the data directly following
 436:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * the data within the cluster with the given number.
 437:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
 438:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] fs The filesystem for which to determine the next cluster.
 439:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] cluster_num The number of the cluster for which to determine its successor.
 440:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \returns The wanted cluster number, or 0 on error.
 441:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
 442:src/MightyBoard/Motherboard/lib_sd/fat.c **** cluster_t fat_get_next_cluster(const struct fat_fs_struct* fs, cluster_t cluster_num)
 443:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
  26              	 .loc 1 443 0
  27              	 .cfi_startproc
  28              	 
  29              	 
  30              	.LVL0:
  31 0000 00B5     	 push {lr}
  32              	.LCFI0:
  33              	 .cfi_def_cfa_offset 4
  34              	 .cfi_offset 14,-4
  35 0002 83B0     	 sub sp,sp,#12
  36              	.LCFI1:
  37              	 .cfi_def_cfa_offset 16
 444:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs || cluster_num < 2)
  38              	 .loc 1 444 0
  39 0004 0129     	 cmp r1,#1
  40 0006 8CBF     	 ite hi
  41 0008 0023     	 movhi r3,#0
  42 000a 0123     	 movls r3,#1
  43 000c 0028     	 cmp r0,#0
  44 000e 08BF     	 it eq
  45 0010 43F00103 	 orreq r3,r3,#1
  46 0014 43BB     	 cbnz r3,.L3
  47              	.LBB2:
 445:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 446:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 447:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_FAT32_SUPPORT
 448:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(fs->partition->type == PARTITION_TYPE_FAT32)
 449:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
 450:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* read appropriate fat entry */
 451:src/MightyBoard/Motherboard/lib_sd/fat.c ****         uint32_t fat_entry;
 452:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fs->partition->device_read(fs->header.fat_offset + cluster_num * sizeof(fat_entry), (ui
 453:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return 0;
 454:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 455:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* determine next cluster from fat */
 456:src/MightyBoard/Motherboard/lib_sd/fat.c ****         cluster_num = ltoh32(fat_entry);
 457:src/MightyBoard/Motherboard/lib_sd/fat.c ****         
 458:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(cluster_num == FAT32_CLUSTER_FREE ||
 459:src/MightyBoard/Motherboard/lib_sd/fat.c ****            cluster_num == FAT32_CLUSTER_BAD ||
 460:src/MightyBoard/Motherboard/lib_sd/fat.c ****            (cluster_num >= FAT32_CLUSTER_RESERVED_MIN && cluster_num <= FAT32_CLUSTER_RESERVED_MAX)
 461:src/MightyBoard/Motherboard/lib_sd/fat.c ****            (cluster_num >= FAT32_CLUSTER_LAST_MIN && cluster_num <= FAT32_CLUSTER_LAST_MAX))
 462:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return 0;
 463:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
 464:src/MightyBoard/Motherboard/lib_sd/fat.c ****     else
 465:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 466:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
 467:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* read appropriate fat entry */
 468:src/MightyBoard/Motherboard/lib_sd/fat.c ****         uint16_t fat_entry;
 469:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fs->partition->device_read(fs->header.fat_offset + cluster_num * sizeof(fat_entry), (ui
  48              	 .loc 1 469 0
  49 0016 0368     	 ldr r3,[r0,#0]
  50 0018 8068     	 ldr r0,[r0,#8]
  51              	.LVL1:
  52 001a 1B68     	 ldr r3,[r3,#0]
  53 001c 00EB4100 	 add r0,r0,r1,lsl#1
  54 0020 0DF10601 	 add r1,sp,#6
  55              	.LVL2:
  56 0024 4FF00202 	 mov r2,#2
  57 0028 9847     	 blx r3
  58 002a 00B3     	 cbz r0,.L4
  59              	.LVL3:
 470:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return 0;
 471:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 472:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* determine next cluster from fat */
 473:src/MightyBoard/Motherboard/lib_sd/fat.c ****         cluster_num = ltoh16(fat_entry);
  60              	 .loc 1 473 0
  61 002c BDF80600 	 ldrh r0,[sp,#6]
  62              	.LVL4:
 474:src/MightyBoard/Motherboard/lib_sd/fat.c ****         
 475:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(cluster_num == FAT16_CLUSTER_FREE ||
 476:src/MightyBoard/Motherboard/lib_sd/fat.c ****            cluster_num == FAT16_CLUSTER_BAD ||
  63              	 .loc 1 476 0
  64 0030 4FF6F773 	 movw r3,#65527
  65 0034 9842     	 cmp r0,r3
  66 0036 14BF     	 ite ne
  67 0038 0023     	 movne r3,#0
  68 003a 0123     	 moveq r3,#1
 475:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(cluster_num == FAT16_CLUSTER_FREE ||
  69              	 .loc 1 475 0
  70 003c 0028     	 cmp r0,#0
  71 003e 08BF     	 it eq
  72 0040 43F00103 	 orreq r3,r3,#1
  73 0044 B3B9     	 cbnz r3,.L5
 477:src/MightyBoard/Motherboard/lib_sd/fat.c ****            (cluster_num >= FAT16_CLUSTER_RESERVED_MIN && cluster_num <= FAT16_CLUSTER_RESERVED_MAX)
  74              	 .loc 1 477 0
  75 0046 00F11002 	 add r2,r0,#16
  76 004a 92B2     	 uxth r2,r2
 478:src/MightyBoard/Motherboard/lib_sd/fat.c ****            (cluster_num >= FAT16_CLUSTER_LAST_MIN && cluster_num <= FAT16_CLUSTER_LAST_MAX))
  77              	 .loc 1 478 0
  78 004c 4FF6F773 	 movw r3,#65527
  79 0050 9842     	 cmp r0,r3
  80 0052 94BF     	 ite ls
  81 0054 0023     	 movls r3,#0
  82 0056 0123     	 movhi r3,#1
 477:src/MightyBoard/Motherboard/lib_sd/fat.c ****            (cluster_num >= FAT16_CLUSTER_RESERVED_MIN && cluster_num <= FAT16_CLUSTER_RESERVED_MAX)
  83              	 .loc 1 477 0
  84 0058 062A     	 cmp r2,#6
  85 005a 98BF     	 it ls
  86 005c 43F00103 	 orrls r3,r3,#1
 479:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return 0;
  87              	 .loc 1 479 0
  88 0060 002B     	 cmp r3,#0
  89 0062 18BF     	 it ne
  90 0064 0020     	 movne r0,#0
  91              	.LVL5:
  92 0066 07E0     	 b .L2
  93              	.LVL6:
  94              	.L3:
  95              	.LBE2:
 445:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
  96              	 .loc 1 445 0
  97 0068 4FF00000 	 mov r0,#0
  98              	.LVL7:
  99 006c 04E0     	 b .L2
 100              	.LVL8:
 101              	.L4:
 102              	.LBB3:
 470:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return 0;
 103              	 .loc 1 470 0
 104 006e 4FF00000 	 mov r0,#0
 105 0072 01E0     	 b .L2
 106              	.LVL9:
 107              	.L5:
 108              	 .loc 1 479 0
 109 0074 4FF00000 	 mov r0,#0
 110              	.LVL10:
 111              	.L2:
 112              	.LBE3:
 480:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
 481:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 482:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return cluster_num;
 483:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 113              	 .loc 1 483 0
 114 0078 03B0     	 add sp,sp,#12
 115 007a 00BD     	 pop {pc}
 116              	 .cfi_endproc
 117              	.LFE58:
 119              	 .section .text.fat_free_clusters,"ax",%progbits
 120              	 .align 2
 121              	 .thumb
 122              	 .thumb_func
 124              	fat_free_clusters:
 125              	.LFB60:
 484:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 485:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if DOXYGEN || FAT_WRITE_SUPPORT
 486:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
 487:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_fs
 488:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Appends a new cluster chain to an existing one.
 489:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
 490:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Set cluster_num to zero to create a completely new one.
 491:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
 492:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] fs The file system on which to operate.
 493:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] cluster_num The cluster to which to append the new chain.
 494:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] count The number of clusters to allocate.
 495:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \returns 0 on failure, the number of the first new cluster on success.
 496:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
 497:src/MightyBoard/Motherboard/lib_sd/fat.c **** cluster_t fat_append_clusters(struct fat_fs_struct* fs, cluster_t cluster_num, cluster_t count)
 498:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 499:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs)
 500:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 501:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 502:src/MightyBoard/Motherboard/lib_sd/fat.c ****     device_read_t device_read = fs->partition->device_read;
 503:src/MightyBoard/Motherboard/lib_sd/fat.c ****     device_write_t device_write = fs->partition->device_write;
 504:src/MightyBoard/Motherboard/lib_sd/fat.c ****     offset_t fat_offset = fs->header.fat_offset;
 505:src/MightyBoard/Motherboard/lib_sd/fat.c ****     cluster_t count_left = count;
 506:src/MightyBoard/Motherboard/lib_sd/fat.c ****     cluster_t cluster_current = fs->cluster_free;
 507:src/MightyBoard/Motherboard/lib_sd/fat.c ****     cluster_t cluster_next = 0;
 508:src/MightyBoard/Motherboard/lib_sd/fat.c ****     cluster_t cluster_count;
 509:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint16_t fat_entry16;
 510:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_FAT32_SUPPORT
 511:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint32_t fat_entry32;
 512:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint8_t is_fat32 = (fs->partition->type == PARTITION_TYPE_FAT32);
 513:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 514:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(is_fat32)
 515:src/MightyBoard/Motherboard/lib_sd/fat.c ****         cluster_count = fs->header.fat_size / sizeof(fat_entry32);
 516:src/MightyBoard/Motherboard/lib_sd/fat.c ****     else
 517:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 518:src/MightyBoard/Motherboard/lib_sd/fat.c ****         cluster_count = fs->header.fat_size / sizeof(fat_entry16);
 519:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 520:src/MightyBoard/Motherboard/lib_sd/fat.c ****     fs->cluster_free = 0;
 521:src/MightyBoard/Motherboard/lib_sd/fat.c ****     cluster_t cluster_left;
 522:src/MightyBoard/Motherboard/lib_sd/fat.c ****     for(cluster_left = cluster_count; cluster_left > 0; --cluster_left, ++cluster_current)
 523:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
 524:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(cluster_current < 2 || cluster_current >= cluster_count)
 525:src/MightyBoard/Motherboard/lib_sd/fat.c ****             cluster_current = 2;
 526:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 527:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_FAT32_SUPPORT
 528:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(is_fat32)
 529:src/MightyBoard/Motherboard/lib_sd/fat.c ****         {
 530:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(!device_read(fat_offset + cluster_current * sizeof(fat_entry32), (uint8_t*) &fat_ent
 531:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 return 0;
 532:src/MightyBoard/Motherboard/lib_sd/fat.c ****         }
 533:src/MightyBoard/Motherboard/lib_sd/fat.c ****         else
 534:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 535:src/MightyBoard/Motherboard/lib_sd/fat.c ****         {
 536:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(!device_read(fat_offset + cluster_current * sizeof(fat_entry16), (uint8_t*) &fat_ent
 537:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 return 0;
 538:src/MightyBoard/Motherboard/lib_sd/fat.c ****         }
 539:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 540:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_FAT32_SUPPORT
 541:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(is_fat32)
 542:src/MightyBoard/Motherboard/lib_sd/fat.c ****         {
 543:src/MightyBoard/Motherboard/lib_sd/fat.c ****             /* check if this is a free cluster */
 544:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(fat_entry32 != HTOL32(FAT32_CLUSTER_FREE))
 545:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 continue;
 546:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 547:src/MightyBoard/Motherboard/lib_sd/fat.c ****             /* If we don't need this free cluster for the
 548:src/MightyBoard/Motherboard/lib_sd/fat.c ****              * current allocation, we keep it in mind for
 549:src/MightyBoard/Motherboard/lib_sd/fat.c ****              * the next time.
 550:src/MightyBoard/Motherboard/lib_sd/fat.c ****              */
 551:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(count_left == 0)
 552:src/MightyBoard/Motherboard/lib_sd/fat.c ****             {
 553:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 fs->cluster_free = cluster_current;
 554:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 break;
 555:src/MightyBoard/Motherboard/lib_sd/fat.c ****             }
 556:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 557:src/MightyBoard/Motherboard/lib_sd/fat.c ****             /* allocate cluster */
 558:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(cluster_next == 0)
 559:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 fat_entry32 = HTOL32(FAT32_CLUSTER_LAST_MAX);
 560:src/MightyBoard/Motherboard/lib_sd/fat.c ****             else
 561:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 fat_entry32 = htol32(cluster_next);
 562:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 563:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(!device_write(fat_offset + cluster_current * sizeof(fat_entry32), (uint8_t*) &fat_en
 564:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 break;
 565:src/MightyBoard/Motherboard/lib_sd/fat.c ****         }
 566:src/MightyBoard/Motherboard/lib_sd/fat.c ****         else
 567:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 568:src/MightyBoard/Motherboard/lib_sd/fat.c ****         {
 569:src/MightyBoard/Motherboard/lib_sd/fat.c ****             /* check if this is a free cluster */
 570:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(fat_entry16 != HTOL16(FAT16_CLUSTER_FREE))
 571:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 continue;
 572:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 573:src/MightyBoard/Motherboard/lib_sd/fat.c ****             /* If we don't need this free cluster for the
 574:src/MightyBoard/Motherboard/lib_sd/fat.c ****              * current allocation, we keep it in mind for
 575:src/MightyBoard/Motherboard/lib_sd/fat.c ****              * the next time.
 576:src/MightyBoard/Motherboard/lib_sd/fat.c ****              */
 577:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(count_left == 0)
 578:src/MightyBoard/Motherboard/lib_sd/fat.c ****             {
 579:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 fs->cluster_free = cluster_current;
 580:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 break;
 581:src/MightyBoard/Motherboard/lib_sd/fat.c ****             }
 582:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 583:src/MightyBoard/Motherboard/lib_sd/fat.c ****             /* allocate cluster */
 584:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(cluster_next == 0)
 585:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 fat_entry16 = HTOL16(FAT16_CLUSTER_LAST_MAX);
 586:src/MightyBoard/Motherboard/lib_sd/fat.c ****             else
 587:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 fat_entry16 = htol16((uint16_t) cluster_next);
 588:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 589:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(!device_write(fat_offset + cluster_current * sizeof(fat_entry16), (uint8_t*) &fat_en
 590:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 break;
 591:src/MightyBoard/Motherboard/lib_sd/fat.c ****         }
 592:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 593:src/MightyBoard/Motherboard/lib_sd/fat.c ****         cluster_next = cluster_current;
 594:src/MightyBoard/Motherboard/lib_sd/fat.c ****         --count_left;
 595:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
 596:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 597:src/MightyBoard/Motherboard/lib_sd/fat.c ****     do
 598:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
 599:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(count_left > 0)
 600:src/MightyBoard/Motherboard/lib_sd/fat.c ****             break;
 601:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 602:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* We allocated a new cluster chain. Now join
 603:src/MightyBoard/Motherboard/lib_sd/fat.c ****          * it with the existing one (if any).
 604:src/MightyBoard/Motherboard/lib_sd/fat.c ****          */
 605:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(cluster_num >= 2)
 606:src/MightyBoard/Motherboard/lib_sd/fat.c ****         {
 607:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_FAT32_SUPPORT
 608:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(is_fat32)
 609:src/MightyBoard/Motherboard/lib_sd/fat.c ****             {
 610:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 fat_entry32 = htol32(cluster_next);
 611:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 612:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 if(!device_write(fat_offset + cluster_num * sizeof(fat_entry32), (uint8_t*) &fat_en
 613:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     break;
 614:src/MightyBoard/Motherboard/lib_sd/fat.c ****             }
 615:src/MightyBoard/Motherboard/lib_sd/fat.c ****             else
 616:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 617:src/MightyBoard/Motherboard/lib_sd/fat.c ****             {
 618:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 fat_entry16 = htol16((uint16_t) cluster_next);
 619:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 620:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 if(!device_write(fat_offset + cluster_num * sizeof(fat_entry16), (uint8_t*) &fat_en
 621:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     break;
 622:src/MightyBoard/Motherboard/lib_sd/fat.c ****             }
 623:src/MightyBoard/Motherboard/lib_sd/fat.c ****         }
 624:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 625:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return cluster_next;
 626:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 627:src/MightyBoard/Motherboard/lib_sd/fat.c ****     } while(0);
 628:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 629:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* No space left on device or writing error.
 630:src/MightyBoard/Motherboard/lib_sd/fat.c ****      * Free up all clusters already allocated.
 631:src/MightyBoard/Motherboard/lib_sd/fat.c ****      */
 632:src/MightyBoard/Motherboard/lib_sd/fat.c ****     fat_free_clusters(fs, cluster_next);
 633:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 634:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return 0;
 635:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 636:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 637:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 638:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if DOXYGEN || FAT_WRITE_SUPPORT
 639:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
 640:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_fs
 641:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Frees a cluster chain, or a part thereof.
 642:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
 643:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Marks the specified cluster and all clusters which are sequentially
 644:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * referenced by it as free. They may then be used again for future
 645:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * file allocations.
 646:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
 647:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \note If this function is used for freeing just a part of a cluster
 648:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *       chain, the new end of the chain is not correctly terminated
 649:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *       within the FAT. Use fat_terminate_clusters() instead.
 650:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
 651:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] fs The filesystem on which to operate.
 652:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] cluster_num The starting cluster of the chain which to free.
 653:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \returns 0 on failure, 1 on success.
 654:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \see fat_terminate_clusters
 655:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
 656:src/MightyBoard/Motherboard/lib_sd/fat.c **** uint8_t fat_free_clusters(struct fat_fs_struct* fs, cluster_t cluster_num)
 657:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 126              	 .loc 1 657 0
 127              	 .cfi_startproc
 128              	 
 129              	 
 130              	.LVL11:
 131 0000 2DE9F043 	 push {r4,r5,r6,r7,r8,r9,lr}
 132              	.LCFI2:
 133              	 .cfi_def_cfa_offset 28
 134              	 .cfi_offset 14,-4
 135              	 .cfi_offset 9,-8
 136              	 .cfi_offset 8,-12
 137              	 .cfi_offset 7,-16
 138              	 .cfi_offset 6,-20
 139              	 .cfi_offset 5,-24
 140              	 .cfi_offset 4,-28
 141 0004 83B0     	 sub sp,sp,#12
 142              	.LCFI3:
 143              	 .cfi_def_cfa_offset 40
 144 0006 0C46     	 mov r4,r1
 658:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs || cluster_num < 2)
 145              	 .loc 1 658 0
 146 0008 0546     	 mov r5,r0
 147 000a 0129     	 cmp r1,#1
 148 000c 8CBF     	 ite hi
 149 000e 0023     	 movhi r3,#0
 150 0010 0123     	 movls r3,#1
 151 0012 0028     	 cmp r0,#0
 152 0014 08BF     	 it eq
 153 0016 43F00103 	 orreq r3,r3,#1
 154 001a 43BB     	 cbnz r3,.L10
 659:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 660:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 661:src/MightyBoard/Motherboard/lib_sd/fat.c ****     offset_t fat_offset = fs->header.fat_offset;
 155              	 .loc 1 661 0
 156 001c D0F80880 	 ldr r8,[r0,#8]
 157              	.LVL12:
 158              	.LBB4:
 662:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_FAT32_SUPPORT
 663:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(fs->partition->type == PARTITION_TYPE_FAT32)
 664:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
 665:src/MightyBoard/Motherboard/lib_sd/fat.c ****         uint32_t fat_entry;
 666:src/MightyBoard/Motherboard/lib_sd/fat.c ****         while(cluster_num)
 667:src/MightyBoard/Motherboard/lib_sd/fat.c ****         {
 668:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(!fs->partition->device_read(fat_offset + cluster_num * sizeof(fat_entry), (uint8_t*)
 669:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 return 0;
 670:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 671:src/MightyBoard/Motherboard/lib_sd/fat.c ****             /* get next cluster of current cluster before freeing current cluster */
 672:src/MightyBoard/Motherboard/lib_sd/fat.c ****             uint32_t cluster_num_next = ltoh32(fat_entry);
 673:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 674:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(cluster_num_next == FAT32_CLUSTER_FREE)
 675:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 return 1;
 676:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(cluster_num_next == FAT32_CLUSTER_BAD ||
 677:src/MightyBoard/Motherboard/lib_sd/fat.c ****                (cluster_num_next >= FAT32_CLUSTER_RESERVED_MIN &&
 678:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 cluster_num_next <= FAT32_CLUSTER_RESERVED_MAX
 679:src/MightyBoard/Motherboard/lib_sd/fat.c ****                )
 680:src/MightyBoard/Motherboard/lib_sd/fat.c ****               )
 681:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 return 0;
 682:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(cluster_num_next >= FAT32_CLUSTER_LAST_MIN && cluster_num_next <= FAT32_CLUSTER_LAST
 683:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 cluster_num_next = 0;
 684:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 685:src/MightyBoard/Motherboard/lib_sd/fat.c ****             /* We know we will free the cluster, so remember it as
 686:src/MightyBoard/Motherboard/lib_sd/fat.c ****              * free for the next allocation.
 687:src/MightyBoard/Motherboard/lib_sd/fat.c ****              */
 688:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(!fs->cluster_free)
 689:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 fs->cluster_free = cluster_num;
 690:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 691:src/MightyBoard/Motherboard/lib_sd/fat.c ****             /* free cluster */
 692:src/MightyBoard/Motherboard/lib_sd/fat.c ****             fat_entry = HTOL32(FAT32_CLUSTER_FREE);
 693:src/MightyBoard/Motherboard/lib_sd/fat.c ****             fs->partition->device_write(fat_offset + cluster_num * sizeof(fat_entry), (uint8_t*) &f
 694:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 695:src/MightyBoard/Motherboard/lib_sd/fat.c ****             /* We continue in any case here, even if freeing the cluster failed.
 696:src/MightyBoard/Motherboard/lib_sd/fat.c ****              * The cluster is lost, but maybe we can still free up some later ones.
 697:src/MightyBoard/Motherboard/lib_sd/fat.c ****              */
 698:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 699:src/MightyBoard/Motherboard/lib_sd/fat.c ****             cluster_num = cluster_num_next;
 700:src/MightyBoard/Motherboard/lib_sd/fat.c ****         }
 701:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
 702:src/MightyBoard/Motherboard/lib_sd/fat.c ****     else
 703:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 704:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
 705:src/MightyBoard/Motherboard/lib_sd/fat.c ****         uint16_t fat_entry;
 706:src/MightyBoard/Motherboard/lib_sd/fat.c ****         while(cluster_num)
 707:src/MightyBoard/Motherboard/lib_sd/fat.c ****         {
 708:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(!fs->partition->device_read(fat_offset + cluster_num * sizeof(fat_entry), (uint8_t*)
 709:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 return 0;
 710:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 711:src/MightyBoard/Motherboard/lib_sd/fat.c ****             /* get next cluster of current cluster before freeing current cluster */
 712:src/MightyBoard/Motherboard/lib_sd/fat.c ****             uint16_t cluster_num_next = ltoh16(fat_entry);
 713:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 714:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(cluster_num_next == FAT16_CLUSTER_FREE)
 715:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 return 1;
 716:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(cluster_num_next == FAT16_CLUSTER_BAD ||
 717:src/MightyBoard/Motherboard/lib_sd/fat.c ****                (cluster_num_next >= FAT16_CLUSTER_RESERVED_MIN &&
 718:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 cluster_num_next <= FAT16_CLUSTER_RESERVED_MAX
 719:src/MightyBoard/Motherboard/lib_sd/fat.c ****                )
 720:src/MightyBoard/Motherboard/lib_sd/fat.c ****               )
 721:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 return 0;
 722:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(cluster_num_next >= FAT16_CLUSTER_LAST_MIN && cluster_num_next <= FAT16_CLUSTER_LAST
 723:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 cluster_num_next = 0;
 724:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 725:src/MightyBoard/Motherboard/lib_sd/fat.c ****             /* free cluster */
 726:src/MightyBoard/Motherboard/lib_sd/fat.c ****             fat_entry = HTOL16(FAT16_CLUSTER_FREE);
 727:src/MightyBoard/Motherboard/lib_sd/fat.c ****             fs->partition->device_write(fat_offset + cluster_num * sizeof(fat_entry), (uint8_t*) &f
 728:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 729:src/MightyBoard/Motherboard/lib_sd/fat.c ****             /* We continue in any case here, even if freeing the cluster failed.
 730:src/MightyBoard/Motherboard/lib_sd/fat.c ****              * The cluster is lost, but maybe we can still free up some later ones.
 731:src/MightyBoard/Motherboard/lib_sd/fat.c ****              */
 732:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 733:src/MightyBoard/Motherboard/lib_sd/fat.c ****             cluster_num = cluster_num_next;
 734:src/MightyBoard/Motherboard/lib_sd/fat.c ****         }
 735:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
 736:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 737:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return 1;
 159              	 .loc 1 737 0
 160 0020 4FF00100 	 mov r0,#1
 161              	.LVL13:
 706:src/MightyBoard/Motherboard/lib_sd/fat.c ****         while(cluster_num)
 162              	 .loc 1 706 0
 163 0024 71B3     	 cbz r1,.L7
 164              	.LBB5:
 722:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(cluster_num_next >= FAT16_CLUSTER_LAST_MIN && cluster_num_next <= FAT16_CLUSTER_LAST
 165              	 .loc 1 722 0
 166 0026 4FF6F777 	 movw r7,#65527
 726:src/MightyBoard/Motherboard/lib_sd/fat.c ****             fat_entry = HTOL16(FAT16_CLUSTER_FREE);
 167              	 .loc 1 726 0
 168 002a 4FF00009 	 mov r9,#0
 169              	.LVL14:
 170              	.L15:
 708:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(!fs->partition->device_read(fat_offset + cluster_num * sizeof(fat_entry), (uint8_t*)
 171              	 .loc 1 708 0
 172 002e 08EB4406 	 add r6,r8,r4,lsl#1
 173 0032 2B68     	 ldr r3,[r5,#0]
 174 0034 1B68     	 ldr r3,[r3,#0]
 175 0036 3046     	 mov r0,r6
 176 0038 0DF10601 	 add r1,sp,#6
 177 003c 4FF00202 	 mov r2,#2
 178 0040 9847     	 blx r3
 179 0042 B8B1     	 cbz r0,.L12
 712:src/MightyBoard/Motherboard/lib_sd/fat.c ****             uint16_t cluster_num_next = ltoh16(fat_entry);
 180              	 .loc 1 712 0
 181 0044 BDF80640 	 ldrh r4,[sp,#6]
 182              	.LVL15:
 714:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(cluster_num_next == FAT16_CLUSTER_FREE)
 183              	 .loc 1 714 0
 184 0048 BCB1     	 cbz r4,.L13
 716:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(cluster_num_next == FAT16_CLUSTER_BAD ||
 185              	 .loc 1 716 0
 186 004a 04F11003 	 add r3,r4,#16
 187 004e 9BB2     	 uxth r3,r3
 188 0050 072B     	 cmp r3,#7
 189 0052 15D9     	 bls .L14
 722:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(cluster_num_next >= FAT16_CLUSTER_LAST_MIN && cluster_num_next <= FAT16_CLUSTER_LAST
 190              	 .loc 1 722 0
 191 0054 BC42     	 cmp r4,r7
 192 0056 18D8     	 bhi .L8
 726:src/MightyBoard/Motherboard/lib_sd/fat.c ****             fat_entry = HTOL16(FAT16_CLUSTER_FREE);
 193              	 .loc 1 726 0
 194 0058 ADF80690 	 strh r9,[sp,#6]
 727:src/MightyBoard/Motherboard/lib_sd/fat.c ****             fs->partition->device_write(fat_offset + cluster_num * sizeof(fat_entry), (uint8_t*) &f
 195              	 .loc 1 727 0
 196 005c 2B68     	 ldr r3,[r5,#0]
 197 005e 9B68     	 ldr r3,[r3,#8]
 198 0060 3046     	 mov r0,r6
 199 0062 0DF10601 	 add r1,sp,#6
 200 0066 4FF00202 	 mov r2,#2
 201 006a 9847     	 blx r3
 202              	.LVL16:
 203 006c DFE7     	 b .L15
 204              	.LVL17:
 205              	.L10:
 206              	.LBE5:
 207              	.LBE4:
 659:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 208              	 .loc 1 659 0
 209 006e 4FF00000 	 mov r0,#0
 210 0072 07E0     	 b .L7
 211              	.LVL18:
 212              	.L12:
 213              	.LBB8:
 214              	.LBB6:
 709:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 return 0;
 215              	 .loc 1 709 0
 216 0074 4FF00000 	 mov r0,#0
 217 0078 04E0     	 b .L7
 218              	.LVL19:
 219              	.L13:
 715:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 return 1;
 220              	 .loc 1 715 0
 221 007a 4FF00100 	 mov r0,#1
 222 007e 01E0     	 b .L7
 223              	.L14:
 721:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 return 0;
 224              	 .loc 1 721 0
 225 0080 4FF00000 	 mov r0,#0
 226              	.LVL20:
 227              	.L7:
 228              	.LBE6:
 229              	.LBE8:
 738:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 230              	 .loc 1 738 0
 231 0084 03B0     	 add sp,sp,#12
 232 0086 BDE8F083 	 pop {r4,r5,r6,r7,r8,r9,pc}
 233              	.LVL21:
 234              	.L8:
 235              	.LBB9:
 236              	.LBB7:
 726:src/MightyBoard/Motherboard/lib_sd/fat.c ****             fat_entry = HTOL16(FAT16_CLUSTER_FREE);
 237              	 .loc 1 726 0
 238 008a 02A9     	 add r1,sp,#8
 239 008c 4FF00003 	 mov r3,#0
 240 0090 21F8023D 	 strh r3,[r1,#-2]!
 241              	.LVL22:
 727:src/MightyBoard/Motherboard/lib_sd/fat.c ****             fs->partition->device_write(fat_offset + cluster_num * sizeof(fat_entry), (uint8_t*) &f
 242              	 .loc 1 727 0
 243 0094 2B68     	 ldr r3,[r5,#0]
 244 0096 9B68     	 ldr r3,[r3,#8]
 245 0098 3046     	 mov r0,r6
 246 009a 4FF00202 	 mov r2,#2
 247 009e 9847     	 blx r3
 248              	.LVL23:
 737:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return 1;
 249              	 .loc 1 737 0
 250 00a0 4FF00100 	 mov r0,#1
 251 00a4 EEE7     	 b .L7
 252              	.LBE7:
 253              	.LBE9:
 254              	 .cfi_endproc
 255              	.LFE60:
 257 00a6 00BF     	 .section .text.fat_append_clusters,"ax",%progbits
 258              	 .align 2
 259              	 .thumb
 260              	 .thumb_func
 262              	fat_append_clusters:
 263              	.LFB59:
 498:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 264              	 .loc 1 498 0
 265              	 .cfi_startproc
 266              	 
 267              	 
 268              	.LVL24:
 269 0000 2DE9F04F 	 push {r4,r5,r6,r7,r8,r9,sl,fp,lr}
 270              	.LCFI4:
 271              	 .cfi_def_cfa_offset 36
 272              	 .cfi_offset 14,-4
 273              	 .cfi_offset 11,-8
 274              	 .cfi_offset 10,-12
 275              	 .cfi_offset 9,-16
 276              	 .cfi_offset 8,-20
 277              	 .cfi_offset 7,-24
 278              	 .cfi_offset 6,-28
 279              	 .cfi_offset 5,-32
 280              	 .cfi_offset 4,-36
 281 0004 87B0     	 sub sp,sp,#28
 282              	.LCFI5:
 283              	 .cfi_def_cfa_offset 64
 284 0006 0391     	 str r1,[sp,#12]
 499:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs)
 285              	 .loc 1 499 0
 286 0008 0290     	 str r0,[sp,#8]
 500:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 287              	 .loc 1 500 0
 288 000a 4FF00007 	 mov r7,#0
 499:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs)
 289              	 .loc 1 499 0
 290 000e 0028     	 cmp r0,#0
 291 0010 6DD0     	 beq .L17
 502:src/MightyBoard/Motherboard/lib_sd/fat.c ****     device_read_t device_read = fs->partition->device_read;
 292              	 .loc 1 502 0
 293 0012 0368     	 ldr r3,[r0,#0]
 294 0014 1968     	 ldr r1,[r3,#0]
 295              	.LVL25:
 296 0016 0091     	 str r1,[sp,#0]
 297              	.LVL26:
 503:src/MightyBoard/Motherboard/lib_sd/fat.c ****     device_write_t device_write = fs->partition->device_write;
 298              	 .loc 1 503 0
 299 0018 9B68     	 ldr r3,[r3,#8]
 300 001a 0193     	 str r3,[sp,#4]
 301              	.LVL27:
 504:src/MightyBoard/Motherboard/lib_sd/fat.c ****     offset_t fat_offset = fs->header.fat_offset;
 302              	 .loc 1 504 0
 303 001c D0F808B0 	 ldr fp,[r0,#8]
 304              	.LVL28:
 506:src/MightyBoard/Motherboard/lib_sd/fat.c ****     cluster_t cluster_current = fs->cluster_free;
 305              	 .loc 1 506 0
 306 0020 848B     	 ldrh r4,[r0,#28]
 307              	.LVL29:
 518:src/MightyBoard/Motherboard/lib_sd/fat.c ****         cluster_count = fs->header.fat_size / sizeof(fat_entry16);
 308              	 .loc 1 518 0
 309 0022 C368     	 ldr r3,[r0,#12]
 310 0024 C3F34F0A 	 ubfx sl,r3,#1,#16
 311              	.LVL30:
 520:src/MightyBoard/Motherboard/lib_sd/fat.c ****     fs->cluster_free = 0;
 312              	 .loc 1 520 0
 313 0028 4FF00003 	 mov r3,#0
 314 002c 8383     	 strh r3,[r0,#28]
 315              	.LVL31:
 522:src/MightyBoard/Motherboard/lib_sd/fat.c ****     for(cluster_left = cluster_count; cluster_left > 0; --cluster_left, ++cluster_current)
 316              	 .loc 1 522 0
 317 002e BAF1000F 	 cmp sl,#0
 318 0032 3FD0     	 beq .L27
 319 0034 5546     	 mov r5,sl
 505:src/MightyBoard/Motherboard/lib_sd/fat.c ****     cluster_t count_left = count;
 320              	 .loc 1 505 0
 321 0036 9146     	 mov r9,r2
 507:src/MightyBoard/Motherboard/lib_sd/fat.c ****     cluster_t cluster_next = 0;
 322              	 .loc 1 507 0
 323 0038 4FF00007 	 mov r7,#0
 536:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(!device_read(fat_offset + cluster_current * sizeof(fat_entry16), (uint8_t*) &fat_ent
 324              	 .loc 1 536 0
 325 003c 4FF00208 	 mov r8,#2
 326              	.LVL32:
 327              	.L25:
 524:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(cluster_current < 2 || cluster_current >= cluster_count)
 328              	 .loc 1 524 0
 329 0040 5445     	 cmp r4,sl
 330 0042 34BF     	 ite cc
 331 0044 0023     	 movcc r3,#0
 332 0046 0123     	 movcs r3,#1
 333 0048 012C     	 cmp r4,#1
 334 004a 98BF     	 it ls
 335 004c 43F00103 	 orrls r3,r3,#1
 525:src/MightyBoard/Motherboard/lib_sd/fat.c ****             cluster_current = 2;
 336              	 .loc 1 525 0
 337 0050 002B     	 cmp r3,#0
 338 0052 18BF     	 it ne
 339 0054 0224     	 movne r4,#2
 340              	.LVL33:
 536:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(!device_read(fat_offset + cluster_current * sizeof(fat_entry16), (uint8_t*) &fat_ent
 341              	 .loc 1 536 0
 342 0056 0BEB4406 	 add r6,fp,r4,lsl#1
 343 005a 3046     	 mov r0,r6
 344 005c 0DF11601 	 add r1,sp,#22
 345 0060 4246     	 mov r2,r8
 346 0062 009B     	 ldr r3,[sp,#0]
 347 0064 9847     	 blx r3
 348 0066 0028     	 cmp r0,#0
 349 0068 3FD0     	 beq .L29
 570:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(fat_entry16 != HTOL16(FAT16_CLUSTER_FREE))
 350              	 .loc 1 570 0
 351 006a BDF81630 	 ldrh r3,[sp,#22]
 352              	.LVL34:
 353 006e C3B9     	 cbnz r3,.L20
 354              	.LVL35:
 577:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(count_left == 0)
 355              	 .loc 1 577 0
 356 0070 B9F1000F 	 cmp r9,#0
 357 0074 02D1     	 bne .L21
 579:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 fs->cluster_free = cluster_current;
 358              	 .loc 1 579 0
 359 0076 0299     	 ldr r1,[sp,#8]
 360 0078 8C83     	 strh r4,[r1,#28]
 361 007a 21E0     	 b .L22
 362              	.L21:
 585:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 fat_entry16 = HTOL16(FAT16_CLUSTER_LAST_MAX);
 363              	 .loc 1 585 0
 364 007c 4FF6FF73 	 movw r3,#65535
 365              	.LVL36:
 366 0080 002F     	 cmp r7,#0
 367 0082 18BF     	 it ne
 368 0084 3B46     	 movne r3,r7
 584:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(cluster_next == 0)
 369              	 .loc 1 584 0
 370 0086 ADF81630 	 strh r3,[sp,#22]
 371              	.LVL37:
 589:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(!device_write(fat_offset + cluster_current * sizeof(fat_entry16), (uint8_t*) &fat_en
 372              	 .loc 1 589 0
 373 008a 3046     	 mov r0,r6
 374 008c 0DF11601 	 add r1,sp,#22
 375 0090 4246     	 mov r2,r8
 376 0092 019B     	 ldr r3,[sp,#4]
 377 0094 9847     	 blx r3
 378 0096 08B3     	 cbz r0,.L24
 379              	.LVL38:
 594:src/MightyBoard/Motherboard/lib_sd/fat.c ****         --count_left;
 380              	 .loc 1 594 0
 381 0098 09F1FF39 	 add r9,r9,#-1
 382 009c 1FFA89F9 	 uxth r9,r9
 383              	.LVL39:
 384 00a0 2746     	 mov r7,r4
 385              	.LVL40:
 386              	.L20:
 522:src/MightyBoard/Motherboard/lib_sd/fat.c ****     for(cluster_left = cluster_count; cluster_left > 0; --cluster_left, ++cluster_current)
 387              	 .loc 1 522 0
 388 00a2 05F1FF35 	 add r5,r5,#-1
 389 00a6 ADB2     	 uxth r5,r5
 390              	.LVL41:
 391 00a8 04F10104 	 add r4,r4,#1
 392              	.LVL42:
 393 00ac A4B2     	 uxth r4,r4
 394              	.LVL43:
 395 00ae 002D     	 cmp r5,#0
 396 00b0 C6D1     	 bne .L25
 397 00b2 02E0     	 b .L18
 398              	.LVL44:
 399              	.L27:
 505:src/MightyBoard/Motherboard/lib_sd/fat.c ****     cluster_t count_left = count;
 400              	 .loc 1 505 0
 401 00b4 9146     	 mov r9,r2
 507:src/MightyBoard/Motherboard/lib_sd/fat.c ****     cluster_t cluster_next = 0;
 402              	 .loc 1 507 0
 403 00b6 4FF00007 	 mov r7,#0
 404              	.LVL45:
 405              	.L18:
 599:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(count_left > 0)
 406              	 .loc 1 599 0
 407 00ba B9F1000F 	 cmp r9,#0
 408 00be 0DD1     	 bne .L24
 409              	.L22:
 605:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(cluster_num >= 2)
 410              	 .loc 1 605 0
 411 00c0 0399     	 ldr r1,[sp,#12]
 412 00c2 0129     	 cmp r1,#1
 413 00c4 13D9     	 bls .L17
 618:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 fat_entry16 = htol16((uint16_t) cluster_next);
 414              	 .loc 1 618 0
 415 00c6 06A9     	 add r1,sp,#24
 416 00c8 21F8027D 	 strh r7,[r1,#-2]!
 417              	.LVL46:
 620:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 if(!device_write(fat_offset + cluster_num * sizeof(fat_entry16), (uint8_t*) &fat_en
 418              	 .loc 1 620 0
 419 00cc 039B     	 ldr r3,[sp,#12]
 420 00ce 0BEB4300 	 add r0,fp,r3,lsl#1
 421 00d2 4FF00202 	 mov r2,#2
 422 00d6 019B     	 ldr r3,[sp,#4]
 423 00d8 9847     	 blx r3
 424 00da 40B9     	 cbnz r0,.L17
 425              	.L24:
 632:src/MightyBoard/Motherboard/lib_sd/fat.c ****     fat_free_clusters(fs, cluster_next);
 426              	 .loc 1 632 0
 427 00dc 0298     	 ldr r0,[sp,#8]
 428 00de 3946     	 mov r1,r7
 429 00e0 FFF7FEFF 	 bl fat_free_clusters
 634:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return 0;
 430              	 .loc 1 634 0
 431 00e4 4FF00007 	 mov r7,#0
 432 00e8 01E0     	 b .L17
 433              	.LVL47:
 434              	.L29:
 537:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 return 0;
 435              	 .loc 1 537 0
 436 00ea 4FF00007 	 mov r7,#0
 437              	.LVL48:
 438              	.L17:
 635:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 439              	 .loc 1 635 0
 440 00ee 3846     	 mov r0,r7
 441 00f0 07B0     	 add sp,sp,#28
 442 00f2 BDE8F08F 	 pop {r4,r5,r6,r7,r8,r9,sl,fp,pc}
 443              	 .cfi_endproc
 444              	.LFE59:
 446 00f6 00BF     	 .section .text.fat_clear_cluster_callback,"ax",%progbits
 447              	 .align 2
 448              	 .thumb
 449              	 .thumb_func
 451              	fat_clear_cluster_callback:
 452              	.LFB63:
 739:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 740:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 741:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if DOXYGEN || FAT_WRITE_SUPPORT
 742:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
 743:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_fs
 744:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Frees a part of a cluster chain and correctly terminates the rest.
 745:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
 746:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Marks the specified cluster as the new end of a cluster chain and
 747:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * frees all following clusters.
 748:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
 749:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] fs The filesystem on which to operate.
 750:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] cluster_num The new end of the cluster chain.
 751:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \returns 0 on failure, 1 on success.
 752:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \see fat_free_clusters
 753:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
 754:src/MightyBoard/Motherboard/lib_sd/fat.c **** uint8_t fat_terminate_clusters(struct fat_fs_struct* fs, cluster_t cluster_num)
 755:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 756:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs || cluster_num < 2)
 757:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 758:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 759:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* fetch next cluster before overwriting the cluster entry */
 760:src/MightyBoard/Motherboard/lib_sd/fat.c ****     cluster_t cluster_num_next = fat_get_next_cluster(fs, cluster_num);
 761:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 762:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* mark cluster as the last one */
 763:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_FAT32_SUPPORT
 764:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(fs->partition->type == PARTITION_TYPE_FAT32)
 765:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
 766:src/MightyBoard/Motherboard/lib_sd/fat.c ****         uint32_t fat_entry = HTOL32(FAT32_CLUSTER_LAST_MAX);
 767:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fs->partition->device_write(fs->header.fat_offset + cluster_num * sizeof(fat_entry), (u
 768:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return 0;
 769:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
 770:src/MightyBoard/Motherboard/lib_sd/fat.c ****     else
 771:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 772:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
 773:src/MightyBoard/Motherboard/lib_sd/fat.c ****         uint16_t fat_entry = HTOL16(FAT16_CLUSTER_LAST_MAX);
 774:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fs->partition->device_write(fs->header.fat_offset + cluster_num * sizeof(fat_entry), (u
 775:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return 0;
 776:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
 777:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 778:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* free remaining clusters */
 779:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(cluster_num_next)
 780:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return fat_free_clusters(fs, cluster_num_next);
 781:src/MightyBoard/Motherboard/lib_sd/fat.c ****     else
 782:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 1;
 783:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 784:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 785:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 786:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if DOXYGEN || FAT_WRITE_SUPPORT
 787:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
 788:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_fs
 789:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Clears a single cluster.
 790:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
 791:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * The complete cluster is filled with zeros.
 792:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
 793:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] fs The filesystem on which to operate.
 794:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] cluster_num The cluster to clear.
 795:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \returns 0 on failure, 1 on success.
 796:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
 797:src/MightyBoard/Motherboard/lib_sd/fat.c **** uint8_t fat_clear_cluster(const struct fat_fs_struct* fs, cluster_t cluster_num)
 798:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 799:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(cluster_num < 2)
 800:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 801:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 802:src/MightyBoard/Motherboard/lib_sd/fat.c ****     offset_t cluster_offset = fat_cluster_offset(fs, cluster_num);
 803:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 804:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint8_t zero[16];
 805:src/MightyBoard/Motherboard/lib_sd/fat.c ****     memset(zero, 0, sizeof(zero));
 806:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return fs->partition->device_write_interval(cluster_offset,
 807:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                                 zero,
 808:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                                 fs->header.cluster_size,
 809:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                                 fat_clear_cluster_callback,
 810:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                                 0
 811:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                                );
 812:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 813:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 814:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 815:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if DOXYGEN || FAT_WRITE_SUPPORT
 816:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
 817:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_fs
 818:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Callback function for clearing a cluster.
 819:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
 820:src/MightyBoard/Motherboard/lib_sd/fat.c **** uintptr_t fat_clear_cluster_callback(uint8_t* buffer, offset_t offset, void* p)
 821:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 453              	 .loc 1 821 0
 454              	 .cfi_startproc
 455              	 
 456              	 
 457              	 
 458              	.LVL49:
 822:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return 16;
 823:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 459              	 .loc 1 823 0
 460 0000 4FF01000 	 mov r0,#16
 461              	.LVL50:
 462 0004 7047     	 bx lr
 463              	 .cfi_endproc
 464              	.LFE63:
 466 0006 00BF     	 .section .text.fat_cluster_offset,"ax",%progbits
 467              	 .align 2
 468              	 .thumb
 469              	 .thumb_func
 471              	fat_cluster_offset:
 472              	.LFB64:
 824:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 825:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 826:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
 827:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_fs
 828:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Calculates the offset of the specified cluster.
 829:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
 830:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] fs The filesystem on which to operate.
 831:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] cluster_num The cluster whose offset to calculate.
 832:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \returns The cluster offset.
 833:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
 834:src/MightyBoard/Motherboard/lib_sd/fat.c **** offset_t fat_cluster_offset(const struct fat_fs_struct* fs, cluster_t cluster_num)
 835:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 473              	 .loc 1 835 0
 474              	 .cfi_startproc
 475              	 
 476              	 
 477              	 
 478              	.LVL51:
 836:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs || cluster_num < 2)
 479              	 .loc 1 836 0
 480 0000 0346     	 mov r3,r0
 481 0002 0129     	 cmp r1,#1
 482 0004 8CBF     	 ite hi
 483 0006 0022     	 movhi r2,#0
 484 0008 0122     	 movls r2,#1
 485 000a 0028     	 cmp r0,#0
 486 000c 08BF     	 it eq
 487 000e 42F00102 	 orreq r2,r2,#1
 488 0012 32B9     	 cbnz r2,.L36
 837:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 838:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 839:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return fs->header.cluster_zero_offset + (offset_t) (cluster_num - 2) * fs->header.cluster_size;
 489              	 .loc 1 839 0
 490 0014 A1F10201 	 sub r1,r1,#2
 491              	.LVL52:
 492 0018 408A     	 ldrh r0,[r0,#18]
 493              	.LVL53:
 494 001a 5B69     	 ldr r3,[r3,#20]
 495              	.LVL54:
 496 001c 00FB0130 	 mla r0,r0,r1,r3
 497 0020 7047     	 bx lr
 498              	.LVL55:
 499              	.L36:
 837:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 500              	 .loc 1 837 0
 501 0022 4FF00000 	 mov r0,#0
 502              	.LVL56:
 840:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 503              	 .loc 1 840 0
 504 0026 7047     	 bx lr
 505              	 .cfi_endproc
 506              	.LFE64:
 508              	 .section .text.fat_calc_83_checksum,"ax",%progbits
 509              	 .align 2
 510              	 .thumb
 511              	 .thumb_func
 513              	fat_calc_83_checksum:
 514              	.LFB77:
 841:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 842:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
 843:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_file
 844:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Retrieves the directory entry of a path.
 845:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
 846:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * The given path may both describe a file or a directory.
 847:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
 848:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] fs The FAT filesystem on which to search.
 849:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] path The path of which to read the directory entry.
 850:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[out] dir_entry The directory entry to fill.
 851:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \returns 0 on failure, 1 on success.
 852:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \see fat_read_dir
 853:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
 854:src/MightyBoard/Motherboard/lib_sd/fat.c **** uint8_t fat_get_dir_entry_of_path(struct fat_fs_struct* fs, const char* path, struct fat_dir_entry_
 855:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 856:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs || !path || path[0] == '\0' || !dir_entry)
 857:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 858:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 859:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(path[0] == '/')
 860:src/MightyBoard/Motherboard/lib_sd/fat.c ****         ++path;
 861:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 862:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* begin with the root directory */
 863:src/MightyBoard/Motherboard/lib_sd/fat.c ****     memset(dir_entry, 0, sizeof(*dir_entry));
 864:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dir_entry->attributes = FAT_ATTRIB_DIR;
 865:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 866:src/MightyBoard/Motherboard/lib_sd/fat.c ****     while(1)
 867:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
 868:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(path[0] == '\0')
 869:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return 1;
 870:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 871:src/MightyBoard/Motherboard/lib_sd/fat.c ****         struct fat_dir_struct* dd = fat_open_dir(fs, dir_entry);
 872:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!dd)
 873:src/MightyBoard/Motherboard/lib_sd/fat.c ****             break;
 874:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 875:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* extract the next hierarchy we will search for */
 876:src/MightyBoard/Motherboard/lib_sd/fat.c ****         const char* sub_path = strchr(path, '/');
 877:src/MightyBoard/Motherboard/lib_sd/fat.c ****         uint8_t length_to_sep;
 878:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(sub_path)
 879:src/MightyBoard/Motherboard/lib_sd/fat.c ****         {
 880:src/MightyBoard/Motherboard/lib_sd/fat.c ****             length_to_sep = sub_path - path;
 881:src/MightyBoard/Motherboard/lib_sd/fat.c ****             ++sub_path;
 882:src/MightyBoard/Motherboard/lib_sd/fat.c ****         }
 883:src/MightyBoard/Motherboard/lib_sd/fat.c ****         else
 884:src/MightyBoard/Motherboard/lib_sd/fat.c ****         {
 885:src/MightyBoard/Motherboard/lib_sd/fat.c ****             length_to_sep = strlen(path);
 886:src/MightyBoard/Motherboard/lib_sd/fat.c ****             sub_path = path + length_to_sep;
 887:src/MightyBoard/Motherboard/lib_sd/fat.c ****         }
 888:src/MightyBoard/Motherboard/lib_sd/fat.c ****         
 889:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* read directory entries */
 890:src/MightyBoard/Motherboard/lib_sd/fat.c ****         while(fat_read_dir(dd, dir_entry))
 891:src/MightyBoard/Motherboard/lib_sd/fat.c ****         {
 892:src/MightyBoard/Motherboard/lib_sd/fat.c ****             /* check if we have found the next hierarchy */
 893:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if((strlen(dir_entry->long_name) != length_to_sep ||
 894:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 strncmp(path, dir_entry->long_name, length_to_sep) != 0))
 895:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 continue;
 896:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 897:src/MightyBoard/Motherboard/lib_sd/fat.c ****             fat_close_dir(dd);
 898:src/MightyBoard/Motherboard/lib_sd/fat.c ****             dd = 0;
 899:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 900:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(path[length_to_sep] == '\0')
 901:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 /* we iterated through the whole path and have found the file */
 902:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 return 1;
 903:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 904:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(dir_entry->attributes & FAT_ATTRIB_DIR)
 905:src/MightyBoard/Motherboard/lib_sd/fat.c ****             {
 906:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 /* we found a parent directory of the file we are searching for */
 907:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 path = sub_path;
 908:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 break;
 909:src/MightyBoard/Motherboard/lib_sd/fat.c ****             }
 910:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 911:src/MightyBoard/Motherboard/lib_sd/fat.c ****             /* a parent of the file exists, but not the file itself */
 912:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return 0;
 913:src/MightyBoard/Motherboard/lib_sd/fat.c ****         }
 914:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 915:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fat_close_dir(dd);
 916:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
 917:src/MightyBoard/Motherboard/lib_sd/fat.c ****     
 918:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return 0;
 919:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 920:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 921:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
 922:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_file
 923:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Opens a file on a FAT filesystem.
 924:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
 925:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] fs The filesystem on which the file to open lies.
 926:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] dir_entry The directory entry of the file to open.
 927:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \returns The file handle, or 0 on failure.
 928:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \see fat_close_file
 929:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
 930:src/MightyBoard/Motherboard/lib_sd/fat.c **** struct fat_file_struct* fat_open_file(struct fat_fs_struct* fs, const struct fat_dir_entry_struct* 
 931:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 932:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs || !dir_entry || (dir_entry->attributes & FAT_ATTRIB_DIR))
 933:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 934:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 935:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if USE_DYNAMIC_MEMORY
 936:src/MightyBoard/Motherboard/lib_sd/fat.c ****     struct fat_file_struct* fd = malloc(sizeof(*fd));
 937:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fd)
 938:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 939:src/MightyBoard/Motherboard/lib_sd/fat.c **** #else
 940:src/MightyBoard/Motherboard/lib_sd/fat.c ****     struct fat_file_struct* fd = fat_file_handles;
 941:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint8_t i;
 942:src/MightyBoard/Motherboard/lib_sd/fat.c ****     for(i = 0; i < FAT_FILE_COUNT; ++i)
 943:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
 944:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fd->fs)
 945:src/MightyBoard/Motherboard/lib_sd/fat.c ****             break;
 946:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 947:src/MightyBoard/Motherboard/lib_sd/fat.c ****         ++fd;
 948:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
 949:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(i >= FAT_FILE_COUNT)
 950:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 951:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 952:src/MightyBoard/Motherboard/lib_sd/fat.c ****     
 953:src/MightyBoard/Motherboard/lib_sd/fat.c ****     memcpy(&fd->dir_entry, dir_entry, sizeof(*dir_entry));
 954:src/MightyBoard/Motherboard/lib_sd/fat.c ****     fd->fs = fs;
 955:src/MightyBoard/Motherboard/lib_sd/fat.c ****     fd->pos = 0;
 956:src/MightyBoard/Motherboard/lib_sd/fat.c ****     fd->pos_cluster = dir_entry->cluster;
 957:src/MightyBoard/Motherboard/lib_sd/fat.c **** #ifdef FAT_DELAY_DIRENTRY_UPDATE
 958:src/MightyBoard/Motherboard/lib_sd/fat.c **** 	fd->needs_write = 0;
 959:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 960:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 961:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return fd;
 962:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 963:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 964:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
 965:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_file
 966:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Closes a file.
 967:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
 968:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] fd The file handle of the file to close.
 969:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \see fat_open_file
 970:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
 971:src/MightyBoard/Motherboard/lib_sd/fat.c **** void fat_close_file(struct fat_file_struct* fd)
 972:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 973:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(fd)
 974:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
 975:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_DELAY_DIRENTRY_UPDATE
 976:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* write directory entry */
 977:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if (fd->needs_write == 1)
 978:src/MightyBoard/Motherboard/lib_sd/fat.c **** 			fat_write_dir_entry(fd->fs, &fd->dir_entry);
 979:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 980:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 981:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if USE_DYNAMIC_MEMORY
 982:src/MightyBoard/Motherboard/lib_sd/fat.c ****         free(fd);
 983:src/MightyBoard/Motherboard/lib_sd/fat.c **** #else
 984:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fd->fs = 0;
 985:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
 986:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
 987:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 988:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
 989:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
 990:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_file
 991:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Reads data from a file.
 992:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * 
 993:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * The data requested is read from the current file location.
 994:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
 995:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] fd The file handle of the file from which to read.
 996:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[out] buffer The buffer into which to write.
 997:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] buffer_len The amount of data to read.
 998:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \returns The number of bytes read, 0 on end of file, or -1 on failure.
 999:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \see fat_write_file
1000:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
1001:src/MightyBoard/Motherboard/lib_sd/fat.c **** intptr_t fat_read_file(struct fat_file_struct* fd, uint8_t* buffer, uintptr_t buffer_len)
1002:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
1003:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* check arguments */
1004:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fd || !buffer || buffer_len < 1)
1005:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return -1;
1006:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1007:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* determine number of bytes to read */
1008:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(fd->pos + buffer_len > fd->dir_entry.file_size)
1009:src/MightyBoard/Motherboard/lib_sd/fat.c ****         buffer_len = fd->dir_entry.file_size - fd->pos;
1010:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(buffer_len == 0)
1011:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
1012:src/MightyBoard/Motherboard/lib_sd/fat.c ****     
1013:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint16_t cluster_size = fd->fs->header.cluster_size;
1014:src/MightyBoard/Motherboard/lib_sd/fat.c ****     cluster_t cluster_num = fd->pos_cluster;
1015:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uintptr_t buffer_left = buffer_len;
1016:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint16_t first_cluster_offset = (uint16_t) (fd->pos & (cluster_size - 1));
1017:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1018:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* find cluster in which to start reading */
1019:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!cluster_num)
1020:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
1021:src/MightyBoard/Motherboard/lib_sd/fat.c ****         cluster_num = fd->dir_entry.cluster;
1022:src/MightyBoard/Motherboard/lib_sd/fat.c ****         
1023:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!cluster_num)
1024:src/MightyBoard/Motherboard/lib_sd/fat.c ****         {
1025:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(!fd->pos)
1026:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 return 0;
1027:src/MightyBoard/Motherboard/lib_sd/fat.c ****             else
1028:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 return -1;
1029:src/MightyBoard/Motherboard/lib_sd/fat.c ****         }
1030:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1031:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(fd->pos)
1032:src/MightyBoard/Motherboard/lib_sd/fat.c ****         {
1033:src/MightyBoard/Motherboard/lib_sd/fat.c ****             uint32_t pos = fd->pos;
1034:src/MightyBoard/Motherboard/lib_sd/fat.c ****             while(pos >= cluster_size)
1035:src/MightyBoard/Motherboard/lib_sd/fat.c ****             {
1036:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 pos -= cluster_size;
1037:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 cluster_num = fat_get_next_cluster(fd->fs, cluster_num);
1038:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 if(!cluster_num)
1039:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     return -1;
1040:src/MightyBoard/Motherboard/lib_sd/fat.c ****             }
1041:src/MightyBoard/Motherboard/lib_sd/fat.c ****         }
1042:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
1043:src/MightyBoard/Motherboard/lib_sd/fat.c ****     
1044:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* read data */
1045:src/MightyBoard/Motherboard/lib_sd/fat.c ****     do
1046:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
1047:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* calculate data size to copy from cluster */
1048:src/MightyBoard/Motherboard/lib_sd/fat.c ****         offset_t cluster_offset = fat_cluster_offset(fd->fs, cluster_num) + first_cluster_offset;
1049:src/MightyBoard/Motherboard/lib_sd/fat.c ****         uint16_t copy_length = cluster_size - first_cluster_offset;
1050:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(copy_length > buffer_left)
1051:src/MightyBoard/Motherboard/lib_sd/fat.c ****             copy_length = buffer_left;
1052:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1053:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* read data */
1054:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fd->fs->partition->device_read(cluster_offset, buffer, copy_length))
1055:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return buffer_len - buffer_left;
1056:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1057:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* calculate new file position */
1058:src/MightyBoard/Motherboard/lib_sd/fat.c ****         buffer += copy_length;
1059:src/MightyBoard/Motherboard/lib_sd/fat.c ****         buffer_left -= copy_length;
1060:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fd->pos += copy_length;
1061:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1062:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(first_cluster_offset + copy_length >= cluster_size)
1063:src/MightyBoard/Motherboard/lib_sd/fat.c ****         {
1064:src/MightyBoard/Motherboard/lib_sd/fat.c ****             /* we are on a cluster boundary, so get the next cluster */
1065:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if((cluster_num = fat_get_next_cluster(fd->fs, cluster_num)))
1066:src/MightyBoard/Motherboard/lib_sd/fat.c ****             {
1067:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 first_cluster_offset = 0;
1068:src/MightyBoard/Motherboard/lib_sd/fat.c ****             }
1069:src/MightyBoard/Motherboard/lib_sd/fat.c ****             else
1070:src/MightyBoard/Motherboard/lib_sd/fat.c ****             {
1071:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 fd->pos_cluster = 0;
1072:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 return buffer_len - buffer_left;
1073:src/MightyBoard/Motherboard/lib_sd/fat.c ****             }
1074:src/MightyBoard/Motherboard/lib_sd/fat.c ****         }
1075:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1076:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fd->pos_cluster = cluster_num;
1077:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1078:src/MightyBoard/Motherboard/lib_sd/fat.c ****     } while(buffer_left > 0); /* check if we are done */
1079:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1080:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return buffer_len;
1081:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
1082:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1083:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if DOXYGEN || FAT_WRITE_SUPPORT
1084:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
1085:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_file
1086:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Writes data to a file.
1087:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * 
1088:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * The data is written to the current file location.
1089:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
1090:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] fd The file handle of the file to which to write.
1091:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] buffer The buffer from which to read the data to be written.
1092:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] buffer_len The amount of data to write.
1093:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \returns The number of bytes written, 0 on disk full, or -1 on failure.
1094:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \see fat_read_file
1095:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
1096:src/MightyBoard/Motherboard/lib_sd/fat.c **** intptr_t fat_write_file(struct fat_file_struct* fd, const uint8_t* buffer, uintptr_t buffer_len)
1097:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
1098:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* check arguments */
1099:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fd || !buffer || buffer_len < 1)
1100:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return -1;
1101:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(fd->pos > fd->dir_entry.file_size)
1102:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return -1;
1103:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1104:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint16_t cluster_size = fd->fs->header.cluster_size;
1105:src/MightyBoard/Motherboard/lib_sd/fat.c ****     cluster_t cluster_num = fd->pos_cluster;
1106:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uintptr_t buffer_left = buffer_len;
1107:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint16_t first_cluster_offset = (uint16_t) (fd->pos & (cluster_size - 1));
1108:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1109:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* find cluster in which to start writing */
1110:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!cluster_num)
1111:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
1112:src/MightyBoard/Motherboard/lib_sd/fat.c ****         cluster_num = fd->dir_entry.cluster;
1113:src/MightyBoard/Motherboard/lib_sd/fat.c ****         
1114:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!cluster_num)
1115:src/MightyBoard/Motherboard/lib_sd/fat.c ****         {
1116:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(!fd->pos)
1117:src/MightyBoard/Motherboard/lib_sd/fat.c ****             {
1118:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 /* empty file */
1119:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 fd->dir_entry.cluster = cluster_num = fat_append_clusters(fd->fs, 0, 1);
1120:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 if(!cluster_num)
1121:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     return -1;
1122:src/MightyBoard/Motherboard/lib_sd/fat.c ****             }
1123:src/MightyBoard/Motherboard/lib_sd/fat.c ****             else
1124:src/MightyBoard/Motherboard/lib_sd/fat.c ****             {
1125:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 return -1;
1126:src/MightyBoard/Motherboard/lib_sd/fat.c ****             }
1127:src/MightyBoard/Motherboard/lib_sd/fat.c ****         }
1128:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1129:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(fd->pos)
1130:src/MightyBoard/Motherboard/lib_sd/fat.c ****         {
1131:src/MightyBoard/Motherboard/lib_sd/fat.c ****             uint32_t pos = fd->pos;
1132:src/MightyBoard/Motherboard/lib_sd/fat.c ****             cluster_t cluster_num_next;
1133:src/MightyBoard/Motherboard/lib_sd/fat.c ****             while(pos >= cluster_size)
1134:src/MightyBoard/Motherboard/lib_sd/fat.c ****             {
1135:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 pos -= cluster_size;
1136:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 cluster_num_next = fat_get_next_cluster(fd->fs, cluster_num);
1137:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 if(!cluster_num_next && pos == 0)
1138:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     /* the file exactly ends on a cluster boundary, and we append to it */
1139:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     cluster_num_next = fat_append_clusters(fd->fs, cluster_num, 1);
1140:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 if(!cluster_num_next)
1141:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     return -1;
1142:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1143:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 cluster_num = cluster_num_next;
1144:src/MightyBoard/Motherboard/lib_sd/fat.c ****             }
1145:src/MightyBoard/Motherboard/lib_sd/fat.c ****         }
1146:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
1147:src/MightyBoard/Motherboard/lib_sd/fat.c ****     
1148:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* write data */
1149:src/MightyBoard/Motherboard/lib_sd/fat.c ****     do
1150:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
1151:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* calculate data size to write to cluster */
1152:src/MightyBoard/Motherboard/lib_sd/fat.c ****         offset_t cluster_offset = fat_cluster_offset(fd->fs, cluster_num) + first_cluster_offset;
1153:src/MightyBoard/Motherboard/lib_sd/fat.c ****         uint16_t write_length = cluster_size - first_cluster_offset;
1154:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(write_length > buffer_left)
1155:src/MightyBoard/Motherboard/lib_sd/fat.c ****             write_length = buffer_left;
1156:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1157:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* write data which fits into the current cluster */
1158:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fd->fs->partition->device_write(cluster_offset, buffer, write_length))
1159:src/MightyBoard/Motherboard/lib_sd/fat.c ****             break;
1160:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1161:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* calculate new file position */
1162:src/MightyBoard/Motherboard/lib_sd/fat.c ****         buffer += write_length;
1163:src/MightyBoard/Motherboard/lib_sd/fat.c ****         buffer_left -= write_length;
1164:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fd->pos += write_length;
1165:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1166:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(first_cluster_offset + write_length >= cluster_size)
1167:src/MightyBoard/Motherboard/lib_sd/fat.c ****         {
1168:src/MightyBoard/Motherboard/lib_sd/fat.c ****             /* we are on a cluster boundary, so get the next cluster */
1169:src/MightyBoard/Motherboard/lib_sd/fat.c ****             cluster_t cluster_num_next = fat_get_next_cluster(fd->fs, cluster_num);
1170:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(!cluster_num_next && buffer_left > 0)
1171:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 /* we reached the last cluster, append a new one */
1172:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 cluster_num_next = fat_append_clusters(fd->fs, cluster_num, 1);
1173:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(!cluster_num_next)
1174:src/MightyBoard/Motherboard/lib_sd/fat.c ****             {
1175:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 fd->pos_cluster = 0;
1176:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 break;
1177:src/MightyBoard/Motherboard/lib_sd/fat.c ****             }
1178:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1179:src/MightyBoard/Motherboard/lib_sd/fat.c ****             cluster_num = cluster_num_next;
1180:src/MightyBoard/Motherboard/lib_sd/fat.c ****             first_cluster_offset = 0;
1181:src/MightyBoard/Motherboard/lib_sd/fat.c ****         }
1182:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1183:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fd->pos_cluster = cluster_num;
1184:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1185:src/MightyBoard/Motherboard/lib_sd/fat.c ****     } while(buffer_left > 0); /* check if we are done */
1186:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1187:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* update directory entry */
1188:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(fd->pos > fd->dir_entry.file_size)
1189:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
1190:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if !FAT_DELAY_DIRENTRY_UPDATE
1191:src/MightyBoard/Motherboard/lib_sd/fat.c ****         uint32_t size_old = fd->dir_entry.file_size;
1192:src/MightyBoard/Motherboard/lib_sd/fat.c **** #else
1193:src/MightyBoard/Motherboard/lib_sd/fat.c **** 		/* record the need to write */
1194:src/MightyBoard/Motherboard/lib_sd/fat.c **** 		fd->needs_write = 1;
1195:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
1196:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1197:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* update file size */
1198:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fd->dir_entry.file_size = fd->pos;
1199:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1200:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if !FAT_DELAY_DIRENTRY_UPDATE
1201:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* write directory entry */
1202:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fat_write_dir_entry(fd->fs, &fd->dir_entry))
1203:src/MightyBoard/Motherboard/lib_sd/fat.c ****         {
1204:src/MightyBoard/Motherboard/lib_sd/fat.c ****             /* We do not return an error here since we actually wrote
1205:src/MightyBoard/Motherboard/lib_sd/fat.c ****              * some data to disk. So we calculate the amount of data
1206:src/MightyBoard/Motherboard/lib_sd/fat.c ****              * we wrote to disk and which lies within the old file size.
1207:src/MightyBoard/Motherboard/lib_sd/fat.c ****              */
1208:src/MightyBoard/Motherboard/lib_sd/fat.c ****             buffer_left = fd->pos - size_old;
1209:src/MightyBoard/Motherboard/lib_sd/fat.c ****             fd->pos = size_old;
1210:src/MightyBoard/Motherboard/lib_sd/fat.c ****         }
1211:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
1212:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
1213:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1214:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return buffer_len - buffer_left;
1215:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
1216:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
1217:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1218:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
1219:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_file
1220:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Repositions the read/write file offset.
1221:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
1222:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Changes the file offset where the next call to fat_read_file()
1223:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * or fat_write_file() starts reading/writing.
1224:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
1225:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * If the new offset is beyond the end of the file, fat_resize_file()
1226:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * is implicitly called, i.e. the file is expanded.
1227:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
1228:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * The new offset can be given in different ways determined by
1229:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * the \c whence parameter:
1230:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * - \b FAT_SEEK_SET: \c *offset is relative to the beginning of the file.
1231:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * - \b FAT_SEEK_CUR: \c *offset is relative to the current file position.
1232:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * - \b FAT_SEEK_END: \c *offset is relative to the end of the file.
1233:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
1234:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * The resulting absolute offset is written to the location the \c offset
1235:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * parameter points to.
1236:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * 
1237:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] fd The file decriptor of the file on which to seek.
1238:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in,out] offset A pointer to the new offset, as affected by the \c whence
1239:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *                   parameter. The function writes the new absolute offset
1240:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *                   to this location before it returns.
1241:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] whence Affects the way \c offset is interpreted, see above.
1242:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \returns 0 on failure, 1 on success.
1243:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
1244:src/MightyBoard/Motherboard/lib_sd/fat.c **** uint8_t fat_seek_file(struct fat_file_struct* fd, int32_t* offset, uint8_t whence)
1245:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
1246:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fd || !offset)
1247:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
1248:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1249:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint32_t new_pos = fd->pos;
1250:src/MightyBoard/Motherboard/lib_sd/fat.c ****     switch(whence)
1251:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
1252:src/MightyBoard/Motherboard/lib_sd/fat.c ****         case FAT_SEEK_SET:
1253:src/MightyBoard/Motherboard/lib_sd/fat.c ****             new_pos = *offset;
1254:src/MightyBoard/Motherboard/lib_sd/fat.c ****             break;
1255:src/MightyBoard/Motherboard/lib_sd/fat.c ****         case FAT_SEEK_CUR:
1256:src/MightyBoard/Motherboard/lib_sd/fat.c ****             new_pos += *offset;
1257:src/MightyBoard/Motherboard/lib_sd/fat.c ****             break;
1258:src/MightyBoard/Motherboard/lib_sd/fat.c ****         case FAT_SEEK_END:
1259:src/MightyBoard/Motherboard/lib_sd/fat.c ****             new_pos = fd->dir_entry.file_size + *offset;
1260:src/MightyBoard/Motherboard/lib_sd/fat.c ****             break;
1261:src/MightyBoard/Motherboard/lib_sd/fat.c ****         default:
1262:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return 0;
1263:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
1264:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1265:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(new_pos > fd->dir_entry.file_size
1266:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_WRITE_SUPPORT
1267:src/MightyBoard/Motherboard/lib_sd/fat.c ****        && !fat_resize_file(fd, new_pos)
1268:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
1269:src/MightyBoard/Motherboard/lib_sd/fat.c ****        )
1270:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
1271:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1272:src/MightyBoard/Motherboard/lib_sd/fat.c ****     fd->pos = new_pos;
1273:src/MightyBoard/Motherboard/lib_sd/fat.c ****     fd->pos_cluster = 0;
1274:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1275:src/MightyBoard/Motherboard/lib_sd/fat.c ****     *offset = (int32_t) new_pos;
1276:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return 1;
1277:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
1278:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1279:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if DOXYGEN || FAT_WRITE_SUPPORT
1280:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
1281:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_file
1282:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Resizes a file to have a specific size.
1283:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
1284:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Enlarges or shrinks the file pointed to by the file descriptor to have
1285:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * exactly the specified size.
1286:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
1287:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * If the file is truncated, all bytes having an equal or larger offset
1288:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * than the given size are lost. If the file is expanded, the additional
1289:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * bytes are allocated.
1290:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
1291:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \note Please be aware that this function just allocates or deallocates disk
1292:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * space, it does not explicitely clear it. To avoid data leakage, this
1293:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * must be done manually.
1294:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
1295:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] fd The file decriptor of the file which to resize.
1296:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] size The new size of the file.
1297:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \returns 0 on failure, 1 on success.
1298:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
1299:src/MightyBoard/Motherboard/lib_sd/fat.c **** uint8_t fat_resize_file(struct fat_file_struct* fd, uint32_t size)
1300:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
1301:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fd)
1302:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
1303:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1304:src/MightyBoard/Motherboard/lib_sd/fat.c ****     cluster_t cluster_num = fd->dir_entry.cluster;
1305:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint16_t cluster_size = fd->fs->header.cluster_size;
1306:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint32_t size_new = size;
1307:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1308:src/MightyBoard/Motherboard/lib_sd/fat.c ****     do
1309:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
1310:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(cluster_num == 0 && size_new == 0)
1311:src/MightyBoard/Motherboard/lib_sd/fat.c ****             /* the file stays empty */
1312:src/MightyBoard/Motherboard/lib_sd/fat.c ****             break;
1313:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1314:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* seek to the next cluster as long as we need the space */
1315:src/MightyBoard/Motherboard/lib_sd/fat.c ****         while(size_new > cluster_size)
1316:src/MightyBoard/Motherboard/lib_sd/fat.c ****         {
1317:src/MightyBoard/Motherboard/lib_sd/fat.c ****             /* get next cluster of file */
1318:src/MightyBoard/Motherboard/lib_sd/fat.c ****             cluster_t cluster_num_next = fat_get_next_cluster(fd->fs, cluster_num);
1319:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(cluster_num_next)
1320:src/MightyBoard/Motherboard/lib_sd/fat.c ****             {
1321:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 cluster_num = cluster_num_next;
1322:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 size_new -= cluster_size;
1323:src/MightyBoard/Motherboard/lib_sd/fat.c ****             }
1324:src/MightyBoard/Motherboard/lib_sd/fat.c ****             else
1325:src/MightyBoard/Motherboard/lib_sd/fat.c ****             {
1326:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 break;
1327:src/MightyBoard/Motherboard/lib_sd/fat.c ****             }
1328:src/MightyBoard/Motherboard/lib_sd/fat.c ****         }
1329:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1330:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(size_new > cluster_size || cluster_num == 0)
1331:src/MightyBoard/Motherboard/lib_sd/fat.c ****         {
1332:src/MightyBoard/Motherboard/lib_sd/fat.c ****             /* Allocate new cluster chain and append
1333:src/MightyBoard/Motherboard/lib_sd/fat.c ****              * it to the existing one, if available.
1334:src/MightyBoard/Motherboard/lib_sd/fat.c ****              */
1335:src/MightyBoard/Motherboard/lib_sd/fat.c ****             cluster_t cluster_count = (size_new + cluster_size - 1) / cluster_size;
1336:src/MightyBoard/Motherboard/lib_sd/fat.c ****             cluster_t cluster_new_chain = fat_append_clusters(fd->fs, cluster_num, cluster_count);
1337:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(!cluster_new_chain)
1338:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 return 0;
1339:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1340:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(!cluster_num)
1341:src/MightyBoard/Motherboard/lib_sd/fat.c ****             {
1342:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 cluster_num = cluster_new_chain;
1343:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 fd->dir_entry.cluster = cluster_num;
1344:src/MightyBoard/Motherboard/lib_sd/fat.c ****             }
1345:src/MightyBoard/Motherboard/lib_sd/fat.c ****         }
1346:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1347:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* write new directory entry */
1348:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fd->dir_entry.file_size = size;
1349:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(size == 0)
1350:src/MightyBoard/Motherboard/lib_sd/fat.c ****             fd->dir_entry.cluster = 0;
1351:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fat_write_dir_entry(fd->fs, &fd->dir_entry))
1352:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return 0;
1353:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1354:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(size == 0)
1355:src/MightyBoard/Motherboard/lib_sd/fat.c ****         {
1356:src/MightyBoard/Motherboard/lib_sd/fat.c ****             /* free all clusters of file */
1357:src/MightyBoard/Motherboard/lib_sd/fat.c ****             fat_free_clusters(fd->fs, cluster_num);
1358:src/MightyBoard/Motherboard/lib_sd/fat.c ****         }
1359:src/MightyBoard/Motherboard/lib_sd/fat.c ****         else if(size_new <= cluster_size)
1360:src/MightyBoard/Motherboard/lib_sd/fat.c ****         {
1361:src/MightyBoard/Motherboard/lib_sd/fat.c ****             /* free all clusters no longer needed */
1362:src/MightyBoard/Motherboard/lib_sd/fat.c ****             fat_terminate_clusters(fd->fs, cluster_num);
1363:src/MightyBoard/Motherboard/lib_sd/fat.c ****         }
1364:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1365:src/MightyBoard/Motherboard/lib_sd/fat.c ****     } while(0);
1366:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1367:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* correct file position */
1368:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(size < fd->pos)
1369:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
1370:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fd->pos = size;
1371:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fd->pos_cluster = 0;
1372:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
1373:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1374:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return 1;
1375:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
1376:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
1377:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1378:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
1379:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_dir
1380:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Opens a directory.
1381:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
1382:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] fs The filesystem on which the directory to open resides.
1383:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] dir_entry The directory entry which stands for the directory to open.
1384:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \returns An opaque directory descriptor on success, 0 on failure.
1385:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \see fat_close_dir
1386:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
1387:src/MightyBoard/Motherboard/lib_sd/fat.c **** struct fat_dir_struct* fat_open_dir(struct fat_fs_struct* fs, const struct fat_dir_entry_struct* di
1388:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
1389:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs || !dir_entry || !(dir_entry->attributes & FAT_ATTRIB_DIR))
1390:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
1391:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1392:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if USE_DYNAMIC_MEMORY
1393:src/MightyBoard/Motherboard/lib_sd/fat.c ****     struct fat_dir_struct* dd = malloc(sizeof(*dd));
1394:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!dd)
1395:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
1396:src/MightyBoard/Motherboard/lib_sd/fat.c **** #else
1397:src/MightyBoard/Motherboard/lib_sd/fat.c ****     struct fat_dir_struct* dd = fat_dir_handles;
1398:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint8_t i;
1399:src/MightyBoard/Motherboard/lib_sd/fat.c ****     for(i = 0; i < FAT_DIR_COUNT; ++i)
1400:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
1401:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!dd->fs)
1402:src/MightyBoard/Motherboard/lib_sd/fat.c ****             break;
1403:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1404:src/MightyBoard/Motherboard/lib_sd/fat.c ****         ++dd;
1405:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
1406:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(i >= FAT_DIR_COUNT)
1407:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
1408:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
1409:src/MightyBoard/Motherboard/lib_sd/fat.c ****     
1410:src/MightyBoard/Motherboard/lib_sd/fat.c ****     memcpy(&dd->dir_entry, dir_entry, sizeof(*dir_entry));
1411:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dd->fs = fs;
1412:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dd->entry_cluster = dir_entry->cluster;
1413:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dd->entry_offset = 0;
1414:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1415:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return dd;
1416:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
1417:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1418:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
1419:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_dir
1420:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Closes a directory descriptor.
1421:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
1422:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * This function destroys a directory descriptor which was
1423:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * previously obtained by calling fat_open_dir(). When this
1424:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * function returns, the given descriptor will be invalid.
1425:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
1426:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] dd The directory descriptor to close.
1427:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \see fat_open_dir
1428:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
1429:src/MightyBoard/Motherboard/lib_sd/fat.c **** void fat_close_dir(struct fat_dir_struct* dd)
1430:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
1431:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(dd)
1432:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if USE_DYNAMIC_MEMORY
1433:src/MightyBoard/Motherboard/lib_sd/fat.c ****         free(dd);
1434:src/MightyBoard/Motherboard/lib_sd/fat.c **** #else
1435:src/MightyBoard/Motherboard/lib_sd/fat.c ****         dd->fs = 0;
1436:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
1437:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
1438:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1439:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
1440:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_dir
1441:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Reads the next directory entry contained within a parent directory.
1442:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
1443:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] dd The descriptor of the parent directory from which to read the entry.
1444:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[out] dir_entry Pointer to a buffer into which to write the directory entry information.
1445:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \returns 0 on failure, 1 on success.
1446:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \see fat_reset_dir
1447:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
1448:src/MightyBoard/Motherboard/lib_sd/fat.c **** uint8_t fat_read_dir(struct fat_dir_struct* dd, struct fat_dir_entry_struct* dir_entry)
1449:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
1450:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!dd || !dir_entry)
1451:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
1452:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1453:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* get current position of directory handle */
1454:src/MightyBoard/Motherboard/lib_sd/fat.c ****     struct fat_fs_struct* fs = dd->fs;
1455:src/MightyBoard/Motherboard/lib_sd/fat.c ****     const struct fat_header_struct* header = &fs->header;
1456:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint16_t cluster_size = header->cluster_size;
1457:src/MightyBoard/Motherboard/lib_sd/fat.c ****     cluster_t cluster_num = dd->entry_cluster;
1458:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint16_t cluster_offset = dd->entry_offset;
1459:src/MightyBoard/Motherboard/lib_sd/fat.c ****     struct fat_read_dir_callback_arg arg;
1460:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1461:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(cluster_offset >= cluster_size)
1462:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
1463:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* The latest call hit the border of the last cluster in
1464:src/MightyBoard/Motherboard/lib_sd/fat.c ****          * the chain, but it still returned a directory entry.
1465:src/MightyBoard/Motherboard/lib_sd/fat.c ****          * So we now reset the handle and signal the caller the
1466:src/MightyBoard/Motherboard/lib_sd/fat.c ****          * end of the listing.
1467:src/MightyBoard/Motherboard/lib_sd/fat.c ****          */
1468:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fat_reset_dir(dd);
1469:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
1470:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
1471:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1472:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* reset callback arguments */
1473:src/MightyBoard/Motherboard/lib_sd/fat.c ****     memset(&arg, 0, sizeof(arg));
1474:src/MightyBoard/Motherboard/lib_sd/fat.c ****     memset(dir_entry, 0, sizeof(*dir_entry));
1475:src/MightyBoard/Motherboard/lib_sd/fat.c ****     arg.dir_entry = dir_entry;
1476:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1477:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* check if we read from the root directory */
1478:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(cluster_num == 0)
1479:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
1480:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_FAT32_SUPPORT
1481:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(fs->partition->type == PARTITION_TYPE_FAT32)
1482:src/MightyBoard/Motherboard/lib_sd/fat.c ****             cluster_num = header->root_dir_cluster;
1483:src/MightyBoard/Motherboard/lib_sd/fat.c ****         else
1484:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
1485:src/MightyBoard/Motherboard/lib_sd/fat.c ****             cluster_size = header->cluster_zero_offset - header->root_dir_offset;
1486:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
1487:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1488:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* read entries */
1489:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint8_t buffer[32];
1490:src/MightyBoard/Motherboard/lib_sd/fat.c ****     while(!arg.finished)
1491:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
1492:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* read directory entries up to the cluster border */
1493:src/MightyBoard/Motherboard/lib_sd/fat.c ****         uint16_t cluster_left = cluster_size - cluster_offset;
1494:src/MightyBoard/Motherboard/lib_sd/fat.c ****         offset_t pos = cluster_offset;
1495:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(cluster_num == 0)
1496:src/MightyBoard/Motherboard/lib_sd/fat.c ****             pos += header->root_dir_offset;
1497:src/MightyBoard/Motherboard/lib_sd/fat.c ****         else
1498:src/MightyBoard/Motherboard/lib_sd/fat.c ****             pos += fat_cluster_offset(fs, cluster_num);
1499:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1500:src/MightyBoard/Motherboard/lib_sd/fat.c ****         arg.bytes_read = 0;
1501:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fs->partition->device_read_interval(pos,
1502:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                                 buffer,
1503:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                                 sizeof(buffer),
1504:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                                 cluster_left,
1505:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                                 fat_dir_entry_read_callback,
1506:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                                 &arg)
1507:src/MightyBoard/Motherboard/lib_sd/fat.c ****           )
1508:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return 0;
1509:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1510:src/MightyBoard/Motherboard/lib_sd/fat.c ****         cluster_offset += arg.bytes_read;
1511:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1512:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(cluster_offset >= cluster_size)
1513:src/MightyBoard/Motherboard/lib_sd/fat.c ****         {
1514:src/MightyBoard/Motherboard/lib_sd/fat.c ****             /* we reached the cluster border and switch to the next cluster */
1515:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1516:src/MightyBoard/Motherboard/lib_sd/fat.c ****             /* get number of next cluster */
1517:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if((cluster_num = fat_get_next_cluster(fs, cluster_num)) != 0)
1518:src/MightyBoard/Motherboard/lib_sd/fat.c ****             {
1519:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 cluster_offset = 0;
1520:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 continue;
1521:src/MightyBoard/Motherboard/lib_sd/fat.c ****             }
1522:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1523:src/MightyBoard/Motherboard/lib_sd/fat.c ****             /* we are at the end of the cluster chain */
1524:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(!arg.finished)
1525:src/MightyBoard/Motherboard/lib_sd/fat.c ****             {
1526:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 /* directory entry not found, reset directory handle */
1527:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 fat_reset_dir(dd);
1528:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 return 0;
1529:src/MightyBoard/Motherboard/lib_sd/fat.c ****             }
1530:src/MightyBoard/Motherboard/lib_sd/fat.c ****             else
1531:src/MightyBoard/Motherboard/lib_sd/fat.c ****             {
1532:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 /* The current execution of the function has been successful,
1533:src/MightyBoard/Motherboard/lib_sd/fat.c ****                  * so we can not signal an end of the directory listing to
1534:src/MightyBoard/Motherboard/lib_sd/fat.c ****                  * the caller, but must wait for the next call. So we keep an
1535:src/MightyBoard/Motherboard/lib_sd/fat.c ****                  * invalid cluster offset to mark this directory handle's
1536:src/MightyBoard/Motherboard/lib_sd/fat.c ****                  * traversal as finished.
1537:src/MightyBoard/Motherboard/lib_sd/fat.c ****                  */
1538:src/MightyBoard/Motherboard/lib_sd/fat.c ****             }
1539:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1540:src/MightyBoard/Motherboard/lib_sd/fat.c ****             break;
1541:src/MightyBoard/Motherboard/lib_sd/fat.c ****         }
1542:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
1543:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1544:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dd->entry_cluster = cluster_num;
1545:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dd->entry_offset = cluster_offset;
1546:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1547:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return arg.finished;
1548:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
1549:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1550:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
1551:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_dir
1552:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Resets a directory handle.
1553:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
1554:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Resets the directory handle such that reading restarts
1555:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * with the first directory entry.
1556:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
1557:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] dd The directory handle to reset.
1558:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \returns 0 on failure, 1 on success.
1559:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \see fat_read_dir
1560:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
1561:src/MightyBoard/Motherboard/lib_sd/fat.c **** uint8_t fat_reset_dir(struct fat_dir_struct* dd)
1562:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
1563:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!dd)
1564:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
1565:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1566:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dd->entry_cluster = dd->dir_entry.cluster;
1567:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dd->entry_offset = 0;
1568:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return 1;
1569:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
1570:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1571:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
1572:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_fs
1573:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Callback function for reading a directory entry.
1574:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
1575:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Interprets a raw directory entry and puts the contained
1576:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * information into a fat_dir_entry_struct structure.
1577:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * 
1578:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * For a single file there may exist multiple directory
1579:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * entries. All except the last one are lfn entries, which
1580:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * contain parts of the long filename. The last directory
1581:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * entry is a traditional 8.3 style one. It contains all
1582:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * other information like size, cluster, date and time.
1583:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * 
1584:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] buffer A pointer to 32 bytes of raw data.
1585:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] offset The absolute offset of the raw data.
1586:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in,out] p An argument structure controlling operation.
1587:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \returns 0 on failure or completion, 1 if reading has
1588:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *          to be continued
1589:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
1590:src/MightyBoard/Motherboard/lib_sd/fat.c **** uint8_t fat_dir_entry_read_callback(uint8_t* buffer, offset_t offset, void* p)
1591:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
1592:src/MightyBoard/Motherboard/lib_sd/fat.c ****   struct fat_read_dir_callback_arg* arg = p;
1593:src/MightyBoard/Motherboard/lib_sd/fat.c ****     struct fat_dir_entry_struct* dir_entry = arg->dir_entry;
1594:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1595:src/MightyBoard/Motherboard/lib_sd/fat.c ****     arg->bytes_read += 32;
1596:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1597:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* skip deleted or empty entries */
1598:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(buffer[0] == FAT_DIRENTRY_DELETED || !buffer[0])
1599:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
1600:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_LFN_SUPPORT
1601:src/MightyBoard/Motherboard/lib_sd/fat.c ****         arg->checksum = 0;
1602:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
1603:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 1;
1604:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
1605:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1606:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if !FAT_LFN_SUPPORT
1607:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* skip lfn entries */
1608:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(buffer[11] == 0x0f)
1609:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 1;
1610:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
1611:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1612:src/MightyBoard/Motherboard/lib_sd/fat.c ****     char* long_name = dir_entry->long_name;
1613:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_LFN_SUPPORT
1614:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(buffer[11] == 0x0f)
1615:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
1616:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* checksum validation */
1617:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(arg->checksum == 0 || arg->checksum != buffer[13])
1618:src/MightyBoard/Motherboard/lib_sd/fat.c ****         {
1619:src/MightyBoard/Motherboard/lib_sd/fat.c ****             /* reset directory entry */
1620:src/MightyBoard/Motherboard/lib_sd/fat.c ****             memset(dir_entry, 0, sizeof(*dir_entry));
1621:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1622:src/MightyBoard/Motherboard/lib_sd/fat.c ****             arg->checksum = buffer[13];
1623:src/MightyBoard/Motherboard/lib_sd/fat.c ****             dir_entry->entry_offset = offset;
1624:src/MightyBoard/Motherboard/lib_sd/fat.c ****         }
1625:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1626:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* lfn supports unicode, but we do not, for now.
1627:src/MightyBoard/Motherboard/lib_sd/fat.c ****          * So we assume pure ascii and read only every
1628:src/MightyBoard/Motherboard/lib_sd/fat.c ****          * second byte.
1629:src/MightyBoard/Motherboard/lib_sd/fat.c ****          */
1630:src/MightyBoard/Motherboard/lib_sd/fat.c ****         uint16_t char_offset = ((buffer[0] & 0x3f) - 1) * 13;
1631:src/MightyBoard/Motherboard/lib_sd/fat.c ****         const uint8_t char_mapping[] = { 1, 3, 5, 7, 9, 14, 16, 18, 20, 22, 24, 28, 30 };
1632:src/MightyBoard/Motherboard/lib_sd/fat.c ****         uint8_t i;
1633:src/MightyBoard/Motherboard/lib_sd/fat.c ****         for(i = 0; i <= 12 && char_offset + i < sizeof(dir_entry->long_name) - 1; ++i)
1634:src/MightyBoard/Motherboard/lib_sd/fat.c ****             long_name[char_offset + i] = buffer[char_mapping[i]];
1635:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1636:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 1;
1637:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
1638:src/MightyBoard/Motherboard/lib_sd/fat.c ****     else
1639:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
1640:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
1641:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_LFN_SUPPORT
1642:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* if we do not have a long name or the previous lfn does not match, take the 8.3 name */
1643:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(long_name[0] == '\0' || arg->checksum != fat_calc_83_checksum(buffer))
1644:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
1645:src/MightyBoard/Motherboard/lib_sd/fat.c ****         {
1646:src/MightyBoard/Motherboard/lib_sd/fat.c ****             /* reset directory entry */
1647:src/MightyBoard/Motherboard/lib_sd/fat.c ****             memset(dir_entry, 0, sizeof(*dir_entry));
1648:src/MightyBoard/Motherboard/lib_sd/fat.c ****             dir_entry->entry_offset = offset;
1649:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1650:src/MightyBoard/Motherboard/lib_sd/fat.c ****             uint8_t i;
1651:src/MightyBoard/Motherboard/lib_sd/fat.c ****             for(i = 0; i < 8; ++i)
1652:src/MightyBoard/Motherboard/lib_sd/fat.c ****             {
1653:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 if(buffer[i] == ' ')
1654:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     break;
1655:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 long_name[i] = buffer[i];
1656:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1657:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 /* Windows NT and later versions do not store lfn entries
1658:src/MightyBoard/Motherboard/lib_sd/fat.c ****                  * for 8.3 names which have a lowercase basename, extension
1659:src/MightyBoard/Motherboard/lib_sd/fat.c ****                  * or both when everything else is uppercase. They use two
1660:src/MightyBoard/Motherboard/lib_sd/fat.c ****                  * extra bits to signal a lowercase basename or extension.
1661:src/MightyBoard/Motherboard/lib_sd/fat.c ****                  */
1662:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 if((buffer[12] & 0x08) && buffer[i] >= 'A' && buffer[i] <= 'Z')
1663:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     long_name[i] += 'a' - 'A';
1664:src/MightyBoard/Motherboard/lib_sd/fat.c ****             }
1665:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(long_name[0] == 0x05)
1666:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 long_name[0] = (char) FAT_DIRENTRY_DELETED;
1667:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1668:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(buffer[8] != ' ')
1669:src/MightyBoard/Motherboard/lib_sd/fat.c ****             {
1670:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 long_name[i++] = '.';
1671:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1672:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 uint8_t j = 8;
1673:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 for(; j < 11; ++j)
1674:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 {
1675:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     if(buffer[j] == ' ')
1676:src/MightyBoard/Motherboard/lib_sd/fat.c ****                         break;
1677:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     long_name[i] = buffer[j];
1678:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1679:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     /* See above for the lowercase 8.3 name handling of
1680:src/MightyBoard/Motherboard/lib_sd/fat.c ****                      * Windows NT and later.
1681:src/MightyBoard/Motherboard/lib_sd/fat.c ****                      */
1682:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     if((buffer[12] & 0x10) && buffer[j] >= 'A' && buffer[j] <= 'Z')
1683:src/MightyBoard/Motherboard/lib_sd/fat.c ****                         long_name[i] += 'a' - 'A';
1684:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1685:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     ++i;
1686:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 }
1687:src/MightyBoard/Motherboard/lib_sd/fat.c ****             } 
1688:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1689:src/MightyBoard/Motherboard/lib_sd/fat.c ****             long_name[i] = '\0';
1690:src/MightyBoard/Motherboard/lib_sd/fat.c ****         }
1691:src/MightyBoard/Motherboard/lib_sd/fat.c ****         
1692:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* extract properties of file and store them within the structure */
1693:src/MightyBoard/Motherboard/lib_sd/fat.c ****         dir_entry->attributes = buffer[11];
1694:src/MightyBoard/Motherboard/lib_sd/fat.c ****         dir_entry->cluster = ltoh16(*((uint16_t*) &buffer[26]));
1695:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_FAT32_SUPPORT
1696:src/MightyBoard/Motherboard/lib_sd/fat.c ****         dir_entry->cluster |= ((cluster_t) ltoh16(*((uint16_t*) &buffer[20]))) << 16;
1697:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
1698:src/MightyBoard/Motherboard/lib_sd/fat.c ****         dir_entry->file_size = ltoh32(*((uint32_t*) &buffer[28]));
1699:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1700:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_DATETIME_SUPPORT
1701:src/MightyBoard/Motherboard/lib_sd/fat.c ****         dir_entry->modification_time = ltoh16(*((uint16_t*) &buffer[22]));
1702:src/MightyBoard/Motherboard/lib_sd/fat.c ****         dir_entry->modification_date = ltoh16(*((uint16_t*) &buffer[24]));
1703:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
1704:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1705:src/MightyBoard/Motherboard/lib_sd/fat.c ****         arg->finished = 1;
1706:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
1707:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
1708:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
1709:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1710:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if DOXYGEN || FAT_LFN_SUPPORT
1711:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
1712:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_fs
1713:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Calculates the checksum for 8.3 names used within the
1714:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * corresponding lfn directory entries.
1715:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
1716:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] file_name_83 The 11-byte file name buffer.
1717:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \returns The checksum of the given file name.
1718:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
1719:src/MightyBoard/Motherboard/lib_sd/fat.c **** uint8_t fat_calc_83_checksum(const uint8_t* file_name_83)
1720:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 515              	 .loc 1 1720 0
 516              	 .cfi_startproc
 517              	 
 518              	 
 519              	 
 520              	.LVL57:
1721:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint8_t checksum = file_name_83[0];
 521              	 .loc 1 1721 0
 522 0000 0378     	 ldrb r3,[r0,#0]
 523              	.LVL58:
 524 0002 4FF00A02 	 mov r2,#10
 525              	.LVL59:
 526              	.L38:
1722:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint8_t i;
1723:src/MightyBoard/Motherboard/lib_sd/fat.c ****     for(i = 1; i < 11; ++i)
1724:src/MightyBoard/Motherboard/lib_sd/fat.c ****         checksum = ((checksum >> 1) | (checksum << 7)) + file_name_83[i];
 527              	 .loc 1 1724 0 discriminator 2
 528 0006 4FEA5301 	 lsr r1,r3,#1
 529 000a 41EAC313 	 orr r3,r1,r3,lsl#7
 530 000e 10F8011F 	 ldrb r1,[r0,#1]!
 531 0012 5B18     	 adds r3,r3,r1
 532 0014 03F0FF03 	 and r3,r3,#255
 533              	.LVL60:
 534 0018 02F1FF32 	 add r2,r2,#-1
 535 001c D2B2     	 uxtb r2,r2
1723:src/MightyBoard/Motherboard/lib_sd/fat.c ****     for(i = 1; i < 11; ++i)
 536              	 .loc 1 1723 0 discriminator 2
 537 001e 002A     	 cmp r2,#0
 538 0020 F1D1     	 bne .L38
1725:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1726:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return checksum;
1727:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 539              	 .loc 1 1727 0
 540 0022 1846     	 mov r0,r3
 541 0024 7047     	 bx lr
 542              	 .cfi_endproc
 543              	.LFE77:
 545 0026 00BF     	 .section .text.fat_get_fs_free_16_callback,"ax",%progbits
 546              	 .align 2
 547              	 .thumb
 548              	 .thumb_func
 550              	fat_get_fs_free_16_callback:
 551              	.LFB86:
1728:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
1729:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1730:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if DOXYGEN || FAT_WRITE_SUPPORT
1731:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
1732:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_fs
1733:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Searches for space where to store a directory entry.
1734:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
1735:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] fs The filesystem on which to operate.
1736:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] parent The directory in which to search.
1737:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] dir_entry The directory entry for which to search space.
1738:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \returns 0 on failure, a device offset on success.
1739:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
1740:src/MightyBoard/Motherboard/lib_sd/fat.c **** offset_t fat_find_offset_for_dir_entry(struct fat_fs_struct* fs, const struct fat_dir_struct* paren
1741:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
1742:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs || !dir_entry)
1743:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
1744:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1745:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* search for a place where to write the directory entry to disk */
1746:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_LFN_SUPPORT
1747:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint8_t free_dir_entries_needed = (strlen(dir_entry->long_name) + 12) / 13 + 1;
1748:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint8_t free_dir_entries_found = 0;
1749:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
1750:src/MightyBoard/Motherboard/lib_sd/fat.c ****     cluster_t cluster_num = parent->dir_entry.cluster;
1751:src/MightyBoard/Motherboard/lib_sd/fat.c ****     offset_t dir_entry_offset = 0;
1752:src/MightyBoard/Motherboard/lib_sd/fat.c ****     offset_t offset = 0;
1753:src/MightyBoard/Motherboard/lib_sd/fat.c ****     offset_t offset_to = 0;
1754:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_FAT32_SUPPORT
1755:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint8_t is_fat32 = (fs->partition->type == PARTITION_TYPE_FAT32);
1756:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
1757:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1758:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(cluster_num == 0)
1759:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
1760:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_FAT32_SUPPORT
1761:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(is_fat32)
1762:src/MightyBoard/Motherboard/lib_sd/fat.c ****         {
1763:src/MightyBoard/Motherboard/lib_sd/fat.c ****             cluster_num = fs->header.root_dir_cluster;
1764:src/MightyBoard/Motherboard/lib_sd/fat.c ****         }
1765:src/MightyBoard/Motherboard/lib_sd/fat.c ****         else
1766:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
1767:src/MightyBoard/Motherboard/lib_sd/fat.c ****         {
1768:src/MightyBoard/Motherboard/lib_sd/fat.c ****             /* we read/write from the root directory entry */
1769:src/MightyBoard/Motherboard/lib_sd/fat.c ****             offset = fs->header.root_dir_offset;
1770:src/MightyBoard/Motherboard/lib_sd/fat.c ****             offset_to = fs->header.cluster_zero_offset;
1771:src/MightyBoard/Motherboard/lib_sd/fat.c ****             dir_entry_offset = offset;
1772:src/MightyBoard/Motherboard/lib_sd/fat.c ****         }
1773:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
1774:src/MightyBoard/Motherboard/lib_sd/fat.c ****     
1775:src/MightyBoard/Motherboard/lib_sd/fat.c ****     while(1)
1776:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
1777:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(offset == offset_to)
1778:src/MightyBoard/Motherboard/lib_sd/fat.c ****         {
1779:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(cluster_num == 0)
1780:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 /* We iterated through the whole root directory and
1781:src/MightyBoard/Motherboard/lib_sd/fat.c ****                  * could not find enough space for the directory entry.
1782:src/MightyBoard/Motherboard/lib_sd/fat.c ****                  */
1783:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 return 0;
1784:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1785:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(offset)
1786:src/MightyBoard/Motherboard/lib_sd/fat.c ****             {
1787:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 /* We reached a cluster boundary and have to
1788:src/MightyBoard/Motherboard/lib_sd/fat.c ****                  * switch to the next cluster.
1789:src/MightyBoard/Motherboard/lib_sd/fat.c ****                  */
1790:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1791:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 cluster_t cluster_next = fat_get_next_cluster(fs, cluster_num);
1792:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 if(!cluster_next)
1793:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 {
1794:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     cluster_next = fat_append_clusters(fs, cluster_num, 1);
1795:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     if(!cluster_next)
1796:src/MightyBoard/Motherboard/lib_sd/fat.c ****                         return 0;
1797:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1798:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     /* we appended a new cluster and know it is free */
1799:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     dir_entry_offset = fs->header.cluster_zero_offset +
1800:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                        (offset_t) (cluster_next - 2) * fs->header.cluster_size;
1801:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1802:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     /* clear cluster to avoid garbage directory entries */
1803:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     fat_clear_cluster(fs, cluster_next);
1804:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1805:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     break;
1806:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 }
1807:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 cluster_num = cluster_next;
1808:src/MightyBoard/Motherboard/lib_sd/fat.c ****             }
1809:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1810:src/MightyBoard/Motherboard/lib_sd/fat.c ****             offset = fat_cluster_offset(fs, cluster_num);
1811:src/MightyBoard/Motherboard/lib_sd/fat.c ****             offset_to = offset + fs->header.cluster_size;
1812:src/MightyBoard/Motherboard/lib_sd/fat.c ****             dir_entry_offset = offset;
1813:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_LFN_SUPPORT
1814:src/MightyBoard/Motherboard/lib_sd/fat.c ****             free_dir_entries_found = 0;
1815:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
1816:src/MightyBoard/Motherboard/lib_sd/fat.c ****         }
1817:src/MightyBoard/Motherboard/lib_sd/fat.c ****         
1818:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* read next lfn or 8.3 entry */
1819:src/MightyBoard/Motherboard/lib_sd/fat.c ****         uint8_t first_char;
1820:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fs->partition->device_read(offset, &first_char, sizeof(first_char)))
1821:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return 0;
1822:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1823:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* check if we found a free directory entry */
1824:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(first_char == FAT_DIRENTRY_DELETED || !first_char)
1825:src/MightyBoard/Motherboard/lib_sd/fat.c ****         {
1826:src/MightyBoard/Motherboard/lib_sd/fat.c ****             /* check if we have the needed number of available entries */
1827:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_LFN_SUPPORT
1828:src/MightyBoard/Motherboard/lib_sd/fat.c ****             ++free_dir_entries_found;
1829:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(free_dir_entries_found >= free_dir_entries_needed)
1830:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
1831:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 break;
1832:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1833:src/MightyBoard/Motherboard/lib_sd/fat.c ****             offset += 32;
1834:src/MightyBoard/Motherboard/lib_sd/fat.c ****         }
1835:src/MightyBoard/Motherboard/lib_sd/fat.c ****         else
1836:src/MightyBoard/Motherboard/lib_sd/fat.c ****         {
1837:src/MightyBoard/Motherboard/lib_sd/fat.c ****             offset += 32;
1838:src/MightyBoard/Motherboard/lib_sd/fat.c ****             dir_entry_offset = offset;
1839:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_LFN_SUPPORT
1840:src/MightyBoard/Motherboard/lib_sd/fat.c ****             free_dir_entries_found = 0;
1841:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
1842:src/MightyBoard/Motherboard/lib_sd/fat.c ****         }
1843:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
1844:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1845:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return dir_entry_offset;
1846:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
1847:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
1848:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1849:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if DOXYGEN || FAT_WRITE_SUPPORT
1850:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
1851:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_fs
1852:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Writes a directory entry to disk.
1853:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
1854:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \note The file name is not checked for invalid characters.
1855:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
1856:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \note The generation of the short 8.3 file name is quite
1857:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * simple. The first eight characters are used for the filename.
1858:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * The extension, if any, is made up of the first three characters
1859:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * following the last dot within the long filename. If the
1860:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * filename (without the extension) is longer than eight characters,
1861:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * the lower byte of the cluster number replaces the last two
1862:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * characters to avoid name clashes. In any other case, it is your
1863:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * responsibility to avoid name clashes.
1864:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
1865:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] fs The filesystem on which to operate.
1866:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] dir_entry The directory entry to write.
1867:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \returns 0 on failure, 1 on success.
1868:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
1869:src/MightyBoard/Motherboard/lib_sd/fat.c **** uint8_t fat_write_dir_entry(const struct fat_fs_struct* fs, struct fat_dir_entry_struct* dir_entry)
1870:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
1871:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs || !dir_entry)
1872:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
1873:src/MightyBoard/Motherboard/lib_sd/fat.c ****     
1874:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_DATETIME_SUPPORT
1875:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
1876:src/MightyBoard/Motherboard/lib_sd/fat.c ****         uint16_t year;
1877:src/MightyBoard/Motherboard/lib_sd/fat.c ****         uint8_t month;
1878:src/MightyBoard/Motherboard/lib_sd/fat.c ****         uint8_t day;
1879:src/MightyBoard/Motherboard/lib_sd/fat.c ****         uint8_t hour;
1880:src/MightyBoard/Motherboard/lib_sd/fat.c ****         uint8_t min;
1881:src/MightyBoard/Motherboard/lib_sd/fat.c ****         uint8_t sec;
1882:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1883:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fat_get_datetime(&year, &month, &day, &hour, &min, &sec);
1884:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fat_set_file_modification_date(dir_entry, year, month, day);
1885:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fat_set_file_modification_time(dir_entry, hour, min, sec);
1886:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
1887:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
1888:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1889:src/MightyBoard/Motherboard/lib_sd/fat.c ****     device_write_t device_write = fs->partition->device_write;
1890:src/MightyBoard/Motherboard/lib_sd/fat.c ****     offset_t offset = dir_entry->entry_offset;
1891:src/MightyBoard/Motherboard/lib_sd/fat.c ****     const char* name = dir_entry->long_name;
1892:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint8_t name_len = strlen(name);
1893:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_LFN_SUPPORT
1894:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint8_t lfn_entry_count = (name_len + 12) / 13;
1895:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
1896:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint8_t buffer[32];
1897:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1898:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* write 8.3 entry */
1899:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1900:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* generate 8.3 file name */
1901:src/MightyBoard/Motherboard/lib_sd/fat.c ****     memset(&buffer[0], ' ', 11);
1902:src/MightyBoard/Motherboard/lib_sd/fat.c ****     char* name_ext = strrchr(name, '.');
1903:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(name_ext && *++name_ext)
1904:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
1905:src/MightyBoard/Motherboard/lib_sd/fat.c ****         uint8_t name_ext_len = strlen(name_ext);
1906:src/MightyBoard/Motherboard/lib_sd/fat.c ****         name_len -= name_ext_len + 1;
1907:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1908:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(name_ext_len > 3)
1909:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_LFN_SUPPORT
1910:src/MightyBoard/Motherboard/lib_sd/fat.c ****             name_ext_len = 3;
1911:src/MightyBoard/Motherboard/lib_sd/fat.c **** #else
1912:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return 0;
1913:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
1914:src/MightyBoard/Motherboard/lib_sd/fat.c ****         
1915:src/MightyBoard/Motherboard/lib_sd/fat.c ****         memcpy(&buffer[8], name_ext, name_ext_len);
1916:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
1917:src/MightyBoard/Motherboard/lib_sd/fat.c ****     
1918:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(name_len <= 8)
1919:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
1920:src/MightyBoard/Motherboard/lib_sd/fat.c ****         memcpy(buffer, name, name_len);
1921:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1922:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_LFN_SUPPORT
1923:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* For now, we create lfn entries for all files,
1924:src/MightyBoard/Motherboard/lib_sd/fat.c ****          * except the "." and ".." directory references.
1925:src/MightyBoard/Motherboard/lib_sd/fat.c ****          * This is to avoid difficulties with capitalization,
1926:src/MightyBoard/Motherboard/lib_sd/fat.c ****          * as 8.3 filenames allow uppercase letters only.
1927:src/MightyBoard/Motherboard/lib_sd/fat.c ****          *
1928:src/MightyBoard/Motherboard/lib_sd/fat.c ****          * Theoretically it would be possible to leave
1929:src/MightyBoard/Motherboard/lib_sd/fat.c ****          * the 8.3 entry alone if the basename and the
1930:src/MightyBoard/Motherboard/lib_sd/fat.c ****          * extension have no mixed capitalization.
1931:src/MightyBoard/Motherboard/lib_sd/fat.c ****          */
1932:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(name[0] == '.' &&
1933:src/MightyBoard/Motherboard/lib_sd/fat.c ****            ((name[1] == '.' && name[2] == '\0') ||
1934:src/MightyBoard/Motherboard/lib_sd/fat.c ****             name[1] == '\0')
1935:src/MightyBoard/Motherboard/lib_sd/fat.c ****           )
1936:src/MightyBoard/Motherboard/lib_sd/fat.c ****             lfn_entry_count = 0;
1937:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
1938:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
1939:src/MightyBoard/Motherboard/lib_sd/fat.c ****     else
1940:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
1941:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_LFN_SUPPORT
1942:src/MightyBoard/Motherboard/lib_sd/fat.c ****         memcpy(buffer, name, 8);
1943:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1944:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* Minimize 8.3 name clashes by appending
1945:src/MightyBoard/Motherboard/lib_sd/fat.c ****          * the lower byte of the cluster number.
1946:src/MightyBoard/Motherboard/lib_sd/fat.c ****          */
1947:src/MightyBoard/Motherboard/lib_sd/fat.c ****         uint8_t num = dir_entry->cluster & 0xff;
1948:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1949:src/MightyBoard/Motherboard/lib_sd/fat.c ****         buffer[6] = (num < 0xa0) ? ('0' + (num >> 4)) : ('a' + (num >> 4));
1950:src/MightyBoard/Motherboard/lib_sd/fat.c ****         num &= 0x0f;
1951:src/MightyBoard/Motherboard/lib_sd/fat.c ****         buffer[7] = (num < 0x0a) ? ('0' + num) : ('a' + num);
1952:src/MightyBoard/Motherboard/lib_sd/fat.c **** #else
1953:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
1954:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
1955:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
1956:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(buffer[0] == FAT_DIRENTRY_DELETED)
1957:src/MightyBoard/Motherboard/lib_sd/fat.c ****         buffer[0] = 0x05;
1958:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1959:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* fill directory entry buffer */
1960:src/MightyBoard/Motherboard/lib_sd/fat.c ****     memset(&buffer[11], 0, sizeof(buffer) - 11);
1961:src/MightyBoard/Motherboard/lib_sd/fat.c ****     buffer[0x0b] = dir_entry->attributes;
1962:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_DATETIME_SUPPORT
1963:src/MightyBoard/Motherboard/lib_sd/fat.c ****     *((uint16_t*) &buffer[0x16]) = htol16(dir_entry->modification_time);
1964:src/MightyBoard/Motherboard/lib_sd/fat.c ****     *((uint16_t*) &buffer[0x18]) = htol16(dir_entry->modification_date);
1965:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
1966:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_FAT32_SUPPORT
1967:src/MightyBoard/Motherboard/lib_sd/fat.c ****     *((uint16_t*) &buffer[0x14]) = htol16((uint16_t) (dir_entry->cluster >> 16));
1968:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
1969:src/MightyBoard/Motherboard/lib_sd/fat.c ****     *((uint16_t*) &buffer[0x1a]) = htol16(dir_entry->cluster);
1970:src/MightyBoard/Motherboard/lib_sd/fat.c ****     *((uint32_t*) &buffer[0x1c]) = htol32(dir_entry->file_size);
1971:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1972:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* write to disk */
1973:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_LFN_SUPPORT
1974:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!device_write(offset + (uint16_t) lfn_entry_count * 32, buffer, sizeof(buffer)))
1975:src/MightyBoard/Motherboard/lib_sd/fat.c **** #else
1976:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!device_write(offset, buffer, sizeof(buffer)))
1977:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
1978:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
1979:src/MightyBoard/Motherboard/lib_sd/fat.c ****     
1980:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_LFN_SUPPORT
1981:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* calculate checksum of 8.3 name */
1982:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint8_t checksum = fat_calc_83_checksum(buffer);
1983:src/MightyBoard/Motherboard/lib_sd/fat.c ****     
1984:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* write lfn entries */
1985:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint8_t lfn_entry;
1986:src/MightyBoard/Motherboard/lib_sd/fat.c ****     for(lfn_entry = lfn_entry_count; lfn_entry > 0; --lfn_entry)
1987:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
1988:src/MightyBoard/Motherboard/lib_sd/fat.c ****         memset(buffer, 0xff, sizeof(buffer));
1989:src/MightyBoard/Motherboard/lib_sd/fat.c ****         
1990:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* set file name */
1991:src/MightyBoard/Motherboard/lib_sd/fat.c ****         const char* long_name_curr = name + (lfn_entry - 1) * 13;
1992:src/MightyBoard/Motherboard/lib_sd/fat.c ****         uint8_t i = 1;
1993:src/MightyBoard/Motherboard/lib_sd/fat.c ****         while(i < 0x1f)
1994:src/MightyBoard/Motherboard/lib_sd/fat.c ****         {
1995:src/MightyBoard/Motherboard/lib_sd/fat.c ****             buffer[i++] = *long_name_curr;
1996:src/MightyBoard/Motherboard/lib_sd/fat.c ****             buffer[i++] = 0;
1997:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
1998:src/MightyBoard/Motherboard/lib_sd/fat.c ****             switch(i)
1999:src/MightyBoard/Motherboard/lib_sd/fat.c ****             {
2000:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 case 0x0b:
2001:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     i = 0x0e;
2002:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     break;
2003:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 case 0x1a:
2004:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     i = 0x1c;
2005:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     break;
2006:src/MightyBoard/Motherboard/lib_sd/fat.c ****             }
2007:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2008:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(!*long_name_curr++)
2009:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 break;
2010:src/MightyBoard/Motherboard/lib_sd/fat.c ****         }
2011:src/MightyBoard/Motherboard/lib_sd/fat.c ****         
2012:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* set index of lfn entry */
2013:src/MightyBoard/Motherboard/lib_sd/fat.c ****         buffer[0x00] = lfn_entry;
2014:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(lfn_entry == lfn_entry_count)
2015:src/MightyBoard/Motherboard/lib_sd/fat.c ****             buffer[0x00] |= FAT_DIRENTRY_LFNLAST;
2016:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2017:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* mark as lfn entry */
2018:src/MightyBoard/Motherboard/lib_sd/fat.c ****         buffer[0x0b] = 0x0f;
2019:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2020:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* set 8.3 checksum */
2021:src/MightyBoard/Motherboard/lib_sd/fat.c ****         buffer[0x0d] = checksum;
2022:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2023:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* clear reserved bytes */
2024:src/MightyBoard/Motherboard/lib_sd/fat.c ****         buffer[0x0c] = 0;
2025:src/MightyBoard/Motherboard/lib_sd/fat.c ****         buffer[0x1a] = 0;
2026:src/MightyBoard/Motherboard/lib_sd/fat.c ****         buffer[0x1b] = 0;
2027:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2028:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* write entry */
2029:src/MightyBoard/Motherboard/lib_sd/fat.c ****         device_write(offset, buffer, sizeof(buffer));
2030:src/MightyBoard/Motherboard/lib_sd/fat.c ****     
2031:src/MightyBoard/Motherboard/lib_sd/fat.c ****         offset += sizeof(buffer);
2032:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
2033:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
2034:src/MightyBoard/Motherboard/lib_sd/fat.c ****     
2035:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return 1;
2036:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
2037:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
2038:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2039:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if DOXYGEN || FAT_WRITE_SUPPORT
2040:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
2041:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_file
2042:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Creates a file.
2043:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
2044:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Creates a file and obtains the directory entry of the
2045:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * new file. If the file to create already exists, the
2046:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * directory entry of the existing file will be returned
2047:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * within the dir_entry parameter.
2048:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
2049:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \note The file name is not checked for invalid characters.
2050:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
2051:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \note The generation of the short 8.3 file name is quite
2052:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * simple. The first eight characters are used for the filename.
2053:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * The extension, if any, is made up of the first three characters
2054:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * following the last dot within the long filename. If the
2055:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * filename (without the extension) is longer than eight characters,
2056:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * the lower byte of the cluster number replaces the last two
2057:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * characters to avoid name clashes. In any other case, it is your
2058:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * responsibility to avoid name clashes.
2059:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
2060:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] parent The handle of the directory in which to create the file.
2061:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] file The name of the file to create.
2062:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[out] dir_entry The directory entry to fill for the new file.
2063:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \returns 0 on failure, 1 on success.
2064:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \see fat_delete_file
2065:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
2066:src/MightyBoard/Motherboard/lib_sd/fat.c **** uint8_t fat_create_file(struct fat_dir_struct* parent, const char* file, struct fat_dir_entry_struc
2067:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
2068:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!parent || !file || !file[0] || !dir_entry)
2069:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
2070:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2071:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* check if the file already exists */
2072:src/MightyBoard/Motherboard/lib_sd/fat.c ****     while(1)
2073:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
2074:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fat_read_dir(parent, dir_entry))
2075:src/MightyBoard/Motherboard/lib_sd/fat.c ****             break;
2076:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2077:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(strcmp(file, dir_entry->long_name) == 0)
2078:src/MightyBoard/Motherboard/lib_sd/fat.c ****         {
2079:src/MightyBoard/Motherboard/lib_sd/fat.c ****             fat_reset_dir(parent);
2080:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return 0;
2081:src/MightyBoard/Motherboard/lib_sd/fat.c ****         }
2082:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
2083:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2084:src/MightyBoard/Motherboard/lib_sd/fat.c ****     struct fat_fs_struct* fs = parent->fs;
2085:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2086:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* prepare directory entry with values already known */
2087:src/MightyBoard/Motherboard/lib_sd/fat.c ****     memset(dir_entry, 0, sizeof(*dir_entry));
2088:src/MightyBoard/Motherboard/lib_sd/fat.c ****     strncpy(dir_entry->long_name, file, sizeof(dir_entry->long_name) - 1);
2089:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2090:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* find place where to store directory entry */
2091:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!(dir_entry->entry_offset = fat_find_offset_for_dir_entry(fs, parent, dir_entry)))
2092:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
2093:src/MightyBoard/Motherboard/lib_sd/fat.c ****     
2094:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* write directory entry to disk */
2095:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fat_write_dir_entry(fs, dir_entry))
2096:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
2097:src/MightyBoard/Motherboard/lib_sd/fat.c ****     
2098:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return 1;
2099:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
2100:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
2101:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2102:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if DOXYGEN || FAT_WRITE_SUPPORT
2103:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
2104:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_file
2105:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Deletes a file or directory.
2106:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
2107:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * If a directory is deleted without first deleting its
2108:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * subdirectories and files, disk space occupied by these
2109:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * files will get wasted as there is no chance to release
2110:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * it and mark it as free.
2111:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * 
2112:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] fs The filesystem on which to operate.
2113:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] dir_entry The directory entry of the file to delete.
2114:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \returns 0 on failure, 1 on success.
2115:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \see fat_create_file
2116:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
2117:src/MightyBoard/Motherboard/lib_sd/fat.c **** uint8_t fat_delete_file(struct fat_fs_struct* fs, struct fat_dir_entry_struct* dir_entry)
2118:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
2119:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs || !dir_entry)
2120:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
2121:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2122:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* get offset of the file's directory entry */
2123:src/MightyBoard/Motherboard/lib_sd/fat.c ****     offset_t dir_entry_offset = dir_entry->entry_offset;
2124:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!dir_entry_offset)
2125:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
2126:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2127:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_LFN_SUPPORT
2128:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint8_t buffer[12];
2129:src/MightyBoard/Motherboard/lib_sd/fat.c ****     while(1)
2130:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
2131:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* read directory entry */
2132:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fs->partition->device_read(dir_entry_offset, buffer, sizeof(buffer)))
2133:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return 0;
2134:src/MightyBoard/Motherboard/lib_sd/fat.c ****         
2135:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* mark the directory entry as deleted */
2136:src/MightyBoard/Motherboard/lib_sd/fat.c ****         buffer[0] = FAT_DIRENTRY_DELETED;
2137:src/MightyBoard/Motherboard/lib_sd/fat.c ****         
2138:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* write back entry */
2139:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fs->partition->device_write(dir_entry_offset, buffer, sizeof(buffer)))
2140:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return 0;
2141:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2142:src/MightyBoard/Motherboard/lib_sd/fat.c ****         /* check if we deleted the whole entry */
2143:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(buffer[11] != 0x0f)
2144:src/MightyBoard/Motherboard/lib_sd/fat.c ****             break;
2145:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2146:src/MightyBoard/Motherboard/lib_sd/fat.c ****         dir_entry_offset += 32;
2147:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
2148:src/MightyBoard/Motherboard/lib_sd/fat.c **** #else
2149:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* mark the directory entry as deleted */
2150:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint8_t first_char = FAT_DIRENTRY_DELETED;
2151:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs->partition->device_write(dir_entry_offset, &first_char, 1))
2152:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
2153:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
2154:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2155:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* We deleted the directory entry. The next thing to do is
2156:src/MightyBoard/Motherboard/lib_sd/fat.c ****      * marking all occupied clusters as free.
2157:src/MightyBoard/Motherboard/lib_sd/fat.c ****      */
2158:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return (dir_entry->cluster == 0 || fat_free_clusters(fs, dir_entry->cluster));
2159:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
2160:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
2161:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2162:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if DOXYGEN || FAT_WRITE_SUPPORT
2163:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
2164:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_dir
2165:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Creates a directory.
2166:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
2167:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Creates a directory and obtains its directory entry.
2168:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * If the directory to create already exists, its
2169:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * directory entry will be returned within the dir_entry
2170:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * parameter.
2171:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
2172:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \note The notes which apply to fat_create_file also
2173:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * apply to this function.
2174:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
2175:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] parent The handle of the parent directory of the new directory.
2176:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] dir The name of the directory to create.
2177:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[out] dir_entry The directory entry to fill for the new directory.
2178:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \returns 0 on failure, 1 on success.
2179:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \see fat_delete_dir
2180:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
2181:src/MightyBoard/Motherboard/lib_sd/fat.c **** uint8_t fat_create_dir(struct fat_dir_struct* parent, const char* dir, struct fat_dir_entry_struct*
2182:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
2183:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!parent || !dir || !dir[0] || !dir_entry)
2184:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
2185:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2186:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* check if the file or directory already exists */
2187:src/MightyBoard/Motherboard/lib_sd/fat.c ****     while(fat_read_dir(parent, dir_entry))
2188:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
2189:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(strcmp(dir, dir_entry->long_name) == 0)
2190:src/MightyBoard/Motherboard/lib_sd/fat.c ****         {
2191:src/MightyBoard/Motherboard/lib_sd/fat.c ****             fat_reset_dir(parent);
2192:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return 0;
2193:src/MightyBoard/Motherboard/lib_sd/fat.c ****         }
2194:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
2195:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2196:src/MightyBoard/Motherboard/lib_sd/fat.c ****     struct fat_fs_struct* fs = parent->fs;
2197:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2198:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* allocate cluster which will hold directory entries */
2199:src/MightyBoard/Motherboard/lib_sd/fat.c ****     cluster_t dir_cluster = fat_append_clusters(fs, 0, 1);
2200:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!dir_cluster)
2201:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
2202:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2203:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* clear cluster to prevent bogus directory entries */
2204:src/MightyBoard/Motherboard/lib_sd/fat.c ****     fat_clear_cluster(fs, dir_cluster);
2205:src/MightyBoard/Motherboard/lib_sd/fat.c ****     
2206:src/MightyBoard/Motherboard/lib_sd/fat.c ****     memset(dir_entry, 0, sizeof(*dir_entry));
2207:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dir_entry->attributes = FAT_ATTRIB_DIR;
2208:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2209:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* create "." directory self reference */
2210:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dir_entry->entry_offset = fs->header.cluster_zero_offset +
2211:src/MightyBoard/Motherboard/lib_sd/fat.c ****                               (offset_t) (dir_cluster - 2) * fs->header.cluster_size;
2212:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dir_entry->long_name[0] = '.';
2213:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dir_entry->cluster = dir_cluster;
2214:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fat_write_dir_entry(fs, dir_entry))
2215:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
2216:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fat_free_clusters(fs, dir_cluster);
2217:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
2218:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
2219:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2220:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* create ".." parent directory reference */
2221:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dir_entry->entry_offset += 32;
2222:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dir_entry->long_name[1] = '.';
2223:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dir_entry->cluster = parent->dir_entry.cluster;
2224:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fat_write_dir_entry(fs, dir_entry))
2225:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
2226:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fat_free_clusters(fs, dir_cluster);
2227:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
2228:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
2229:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2230:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* fill directory entry */
2231:src/MightyBoard/Motherboard/lib_sd/fat.c ****     strncpy(dir_entry->long_name, dir, sizeof(dir_entry->long_name) - 1);
2232:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dir_entry->cluster = dir_cluster;
2233:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2234:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* find place where to store directory entry */
2235:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!(dir_entry->entry_offset = fat_find_offset_for_dir_entry(fs, parent, dir_entry)))
2236:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
2237:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fat_free_clusters(fs, dir_cluster);
2238:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
2239:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
2240:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2241:src/MightyBoard/Motherboard/lib_sd/fat.c ****     /* write directory to disk */
2242:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fat_write_dir_entry(fs, dir_entry))
2243:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
2244:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fat_free_clusters(fs, dir_cluster);
2245:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
2246:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
2247:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2248:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return 1;
2249:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
2250:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
2251:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2252:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
2253:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_dir
2254:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Deletes a directory.
2255:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
2256:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * This is just a synonym for fat_delete_file().
2257:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * If a directory is deleted without first deleting its
2258:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * subdirectories and files, disk space occupied by these
2259:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * files will get wasted as there is no chance to release
2260:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * it and mark it as free.
2261:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * 
2262:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] fs The filesystem on which to operate.
2263:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] dir_entry The directory entry of the directory to delete.
2264:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \returns 0 on failure, 1 on success.
2265:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \see fat_create_dir
2266:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
2267:src/MightyBoard/Motherboard/lib_sd/fat.c **** #ifdef DOXYGEN
2268:src/MightyBoard/Motherboard/lib_sd/fat.c **** uint8_t fat_delete_dir(struct fat_fs_struct* fs, struct fat_dir_entry_struct* dir_entry);
2269:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
2270:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2271:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if DOXYGEN || FAT_DATETIME_SUPPORT
2272:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
2273:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_file
2274:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Returns the modification date of a file.
2275:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
2276:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] dir_entry The directory entry of which to return the modification date.
2277:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[out] year The year the file was last modified.
2278:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[out] month The month the file was last modified.
2279:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[out] day The day the file was last modified.
2280:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
2281:src/MightyBoard/Motherboard/lib_sd/fat.c **** void fat_get_file_modification_date(const struct fat_dir_entry_struct* dir_entry, uint16_t* year, u
2282:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
2283:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!dir_entry)
2284:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return;
2285:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2286:src/MightyBoard/Motherboard/lib_sd/fat.c ****     *year = 1980 + ((dir_entry->modification_date >> 9) & 0x7f);
2287:src/MightyBoard/Motherboard/lib_sd/fat.c ****     *month = (dir_entry->modification_date >> 5) & 0x0f;
2288:src/MightyBoard/Motherboard/lib_sd/fat.c ****     *day = (dir_entry->modification_date >> 0) & 0x1f;
2289:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
2290:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
2291:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2292:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if DOXYGEN || FAT_DATETIME_SUPPORT
2293:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
2294:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_file
2295:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Returns the modification time of a file.
2296:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
2297:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] dir_entry The directory entry of which to return the modification time.
2298:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[out] hour The hour the file was last modified.
2299:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[out] min The min the file was last modified.
2300:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[out] sec The sec the file was last modified.
2301:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
2302:src/MightyBoard/Motherboard/lib_sd/fat.c **** void fat_get_file_modification_time(const struct fat_dir_entry_struct* dir_entry, uint8_t* hour, ui
2303:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
2304:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!dir_entry)
2305:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return;
2306:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2307:src/MightyBoard/Motherboard/lib_sd/fat.c ****     *hour = (dir_entry->modification_time >> 11) & 0x1f;
2308:src/MightyBoard/Motherboard/lib_sd/fat.c ****     *min = (dir_entry->modification_time >> 5) & 0x3f;
2309:src/MightyBoard/Motherboard/lib_sd/fat.c ****     *sec = ((dir_entry->modification_time >> 0) & 0x1f) * 2;
2310:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
2311:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
2312:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2313:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if DOXYGEN || (FAT_WRITE_SUPPORT && FAT_DATETIME_SUPPORT)
2314:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
2315:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_file
2316:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Sets the modification time of a date.
2317:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
2318:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] dir_entry The directory entry for which to set the modification date.
2319:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] year The year the file was last modified.
2320:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] month The month the file was last modified.
2321:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] day The day the file was last modified.
2322:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
2323:src/MightyBoard/Motherboard/lib_sd/fat.c **** void fat_set_file_modification_date(struct fat_dir_entry_struct* dir_entry, uint16_t year, uint8_t 
2324:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
2325:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!dir_entry)
2326:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return;
2327:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2328:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dir_entry->modification_date =
2329:src/MightyBoard/Motherboard/lib_sd/fat.c ****         ((year - 1980) << 9) |
2330:src/MightyBoard/Motherboard/lib_sd/fat.c ****         ((uint16_t) month << 5) |
2331:src/MightyBoard/Motherboard/lib_sd/fat.c ****         ((uint16_t) day << 0);
2332:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
2333:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
2334:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2335:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if DOXYGEN || (FAT_WRITE_SUPPORT && FAT_DATETIME_SUPPORT)
2336:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
2337:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_file
2338:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Sets the modification time of a file.
2339:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
2340:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] dir_entry The directory entry for which to set the modification time.
2341:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] hour The year the file was last modified.
2342:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] min The month the file was last modified.
2343:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] sec The day the file was last modified.
2344:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
2345:src/MightyBoard/Motherboard/lib_sd/fat.c **** void fat_set_file_modification_time(struct fat_dir_entry_struct* dir_entry, uint8_t hour, uint8_t m
2346:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
2347:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!dir_entry)
2348:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return;
2349:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2350:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dir_entry->modification_time =
2351:src/MightyBoard/Motherboard/lib_sd/fat.c ****         ((uint16_t) hour << 11) |
2352:src/MightyBoard/Motherboard/lib_sd/fat.c ****         ((uint16_t) min << 5) |
2353:src/MightyBoard/Motherboard/lib_sd/fat.c ****         ((uint16_t) sec >> 1) ;
2354:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
2355:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
2356:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2357:src/MightyBoard/Motherboard/lib_sd/fat.c **** offset_t fat_get_file_size(const struct fat_file_struct* fd){
2358:src/MightyBoard/Motherboard/lib_sd/fat.c **** 	return fd->dir_entry.file_size;
2359:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
2360:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2361:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
2362:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_fs
2363:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Returns the amount of total storage capacity of the filesystem in bytes.
2364:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
2365:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] fs The filesystem on which to operate.
2366:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \returns 0 on failure, the filesystem size in bytes otherwise.
2367:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
2368:src/MightyBoard/Motherboard/lib_sd/fat.c **** offset_t fat_get_fs_size(const struct fat_fs_struct* fs)
2369:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
2370:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs)
2371:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
2372:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2373:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_FAT32_SUPPORT
2374:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(fs->partition->type == PARTITION_TYPE_FAT32)
2375:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return (offset_t) (fs->header.fat_size / 4 - 2) * fs->header.cluster_size;
2376:src/MightyBoard/Motherboard/lib_sd/fat.c ****     else
2377:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
2378:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return (offset_t) (fs->header.fat_size / 2 - 2) * fs->header.cluster_size;
2379:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
2380:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2381:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
2382:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_fs
2383:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Returns the amount of free storage capacity on the filesystem in bytes.
2384:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
2385:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \note As the FAT filesystem is cluster based, this function does not
2386:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *       return continuous values but multiples of the cluster size.
2387:src/MightyBoard/Motherboard/lib_sd/fat.c ****  *
2388:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \param[in] fs The filesystem on which to operate.
2389:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \returns 0 on failure, the free filesystem space in bytes otherwise.
2390:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
2391:src/MightyBoard/Motherboard/lib_sd/fat.c **** offset_t fat_get_fs_free(const struct fat_fs_struct* fs)
2392:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
2393:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs)
2394:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
2395:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2396:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint8_t fat[32];
2397:src/MightyBoard/Motherboard/lib_sd/fat.c ****     struct fat_usage_count_callback_arg count_arg;
2398:src/MightyBoard/Motherboard/lib_sd/fat.c ****     count_arg.cluster_count = 0;
2399:src/MightyBoard/Motherboard/lib_sd/fat.c ****     count_arg.buffer_size = sizeof(fat);
2400:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2401:src/MightyBoard/Motherboard/lib_sd/fat.c ****     offset_t fat_offset = fs->header.fat_offset;
2402:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint32_t fat_size = fs->header.fat_size;
2403:src/MightyBoard/Motherboard/lib_sd/fat.c ****     while(fat_size > 0)
2404:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
2405:src/MightyBoard/Motherboard/lib_sd/fat.c ****         uintptr_t length = UINTPTR_MAX - 1;
2406:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(fat_size < length)
2407:src/MightyBoard/Motherboard/lib_sd/fat.c ****             length = fat_size;
2408:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2409:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fs->partition->device_read_interval(fat_offset,
2410:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                                 fat,
2411:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                                 sizeof(fat),
2412:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                                 length,
2413:src/MightyBoard/Motherboard/lib_sd/fat.c **** #if FAT_FAT32_SUPPORT
2414:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                                 (fs->partition->type == PARTITION_TYPE_FAT16) ?
2415:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                                     fat_get_fs_free_16_callback :
2416:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                                     fat_get_fs_free_32_callback,
2417:src/MightyBoard/Motherboard/lib_sd/fat.c **** #else
2418:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                                 fat_get_fs_free_16_callback,
2419:src/MightyBoard/Motherboard/lib_sd/fat.c **** #endif
2420:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                                 &count_arg
2421:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                                )
2422:src/MightyBoard/Motherboard/lib_sd/fat.c ****           )
2423:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return 0;
2424:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2425:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fat_offset += length;
2426:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fat_size -= length;
2427:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
2428:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2429:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return (offset_t) count_arg.cluster_count * fs->header.cluster_size;
2430:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
2431:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2432:src/MightyBoard/Motherboard/lib_sd/fat.c **** /**
2433:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * \ingroup fat_fs
2434:src/MightyBoard/Motherboard/lib_sd/fat.c ****  * Callback function used for counting free clusters in a FAT.
2435:src/MightyBoard/Motherboard/lib_sd/fat.c ****  */
2436:src/MightyBoard/Motherboard/lib_sd/fat.c **** uint8_t fat_get_fs_free_16_callback(uint8_t* buffer, offset_t offset, void* p)
2437:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 552              	 .loc 1 2437 0
 553              	 .cfi_startproc
 554              	 
 555              	 
 556              	 
 557              	.LVL61:
 558 0000 10B4     	 push {r4}
 559              	.LCFI6:
 560              	 .cfi_def_cfa_offset 4
 561              	 .cfi_offset 4,-4
 562              	.LVL62:
2438:src/MightyBoard/Motherboard/lib_sd/fat.c ****     struct fat_usage_count_callback_arg* count_arg = (struct fat_usage_count_callback_arg*) p;
2439:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uintptr_t buffer_size = count_arg->buffer_size;
 563              	 .loc 1 2439 0
 564 0002 5468     	 ldr r4,[r2,#4]
 565              	.LVL63:
2440:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2441:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uintptr_t i;
2442:src/MightyBoard/Motherboard/lib_sd/fat.c ****     for(i = 0; i < buffer_size; i += 2, buffer += 2)
 566              	 .loc 1 2442 0
 567 0004 5CB1     	 cbz r4,.L41
 568 0006 4FF00003 	 mov r3,#0
 569              	.LVL64:
 570              	.L43:
 571              	.LBB10:
2443:src/MightyBoard/Motherboard/lib_sd/fat.c ****     {
2444:src/MightyBoard/Motherboard/lib_sd/fat.c ****         uint16_t cluster = *((uint16_t*) &buffer[0]);
2445:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(cluster == HTOL16(FAT16_CLUSTER_FREE))
 572              	 .loc 1 2445 0
 573 000a C15A     	 ldrh r1,[r0,r3]
 574 000c 19B9     	 cbnz r1,.L42
2446:src/MightyBoard/Motherboard/lib_sd/fat.c ****             ++(count_arg->cluster_count);
 575              	 .loc 1 2446 0
 576 000e 1188     	 ldrh r1,[r2,#0]
 577 0010 01F10101 	 add r1,r1,#1
 578 0014 1180     	 strh r1,[r2,#0]
 579              	.L42:
 580              	.LBE10:
2442:src/MightyBoard/Motherboard/lib_sd/fat.c ****     for(i = 0; i < buffer_size; i += 2, buffer += 2)
 581              	 .loc 1 2442 0
 582 0016 03F10203 	 add r3,r3,#2
 583              	.LVL65:
 584 001a 9C42     	 cmp r4,r3
 585 001c F5D8     	 bhi .L43
 586              	.LVL66:
 587              	.L41:
2447:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
2448:src/MightyBoard/Motherboard/lib_sd/fat.c **** 
2449:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return 1;
2450:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 588              	 .loc 1 2450 0
 589 001e 4FF00100 	 mov r0,#1
 590 0022 10BC     	 pop {r4}
 591 0024 7047     	 bx lr
 592              	 .cfi_endproc
 593              	.LFE86:
 595 0026 00BF     	 .section .text.fat_clear_cluster,"ax",%progbits
 596              	 .align 2
 597              	 .thumb
 598              	 .thumb_func
 600              	fat_clear_cluster:
 601              	.LFB62:
 798:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 602              	 .loc 1 798 0
 603              	 .cfi_startproc
 604              	 
 605              	 
 606              	.LVL67:
 607 0000 10B5     	 push {r4,lr}
 608              	.LCFI7:
 609              	 .cfi_def_cfa_offset 8
 610              	 .cfi_offset 14,-4
 611              	 .cfi_offset 4,-8
 612 0002 86B0     	 sub sp,sp,#24
 613              	.LCFI8:
 614              	 .cfi_def_cfa_offset 32
 615 0004 0446     	 mov r4,r0
 799:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(cluster_num < 2)
 616              	 .loc 1 799 0
 617 0006 0129     	 cmp r1,#1
 800:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 618              	 .loc 1 800 0
 619 0008 98BF     	 it ls
 620 000a 0020     	 movls r0,#0
 621              	.LVL68:
 799:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(cluster_num < 2)
 622              	 .loc 1 799 0
 623 000c 11D9     	 bls .L46
 802:src/MightyBoard/Motherboard/lib_sd/fat.c ****     offset_t cluster_offset = fat_cluster_offset(fs, cluster_num);
 624              	 .loc 1 802 0
 625 000e FFF7FEFF 	 bl fat_cluster_offset
 626              	.LVL69:
 805:src/MightyBoard/Motherboard/lib_sd/fat.c ****     memset(zero, 0, sizeof(zero));
 627              	 .loc 1 805 0
 628 0012 4FF00003 	 mov r3,#0
 629 0016 0293     	 str r3,[sp,#8]
 630 0018 0393     	 str r3,[sp,#12]
 631 001a 0493     	 str r3,[sp,#16]
 632 001c 0593     	 str r3,[sp,#20]
 806:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return fs->partition->device_write_interval(cluster_offset,
 633              	 .loc 1 806 0
 634 001e 2168     	 ldr r1,[r4,#0]
 635 0020 628A     	 ldrh r2,[r4,#18]
 636 0022 0093     	 str r3,[sp,#0]
 637 0024 CC68     	 ldr r4,[r1,#12]
 638              	.LVL70:
 639 0026 02A9     	 add r1,sp,#8
 640 0028 40F20003 	 movw r3,#:lower16:fat_clear_cluster_callback
 641 002c C0F20003 	 movt r3,#:upper16:fat_clear_cluster_callback
 642 0030 A047     	 blx r4
 643              	.L46:
 812:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 644              	 .loc 1 812 0
 645 0032 06B0     	 add sp,sp,#24
 646 0034 10BD     	 pop {r4,pc}
 647              	 .cfi_endproc
 648              	.LFE62:
 650 0036 00BF     	 .section .text.fat_dir_entry_read_callback,"ax",%progbits
 651              	 .align 2
 652              	 .thumb
 653              	 .thumb_func
 655              	fat_dir_entry_read_callback:
 656              	.LFB76:
1591:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 657              	 .loc 1 1591 0
 658              	 .cfi_startproc
 659              	 
 660              	 
 661              	.LVL71:
 662 0000 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
 663              	.LCFI9:
 664              	 .cfi_def_cfa_offset 24
 665              	 .cfi_offset 14,-4
 666              	 .cfi_offset 8,-8
 667              	 .cfi_offset 7,-12
 668              	 .cfi_offset 6,-16
 669              	 .cfi_offset 5,-20
 670              	 .cfi_offset 4,-24
 671 0004 84B0     	 sub sp,sp,#16
 672              	.LCFI10:
 673              	 .cfi_def_cfa_offset 40
 674 0006 0446     	 mov r4,r0
 675 0008 0F46     	 mov r7,r1
 676 000a 1646     	 mov r6,r2
 677              	.LVL72:
1593:src/MightyBoard/Motherboard/lib_sd/fat.c ****     struct fat_dir_entry_struct* dir_entry = arg->dir_entry;
 678              	 .loc 1 1593 0
 679 000c 1568     	 ldr r5,[r2,#0]
 680              	.LVL73:
1595:src/MightyBoard/Motherboard/lib_sd/fat.c ****     arg->bytes_read += 32;
 681              	 .loc 1 1595 0
 682 000e 5368     	 ldr r3,[r2,#4]
 683 0010 03F12003 	 add r3,r3,#32
 684 0014 5360     	 str r3,[r2,#4]
1598:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(buffer[0] == FAT_DIRENTRY_DELETED || !buffer[0])
 685              	 .loc 1 1598 0
 686 0016 0378     	 ldrb r3,[r0,#0]
 687 0018 D3F10102 	 rsbs r2,r3,#1
 688              	.LVL74:
 689 001c 38BF     	 it cc
 690 001e 0022     	 movcc r2,#0
 691 0020 E52B     	 cmp r3,#229
 692 0022 14BF     	 ite ne
 693 0024 1346     	 movne r3,r2
 694 0026 42F00103 	 orreq r3,r2,#1
 695 002a 2BB1     	 cbz r3,.L49
1601:src/MightyBoard/Motherboard/lib_sd/fat.c ****         arg->checksum = 0;
 696              	 .loc 1 1601 0
 697 002c 4FF00003 	 mov r3,#0
 698 0030 3372     	 strb r3,[r6,#8]
1603:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 1;
 699              	 .loc 1 1603 0
 700 0032 4FF00100 	 mov r0,#1
 701              	.LVL75:
 702 0036 B3E0     	 b .L50
 703              	.L49:
 704              	.LVL76:
1614:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(buffer[11] == 0x0f)
 705              	 .loc 1 1614 0
 706 0038 C37A     	 ldrb r3,[r0,#11]
 707 003a 0F2B     	 cmp r3,#15
 708 003c 37D1     	 bne .L51
 709              	.LBB11:
1617:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(arg->checksum == 0 || arg->checksum != buffer[13])
 710              	 .loc 1 1617 0
 711 003e 337A     	 ldrb r3,[r6,#8]
 712 0040 13B1     	 cbz r3,.L52
1617:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(arg->checksum == 0 || arg->checksum != buffer[13])
 713              	 .loc 1 1617 0 is_stmt 0 discriminator 1
 714 0042 427B     	 ldrb r2,[r0,#13]
 715 0044 9A42     	 cmp r2,r3
 716 0046 09D0     	 beq .L53
 717              	.L52:
1620:src/MightyBoard/Motherboard/lib_sd/fat.c ****             memset(dir_entry, 0, sizeof(*dir_entry));
 718              	 .loc 1 1620 0 is_stmt 1
 719 0048 2846     	 mov r0,r5
 720 004a 4FF00001 	 mov r1,#0
 721              	.LVL77:
 722 004e 4FF02C02 	 mov r2,#44
 723 0052 FFF7FEFF 	 bl memset
 724              	.LVL78:
1622:src/MightyBoard/Motherboard/lib_sd/fat.c ****             arg->checksum = buffer[13];
 725              	 .loc 1 1622 0
 726 0056 637B     	 ldrb r3,[r4,#13]
 727 0058 3372     	 strb r3,[r6,#8]
1623:src/MightyBoard/Motherboard/lib_sd/fat.c ****             dir_entry->entry_offset = offset;
 728              	 .loc 1 1623 0
 729 005a AF62     	 str r7,[r5,#40]
 730              	.L53:
1630:src/MightyBoard/Motherboard/lib_sd/fat.c ****         uint16_t char_offset = ((buffer[0] & 0x3f) - 1) * 13;
 731              	 .loc 1 1630 0
 732 005c 2378     	 ldrb r3,[r4,#0]
 733 005e 03F03F03 	 and r3,r3,#63
 734 0062 03F1FF33 	 add r3,r3,#-1
 735 0066 03EB4307 	 add r7,r3,r3,lsl#1
 736              	.LVL79:
 737 006a 03EB8707 	 add r7,r3,r7,lsl#2
 738 006e BFB2     	 uxth r7,r7
 739              	.LVL80:
1631:src/MightyBoard/Motherboard/lib_sd/fat.c ****         const uint8_t char_mapping[] = { 1, 3, 5, 7, 9, 14, 16, 18, 20, 22, 24, 28, 30 };
 740              	 .loc 1 1631 0
 741 0070 40F20006 	 movw r6,#:lower16:.LANCHOR0
 742              	.LVL81:
 743 0074 C0F20006 	 movt r6,#:upper16:.LANCHOR0
 744 0078 6B46     	 mov r3,sp
 745 007a 3068     	 ldr r0,[r6,#0]
 746 007c 7168     	 ldr r1,[r6,#4]
 747 007e B268     	 ldr r2,[r6,#8]
 748 0080 07C3     	 stmia r3!,{r0,r1,r2}
 749 0082 327B     	 ldrb r2,[r6,#12]
 750 0084 1A70     	 strb r2,[r3,#0]
 751              	.LVL82:
1633:src/MightyBoard/Motherboard/lib_sd/fat.c ****         for(i = 0; i <= 12 && char_offset + i < sizeof(dir_entry->long_name) - 1; ++i)
 752              	 .loc 1 1633 0
 753 0086 1E2F     	 cmp r7,#30
1636:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 1;
 754              	 .loc 1 1636 0
 755 0088 88BF     	 it hi
 756 008a 0120     	 movhi r0,#1
1633:src/MightyBoard/Motherboard/lib_sd/fat.c ****         for(i = 0; i <= 12 && char_offset + i < sizeof(dir_entry->long_name) - 1; ++i)
 757              	 .loc 1 1633 0
 758 008c 40F28B80 	 bls .L71
 759 0090 86E0     	 b .L50
 760              	.LVL83:
 761              	.L55:
1634:src/MightyBoard/Motherboard/lib_sd/fat.c ****             long_name[char_offset + i] = buffer[char_mapping[i]];
 762              	 .loc 1 1634 0 discriminator 1
 763 0092 13F8012F 	 ldrb r2,[r3,#1]!
 764 0096 A25C     	 ldrb r2,[r4,r2]
 765 0098 7A70     	 strb r2,[r7,#1]
 766 009a 07F10107 	 add r7,r7,#1
1633:src/MightyBoard/Motherboard/lib_sd/fat.c ****         for(i = 0; i <= 12 && char_offset + i < sizeof(dir_entry->long_name) - 1; ++i)
 767              	 .loc 1 1633 0 discriminator 1
 768 009e 8B42     	 cmp r3,r1
 769 00a0 7CD0     	 beq .L68
 770              	.L67:
1633:src/MightyBoard/Motherboard/lib_sd/fat.c ****         for(i = 0; i <= 12 && char_offset + i < sizeof(dir_entry->long_name) - 1; ++i)
 771              	 .loc 1 1633 0 is_stmt 0 discriminator 2
 772 00a2 EA19     	 adds r2,r5,r7
 773 00a4 1E2A     	 cmp r2,#30
 774 00a6 F4D9     	 bls .L55
1636:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 1;
 775              	 .loc 1 1636 0 is_stmt 1
 776 00a8 4FF00100 	 mov r0,#1
 777 00ac 78E0     	 b .L50
 778              	.LVL84:
 779              	.L51:
 780              	.LBE11:
1643:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(long_name[0] == '\0' || arg->checksum != fat_calc_83_checksum(buffer))
 781              	 .loc 1 1643 0
 782 00ae 2B78     	 ldrb r3,[r5,#0]
 783 00b0 23B1     	 cbz r3,.L56
1643:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(long_name[0] == '\0' || arg->checksum != fat_calc_83_checksum(buffer))
 784              	 .loc 1 1643 0 is_stmt 0 discriminator 1
 785 00b2 FFF7FEFF 	 bl fat_calc_83_checksum
 786              	.LVL85:
 787 00b6 337A     	 ldrb r3,[r6,#8]
 788 00b8 8342     	 cmp r3,r0
 789 00ba 62D0     	 beq .L57
 790              	.L56:
 791              	.LBB12:
1647:src/MightyBoard/Motherboard/lib_sd/fat.c ****             memset(dir_entry, 0, sizeof(*dir_entry));
 792              	 .loc 1 1647 0 is_stmt 1
 793 00bc 2846     	 mov r0,r5
 794 00be 4FF00001 	 mov r1,#0
 795 00c2 4FF02C02 	 mov r2,#44
 796 00c6 FFF7FEFF 	 bl memset
1648:src/MightyBoard/Motherboard/lib_sd/fat.c ****             dir_entry->entry_offset = offset;
 797              	 .loc 1 1648 0
 798 00ca AF62     	 str r7,[r5,#40]
 799              	.LVL86:
1653:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 if(buffer[i] == ' ')
 800              	 .loc 1 1653 0
 801 00cc 2278     	 ldrb r2,[r4,#0]
 802 00ce 202A     	 cmp r2,#32
1651:src/MightyBoard/Motherboard/lib_sd/fat.c ****             for(i = 0; i < 8; ++i)
 803              	 .loc 1 1651 0
 804 00d0 08BF     	 it eq
 805 00d2 0020     	 moveq r0,#0
1653:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 if(buffer[i] == ' ')
 806              	 .loc 1 1653 0
 807 00d4 20D0     	 beq .L58
1590:src/MightyBoard/Motherboard/lib_sd/fat.c **** uint8_t fat_dir_entry_read_callback(uint8_t* buffer, offset_t offset, void* p)
 808              	 .loc 1 1590 0
 809 00d6 04F10101 	 add r1,r4,#1
1653:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 if(buffer[i] == ' ')
 810              	 .loc 1 1653 0
 811 00da A446     	 mov ip,r4
1590:src/MightyBoard/Motherboard/lib_sd/fat.c **** uint8_t fat_dir_entry_read_callback(uint8_t* buffer, offset_t offset, void* p)
 812              	 .loc 1 1590 0
 813 00dc 4FF00103 	 mov r3,#1
1653:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 if(buffer[i] == ' ')
 814              	 .loc 1 1653 0
 815 00e0 4FF00000 	 mov r0,#0
 816 00e4 08E0     	 b .L59
 817              	.LVL87:
 818              	.L61:
 819 00e6 8C46     	 mov ip,r1
 820 00e8 11F8012B 	 ldrb r2,[r1],#1
 821 00ec 03F10107 	 add r7,r3,#1
 822 00f0 202A     	 cmp r2,#32
 823 00f2 11D0     	 beq .L58
 824 00f4 1846     	 mov r0,r3
 825              	.LVL88:
 826 00f6 3B46     	 mov r3,r7
 827              	.L59:
1655:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 long_name[i] = buffer[i];
 828              	 .loc 1 1655 0
 829 00f8 2A54     	 strb r2,[r5,r0]
1662:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 if((buffer[12] & 0x08) && buffer[i] >= 'A' && buffer[i] <= 'Z')
 830              	 .loc 1 1662 0
 831 00fa 277B     	 ldrb r7,[r4,#12]
 832 00fc 17F0080F 	 tst r7,#8
 833 0100 07D0     	 beq .L60
1662:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 if((buffer[12] & 0x08) && buffer[i] >= 'A' && buffer[i] <= 'Z')
 834              	 .loc 1 1662 0 is_stmt 0 discriminator 1
 835 0102 9CF80070 	 ldrb r7,[ip,#0]
 836 0106 402F     	 cmp r7,#64
 837 0108 03D9     	 bls .L60
 838 010a 5A2F     	 cmp r7,#90
1663:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     long_name[i] += 'a' - 'A';
 839              	 .loc 1 1663 0 is_stmt 1 discriminator 1
 840 010c 9CBF     	 itt ls
 841 010e 2032     	 addls r2,r2,#32
 842 0110 2A54     	 strbls r2,[r5,r0]
 843              	.L60:
1651:src/MightyBoard/Motherboard/lib_sd/fat.c ****             for(i = 0; i < 8; ++i)
 844              	 .loc 1 1651 0
 845 0112 D8B2     	 uxtb r0,r3
 846              	.LVL89:
 847 0114 082B     	 cmp r3,#8
 848 0116 E6D1     	 bne .L61
 849              	.LVL90:
 850              	.L58:
1665:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(long_name[0] == 0x05)
 851              	 .loc 1 1665 0
 852 0118 2B78     	 ldrb r3,[r5,#0]
 853 011a 052B     	 cmp r3,#5
1666:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 long_name[0] = (char) FAT_DIRENTRY_DELETED;
 854              	 .loc 1 1666 0
 855 011c 04BF     	 itt eq
 856 011e E523     	 moveq r3,#229
 857 0120 2B70     	 strbeq r3,[r5,#0]
1668:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(buffer[8] != ' ')
 858              	 .loc 1 1668 0
 859 0122 237A     	 ldrb r3,[r4,#8]
 860 0124 202B     	 cmp r3,#32
 861 0126 08BF     	 it eq
 862 0128 0346     	 moveq r3,r0
 863 012a 27D0     	 beq .L63
 864              	.LBB13:
1670:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 long_name[i++] = '.';
 865              	 .loc 1 1670 0
 866 012c 4FF02E03 	 mov r3,#46
 867 0130 2B54     	 strb r3,[r5,r0]
 868 0132 00F10103 	 add r3,r0,#1
 869 0136 DBB2     	 uxtb r3,r3
 870              	.LVL91:
1675:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     if(buffer[j] == ' ')
 871              	 .loc 1 1675 0
 872 0138 227A     	 ldrb r2,[r4,#8]
 873 013a 202A     	 cmp r2,#32
 874 013c 1ED0     	 beq .L63
 875 013e 04F1080C 	 add ip,r4,#8
1590:src/MightyBoard/Motherboard/lib_sd/fat.c **** uint8_t fat_dir_entry_read_callback(uint8_t* buffer, offset_t offset, void* p)
 876              	 .loc 1 1590 0
 877 0142 04F10901 	 add r1,r4,#9
 878 0146 00F10400 	 add r0,r0,#4
 879 014a C0B2     	 uxtb r0,r0
 880 014c 04E0     	 b .L64
 881              	.LVL92:
 882              	.L66:
1675:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     if(buffer[j] == ' ')
 883              	 .loc 1 1675 0
 884 014e 8C46     	 mov ip,r1
 885 0150 11F8012B 	 ldrb r2,[r1],#1
 886 0154 202A     	 cmp r2,#32
 887 0156 11D0     	 beq .L63
 888              	.LVL93:
 889              	.L64:
1677:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     long_name[i] = buffer[j];
 890              	 .loc 1 1677 0
 891 0158 EA54     	 strb r2,[r5,r3]
1682:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     if((buffer[12] & 0x10) && buffer[j] >= 'A' && buffer[j] <= 'Z')
 892              	 .loc 1 1682 0
 893 015a 277B     	 ldrb r7,[r4,#12]
 894 015c 17F0100F 	 tst r7,#16
 895 0160 07D0     	 beq .L65
1682:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     if((buffer[12] & 0x10) && buffer[j] >= 'A' && buffer[j] <= 'Z')
 896              	 .loc 1 1682 0 is_stmt 0 discriminator 1
 897 0162 9CF80070 	 ldrb r7,[ip,#0]
 898 0166 402F     	 cmp r7,#64
 899 0168 03D9     	 bls .L65
 900 016a 5A2F     	 cmp r7,#90
1683:src/MightyBoard/Motherboard/lib_sd/fat.c ****                         long_name[i] += 'a' - 'A';
 901              	 .loc 1 1683 0 is_stmt 1 discriminator 1
 902 016c 9CBF     	 itt ls
 903 016e 2032     	 addls r2,r2,#32
 904 0170 EA54     	 strbls r2,[r5,r3]
 905              	.L65:
1685:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     ++i;
 906              	 .loc 1 1685 0
 907 0172 03F10103 	 add r3,r3,#1
 908 0176 DBB2     	 uxtb r3,r3
 909              	.LVL94:
1673:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 for(; j < 11; ++j)
 910              	 .loc 1 1673 0
 911 0178 8342     	 cmp r3,r0
 912 017a E8D1     	 bne .L66
 913              	.LVL95:
 914              	.L63:
 915              	.LBE13:
1689:src/MightyBoard/Motherboard/lib_sd/fat.c ****             long_name[i] = '\0';
 916              	 .loc 1 1689 0
 917 017c 4FF00002 	 mov r2,#0
 918 0180 EA54     	 strb r2,[r5,r3]
 919              	.LVL96:
 920              	.L57:
 921              	.LBE12:
1693:src/MightyBoard/Motherboard/lib_sd/fat.c ****         dir_entry->attributes = buffer[11];
 922              	 .loc 1 1693 0
 923 0182 E37A     	 ldrb r3,[r4,#11]
 924 0184 85F82030 	 strb r3,[r5,#32]
1694:src/MightyBoard/Motherboard/lib_sd/fat.c ****         dir_entry->cluster = ltoh16(*((uint16_t*) &buffer[26]));
 925              	 .loc 1 1694 0
 926 0188 638B     	 ldrh r3,[r4,#26]
 927 018a 6B84     	 strh r3,[r5,#34]
1698:src/MightyBoard/Motherboard/lib_sd/fat.c ****         dir_entry->file_size = ltoh32(*((uint32_t*) &buffer[28]));
 928              	 .loc 1 1698 0
 929 018c E369     	 ldr r3,[r4,#28]
 930 018e 6B62     	 str r3,[r5,#36]
1705:src/MightyBoard/Motherboard/lib_sd/fat.c ****         arg->finished = 1;
 931              	 .loc 1 1705 0
 932 0190 4FF00103 	 mov r3,#1
 933 0194 7372     	 strb r3,[r6,#9]
1706:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 934              	 .loc 1 1706 0
 935 0196 4FF00000 	 mov r0,#0
 936 019a 01E0     	 b .L50
 937              	.LVL97:
 938              	.L68:
 939              	.LBB14:
1636:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 1;
 940              	 .loc 1 1636 0
 941 019c 4FF00100 	 mov r0,#1
 942              	.L50:
 943              	.LBE14:
1708:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 944              	 .loc 1 1708 0
 945 01a0 04B0     	 add sp,sp,#16
 946 01a2 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 947              	.LVL98:
 948              	.L71:
 949              	.LBB15:
1634:src/MightyBoard/Motherboard/lib_sd/fat.c ****             long_name[char_offset + i] = buffer[char_mapping[i]];
 950              	 .loc 1 1634 0
 951 01a6 04AB     	 add r3,sp,#16
 952 01a8 13F8102D 	 ldrb r2,[r3,#-16]!
 953 01ac A25C     	 ldrb r2,[r4,r2]
 954 01ae EA55     	 strb r2,[r5,r7]
 955              	.LVL99:
1590:src/MightyBoard/Motherboard/lib_sd/fat.c **** uint8_t fat_dir_entry_read_callback(uint8_t* buffer, offset_t offset, void* p)
 956              	 .loc 1 1590 0
 957 01b0 EF19     	 adds r7,r5,r7
 958              	.LVL100:
 959 01b2 03A9     	 add r1,sp,#12
 960 01b4 C5F10105 	 rsb r5,r5,#1
 961              	.LVL101:
 962 01b8 73E7     	 b .L67
 963              	.LBE15:
 964              	 .cfi_endproc
 965              	.LFE76:
 967 01ba 00BF     	 .section .text.fat_find_offset_for_dir_entry,"ax",%progbits
 968              	 .align 2
 969              	 .thumb
 970              	 .thumb_func
 972              	fat_find_offset_for_dir_entry:
 973              	.LFB78:
1741:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 974              	 .loc 1 1741 0
 975              	 .cfi_startproc
 976              	 
 977              	 
 978              	.LVL102:
 979 0000 2DE9F04F 	 push {r4,r5,r6,r7,r8,r9,sl,fp,lr}
 980              	.LCFI11:
 981              	 .cfi_def_cfa_offset 36
 982              	 .cfi_offset 14,-4
 983              	 .cfi_offset 11,-8
 984              	 .cfi_offset 10,-12
 985              	 .cfi_offset 9,-16
 986              	 .cfi_offset 8,-20
 987              	 .cfi_offset 7,-24
 988              	 .cfi_offset 6,-28
 989              	 .cfi_offset 5,-32
 990              	 .cfi_offset 4,-36
 991 0004 85B0     	 sub sp,sp,#20
 992              	.LCFI12:
 993              	 .cfi_def_cfa_offset 56
 994 0006 0C46     	 mov r4,r1
1742:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs || !dir_entry)
 995              	 .loc 1 1742 0
 996 0008 0546     	 mov r5,r0
 997 000a 1346     	 mov r3,r2
 998 000c D2F10102 	 rsbs r2,r2,#1
 999              	.LVL103:
 1000 0010 38BF     	 it cc
 1001 0012 0022     	 movcc r2,#0
 1002 0014 0028     	 cmp r0,#0
 1003 0016 08BF     	 it eq
 1004 0018 42F00102 	 orreq r2,r2,#1
1743:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 1005              	 .loc 1 1743 0
 1006 001c 4FF00009 	 mov r9,#0
1742:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs || !dir_entry)
 1007              	 .loc 1 1742 0
 1008 0020 002A     	 cmp r2,#0
 1009 0022 73D1     	 bne .L73
1747:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint8_t free_dir_entries_needed = (strlen(dir_entry->long_name) + 12) / 13 + 1;
 1010              	 .loc 1 1747 0
 1011 0024 1846     	 mov r0,r3
 1012              	.LVL104:
 1013 0026 FFF7FEFF 	 bl strlen
 1014              	.LVL105:
 1015 002a 00F10C00 	 add r0,r0,#12
 1016 002e 4EF64F43 	 movw r3,#60495
 1017 0032 C4F6C463 	 movt r3,20164
 1018 0036 A3FB0023 	 umull r2,r3,r3,r0
 1019 003a 4FEA9303 	 lsr r3,r3,#2
 1020 003e 03F10103 	 add r3,r3,#1
 1021 0042 DBB2     	 uxtb r3,r3
 1022 0044 0193     	 str r3,[sp,#4]
 1023              	.LVL106:
1750:src/MightyBoard/Motherboard/lib_sd/fat.c ****     cluster_t cluster_num = parent->dir_entry.cluster;
 1024              	 .loc 1 1750 0
 1025 0046 B4F82680 	 ldrh r8,[r4,#38]
 1026              	.LVL107:
1753:src/MightyBoard/Motherboard/lib_sd/fat.c ****     offset_t offset_to = 0;
 1027              	 .loc 1 1753 0
 1028 004a 4FF00007 	 mov r7,#0
1751:src/MightyBoard/Motherboard/lib_sd/fat.c ****     offset_t dir_entry_offset = 0;
 1029              	 .loc 1 1751 0
 1030 004e B946     	 mov r9,r7
1758:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(cluster_num == 0)
 1031              	 .loc 1 1758 0
 1032 0050 B8F1000F 	 cmp r8,#0
 1033 0054 02D1     	 bne .L74
 1034              	.LVL108:
1770:src/MightyBoard/Motherboard/lib_sd/fat.c ****             offset_to = fs->header.cluster_zero_offset;
 1035              	 .loc 1 1770 0
 1036 0056 6F69     	 ldr r7,[r5,#20]
 1037              	.LVL109:
1771:src/MightyBoard/Motherboard/lib_sd/fat.c ****             dir_entry_offset = offset;
 1038              	 .loc 1 1771 0
 1039 0058 D5F81890 	 ldr r9,[r5,#24]
 1040              	.LVL110:
 1041              	.L74:
 1042              	.LBB16:
1840:src/MightyBoard/Motherboard/lib_sd/fat.c ****             free_dir_entries_found = 0;
 1043              	 .loc 1 1840 0
 1044 005c 4C46     	 mov r4,r9
 1045              	.LVL111:
 1046 005e 4FF00006 	 mov r6,#0
1814:src/MightyBoard/Motherboard/lib_sd/fat.c ****             free_dir_entries_found = 0;
 1047              	 .loc 1 1814 0
 1048 0062 B346     	 mov fp,r6
1820:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fs->partition->device_read(offset, &first_char, sizeof(first_char)))
 1049              	 .loc 1 1820 0
 1050 0064 4FF0010A 	 mov sl,#1
 1051              	.LVL112:
 1052              	.L86:
1777:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(offset == offset_to)
 1053              	 .loc 1 1777 0
 1054 0068 BC42     	 cmp r4,r7
 1055 006a 28D1     	 bne .L76
1779:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(cluster_num == 0)
 1056              	 .loc 1 1779 0
 1057 006c B8F1000F 	 cmp r8,#0
 1058 0070 47D0     	 beq .L82
1785:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(offset)
 1059              	 .loc 1 1785 0
 1060 0072 DCB1     	 cbz r4,.L77
 1061              	.LBB17:
1791:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 cluster_t cluster_next = fat_get_next_cluster(fs, cluster_num);
 1062              	 .loc 1 1791 0
 1063 0074 2846     	 mov r0,r5
 1064 0076 4146     	 mov r1,r8
 1065 0078 FFF7FEFF 	 bl fat_get_next_cluster
 1066              	.LVL113:
1792:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 if(!cluster_next)
 1067              	 .loc 1 1792 0
 1068 007c A8B9     	 cbnz r0,.L83
1794:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     cluster_next = fat_append_clusters(fs, cluster_num, 1);
 1069              	 .loc 1 1794 0
 1070 007e 2846     	 mov r0,r5
 1071              	.LVL114:
 1072 0080 4146     	 mov r1,r8
 1073 0082 4FF00102 	 mov r2,#1
 1074 0086 FFF7FEFF 	 bl fat_append_clusters
 1075              	.LVL115:
1795:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     if(!cluster_next)
 1076              	 .loc 1 1795 0
 1077 008a 0146     	 mov r1,r0
1796:src/MightyBoard/Motherboard/lib_sd/fat.c ****                         return 0;
 1078              	 .loc 1 1796 0
 1079 008c 4FF00009 	 mov r9,#0
 1080              	.LVL116:
1795:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     if(!cluster_next)
 1081              	 .loc 1 1795 0
 1082 0090 0028     	 cmp r0,#0
 1083 0092 3BD0     	 beq .L73
1800:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                        (offset_t) (cluster_next - 2) * fs->header.cluster_size;
 1084              	 .loc 1 1800 0
 1085 0094 A0F10202 	 sub r2,r0,#2
 1086 0098 B5F81290 	 ldrh r9,[r5,#18]
1799:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     dir_entry_offset = fs->header.cluster_zero_offset +
 1087              	 .loc 1 1799 0
 1088 009c 6B69     	 ldr r3,[r5,#20]
 1089 009e 09FB0239 	 mla r9,r9,r2,r3
 1090              	.LVL117:
1803:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     fat_clear_cluster(fs, cluster_next);
 1091              	 .loc 1 1803 0
 1092 00a2 2846     	 mov r0,r5
 1093              	.LVL118:
 1094 00a4 FFF7FEFF 	 bl fat_clear_cluster
1805:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     break;
 1095              	 .loc 1 1805 0
 1096 00a8 30E0     	 b .L73
 1097              	.LVL119:
 1098              	.L83:
1807:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 cluster_num = cluster_next;
 1099              	 .loc 1 1807 0
 1100 00aa 8046     	 mov r8,r0
 1101              	.LVL120:
 1102              	.L77:
 1103              	.LBE17:
1810:src/MightyBoard/Motherboard/lib_sd/fat.c ****             offset = fat_cluster_offset(fs, cluster_num);
 1104              	 .loc 1 1810 0
 1105 00ac 2846     	 mov r0,r5
 1106 00ae 4146     	 mov r1,r8
 1107 00b0 FFF7FEFF 	 bl fat_cluster_offset
 1108 00b4 0446     	 mov r4,r0
 1109              	.LVL121:
1811:src/MightyBoard/Motherboard/lib_sd/fat.c ****             offset_to = offset + fs->header.cluster_size;
 1110              	 .loc 1 1811 0
 1111 00b6 6F8A     	 ldrh r7,[r5,#18]
 1112              	.LVL122:
 1113 00b8 C719     	 adds r7,r0,r7
 1114              	.LVL123:
1812:src/MightyBoard/Motherboard/lib_sd/fat.c ****             dir_entry_offset = offset;
 1115              	 .loc 1 1812 0
 1116 00ba 8146     	 mov r9,r0
1814:src/MightyBoard/Motherboard/lib_sd/fat.c ****             free_dir_entries_found = 0;
 1117              	 .loc 1 1814 0
 1118 00bc 5E46     	 mov r6,fp
 1119              	.LVL124:
 1120              	.L76:
1820:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fs->partition->device_read(offset, &first_char, sizeof(first_char)))
 1121              	 .loc 1 1820 0
 1122 00be 2B68     	 ldr r3,[r5,#0]
 1123 00c0 1B68     	 ldr r3,[r3,#0]
 1124 00c2 2046     	 mov r0,r4
 1125 00c4 0DF10F01 	 add r1,sp,#15
 1126 00c8 5246     	 mov r2,sl
 1127 00ca 9847     	 blx r3
 1128 00cc E0B1     	 cbz r0,.L85
1824:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(first_char == FAT_DIRENTRY_DELETED || !first_char)
 1129              	 .loc 1 1824 0
 1130 00ce 9DF80F30 	 ldrb r3,[sp,#15]
 1131 00d2 D3F10102 	 rsbs r2,r3,#1
 1132 00d6 38BF     	 it cc
 1133 00d8 0022     	 movcc r2,#0
 1134 00da E52B     	 cmp r3,#229
 1135 00dc 14BF     	 ite ne
 1136 00de 1346     	 movne r3,r2
 1137 00e0 42F00103 	 orreq r3,r2,#1
 1138 00e4 43B1     	 cbz r3,.L78
1828:src/MightyBoard/Motherboard/lib_sd/fat.c ****             ++free_dir_entries_found;
 1139              	 .loc 1 1828 0
 1140 00e6 06F10106 	 add r6,r6,#1
 1141              	.LVL125:
 1142 00ea F6B2     	 uxtb r6,r6
 1143              	.LVL126:
1829:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(free_dir_entries_found >= free_dir_entries_needed)
 1144              	 .loc 1 1829 0
 1145 00ec 019B     	 ldr r3,[sp,#4]
 1146 00ee B342     	 cmp r3,r6
 1147 00f0 0CD9     	 bls .L73
1833:src/MightyBoard/Motherboard/lib_sd/fat.c ****             offset += 32;
 1148              	 .loc 1 1833 0
 1149 00f2 04F12004 	 add r4,r4,#32
 1150              	.LVL127:
 1151 00f6 B7E7     	 b .L86
 1152              	.L78:
1837:src/MightyBoard/Motherboard/lib_sd/fat.c ****             offset += 32;
 1153              	 .loc 1 1837 0
 1154 00f8 04F12004 	 add r4,r4,#32
 1155              	.LVL128:
1838:src/MightyBoard/Motherboard/lib_sd/fat.c ****             dir_entry_offset = offset;
 1156              	 .loc 1 1838 0
 1157 00fc A146     	 mov r9,r4
1840:src/MightyBoard/Motherboard/lib_sd/fat.c ****             free_dir_entries_found = 0;
 1158              	 .loc 1 1840 0
 1159 00fe 5E46     	 mov r6,fp
 1160 0100 B2E7     	 b .L86
 1161              	.LVL129:
 1162              	.L82:
1783:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 return 0;
 1163              	 .loc 1 1783 0
 1164 0102 4FF00009 	 mov r9,#0
 1165              	.LVL130:
 1166 0106 01E0     	 b .L73
 1167              	.LVL131:
 1168              	.L85:
1821:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return 0;
 1169              	 .loc 1 1821 0
 1170 0108 4FF00009 	 mov r9,#0
 1171              	.LVL132:
 1172              	.L73:
 1173              	.LBE16:
1846:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 1174              	 .loc 1 1846 0
 1175 010c 4846     	 mov r0,r9
 1176 010e 05B0     	 add sp,sp,#20
 1177 0110 BDE8F08F 	 pop {r4,r5,r6,r7,r8,r9,sl,fp,pc}
 1178              	 .cfi_endproc
 1179              	.LFE78:
 1181              	 .section .text.fat_write_dir_entry,"ax",%progbits
 1182              	 .align 2
 1183              	 .thumb
 1184              	 .thumb_func
 1186              	fat_write_dir_entry:
 1187              	.LFB79:
1870:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 1188              	 .loc 1 1870 0
 1189              	 .cfi_startproc
 1190              	 
 1191              	 
 1192              	.LVL133:
 1193 0000 2DE9F04F 	 push {r4,r5,r6,r7,r8,r9,sl,fp,lr}
 1194              	.LCFI13:
 1195              	 .cfi_def_cfa_offset 36
 1196              	 .cfi_offset 14,-4
 1197              	 .cfi_offset 11,-8
 1198              	 .cfi_offset 10,-12
 1199              	 .cfi_offset 9,-16
 1200              	 .cfi_offset 8,-20
 1201              	 .cfi_offset 7,-24
 1202              	 .cfi_offset 6,-28
 1203              	 .cfi_offset 5,-32
 1204              	 .cfi_offset 4,-36
 1205 0004 89B0     	 sub sp,sp,#36
 1206              	.LCFI14:
 1207              	 .cfi_def_cfa_offset 72
1871:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs || !dir_entry)
 1208              	 .loc 1 1871 0
 1209 0006 0E46     	 mov r6,r1
 1210 0008 D1F10101 	 rsbs r1,r1,#1
 1211              	.LVL134:
 1212 000c 38BF     	 it cc
 1213 000e 0021     	 movcc r1,#0
 1214 0010 0028     	 cmp r0,#0
 1215 0012 08BF     	 it eq
 1216 0014 41F00101 	 orreq r1,r1,#1
 1217 0018 0029     	 cmp r1,#0
 1218 001a 40F0E480 	 bne .L106
1889:src/MightyBoard/Motherboard/lib_sd/fat.c ****     device_write_t device_write = fs->partition->device_write;
 1219              	 .loc 1 1889 0
 1220 001e 0368     	 ldr r3,[r0,#0]
 1221 0020 D3F808A0 	 ldr sl,[r3,#8]
 1222              	.LVL135:
1890:src/MightyBoard/Motherboard/lib_sd/fat.c ****     offset_t offset = dir_entry->entry_offset;
 1223              	 .loc 1 1890 0
 1224 0024 B76A     	 ldr r7,[r6,#40]
 1225              	.LVL136:
1891:src/MightyBoard/Motherboard/lib_sd/fat.c ****     const char* name = dir_entry->long_name;
 1226              	 .loc 1 1891 0
 1227 0026 3546     	 mov r5,r6
 1228              	.LVL137:
1892:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint8_t name_len = strlen(name);
 1229              	 .loc 1 1892 0
 1230 0028 3046     	 mov r0,r6
 1231              	.LVL138:
 1232 002a FFF7FEFF 	 bl strlen
 1233              	.LVL139:
 1234 002e C4B2     	 uxtb r4,r0
 1235              	.LVL140:
1894:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint8_t lfn_entry_count = (name_len + 12) / 13;
 1236              	 .loc 1 1894 0
 1237 0030 04F10C09 	 add r9,r4,#12
 1238 0034 4EF64F43 	 movw r3,#60495
 1239 0038 C4F6C463 	 movt r3,20164
 1240 003c 83FB0903 	 smull r0,r3,r3,r9
 1241 0040 4FEA9309 	 lsr r9,r3,#2
 1242              	.LVL141:
1901:src/MightyBoard/Motherboard/lib_sd/fat.c ****     memset(&buffer[0], ' ', 11);
 1243              	 .loc 1 1901 0
 1244 0044 6846     	 mov r0,sp
 1245 0046 4FF02001 	 mov r1,#32
 1246 004a 4FF00B02 	 mov r2,#11
 1247 004e FFF7FEFF 	 bl memset
1902:src/MightyBoard/Motherboard/lib_sd/fat.c ****     char* name_ext = strrchr(name, '.');
 1248              	 .loc 1 1902 0
 1249 0052 3046     	 mov r0,r6
 1250 0054 4FF02E01 	 mov r1,#46
 1251 0058 FFF7FEFF 	 bl strrchr
 1252              	.LVL142:
1903:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(name_ext && *++name_ext)
 1253              	 .loc 1 1903 0
 1254 005c 90B1     	 cbz r0,.L89
 1255              	.LVL143:
1903:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(name_ext && *++name_ext)
 1256              	 .loc 1 1903 0 is_stmt 0 discriminator 1
 1257 005e 4378     	 ldrb r3,[r0,#1]
 1258 0060 83B1     	 cbz r3,.L89
1903:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(name_ext && *++name_ext)
 1259              	 .loc 1 1903 0
 1260 0062 00F10108 	 add r8,r0,#1
 1261              	.LBB18:
1905:src/MightyBoard/Motherboard/lib_sd/fat.c ****         uint8_t name_ext_len = strlen(name_ext);
 1262              	 .loc 1 1905 0 is_stmt 1
 1263 0066 4046     	 mov r0,r8
 1264              	.LVL144:
 1265 0068 FFF7FEFF 	 bl strlen
 1266              	.LVL145:
 1267 006c C2B2     	 uxtb r2,r0
 1268              	.LVL146:
1906:src/MightyBoard/Motherboard/lib_sd/fat.c ****         name_len -= name_ext_len + 1;
 1269              	 .loc 1 1906 0
 1270 006e 6FEA0203 	 mvn r3,r2
 1271 0072 E418     	 adds r4,r4,r3
 1272              	.LVL147:
 1273 0074 E4B2     	 uxtb r4,r4
 1274              	.LVL148:
1915:src/MightyBoard/Motherboard/lib_sd/fat.c ****         memcpy(&buffer[8], name_ext, name_ext_len);
 1275              	 .loc 1 1915 0
 1276 0076 02A8     	 add r0,sp,#8
 1277 0078 4146     	 mov r1,r8
 1278 007a 032A     	 cmp r2,#3
 1279 007c 28BF     	 it cs
 1280 007e 0322     	 movcs r2,#3
 1281              	.LVL149:
 1282 0080 FFF7FEFF 	 bl memcpy
 1283              	.LVL150:
 1284              	.L89:
 1285              	.LBE18:
1918:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(name_len <= 8)
 1286              	 .loc 1 1918 0
 1287 0084 082C     	 cmp r4,#8
 1288 0086 10D8     	 bhi .L90
1920:src/MightyBoard/Motherboard/lib_sd/fat.c ****         memcpy(buffer, name, name_len);
 1289              	 .loc 1 1920 0
 1290 0088 6846     	 mov r0,sp
 1291 008a 3146     	 mov r1,r6
 1292 008c 2246     	 mov r2,r4
 1293 008e FFF7FEFF 	 bl memcpy
1932:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(name[0] == '.' &&
 1294              	 .loc 1 1932 0
 1295 0092 3378     	 ldrb r3,[r6,#0]
 1296 0094 2E2B     	 cmp r3,#46
 1297 0096 1ED1     	 bne .L91
1933:src/MightyBoard/Motherboard/lib_sd/fat.c ****            ((name[1] == '.' && name[2] == '\0') ||
 1298              	 .loc 1 1933 0 discriminator 1
 1299 0098 7378     	 ldrb r3,[r6,#1]
1932:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(name[0] == '.' &&
 1300              	 .loc 1 1932 0 discriminator 1
 1301 009a 2E2B     	 cmp r3,#46
1933:src/MightyBoard/Motherboard/lib_sd/fat.c ****            ((name[1] == '.' && name[2] == '\0') ||
 1302              	 .loc 1 1933 0 discriminator 1
 1303 009c 08BF     	 it eq
 1304 009e B378     	 ldrbeq r3,[r6,#2]
1936:src/MightyBoard/Motherboard/lib_sd/fat.c ****             lfn_entry_count = 0;
 1305              	 .loc 1 1936 0 discriminator 1
 1306 00a0 002B     	 cmp r3,#0
 1307 00a2 08BF     	 it eq
 1308 00a4 4FF00009 	 moveq r9,#0
 1309              	.LVL151:
 1310 00a8 15E0     	 b .L91
 1311              	.LVL152:
 1312              	.L90:
 1313              	.LBB19:
1942:src/MightyBoard/Motherboard/lib_sd/fat.c ****         memcpy(buffer, name, 8);
 1314              	 .loc 1 1942 0
 1315 00aa 6B46     	 mov r3,sp
 1316 00ac 2868     	 ldr r0,[r5,#0]
 1317 00ae 6968     	 ldr r1,[r5,#4]
 1318 00b0 03C3     	 stmia r3!,{r0,r1}
1947:src/MightyBoard/Motherboard/lib_sd/fat.c ****         uint8_t num = dir_entry->cluster & 0xff;
 1319              	 .loc 1 1947 0
 1320 00b2 96F82230 	 ldrb r3,[r6,#34]
 1321              	.LVL153:
1949:src/MightyBoard/Motherboard/lib_sd/fat.c ****         buffer[6] = (num < 0xa0) ? ('0' + (num >> 4)) : ('a' + (num >> 4));
 1322              	 .loc 1 1949 0
 1323 00b6 9F2B     	 cmp r3,#159
 1324 00b8 4FEA1312 	 lsr r2,r3,#4
 1325 00bc 94BF     	 ite ls
 1326 00be 3032     	 addls r2,r2,#48
 1327 00c0 6132     	 addhi r2,r2,#97
 1328 00c2 8DF80620 	 strb r2,[sp,#6]
1950:src/MightyBoard/Motherboard/lib_sd/fat.c ****         num &= 0x0f;
 1329              	 .loc 1 1950 0
 1330 00c6 03F00F03 	 and r3,r3,#15
 1331              	.LVL154:
1951:src/MightyBoard/Motherboard/lib_sd/fat.c ****         buffer[7] = (num < 0x0a) ? ('0' + num) : ('a' + num);
 1332              	 .loc 1 1951 0
 1333 00ca 092B     	 cmp r3,#9
 1334 00cc 94BF     	 ite ls
 1335 00ce 3033     	 addls r3,r3,#48
 1336              	.LVL155:
 1337 00d0 6133     	 addhi r3,r3,#97
 1338 00d2 8DF80730 	 strb r3,[sp,#7]
 1339              	.LVL156:
 1340              	.L91:
 1341              	.LBE19:
1956:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(buffer[0] == FAT_DIRENTRY_DELETED)
 1342              	 .loc 1 1956 0
 1343 00d6 9DF80030 	 ldrb r3,[sp,#0]
 1344 00da E52B     	 cmp r3,#229
1957:src/MightyBoard/Motherboard/lib_sd/fat.c ****         buffer[0] = 0x05;
 1345              	 .loc 1 1957 0
 1346 00dc 04BF     	 itt eq
 1347 00de 0523     	 moveq r3,#5
 1348 00e0 8DF80030 	 strbeq r3,[sp,#0]
1960:src/MightyBoard/Motherboard/lib_sd/fat.c ****     memset(&buffer[11], 0, sizeof(buffer) - 11);
 1349              	 .loc 1 1960 0
 1350 00e4 0DF10B00 	 add r0,sp,#11
 1351 00e8 4FF00001 	 mov r1,#0
 1352 00ec 4FF01502 	 mov r2,#21
 1353 00f0 FFF7FEFF 	 bl memset
1961:src/MightyBoard/Motherboard/lib_sd/fat.c ****     buffer[0x0b] = dir_entry->attributes;
 1354              	 .loc 1 1961 0
 1355 00f4 96F82030 	 ldrb r3,[r6,#32]
 1356 00f8 8DF80B30 	 strb r3,[sp,#11]
1969:src/MightyBoard/Motherboard/lib_sd/fat.c ****     *((uint16_t*) &buffer[0x1a]) = htol16(dir_entry->cluster);
 1357              	 .loc 1 1969 0
 1358 00fc 728C     	 ldrh r2,[r6,#34]
 1359 00fe ADF81A20 	 strh r2,[sp,#26]
1970:src/MightyBoard/Motherboard/lib_sd/fat.c ****     *((uint32_t*) &buffer[0x1c]) = htol32(dir_entry->file_size);
 1360              	 .loc 1 1970 0
 1361 0102 736A     	 ldr r3,[r6,#36]
 1362 0104 0793     	 str r3,[sp,#28]
1974:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!device_write(offset + (uint16_t) lfn_entry_count * 32, buffer, sizeof(buffer)))
 1363              	 .loc 1 1974 0
 1364 0106 4FEA4910 	 lsl r0,r9,#5
 1365 010a C019     	 adds r0,r0,r7
 1366 010c 6946     	 mov r1,sp
 1367 010e 4FF02002 	 mov r2,#32
 1368 0112 D047     	 blx sl
 1369 0114 0028     	 cmp r0,#0
 1370 0116 69D0     	 beq .L109
1982:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint8_t checksum = fat_calc_83_checksum(buffer);
 1371              	 .loc 1 1982 0
 1372 0118 6846     	 mov r0,sp
 1373 011a FFF7FEFF 	 bl fat_calc_83_checksum
 1374 011e 8346     	 mov fp,r0
 1375              	.LVL157:
2035:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return 1;
 1376              	 .loc 1 2035 0
 1377 0120 4FF00100 	 mov r0,#1
 1378              	.LVL158:
1986:src/MightyBoard/Motherboard/lib_sd/fat.c ****     for(lfn_entry = lfn_entry_count; lfn_entry > 0; --lfn_entry)
 1379              	 .loc 1 1986 0
 1380 0124 B9F1000F 	 cmp r9,#0
 1381 0128 62D0     	 beq .L88
 1382 012a 4D46     	 mov r5,r9
 1383              	.LBB20:
1996:src/MightyBoard/Motherboard/lib_sd/fat.c ****             buffer[i++] = 0;
 1384              	 .loc 1 1996 0
 1385 012c 4FF00004 	 mov r4,#0
 1386              	.LVL159:
2001:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     i = 0x0e;
 1387              	 .loc 1 2001 0
 1388 0130 4FF00E08 	 mov r8,#14
 1389              	.LVL160:
 1390              	.L105:
1988:src/MightyBoard/Motherboard/lib_sd/fat.c ****         memset(buffer, 0xff, sizeof(buffer));
 1391              	 .loc 1 1988 0
 1392 0134 6846     	 mov r0,sp
 1393 0136 4FF0FF01 	 mov r1,#255
 1394 013a 4FF02002 	 mov r2,#32
 1395 013e FFF7FEFF 	 bl memset
1991:src/MightyBoard/Motherboard/lib_sd/fat.c ****         const char* long_name_curr = name + (lfn_entry - 1) * 13;
 1396              	 .loc 1 1991 0
 1397 0142 05F1FF33 	 add r3,r5,#-1
 1398 0146 03EB4302 	 add r2,r3,r3,lsl#1
 1399 014a 03EB8203 	 add r3,r3,r2,lsl#2
 1400              	.LVL161:
1995:src/MightyBoard/Motherboard/lib_sd/fat.c ****             buffer[i++] = *long_name_curr;
 1401              	 .loc 1 1995 0
 1402 014e F25C     	 ldrb r2,[r6,r3]
 1403 0150 8DF80120 	 strb r2,[sp,#1]
 1404              	.LVL162:
1996:src/MightyBoard/Motherboard/lib_sd/fat.c ****             buffer[i++] = 0;
 1405              	 .loc 1 1996 0
 1406 0154 8DF80240 	 strb r4,[sp,#2]
 1407              	.LVL163:
1991:src/MightyBoard/Motherboard/lib_sd/fat.c ****         const char* long_name_curr = name + (lfn_entry - 1) * 13;
 1408              	 .loc 1 1991 0
 1409 0158 F318     	 adds r3,r6,r3
 1410              	.LVL164:
1869:src/MightyBoard/Motherboard/lib_sd/fat.c **** uint8_t fat_write_dir_entry(const struct fat_fs_struct* fs, struct fat_dir_entry_struct* dir_entry)
 1411              	 .loc 1 1869 0
 1412 015a 03F1FF32 	 add r2,r3,#-1
1996:src/MightyBoard/Motherboard/lib_sd/fat.c ****             buffer[i++] = 0;
 1413              	 .loc 1 1996 0
 1414 015e 4FF00303 	 mov r3,#3
 1415              	.LVL165:
 1416 0162 16E0     	 b .L113
 1417              	.LVL166:
 1418              	.L103:
1995:src/MightyBoard/Motherboard/lib_sd/fat.c ****             buffer[i++] = *long_name_curr;
 1419              	 .loc 1 1995 0
 1420 0164 4078     	 ldrb r0,[r0,#1]
 1421 0166 0DF1200E 	 add lr,sp,#32
 1422 016a 0EEB0301 	 add r1,lr,r3
 1423 016e 01F8200C 	 strb r0,[r1,#-32]
 1424              	.LVL167:
 1425 0172 03F10101 	 add r1,r3,#1
1996:src/MightyBoard/Motherboard/lib_sd/fat.c ****             buffer[i++] = 0;
 1426              	 .loc 1 1996 0
 1427 0176 C9B2     	 uxtb r1,r1
 1428 0178 7144     	 add r1,lr,r1
 1429 017a 01F8204C 	 strb r4,[r1,#-32]
 1430 017e 03F10203 	 add r3,r3,#2
 1431              	.LVL168:
 1432 0182 DBB2     	 uxtb r3,r3
 1433              	.LVL169:
1998:src/MightyBoard/Motherboard/lib_sd/fat.c ****             switch(i)
 1434              	 .loc 1 1998 0
 1435 0184 0B2B     	 cmp r3,#11
2001:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     i = 0x0e;
 1436              	 .loc 1 2001 0
 1437 0186 08BF     	 it eq
 1438 0188 4346     	 moveq r3,r8
 1439              	.LVL170:
1998:src/MightyBoard/Motherboard/lib_sd/fat.c ****             switch(i)
 1440              	 .loc 1 1998 0
 1441 018a 02D0     	 beq .L113
2004:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     i = 0x1c;
 1442              	 .loc 1 2004 0
 1443 018c 1A2B     	 cmp r3,#26
 1444 018e 08BF     	 it eq
 1445 0190 1C23     	 moveq r3,#28
 1446              	.L113:
 1447              	.LVL171:
2005:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     break;
 1448              	 .loc 1 2005 0
 1449 0192 02F10102 	 add r2,r2,#1
1869:src/MightyBoard/Motherboard/lib_sd/fat.c **** uint8_t fat_write_dir_entry(const struct fat_fs_struct* fs, struct fat_dir_entry_struct* dir_entry)
 1450              	 .loc 1 1869 0
 1451 0196 1046     	 mov r0,r2
2008:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(!*long_name_curr++)
 1452              	 .loc 1 2008 0
 1453 0198 1178     	 ldrb r1,[r2,#0]
 1454 019a 09B1     	 cbz r1,.L102
1993:src/MightyBoard/Motherboard/lib_sd/fat.c ****         while(i < 0x1f)
 1455              	 .loc 1 1993 0 discriminator 1
 1456 019c 1E2B     	 cmp r3,#30
 1457 019e E1D9     	 bls .L103
 1458              	.L102:
2013:src/MightyBoard/Motherboard/lib_sd/fat.c ****         buffer[0x00] = lfn_entry;
 1459              	 .loc 1 2013 0
 1460 01a0 8DF80050 	 strb r5,[sp,#0]
2014:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(lfn_entry == lfn_entry_count)
 1461              	 .loc 1 2014 0
 1462 01a4 4D45     	 cmp r5,r9
2015:src/MightyBoard/Motherboard/lib_sd/fat.c ****             buffer[0x00] |= FAT_DIRENTRY_LFNLAST;
 1463              	 .loc 1 2015 0
 1464 01a6 04BF     	 itt eq
 1465 01a8 49F04003 	 orreq r3,r9,#64
 1466              	.LVL172:
 1467 01ac 8DF80030 	 strbeq r3,[sp,#0]
2018:src/MightyBoard/Motherboard/lib_sd/fat.c ****         buffer[0x0b] = 0x0f;
 1468              	 .loc 1 2018 0
 1469 01b0 4FF00F03 	 mov r3,#15
 1470 01b4 8DF80B30 	 strb r3,[sp,#11]
2021:src/MightyBoard/Motherboard/lib_sd/fat.c ****         buffer[0x0d] = checksum;
 1471              	 .loc 1 2021 0
 1472 01b8 8DF80DB0 	 strb fp,[sp,#13]
2024:src/MightyBoard/Motherboard/lib_sd/fat.c ****         buffer[0x0c] = 0;
 1473              	 .loc 1 2024 0
 1474 01bc 8DF80C40 	 strb r4,[sp,#12]
2025:src/MightyBoard/Motherboard/lib_sd/fat.c ****         buffer[0x1a] = 0;
 1475              	 .loc 1 2025 0
 1476 01c0 8DF81A40 	 strb r4,[sp,#26]
2026:src/MightyBoard/Motherboard/lib_sd/fat.c ****         buffer[0x1b] = 0;
 1477              	 .loc 1 2026 0
 1478 01c4 8DF81B40 	 strb r4,[sp,#27]
2029:src/MightyBoard/Motherboard/lib_sd/fat.c ****         device_write(offset, buffer, sizeof(buffer));
 1479              	 .loc 1 2029 0
 1480 01c8 3846     	 mov r0,r7
 1481 01ca 6946     	 mov r1,sp
 1482 01cc 4FF02002 	 mov r2,#32
 1483 01d0 D047     	 blx sl
2031:src/MightyBoard/Motherboard/lib_sd/fat.c ****         offset += sizeof(buffer);
 1484              	 .loc 1 2031 0
 1485 01d2 07F12007 	 add r7,r7,#32
 1486              	.LVL173:
 1487              	.LBE20:
1986:src/MightyBoard/Motherboard/lib_sd/fat.c ****     for(lfn_entry = lfn_entry_count; lfn_entry > 0; --lfn_entry)
 1488              	 .loc 1 1986 0
 1489 01d6 05F1FF35 	 add r5,r5,#-1
 1490 01da EDB2     	 uxtb r5,r5
 1491              	.LVL174:
 1492 01dc 002D     	 cmp r5,#0
 1493 01de A9D1     	 bne .L105
2035:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return 1;
 1494              	 .loc 1 2035 0
 1495 01e0 4FF00100 	 mov r0,#1
 1496 01e4 04E0     	 b .L88
 1497              	.LVL175:
 1498              	.L106:
1872:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 1499              	 .loc 1 1872 0
 1500 01e6 4FF00000 	 mov r0,#0
 1501              	.LVL176:
 1502 01ea 01E0     	 b .L88
 1503              	.LVL177:
 1504              	.L109:
1978:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 1505              	 .loc 1 1978 0
 1506 01ec 4FF00000 	 mov r0,#0
 1507              	.LVL178:
 1508              	.L88:
2036:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 1509              	 .loc 1 2036 0
 1510 01f0 09B0     	 add sp,sp,#36
 1511 01f2 BDE8F08F 	 pop {r4,r5,r6,r7,r8,r9,sl,fp,pc}
 1512              	 .cfi_endproc
 1513              	.LFE79:
 1515 01f6 00BF     	 .section .text.fat_open,"ax",%progbits
 1516              	 .align 2
 1517              	 .global fat_open
 1518              	 .thumb
 1519              	 .thumb_func
 1521              	fat_open:
 1522              	.LFB55:
 240:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 1523              	 .loc 1 240 0
 1524              	 .cfi_startproc
 1525              	 
 1526              	 
 1527              	.LVL179:
 1528 0000 2DE9F047 	 push {r4,r5,r6,r7,r8,r9,sl,lr}
 1529              	.LCFI15:
 1530              	 .cfi_def_cfa_offset 32
 1531              	 .cfi_offset 14,-4
 1532              	 .cfi_offset 10,-8
 1533              	 .cfi_offset 9,-12
 1534              	 .cfi_offset 8,-16
 1535              	 .cfi_offset 7,-20
 1536              	 .cfi_offset 6,-24
 1537              	 .cfi_offset 5,-28
 1538              	 .cfi_offset 4,-32
 1539 0004 88B0     	 sub sp,sp,#32
 1540              	.LCFI16:
 1541              	 .cfi_def_cfa_offset 64
 241:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!partition ||
 1542              	 .loc 1 241 0
 1543 0006 0446     	 mov r4,r0
 1544 0008 0028     	 cmp r0,#0
 1545 000a 00F09F80 	 beq .L120
 241:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!partition ||
 1546              	 .loc 1 241 0 is_stmt 0 discriminator 1
 1547 000e 8368     	 ldr r3,[r0,#8]
 1548 0010 002B     	 cmp r3,#0
 1549 0012 00F09E80 	 beq .L121
 243:src/MightyBoard/Motherboard/lib_sd/fat.c ****        !partition->device_write ||
 1550              	 .loc 1 243 0 is_stmt 1
 1551 0016 C368     	 ldr r3,[r0,#12]
 1552 0018 002B     	 cmp r3,#0
 1553 001a 00F09D80 	 beq .L122
 1554              	.LVL180:
 260:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fs->partition)
 1555              	 .loc 1 260 0 discriminator 1
 1556 001e 40F20003 	 movw r3,#:lower16:.LANCHOR1
 1557 0022 C0F20003 	 movt r3,#:upper16:.LANCHOR1
 1558 0026 1B68     	 ldr r3,[r3,#0]
 1559 0028 002B     	 cmp r3,#0
 1560 002a 40F09880 	 bne .L123
 256:src/MightyBoard/Motherboard/lib_sd/fat.c ****     struct fat_fs_struct* fs = fat_fs_handles;
 1561              	 .loc 1 256 0
 1562 002e 40F20001 	 movw r1,#:lower16:.LANCHOR1
 1563 0032 C0F20001 	 movt r1,#:upper16:.LANCHOR1
 269:src/MightyBoard/Motherboard/lib_sd/fat.c ****     memset(fs, 0, sizeof(*fs));
 1564              	 .loc 1 269 0
 1565 0036 4FF00002 	 mov r2,#0
 1566 003a 4A60     	 str r2,[r1,#4]
 1567 003c 01F10803 	 add r3,r1,#8
 1568 0040 43F8042B 	 str r2,[r3],#4
 1569 0044 43F8042B 	 str r2,[r3],#4
 1570 0048 43F8042B 	 str r2,[r3],#4
 1571 004c 43F8042B 	 str r2,[r3],#4
 1572 0050 43F8042B 	 str r2,[r3],#4
 1573 0054 1A60     	 str r2,[r3,#0]
 271:src/MightyBoard/Motherboard/lib_sd/fat.c ****     fs->partition = partition;
 1574              	 .loc 1 271 0
 1575 0056 0860     	 str r0,[r1,#0]
 1576              	.LVL181:
 1577              	.LBB23:
 1578              	.LBB24:
 329:src/MightyBoard/Motherboard/lib_sd/fat.c ****     offset_t partition_offset = (offset_t) partition->offset * 512;
 1579              	 .loc 1 329 0
 1580 0058 4569     	 ldr r5,[r0,#20]
 1581 005a 4FEA4525 	 lsl r5,r5,#9
 1582              	.LVL182:
 330:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!partition->device_read(partition_offset + 0x0b, buffer, sizeof(buffer)))
 1583              	 .loc 1 330 0
 1584 005e 0368     	 ldr r3,[r0,#0]
 1585 0060 05F10B00 	 add r0,r5,#11
 1586              	.LVL183:
 1587 0064 01A9     	 add r1,sp,#4
 1588 0066 4FF01902 	 mov r2,#25
 1589 006a 9847     	 blx r3
 1590 006c 0028     	 cmp r0,#0
 1591 006e 65D0     	 beq .L116
 333:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint16_t bytes_per_sector = ltoh16(*((uint16_t*) &buffer[0x00]));
 1592              	 .loc 1 333 0
 1593 0070 BDF80430 	 ldrh r3,[sp,#4]
 1594              	.LVL184:
 334:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint16_t reserved_sectors = ltoh16(*((uint16_t*) &buffer[0x03]));
 1595              	 .loc 1 334 0
 1596 0074 BDF807C0 	 ldrh ip,[sp,#7]
 1597              	.LVL185:
 335:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint8_t sectors_per_cluster = buffer[0x02];
 1598              	 .loc 1 335 0
 1599 0078 9DF80670 	 ldrb r7,[sp,#6]
 1600              	.LVL186:
 336:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint8_t fat_copies = buffer[0x05];
 1601              	 .loc 1 336 0
 1602 007c 9DF80980 	 ldrb r8,[sp,#9]
 1603              	.LVL187:
 337:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint16_t max_root_entries = ltoh16(*((uint16_t*) &buffer[0x06]));
 1604              	 .loc 1 337 0
 1605 0080 BDF80A60 	 ldrh r6,[sp,#10]
 1606              	.LVL188:
 338:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint16_t sector_count_16 = ltoh16(*((uint16_t*) &buffer[0x08]));
 1607              	 .loc 1 338 0
 1608 0084 BDF80C00 	 ldrh r0,[sp,#12]
 1609              	.LVL189:
 339:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint16_t sectors_per_fat = ltoh16(*((uint16_t*) &buffer[0x0b]));
 1610              	 .loc 1 339 0
 1611 0088 BDF80F10 	 ldrh r1,[sp,#15]
 1612              	.LVL190:
 340:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint32_t sector_count = ltoh32(*((uint32_t*) &buffer[0x15]));
 1613              	 .loc 1 340 0
 1614 008c DDF81920 	 ldr r2,[sp,#25]
 1615              	.LVL191:
 346:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(sector_count == 0)
 1616              	 .loc 1 346 0
 1617 0090 12B9     	 cbnz r2,.L117
 348:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(sector_count_16 == 0)
 1618              	 .loc 1 348 0
 1619 0092 0028     	 cmp r0,#0
 1620 0094 52D0     	 beq .L116
 352:src/MightyBoard/Motherboard/lib_sd/fat.c ****             sector_count = sector_count_16;
 1621              	 .loc 1 352 0
 1622 0096 0246     	 mov r2,r0
 1623              	.LVL192:
 1624              	.L117:
 361:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(sectors_per_fat == 0)
 1625              	 .loc 1 361 0
 1626 0098 0029     	 cmp r1,#0
 1627 009a 4FD0     	 beq .L116
 372:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                  - (uint32_t) sectors_per_fat * fat_copies
 1628              	 .loc 1 372 0
 1629 009c 01FB08F1 	 mul r1,r1,r8
 1630              	.LVL193:
 368:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                  - reserved_sectors
 1631              	 .loc 1 368 0
 1632 00a0 CCEB0209 	 rsb r9,ip,r2
 372:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                  - (uint32_t) sectors_per_fat * fat_copies
 1633              	 .loc 1 372 0
 1634 00a4 C1EB0909 	 rsb r9,r1,r9
 374:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                  - ((max_root_entries * 32 + bytes_per_sector - 1) / bytes_per_sect
 1635              	 .loc 1 374 0
 1636 00a8 4FEA4610 	 lsl r0,r6,#5
 1637              	.LVL194:
 1638 00ac C018     	 adds r0,r0,r3
 1639 00ae 00F1FF30 	 add r0,r0,#-1
 1640 00b2 90FBF3F0 	 sdiv r0,r0,r3
 367:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint32_t data_sector_count = sector_count
 1641              	 .loc 1 367 0
 1642 00b6 C0EB0909 	 rsb r9,r0,r9
 375:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint32_t data_cluster_count = data_sector_count / sectors_per_cluster;
 1643              	 .loc 1 375 0
 1644 00ba B9FBF7F9 	 udiv r9,r9,r7
 1645              	.LVL195:
 376:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(data_cluster_count < 4085)
 1646              	 .loc 1 376 0
 1647 00be 40F6F470 	 movw r0,#4084
 1648 00c2 8145     	 cmp r9,r0
 1649 00c4 3AD9     	 bls .L116
 381:src/MightyBoard/Motherboard/lib_sd/fat.c ****         partition->type = PARTITION_TYPE_FAT16;
 1650              	 .loc 1 381 0
 1651 00c6 4FF6F470 	 movw r0,#65524
 1652 00ca 8145     	 cmp r9,r0
 1653 00cc 8CBF     	 ite hi
 1654 00ce 0B20     	 movhi r0,#11
 1655 00d0 0620     	 movls r0,#6
 379:src/MightyBoard/Motherboard/lib_sd/fat.c ****     else if(data_cluster_count < 65525)
 1656              	 .loc 1 379 0
 1657 00d2 2074     	 strb r0,[r4,#16]
 1658              	.LVL196:
 387:src/MightyBoard/Motherboard/lib_sd/fat.c ****     struct fat_header_struct* header = &fs->header;
 1659              	 .loc 1 387 0
 1660 00d4 40F20008 	 movw r8,#:lower16:.LANCHOR1
 1661              	.LVL197:
 1662 00d8 C0F20008 	 movt r8,#:upper16:.LANCHOR1
 388:src/MightyBoard/Motherboard/lib_sd/fat.c ****     memset(header, 0, sizeof(*header));
 1663              	 .loc 1 388 0
 1664 00dc 4FF0000A 	 mov sl,#0
 1665 00e0 08F10C00 	 add r0,r8,#12
 1666 00e4 40F804AB 	 str sl,[r0],#4
 1667 00e8 40F804AB 	 str sl,[r0],#4
 1668 00ec 40F804AB 	 str sl,[r0],#4
 1669 00f0 C0F800A0 	 str sl,[r0,#0]
 390:src/MightyBoard/Motherboard/lib_sd/fat.c ****     header->size = (offset_t) sector_count * bytes_per_sector;
 1670              	 .loc 1 390 0
 1671 00f4 03FB02F2 	 mul r2,r3,r2
 1672              	.LVL198:
 1673 00f8 C8F80420 	 str r2,[r8,#4]
 393:src/MightyBoard/Motherboard/lib_sd/fat.c ****                          partition_offset +
 1674              	 .loc 1 393 0
 1675 00fc 0CFB0355 	 mla r5,ip,r3,r5
 1676              	.LVL199:
 392:src/MightyBoard/Motherboard/lib_sd/fat.c ****     header->fat_offset = /* jump to partition */
 1677              	 .loc 1 392 0
 1678 0100 C8F80850 	 str r5,[r8,#8]
 396:src/MightyBoard/Motherboard/lib_sd/fat.c ****     header->fat_size = (data_cluster_count + 2) * (partition->type == PARTITION_TYPE_FAT16 ? 2 : 4)
 1679              	 .loc 1 396 0
 1680 0104 09F10209 	 add r9,r9,#2
 1681              	.LVL200:
 1682 0108 227C     	 ldrb r2,[r4,#16]
 1683 010a 062A     	 cmp r2,#6
 1684 010c 14BF     	 ite ne
 1685 010e 0422     	 movne r2,#4
 1686 0110 0222     	 moveq r2,#2
 1687 0112 4046     	 mov r0,r8
 1688 0114 09FB02F2 	 mul r2,r9,r2
 1689 0118 C8F80C20 	 str r2,[r8,#12]
 398:src/MightyBoard/Motherboard/lib_sd/fat.c ****     header->sector_size = bytes_per_sector;
 1690              	 .loc 1 398 0
 1691 011c A8F81030 	 strh r3,[r8,#16]
 399:src/MightyBoard/Motherboard/lib_sd/fat.c ****     header->cluster_size = (uint16_t) bytes_per_sector * sectors_per_cluster;
 1692              	 .loc 1 399 0
 1693 0120 03FB07F7 	 mul r7,r3,r7
 1694              	.LVL201:
 1695 0124 A8F81270 	 strh r7,[r8,#18]
 406:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                   header->fat_offset +
 1696              	 .loc 1 406 0
 1697 0128 03FB0153 	 mla r3,r3,r1,r5
 1698              	.LVL202:
 405:src/MightyBoard/Motherboard/lib_sd/fat.c ****         header->root_dir_offset = /* jump to fats */
 1699              	 .loc 1 405 0
 1700 012c C8F81830 	 str r3,[r8,#24]
 413:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                       (offset_t) max_root_entries * 32;
 1701              	 .loc 1 413 0
 1702 0130 4FEA4616 	 lsl r6,r6,#5
 1703              	.LVL203:
 411:src/MightyBoard/Motherboard/lib_sd/fat.c ****                                       header->root_dir_offset +
 1704              	 .loc 1 411 0
 1705 0134 9B19     	 adds r3,r3,r6
 410:src/MightyBoard/Motherboard/lib_sd/fat.c ****         header->cluster_zero_offset = /* jump to root directory entries */
 1706              	 .loc 1 410 0
 1707 0136 C8F81430 	 str r3,[r8,#20]
 1708 013a 12E0     	 b .L115
 1709              	.LVL204:
 1710              	.L116:
 1711              	.LBE24:
 1712              	.LBE23:
 277:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fs->partition = 0;
 1713              	 .loc 1 277 0
 1714 013c 40F20003 	 movw r3,#:lower16:.LANCHOR1
 1715 0140 C0F20003 	 movt r3,#:upper16:.LANCHOR1
 1716 0144 4FF00000 	 mov r0,#0
 1717 0148 1860     	 str r0,[r3,#0]
 279:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 1718              	 .loc 1 279 0
 1719 014a 0AE0     	 b .L115
 1720              	.LVL205:
 1721              	.L120:
 249:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 1722              	 .loc 1 249 0
 1723 014c 4FF00000 	 mov r0,#0
 1724 0150 07E0     	 b .L115
 1725              	.L121:
 1726 0152 4FF00000 	 mov r0,#0
 1727 0156 04E0     	 b .L115
 1728              	.L122:
 1729 0158 4FF00000 	 mov r0,#0
 1730 015c 01E0     	 b .L115
 1731              	.LVL206:
 1732              	.L123:
 266:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 1733              	 .loc 1 266 0
 1734 015e 4FF00000 	 mov r0,#0
 1735              	.LVL207:
 1736              	.L115:
 283:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 1737              	 .loc 1 283 0
 1738 0162 08B0     	 add sp,sp,#32
 1739 0164 BDE8F087 	 pop {r4,r5,r6,r7,r8,r9,sl,pc}
 1740              	 .cfi_endproc
 1741              	.LFE55:
 1743              	 .section .text.fat_close,"ax",%progbits
 1744              	 .align 2
 1745              	 .global fat_close
 1746              	 .thumb
 1747              	 .thumb_func
 1749              	fat_close:
 1750              	.LFB56:
 296:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 1751              	 .loc 1 296 0
 1752              	 .cfi_startproc
 1753              	 
 1754              	 
 1755              	 
 1756              	.LVL208:
 297:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs)
 1757              	 .loc 1 297 0
 1758 0000 10B1     	 cbz r0,.L126
 303:src/MightyBoard/Motherboard/lib_sd/fat.c ****     fs->partition = 0;
 1759              	 .loc 1 303 0
 1760 0002 4FF00002 	 mov r2,#0
 1761 0006 0260     	 str r2,[r0,#0]
 1762              	.L126:
 1763 0008 7047     	 bx lr
 1764              	 .cfi_endproc
 1765              	.LFE56:
 1767 000a 00BF     	 .section .text.fat_open_file,"ax",%progbits
 1768              	 .align 2
 1769              	 .global fat_open_file
 1770              	 .thumb
 1771              	 .thumb_func
 1773              	fat_open_file:
 1774              	.LFB66:
 931:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 1775              	 .loc 1 931 0
 1776              	 .cfi_startproc
 1777              	 
 1778              	 
 1779              	 
 1780              	.LVL209:
 1781 0000 2DE9F001 	 push {r4,r5,r6,r7,r8}
 1782              	.LCFI17:
 1783              	 .cfi_def_cfa_offset 20
 1784              	 .cfi_offset 8,-4
 1785              	 .cfi_offset 7,-8
 1786              	 .cfi_offset 6,-12
 1787              	 .cfi_offset 5,-16
 1788              	 .cfi_offset 4,-20
 932:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs || !dir_entry || (dir_entry->attributes & FAT_ATTRIB_DIR))
 1789              	 .loc 1 932 0
 1790 0004 8046     	 mov r8,r0
 1791 0006 0D46     	 mov r5,r1
 1792 0008 D1F10101 	 rsbs r1,r1,#1
 1793              	.LVL210:
 1794 000c 38BF     	 it cc
 1795 000e 0021     	 movcc r1,#0
 1796 0010 0028     	 cmp r0,#0
 1797 0012 08BF     	 it eq
 1798 0014 41F00101 	 orreq r1,r1,#1
 933:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 1799              	 .loc 1 933 0
 1800 0018 4FF00000 	 mov r0,#0
 1801              	.LVL211:
 932:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs || !dir_entry || (dir_entry->attributes & FAT_ATTRIB_DIR))
 1802              	 .loc 1 932 0
 1803 001c 81BB     	 cbnz r1,.L129
 932:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs || !dir_entry || (dir_entry->attributes & FAT_ATTRIB_DIR))
 1804              	 .loc 1 932 0 is_stmt 0 discriminator 1
 1805 001e 95F82030 	 ldrb r3,[r5,#32]
 1806 0022 13F0100F 	 tst r3,#16
 933:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 1807              	 .loc 1 933 0 is_stmt 1 discriminator 1
 1808 0026 18BF     	 it ne
 1809 0028 0020     	 movne r0,#0
 932:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs || !dir_entry || (dir_entry->attributes & FAT_ATTRIB_DIR))
 1810              	 .loc 1 932 0 discriminator 1
 1811 002a 29D1     	 bne .L129
 1812              	.LVL212:
 944:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fd->fs)
 1813              	 .loc 1 944 0 discriminator 1
 1814 002c 40F20003 	 movw r3,#:lower16:.LANCHOR2
 1815 0030 C0F20003 	 movt r3,#:upper16:.LANCHOR2
 1816 0034 1B68     	 ldr r3,[r3,#0]
 950:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 1817              	 .loc 1 950 0 discriminator 1
 1818 0036 4FF00000 	 mov r0,#0
 944:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fd->fs)
 1819              	 .loc 1 944 0 discriminator 1
 1820 003a 0BBB     	 cbnz r3,.L129
 953:src/MightyBoard/Motherboard/lib_sd/fat.c ****     memcpy(&fd->dir_entry, dir_entry, sizeof(*dir_entry));
 1821              	 .loc 1 953 0
 1822 003c 2C46     	 mov r4,r5
 1823 003e DFF848C0 	 ldr ip,.L135
 1824 0042 05F12007 	 add r7,r5,#32
 1825              	.L130:
 1826 0046 6646     	 mov r6,ip
 1827 0048 2068     	 ldr r0,[r4,#0]
 1828 004a 6168     	 ldr r1,[r4,#4]
 1829 004c A268     	 ldr r2,[r4,#8]
 1830 004e E368     	 ldr r3,[r4,#12]
 1831 0050 0FC6     	 stmia r6!,{r0,r1,r2,r3}
 1832 0052 04F11004 	 add r4,r4,#16
 1833 0056 B446     	 mov ip,r6
 1834 0058 BC42     	 cmp r4,r7
 1835 005a F4D1     	 bne .L130
 1836 005c 2068     	 ldr r0,[r4,#0]
 1837 005e 6168     	 ldr r1,[r4,#4]
 1838 0060 A268     	 ldr r2,[r4,#8]
 1839 0062 ACE80700 	 stmia ip!,{r0,r1,r2}
 954:src/MightyBoard/Motherboard/lib_sd/fat.c ****     fd->fs = fs;
 1840              	 .loc 1 954 0
 1841 0066 40F20000 	 movw r0,#:lower16:.LANCHOR2
 1842 006a C0F20000 	 movt r0,#:upper16:.LANCHOR2
 1843 006e C0F80080 	 str r8,[r0,#0]
 955:src/MightyBoard/Motherboard/lib_sd/fat.c ****     fd->pos = 0;
 1844              	 .loc 1 955 0
 1845 0072 4FF00003 	 mov r3,#0
 1846 0076 0363     	 str r3,[r0,#48]
 956:src/MightyBoard/Motherboard/lib_sd/fat.c ****     fd->pos_cluster = dir_entry->cluster;
 1847              	 .loc 1 956 0
 1848 0078 6D8C     	 ldrh r5,[r5,#34]
 1849              	.LVL213:
 1850 007a 8586     	 strh r5,[r0,#52]
 958:src/MightyBoard/Motherboard/lib_sd/fat.c **** 	fd->needs_write = 0;
 1851              	 .loc 1 958 0
 1852 007c 80F83630 	 strb r3,[r0,#54]
 1853              	.LVL214:
 1854              	.L129:
 962:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 1855              	 .loc 1 962 0
 1856 0080 BDE8F001 	 pop {r4,r5,r6,r7,r8}
 1857 0084 7047     	 bx lr
 1858              	.L136:
 1859 0086 00BF     	 .align 2
 1860              	.L135:
 1861 0088 04000000 	 .word .LANCHOR2+4
 1862              	 .cfi_endproc
 1863              	.LFE66:
 1865              	 .section .text.fat_close_file,"ax",%progbits
 1866              	 .align 2
 1867              	 .global fat_close_file
 1868              	 .thumb
 1869              	 .thumb_func
 1871              	fat_close_file:
 1872              	.LFB67:
 972:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 1873              	 .loc 1 972 0
 1874              	 .cfi_startproc
 1875              	 
 1876              	 
 1877              	 
 1878              	.LVL215:
 973:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(fd)
 1879              	 .loc 1 973 0
 1880 0000 10B1     	 cbz r0,.L137
 984:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fd->fs = 0;
 1881              	 .loc 1 984 0
 1882 0002 4FF00002 	 mov r2,#0
 1883 0006 0260     	 str r2,[r0,#0]
 1884              	.L137:
 1885 0008 7047     	 bx lr
 1886              	 .cfi_endproc
 1887              	.LFE67:
 1889 000a 00BF     	 .section .text.fat_read_file,"ax",%progbits
 1890              	 .align 2
 1891              	 .global fat_read_file
 1892              	 .thumb
 1893              	 .thumb_func
 1895              	fat_read_file:
 1896              	.LFB68:
1002:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 1897              	 .loc 1 1002 0
 1898              	 .cfi_startproc
 1899              	 
 1900              	 
 1901              	.LVL216:
 1902 0000 2DE9F04F 	 push {r4,r5,r6,r7,r8,r9,sl,fp,lr}
 1903              	.LCFI18:
 1904              	 .cfi_def_cfa_offset 36
 1905              	 .cfi_offset 14,-4
 1906              	 .cfi_offset 11,-8
 1907              	 .cfi_offset 10,-12
 1908              	 .cfi_offset 9,-16
 1909              	 .cfi_offset 8,-20
 1910              	 .cfi_offset 7,-24
 1911              	 .cfi_offset 6,-28
 1912              	 .cfi_offset 5,-32
 1913              	 .cfi_offset 4,-36
 1914 0004 83B0     	 sub sp,sp,#12
 1915              	.LCFI19:
 1916              	 .cfi_def_cfa_offset 48
 1917 0006 0192     	 str r2,[sp,#4]
1004:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fd || !buffer || buffer_len < 1)
 1918              	 .loc 1 1004 0
 1919 0008 0546     	 mov r5,r0
 1920 000a 8946     	 mov r9,r1
 1921 000c D1F10101 	 rsbs r1,r1,#1
 1922              	.LVL217:
 1923 0010 38BF     	 it cc
 1924 0012 0021     	 movcc r1,#0
 1925 0014 0028     	 cmp r0,#0
 1926 0016 08BF     	 it eq
 1927 0018 41F00101 	 orreq r1,r1,#1
 1928 001c 0029     	 cmp r1,#0
 1929 001e 5FD1     	 bne .L150
1004:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fd || !buffer || buffer_len < 1)
 1930              	 .loc 1 1004 0 is_stmt 0 discriminator 1
 1931 0020 002A     	 cmp r2,#0
 1932 0022 60D0     	 beq .L151
1008:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(fd->pos + buffer_len > fd->dir_entry.file_size)
 1933              	 .loc 1 1008 0 is_stmt 1
 1934 0024 066B     	 ldr r6,[r0,#48]
 1935 0026 836A     	 ldr r3,[r0,#40]
 1936 0028 9219     	 adds r2,r2,r6
 1937              	.LVL218:
 1938 002a 9A42     	 cmp r2,r3
 1939 002c 04D9     	 bls .L141
 1940              	.LVL219:
1010:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(buffer_len == 0)
 1941              	 .loc 1 1010 0
 1942 002e 9B1B     	 subs r3,r3,r6
 1943 0030 0193     	 str r3,[sp,#4]
1011:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 1944              	 .loc 1 1011 0
 1945 0032 08BF     	 it eq
 1946 0034 0020     	 moveq r0,#0
 1947              	.LVL220:
1010:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(buffer_len == 0)
 1948              	 .loc 1 1010 0
 1949 0036 5BD0     	 beq .L140
 1950              	.LVL221:
 1951              	.L141:
1013:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint16_t cluster_size = fd->fs->header.cluster_size;
 1952              	 .loc 1 1013 0
 1953 0038 2B68     	 ldr r3,[r5,#0]
 1954 003a B3F812B0 	 ldrh fp,[r3,#18]
 1955              	.LVL222:
1014:src/MightyBoard/Motherboard/lib_sd/fat.c ****     cluster_t cluster_num = fd->pos_cluster;
 1956              	 .loc 1 1014 0
 1957 003e AF8E     	 ldrh r7,[r5,#52]
 1958              	.LVL223:
1019:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!cluster_num)
 1959              	 .loc 1 1019 0
 1960 0040 AFB9     	 cbnz r7,.L142
1021:src/MightyBoard/Motherboard/lib_sd/fat.c ****         cluster_num = fd->dir_entry.cluster;
 1961              	 .loc 1 1021 0
 1962 0042 EF8C     	 ldrh r7,[r5,#38]
 1963              	.LVL224:
1026:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 return 0;
 1964              	 .loc 1 1026 0
 1965 0044 002E     	 cmp r6,#0
 1966 0046 14BF     	 ite ne
 1967 0048 4FF0FF30 	 movne r0,#-1
 1968 004c 0020     	 moveq r0,#0
1023:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!cluster_num)
 1969              	 .loc 1 1023 0
 1970 004e 002F     	 cmp r7,#0
 1971 0050 4ED0     	 beq .L140
1031:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(fd->pos)
 1972              	 .loc 1 1031 0
 1973 0052 3446     	 mov r4,r6
 1974 0054 4EB9     	 cbnz r6,.L144
 1975 0056 0AE0     	 b .L142
 1976              	.LVL225:
 1977              	.L145:
1001:src/MightyBoard/Motherboard/lib_sd/fat.c **** intptr_t fat_read_file(struct fat_file_struct* fd, uint8_t* buffer, uintptr_t buffer_len)
 1978              	 .loc 1 1001 0
 1979 0058 CBEB0404 	 rsb r4,fp,r4
 1980              	.LVL226:
 1981              	.LBB25:
1037:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 cluster_num = fat_get_next_cluster(fd->fs, cluster_num);
 1982              	 .loc 1 1037 0
 1983 005c 2868     	 ldr r0,[r5,#0]
 1984 005e 3946     	 mov r1,r7
 1985 0060 FFF7FEFF 	 bl fat_get_next_cluster
 1986              	.LVL227:
1038:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 if(!cluster_num)
 1987              	 .loc 1 1038 0
 1988 0064 0746     	 mov r7,r0
 1989 0066 0028     	 cmp r0,#0
 1990 0068 40D0     	 beq .L158
 1991              	.LVL228:
 1992              	.L144:
1034:src/MightyBoard/Motherboard/lib_sd/fat.c ****             while(pos >= cluster_size)
 1993              	 .loc 1 1034 0 discriminator 1
 1994 006a 5C45     	 cmp r4,fp
 1995 006c F4D2     	 bcs .L145
 1996              	.LVL229:
 1997              	.L142:
 1998              	.LBE25:
1016:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint16_t first_cluster_offset = (uint16_t) (fd->pos & (cluster_size - 1));
 1999              	 .loc 1 1016 0
 2000 006e 0BF1FF38 	 add r8,fp,#-1
 2001 0072 08EA0606 	 and r6,r8,r6
 2002              	.LVL230:
 2003 0076 1FFA86F8 	 uxth r8,r6
 2004 007a 019E     	 ldr r6,[sp,#4]
 2005              	.LVL231:
 2006              	.L149:
 2007              	.LBB26:
1048:src/MightyBoard/Motherboard/lib_sd/fat.c ****         offset_t cluster_offset = fat_cluster_offset(fd->fs, cluster_num) + first_cluster_offset;
 2008              	 .loc 1 1048 0
 2009 007c D5F800A0 	 ldr sl,[r5,#0]
 2010 0080 5046     	 mov r0,sl
 2011 0082 3946     	 mov r1,r7
 2012 0084 FFF7FEFF 	 bl fat_cluster_offset
 2013 0088 4044     	 add r0,r8,r0
 2014              	.LVL232:
1049:src/MightyBoard/Motherboard/lib_sd/fat.c ****         uint16_t copy_length = cluster_size - first_cluster_offset;
 2015              	 .loc 1 1049 0
 2016 008a C8EB0B04 	 rsb r4,r8,fp
 2017 008e A4B2     	 uxth r4,r4
 2018              	.LVL233:
1050:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(copy_length > buffer_left)
 2019              	 .loc 1 1050 0
 2020 0090 A642     	 cmp r6,r4
1051:src/MightyBoard/Motherboard/lib_sd/fat.c ****             copy_length = buffer_left;
 2021              	 .loc 1 1051 0
 2022 0092 38BF     	 it cc
 2023 0094 B4B2     	 uxthcc r4,r6
 2024              	.LVL234:
1054:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fd->fs->partition->device_read(cluster_offset, buffer, copy_length))
 2025              	 .loc 1 1054 0
 2026 0096 DAF80030 	 ldr r3,[sl,#0]
 2027 009a 1B68     	 ldr r3,[r3,#0]
 2028 009c 4946     	 mov r1,r9
 2029 009e 2246     	 mov r2,r4
 2030 00a0 9847     	 blx r3
 2031              	.LVL235:
 2032 00a2 10B9     	 cbnz r0,.L147
1055:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return buffer_len - buffer_left;
 2033              	 .loc 1 1055 0
 2034 00a4 0199     	 ldr r1,[sp,#4]
 2035 00a6 881B     	 subs r0,r1,r6
 2036 00a8 22E0     	 b .L140
 2037              	.L147:
1058:src/MightyBoard/Motherboard/lib_sd/fat.c ****         buffer += copy_length;
 2038              	 .loc 1 1058 0
 2039 00aa A144     	 add r9,r9,r4
 2040              	.LVL236:
1059:src/MightyBoard/Motherboard/lib_sd/fat.c ****         buffer_left -= copy_length;
 2041              	 .loc 1 1059 0
 2042 00ac 361B     	 subs r6,r6,r4
 2043              	.LVL237:
1060:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fd->pos += copy_length;
 2044              	 .loc 1 1060 0
 2045 00ae 2B6B     	 ldr r3,[r5,#48]
 2046 00b0 1B19     	 adds r3,r3,r4
 2047 00b2 2B63     	 str r3,[r5,#48]
1062:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(first_cluster_offset + copy_length >= cluster_size)
 2048              	 .loc 1 1062 0
 2049 00b4 4444     	 add r4,r8,r4
 2050              	.LVL238:
 2051 00b6 5C45     	 cmp r4,fp
 2052 00b8 0DDB     	 blt .L148
1065:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if((cluster_num = fat_get_next_cluster(fd->fs, cluster_num)))
 2053              	 .loc 1 1065 0
 2054 00ba 2868     	 ldr r0,[r5,#0]
 2055 00bc 3946     	 mov r1,r7
 2056 00be FFF7FEFF 	 bl fat_get_next_cluster
 2057              	.LVL239:
 2058 00c2 0746     	 mov r7,r0
 2059 00c4 28B9     	 cbnz r0,.L156
1071:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 fd->pos_cluster = 0;
 2060              	 .loc 1 1071 0
 2061 00c6 4FF00003 	 mov r3,#0
 2062 00ca AB86     	 strh r3,[r5,#52]
1072:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 return buffer_len - buffer_left;
 2063              	 .loc 1 1072 0
 2064 00cc 0199     	 ldr r1,[sp,#4]
 2065 00ce 881B     	 subs r0,r1,r6
 2066              	.LVL240:
 2067 00d0 0EE0     	 b .L140
 2068              	.LVL241:
 2069              	.L156:
1067:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 first_cluster_offset = 0;
 2070              	 .loc 1 1067 0
 2071 00d2 4FF00008 	 mov r8,#0
 2072              	.LVL242:
 2073              	.L148:
1076:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fd->pos_cluster = cluster_num;
 2074              	 .loc 1 1076 0
 2075 00d6 AF86     	 strh r7,[r5,#52]
 2076              	.LBE26:
1078:src/MightyBoard/Motherboard/lib_sd/fat.c ****     } while(buffer_left > 0); /* check if we are done */
 2077              	 .loc 1 1078 0
 2078 00d8 002E     	 cmp r6,#0
 2079 00da CFD1     	 bne .L149
1080:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return buffer_len;
 2080              	 .loc 1 1080 0
 2081 00dc 0198     	 ldr r0,[sp,#4]
 2082 00de 07E0     	 b .L140
 2083              	.LVL243:
 2084              	.L150:
1005:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return -1;
 2085              	 .loc 1 1005 0
 2086 00e0 4FF0FF30 	 mov r0,#-1
 2087 00e4 04E0     	 b .L140
 2088              	.L151:
 2089 00e6 4FF0FF30 	 mov r0,#-1
 2090 00ea 01E0     	 b .L140
 2091              	.LVL244:
 2092              	.L158:
 2093              	.LBB27:
1039:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     return -1;
 2094              	 .loc 1 1039 0
 2095 00ec 4FF0FF30 	 mov r0,#-1
 2096              	.LVL245:
 2097              	.L140:
 2098              	.LBE27:
1081:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 2099              	 .loc 1 1081 0
 2100 00f0 03B0     	 add sp,sp,#12
 2101 00f2 BDE8F08F 	 pop {r4,r5,r6,r7,r8,r9,sl,fp,pc}
 2102              	 .cfi_endproc
 2103              	.LFE68:
 2105 00f6 00BF     	 .section .text.fat_write_file,"ax",%progbits
 2106              	 .align 2
 2107              	 .global fat_write_file
 2108              	 .thumb
 2109              	 .thumb_func
 2111              	fat_write_file:
 2112              	.LFB69:
1097:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 2113              	 .loc 1 1097 0
 2114              	 .cfi_startproc
 2115              	 
 2116              	 
 2117              	.LVL246:
 2118 0000 2DE9F04F 	 push {r4,r5,r6,r7,r8,r9,sl,fp,lr}
 2119              	.LCFI20:
 2120              	 .cfi_def_cfa_offset 36
 2121              	 .cfi_offset 14,-4
 2122              	 .cfi_offset 11,-8
 2123              	 .cfi_offset 10,-12
 2124              	 .cfi_offset 9,-16
 2125              	 .cfi_offset 8,-20
 2126              	 .cfi_offset 7,-24
 2127              	 .cfi_offset 6,-28
 2128              	 .cfi_offset 5,-32
 2129              	 .cfi_offset 4,-36
 2130 0004 83B0     	 sub sp,sp,#12
 2131              	.LCFI21:
 2132              	 .cfi_def_cfa_offset 48
 2133 0006 0192     	 str r2,[sp,#4]
1099:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fd || !buffer || buffer_len < 1)
 2134              	 .loc 1 1099 0
 2135 0008 0546     	 mov r5,r0
 2136 000a 8A46     	 mov sl,r1
 2137 000c D1F10101 	 rsbs r1,r1,#1
 2138              	.LVL247:
 2139 0010 38BF     	 it cc
 2140 0012 0021     	 movcc r1,#0
 2141 0014 0028     	 cmp r0,#0
 2142 0016 08BF     	 it eq
 2143 0018 41F00101 	 orreq r1,r1,#1
 2144 001c 0029     	 cmp r1,#0
 2145 001e 40F09180 	 bne .L172
1099:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fd || !buffer || buffer_len < 1)
 2146              	 .loc 1 1099 0 is_stmt 0 discriminator 1
 2147 0022 002A     	 cmp r2,#0
 2148 0024 00F09180 	 beq .L173
1101:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(fd->pos > fd->dir_entry.file_size)
 2149              	 .loc 1 1101 0 is_stmt 1
 2150 0028 066B     	 ldr r6,[r0,#48]
 2151 002a 836A     	 ldr r3,[r0,#40]
 2152 002c 9E42     	 cmp r6,r3
1102:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return -1;
 2153              	 .loc 1 1102 0
 2154 002e 88BF     	 it hi
 2155 0030 4FF0FF30 	 movhi r0,#-1
 2156              	.LVL248:
1101:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(fd->pos > fd->dir_entry.file_size)
 2157              	 .loc 1 1101 0
 2158 0034 00F29480 	 bhi .L160
1104:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint16_t cluster_size = fd->fs->header.cluster_size;
 2159              	 .loc 1 1104 0
 2160 0038 0068     	 ldr r0,[r0,#0]
 2161 003a B0F812B0 	 ldrh fp,[r0,#18]
 2162              	.LVL249:
1105:src/MightyBoard/Motherboard/lib_sd/fat.c ****     cluster_t cluster_num = fd->pos_cluster;
 2163              	 .loc 1 1105 0
 2164 003e AF8E     	 ldrh r7,[r5,#52]
 2165              	.LVL250:
1110:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!cluster_num)
 2166              	 .loc 1 1110 0
 2167 0040 002F     	 cmp r7,#0
 2168 0042 2DD1     	 bne .L161
1112:src/MightyBoard/Motherboard/lib_sd/fat.c ****         cluster_num = fd->dir_entry.cluster;
 2169              	 .loc 1 1112 0
 2170 0044 EF8C     	 ldrh r7,[r5,#38]
 2171              	.LVL251:
1114:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!cluster_num)
 2172              	 .loc 1 1114 0
 2173 0046 57B9     	 cbnz r7,.L162
1116:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(!fd->pos)
 2174              	 .loc 1 1116 0
 2175 0048 002E     	 cmp r6,#0
 2176 004a 40F08180 	 bne .L175
1119:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 fd->dir_entry.cluster = cluster_num = fat_append_clusters(fd->fs, 0, 1);
 2177              	 .loc 1 1119 0
 2178 004e 4FF00102 	 mov r2,#1
 2179              	.LVL252:
 2180 0052 FFF7FEFF 	 bl fat_append_clusters
 2181              	.LVL253:
 2182 0056 0746     	 mov r7,r0
 2183              	.LVL254:
 2184 0058 E884     	 strh r0,[r5,#38]
1120:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 if(!cluster_num)
 2185              	 .loc 1 1120 0
 2186 005a 0028     	 cmp r0,#0
 2187 005c 7BD0     	 beq .L176
 2188              	.LVL255:
 2189              	.L162:
1129:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(fd->pos)
 2190              	 .loc 1 1129 0
 2191 005e 2C6B     	 ldr r4,[r5,#48]
 2192              	.LBB28:
1139:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     cluster_num_next = fat_append_clusters(fd->fs, cluster_num, 1);
 2193              	 .loc 1 1139 0
 2194 0060 4FF00108 	 mov r8,#1
 2195              	.LBE28:
1129:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(fd->pos)
 2196              	 .loc 1 1129 0
 2197 0064 D4B9     	 cbnz r4,.L180
 2198 0066 1BE0     	 b .L161
 2199              	.LVL256:
 2200              	.L165:
1096:src/MightyBoard/Motherboard/lib_sd/fat.c **** intptr_t fat_write_file(struct fat_file_struct* fd, const uint8_t* buffer, uintptr_t buffer_len)
 2201              	 .loc 1 1096 0
 2202 0068 CBEB0404 	 rsb r4,fp,r4
 2203              	.LVL257:
 2204              	.LBB29:
1136:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 cluster_num_next = fat_get_next_cluster(fd->fs, cluster_num);
 2205              	 .loc 1 1136 0
 2206 006c 2868     	 ldr r0,[r5,#0]
 2207 006e 3946     	 mov r1,r7
 2208 0070 FFF7FEFF 	 bl fat_get_next_cluster
 2209              	.LVL258:
1137:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 if(!cluster_num_next && pos == 0)
 2210              	 .loc 1 1137 0
 2211 0074 0346     	 mov r3,r0
 2212 0076 D4F10102 	 rsbs r2,r4,#1
 2213 007a 38BF     	 it cc
 2214 007c 0022     	 movcc r2,#0
 2215 007e 0028     	 cmp r0,#0
 2216 0080 14BF     	 ite ne
 2217 0082 0022     	 movne r2,#0
 2218 0084 02F00102 	 andeq r2,r2,#1
 2219 0088 2AB1     	 cbz r2,.L164
1139:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     cluster_num_next = fat_append_clusters(fd->fs, cluster_num, 1);
 2220              	 .loc 1 1139 0
 2221 008a 2868     	 ldr r0,[r5,#0]
 2222              	.LVL259:
 2223 008c 3946     	 mov r1,r7
 2224 008e 4246     	 mov r2,r8
 2225 0090 FFF7FEFF 	 bl fat_append_clusters
 2226 0094 0346     	 mov r3,r0
 2227              	.LVL260:
 2228              	.L164:
1140:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 if(!cluster_num_next)
 2229              	 .loc 1 1140 0
 2230 0096 002B     	 cmp r3,#0
 2231 0098 60D0     	 beq .L177
1143:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 cluster_num = cluster_num_next;
 2232              	 .loc 1 1143 0
 2233 009a 1F46     	 mov r7,r3
 2234              	.LVL261:
 2235              	.L180:
1133:src/MightyBoard/Motherboard/lib_sd/fat.c ****             while(pos >= cluster_size)
 2236              	 .loc 1 1133 0 discriminator 1
 2237 009c 5C45     	 cmp r4,fp
 2238 009e E3D2     	 bcs .L165
 2239              	.LVL262:
 2240              	.L161:
 2241              	.LBE29:
1107:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint16_t first_cluster_offset = (uint16_t) (fd->pos & (cluster_size - 1));
 2242              	 .loc 1 1107 0
 2243 00a0 0BF1FF38 	 add r8,fp,#-1
 2244 00a4 08EA0608 	 and r8,r8,r6
 2245 00a8 1FFA88F8 	 uxth r8,r8
 2246 00ac 019E     	 ldr r6,[sp,#4]
 2247              	.LVL263:
 2248              	.LBB30:
 2249              	.LBB31:
1172:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 cluster_num_next = fat_append_clusters(fd->fs, cluster_num, 1);
 2250              	 .loc 1 1172 0
 2251 00ae B946     	 mov r9,r7
 2252              	.LVL264:
 2253              	.L170:
 2254              	.LBE31:
1152:src/MightyBoard/Motherboard/lib_sd/fat.c ****         offset_t cluster_offset = fat_cluster_offset(fd->fs, cluster_num) + first_cluster_offset;
 2255              	 .loc 1 1152 0
 2256 00b0 2F68     	 ldr r7,[r5,#0]
 2257 00b2 3846     	 mov r0,r7
 2258 00b4 4946     	 mov r1,r9
 2259 00b6 FFF7FEFF 	 bl fat_cluster_offset
 2260 00ba 4044     	 add r0,r8,r0
 2261              	.LVL265:
1153:src/MightyBoard/Motherboard/lib_sd/fat.c ****         uint16_t write_length = cluster_size - first_cluster_offset;
 2262              	 .loc 1 1153 0
 2263 00bc C8EB0B04 	 rsb r4,r8,fp
 2264 00c0 A4B2     	 uxth r4,r4
 2265              	.LVL266:
1154:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(write_length > buffer_left)
 2266              	 .loc 1 1154 0
 2267 00c2 A642     	 cmp r6,r4
1155:src/MightyBoard/Motherboard/lib_sd/fat.c ****             write_length = buffer_left;
 2268              	 .loc 1 1155 0
 2269 00c4 38BF     	 it cc
 2270 00c6 B4B2     	 uxthcc r4,r6
 2271              	.LVL267:
1158:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fd->fs->partition->device_write(cluster_offset, buffer, write_length))
 2272              	 .loc 1 1158 0
 2273 00c8 3B68     	 ldr r3,[r7,#0]
 2274 00ca 9B68     	 ldr r3,[r3,#8]
 2275 00cc 5146     	 mov r1,sl
 2276 00ce 2246     	 mov r2,r4
 2277 00d0 9847     	 blx r3
 2278              	.LVL268:
 2279 00d2 30B3     	 cbz r0,.L167
1162:src/MightyBoard/Motherboard/lib_sd/fat.c ****         buffer += write_length;
 2280              	 .loc 1 1162 0
 2281 00d4 A244     	 add sl,sl,r4
 2282              	.LVL269:
1163:src/MightyBoard/Motherboard/lib_sd/fat.c ****         buffer_left -= write_length;
 2283              	 .loc 1 1163 0
 2284 00d6 361B     	 subs r6,r6,r4
 2285              	.LVL270:
1164:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fd->pos += write_length;
 2286              	 .loc 1 1164 0
 2287 00d8 2B6B     	 ldr r3,[r5,#48]
 2288 00da 1B19     	 adds r3,r3,r4
 2289 00dc 2B63     	 str r3,[r5,#48]
1166:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(first_cluster_offset + write_length >= cluster_size)
 2290              	 .loc 1 1166 0
 2291 00de 4444     	 add r4,r8,r4
 2292              	.LVL271:
 2293 00e0 5C45     	 cmp r4,fp
 2294 00e2 1ADB     	 blt .L168
 2295              	.LBB32:
1169:src/MightyBoard/Motherboard/lib_sd/fat.c ****             cluster_t cluster_num_next = fat_get_next_cluster(fd->fs, cluster_num);
 2296              	 .loc 1 1169 0
 2297 00e4 2868     	 ldr r0,[r5,#0]
 2298 00e6 4946     	 mov r1,r9
 2299 00e8 FFF7FEFF 	 bl fat_get_next_cluster
 2300              	.LVL272:
1170:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(!cluster_num_next && buffer_left > 0)
 2301              	 .loc 1 1170 0
 2302 00ec 0346     	 mov r3,r0
 2303 00ee 321C     	 adds r2,r6,#0
 2304 00f0 18BF     	 it ne
 2305 00f2 0122     	 movne r2,#1
 2306 00f4 0028     	 cmp r0,#0
 2307 00f6 14BF     	 ite ne
 2308 00f8 0022     	 movne r2,#0
 2309 00fa 02F00102 	 andeq r2,r2,#1
 2310 00fe 32B1     	 cbz r2,.L169
1172:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 cluster_num_next = fat_append_clusters(fd->fs, cluster_num, 1);
 2311              	 .loc 1 1172 0
 2312 0100 2868     	 ldr r0,[r5,#0]
 2313              	.LVL273:
 2314 0102 4946     	 mov r1,r9
 2315 0104 4FF00102 	 mov r2,#1
 2316 0108 FFF7FEFF 	 bl fat_append_clusters
 2317 010c 0346     	 mov r3,r0
 2318              	.LVL274:
 2319              	.L169:
1173:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(!cluster_num_next)
 2320              	 .loc 1 1173 0
 2321 010e 0BB9     	 cbnz r3,.L178
1175:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 fd->pos_cluster = 0;
 2322              	 .loc 1 1175 0
 2323 0110 AB86     	 strh r3,[r5,#52]
1176:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 break;
 2324              	 .loc 1 1176 0
 2325 0112 06E0     	 b .L167
 2326              	.L178:
1179:src/MightyBoard/Motherboard/lib_sd/fat.c ****             cluster_num = cluster_num_next;
 2327              	 .loc 1 1179 0
 2328 0114 9946     	 mov r9,r3
 2329              	.LVL275:
1180:src/MightyBoard/Motherboard/lib_sd/fat.c ****             first_cluster_offset = 0;
 2330              	 .loc 1 1180 0
 2331 0116 4FF00008 	 mov r8,#0
 2332              	.LVL276:
 2333              	.L168:
 2334              	.LBE32:
1183:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fd->pos_cluster = cluster_num;
 2335              	 .loc 1 1183 0
 2336 011a A5F83490 	 strh r9,[r5,#52]
 2337              	.LBE30:
1185:src/MightyBoard/Motherboard/lib_sd/fat.c ****     } while(buffer_left > 0); /* check if we are done */
 2338              	 .loc 1 1185 0
 2339 011e 002E     	 cmp r6,#0
 2340 0120 C6D1     	 bne .L170
 2341              	.LVL277:
 2342              	.L167:
1188:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(fd->pos > fd->dir_entry.file_size)
 2343              	 .loc 1 1188 0
 2344 0122 2B6B     	 ldr r3,[r5,#48]
 2345 0124 AC6A     	 ldr r4,[r5,#40]
 2346 0126 A342     	 cmp r3,r4
 2347 0128 09D9     	 bls .L171
 2348              	.LVL278:
 2349              	.LBB33:
1198:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fd->dir_entry.file_size = fd->pos;
 2350              	 .loc 1 1198 0
 2351 012a AB62     	 str r3,[r5,#40]
1202:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fat_write_dir_entry(fd->fs, &fd->dir_entry))
 2352              	 .loc 1 1202 0
 2353 012c 2946     	 mov r1,r5
 2354 012e 51F8040B 	 ldr r0,[r1],#4
 2355 0132 FFF7FEFF 	 bl fat_write_dir_entry
 2356              	.LVL279:
 2357 0136 10B9     	 cbnz r0,.L171
1208:src/MightyBoard/Motherboard/lib_sd/fat.c ****             buffer_left = fd->pos - size_old;
 2358              	 .loc 1 1208 0
 2359 0138 2E6B     	 ldr r6,[r5,#48]
 2360              	.LVL280:
 2361 013a 361B     	 subs r6,r6,r4
 2362              	.LVL281:
1209:src/MightyBoard/Motherboard/lib_sd/fat.c ****             fd->pos = size_old;
 2363              	 .loc 1 1209 0
 2364 013c 2C63     	 str r4,[r5,#48]
 2365              	.LVL282:
 2366              	.L171:
 2367              	.LBE33:
1214:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return buffer_len - buffer_left;
 2368              	 .loc 1 1214 0
 2369 013e 019B     	 ldr r3,[sp,#4]
 2370 0140 981B     	 subs r0,r3,r6
 2371 0142 0DE0     	 b .L160
 2372              	.LVL283:
 2373              	.L172:
1100:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return -1;
 2374              	 .loc 1 1100 0
 2375 0144 4FF0FF30 	 mov r0,#-1
 2376 0148 0AE0     	 b .L160
 2377              	.L173:
 2378 014a 4FF0FF30 	 mov r0,#-1
 2379 014e 07E0     	 b .L160
 2380              	.LVL284:
 2381              	.L175:
1125:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 return -1;
 2382              	 .loc 1 1125 0
 2383 0150 4FF0FF30 	 mov r0,#-1
 2384 0154 04E0     	 b .L160
 2385              	.LVL285:
 2386              	.L176:
1121:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     return -1;
 2387              	 .loc 1 1121 0
 2388 0156 4FF0FF30 	 mov r0,#-1
 2389              	.LVL286:
 2390 015a 01E0     	 b .L160
 2391              	.LVL287:
 2392              	.L177:
 2393              	.LBB34:
1141:src/MightyBoard/Motherboard/lib_sd/fat.c ****                     return -1;
 2394              	 .loc 1 1141 0
 2395 015c 4FF0FF30 	 mov r0,#-1
 2396              	.LVL288:
 2397              	.L160:
 2398              	.LBE34:
1215:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 2399              	 .loc 1 1215 0
 2400 0160 03B0     	 add sp,sp,#12
 2401 0162 BDE8F08F 	 pop {r4,r5,r6,r7,r8,r9,sl,fp,pc}
 2402              	 .cfi_endproc
 2403              	.LFE69:
 2405 0166 00BF     	 .section .text.fat_resize_file,"ax",%progbits
 2406              	 .align 2
 2407              	 .global fat_resize_file
 2408              	 .thumb
 2409              	 .thumb_func
 2411              	fat_resize_file:
 2412              	.LFB71:
1300:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 2413              	 .loc 1 1300 0
 2414              	 .cfi_startproc
 2415              	 
 2416              	 
 2417              	.LVL289:
 2418 0000 2DE9F047 	 push {r4,r5,r6,r7,r8,r9,sl,lr}
 2419              	.LCFI22:
 2420              	 .cfi_def_cfa_offset 32
 2421              	 .cfi_offset 14,-4
 2422              	 .cfi_offset 10,-8
 2423              	 .cfi_offset 9,-12
 2424              	 .cfi_offset 8,-16
 2425              	 .cfi_offset 7,-20
 2426              	 .cfi_offset 6,-24
 2427              	 .cfi_offset 5,-28
 2428              	 .cfi_offset 4,-32
 2429 0004 82B0     	 sub sp,sp,#8
 2430              	.LCFI23:
 2431              	 .cfi_def_cfa_offset 40
 2432 0006 8846     	 mov r8,r1
1301:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fd)
 2433              	 .loc 1 1301 0
 2434 0008 0546     	 mov r5,r0
 2435 000a 0028     	 cmp r0,#0
 2436 000c 00F08480 	 beq .L190
1304:src/MightyBoard/Motherboard/lib_sd/fat.c ****     cluster_t cluster_num = fd->dir_entry.cluster;
 2437              	 .loc 1 1304 0
 2438 0010 C68C     	 ldrh r6,[r0,#38]
 2439              	.LVL290:
1305:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint16_t cluster_size = fd->fs->header.cluster_size;
 2440              	 .loc 1 1305 0
 2441 0012 0368     	 ldr r3,[r0,#0]
 2442 0014 B3F81290 	 ldrh r9,[r3,#18]
 2443              	.LVL291:
1310:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(cluster_num == 0 && size_new == 0)
 2444              	 .loc 1 1310 0
 2445 0018 D1F1010A 	 rsbs sl,r1,#1
 2446 001c 38BF     	 it cc
 2447 001e 4FF0000A 	 movcc sl,#0
 2448 0022 002E     	 cmp r6,#0
 2449 0024 14BF     	 ite ne
 2450 0026 0023     	 movne r3,#0
 2451 0028 0AF00103 	 andeq r3,sl,#1
 2452 002c 002B     	 cmp r3,#0
 2453 002e 66D1     	 bne .L184
1315:src/MightyBoard/Motherboard/lib_sd/fat.c ****         while(size_new > cluster_size)
 2454              	 .loc 1 1315 0 discriminator 1
 2455 0030 4F46     	 mov r7,r9
 2456 0032 4945     	 cmp r1,r9
 2457 0034 88BF     	 it hi
 2458 0036 0C46     	 movhi r4,r1
 2459 0038 01D8     	 bhi .L186
 2460 003a 0BE0     	 b .L196
 2461              	.LVL292:
 2462              	.L192:
1318:src/MightyBoard/Motherboard/lib_sd/fat.c ****             cluster_t cluster_num_next = fat_get_next_cluster(fd->fs, cluster_num);
 2463              	 .loc 1 1318 0
 2464 003c 1E46     	 mov r6,r3
 2465              	.LVL293:
 2466              	.L186:
 2467              	.LBB40:
 2468 003e 2868     	 ldr r0,[r5,#0]
 2469 0040 3146     	 mov r1,r6
 2470 0042 FFF7FEFF 	 bl fat_get_next_cluster
 2471              	.LVL294:
1319:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(cluster_num_next)
 2472              	 .loc 1 1319 0
 2473 0046 0346     	 mov r3,r0
 2474 0048 28B1     	 cbz r0,.L185
 2475              	.LVL295:
1299:src/MightyBoard/Motherboard/lib_sd/fat.c **** uint8_t fat_resize_file(struct fat_file_struct* fd, uint32_t size)
 2476              	 .loc 1 1299 0
 2477 004a E41B     	 subs r4,r4,r7
 2478              	.LVL296:
 2479              	.LBE40:
1315:src/MightyBoard/Motherboard/lib_sd/fat.c ****         while(size_new > cluster_size)
 2480              	 .loc 1 1315 0
 2481 004c A742     	 cmp r7,r4
 2482 004e F5D3     	 bcc .L192
1321:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 cluster_num = cluster_num_next;
 2483              	 .loc 1 1321 0
 2484 0050 0646     	 mov r6,r0
 2485 0052 19E0     	 b .L187
 2486              	.LVL297:
 2487              	.L196:
1315:src/MightyBoard/Motherboard/lib_sd/fat.c ****         while(size_new > cluster_size)
 2488              	 .loc 1 1315 0
 2489 0054 0C46     	 mov r4,r1
 2490              	.LVL298:
 2491              	.L185:
1330:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(size_new > cluster_size || cluster_num == 0)
 2492              	 .loc 1 1330 0
 2493 0056 D6F10107 	 rsbs r7,r6,#1
 2494 005a 38BF     	 it cc
 2495 005c 0027     	 movcc r7,#0
 2496 005e A145     	 cmp r9,r4
 2497 0060 2CBF     	 ite cs
 2498 0062 3B46     	 movcs r3,r7
 2499 0064 47F00103 	 orrcc r3,r7,#1
 2500 0068 73B1     	 cbz r3,.L187
 2501              	.LVL299:
 2502              	.LBB41:
1335:src/MightyBoard/Motherboard/lib_sd/fat.c ****             cluster_t cluster_count = (size_new + cluster_size - 1) / cluster_size;
 2503              	 .loc 1 1335 0
 2504 006a 09F1FF32 	 add r2,r9,#-1
 2505 006e 1219     	 adds r2,r2,r4
 2506 0070 B2FBF9F2 	 udiv r2,r2,r9
1336:src/MightyBoard/Motherboard/lib_sd/fat.c ****             cluster_t cluster_new_chain = fat_append_clusters(fd->fs, cluster_num, cluster_count);
 2507              	 .loc 1 1336 0
 2508 0074 2868     	 ldr r0,[r5,#0]
 2509 0076 3146     	 mov r1,r6
 2510 0078 92B2     	 uxth r2,r2
 2511 007a FFF7FEFF 	 bl fat_append_clusters
 2512              	.LVL300:
1337:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(!cluster_new_chain)
 2513              	 .loc 1 1337 0
 2514 007e 0028     	 cmp r0,#0
 2515 0080 4DD0     	 beq .L193
1340:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(!cluster_num)
 2516              	 .loc 1 1340 0
 2517 0082 0FB1     	 cbz r7,.L187
 2518              	.LVL301:
1343:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 fd->dir_entry.cluster = cluster_num;
 2519              	 .loc 1 1343 0
 2520 0084 E884     	 strh r0,[r5,#38]
1342:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 cluster_num = cluster_new_chain;
 2521              	 .loc 1 1342 0
 2522 0086 0646     	 mov r6,r0
 2523              	.LVL302:
 2524              	.L187:
 2525              	.LBE41:
1348:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fd->dir_entry.file_size = size;
 2526              	 .loc 1 1348 0
 2527 0088 C5F82880 	 str r8,[r5,#40]
1349:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(size == 0)
 2528              	 .loc 1 1349 0
 2529 008c BAF1000F 	 cmp sl,#0
 2530 0090 02D0     	 beq .L188
1350:src/MightyBoard/Motherboard/lib_sd/fat.c ****             fd->dir_entry.cluster = 0;
 2531              	 .loc 1 1350 0
 2532 0092 4FF00003 	 mov r3,#0
 2533 0096 EB84     	 strh r3,[r5,#38]
 2534              	.L188:
1351:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fat_write_dir_entry(fd->fs, &fd->dir_entry))
 2535              	 .loc 1 1351 0
 2536 0098 2946     	 mov r1,r5
 2537 009a 51F8040B 	 ldr r0,[r1],#4
 2538 009e FFF7FEFF 	 bl fat_write_dir_entry
 2539 00a2 0028     	 cmp r0,#0
 2540 00a4 3ED0     	 beq .L194
1354:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(size == 0)
 2541              	 .loc 1 1354 0
 2542 00a6 BAF1000F 	 cmp sl,#0
 2543 00aa 04D0     	 beq .L189
1357:src/MightyBoard/Motherboard/lib_sd/fat.c ****             fat_free_clusters(fd->fs, cluster_num);
 2544              	 .loc 1 1357 0
 2545 00ac 2868     	 ldr r0,[r5,#0]
 2546 00ae 3146     	 mov r1,r6
 2547 00b0 FFF7FEFF 	 bl fat_free_clusters
 2548 00b4 23E0     	 b .L184
 2549              	.L189:
1359:src/MightyBoard/Motherboard/lib_sd/fat.c ****         else if(size_new <= cluster_size)
 2550              	 .loc 1 1359 0
 2551 00b6 A145     	 cmp r9,r4
 2552 00b8 21D3     	 bcc .L184
1362:src/MightyBoard/Motherboard/lib_sd/fat.c ****             fat_terminate_clusters(fd->fs, cluster_num);
 2553              	 .loc 1 1362 0
 2554 00ba 2C68     	 ldr r4,[r5,#0]
 2555              	.LVL303:
 2556              	.LBB42:
 2557              	.LBB43:
 756:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs || cluster_num < 2)
 2558              	 .loc 1 756 0
 2559 00bc 012E     	 cmp r6,#1
 2560 00be 8CBF     	 ite hi
 2561 00c0 0023     	 movhi r3,#0
 2562 00c2 0123     	 movls r3,#1
 2563 00c4 002C     	 cmp r4,#0
 2564 00c6 08BF     	 it eq
 2565 00c8 43F00103 	 orreq r3,r3,#1
 2566 00cc BBB9     	 cbnz r3,.L184
 760:src/MightyBoard/Motherboard/lib_sd/fat.c ****     cluster_t cluster_num_next = fat_get_next_cluster(fs, cluster_num);
 2567              	 .loc 1 760 0
 2568 00ce 2046     	 mov r0,r4
 2569 00d0 3146     	 mov r1,r6
 2570 00d2 FFF7FEFF 	 bl fat_get_next_cluster
 2571              	.LVL304:
 2572 00d6 0746     	 mov r7,r0
 2573              	.LVL305:
 2574              	.LBB44:
 773:src/MightyBoard/Motherboard/lib_sd/fat.c ****         uint16_t fat_entry = HTOL16(FAT16_CLUSTER_LAST_MAX);
 2575              	 .loc 1 773 0
 2576 00d8 02A9     	 add r1,sp,#8
 2577 00da 4FF0FF33 	 mov r3,#-1
 2578 00de 21F8023D 	 strh r3,[r1,#-2]!
 2579              	.LVL306:
 774:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fs->partition->device_write(fs->header.fat_offset + cluster_num * sizeof(fat_entry), (u
 2580              	 .loc 1 774 0
 2581 00e2 2368     	 ldr r3,[r4,#0]
 2582 00e4 A068     	 ldr r0,[r4,#8]
 2583              	.LVL307:
 2584 00e6 9B68     	 ldr r3,[r3,#8]
 2585 00e8 00EB4600 	 add r0,r0,r6,lsl#1
 2586 00ec 4FF00202 	 mov r2,#2
 2587 00f0 9847     	 blx r3
 2588 00f2 20B1     	 cbz r0,.L184
 2589              	.LBE44:
 779:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(cluster_num_next)
 2590              	 .loc 1 779 0
 2591 00f4 1FB1     	 cbz r7,.L184
 780:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return fat_free_clusters(fs, cluster_num_next);
 2592              	 .loc 1 780 0
 2593 00f6 2046     	 mov r0,r4
 2594 00f8 3946     	 mov r1,r7
 2595 00fa FFF7FEFF 	 bl fat_free_clusters
 2596              	.LVL308:
 2597              	.L184:
 2598              	.LBE43:
 2599              	.LBE42:
1368:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(size < fd->pos)
 2600              	 .loc 1 1368 0
 2601 00fe 2B6B     	 ldr r3,[r5,#48]
 2602 0100 9845     	 cmp r8,r3
1374:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return 1;
 2603              	 .loc 1 1374 0
 2604 0102 28BF     	 it cs
 2605 0104 0120     	 movcs r0,#1
1368:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(size < fd->pos)
 2606              	 .loc 1 1368 0
 2607 0106 0FD2     	 bcs .L183
1370:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fd->pos = size;
 2608              	 .loc 1 1370 0
 2609 0108 C5F83080 	 str r8,[r5,#48]
1371:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fd->pos_cluster = 0;
 2610              	 .loc 1 1371 0
 2611 010c 4FF00003 	 mov r3,#0
 2612 0110 AB86     	 strh r3,[r5,#52]
1374:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return 1;
 2613              	 .loc 1 1374 0
 2614 0112 4FF00100 	 mov r0,#1
 2615 0116 07E0     	 b .L183
 2616              	.LVL309:
 2617              	.L190:
1302:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 2618              	 .loc 1 1302 0
 2619 0118 4FF00000 	 mov r0,#0
 2620 011c 04E0     	 b .L183
 2621              	.LVL310:
 2622              	.L193:
 2623              	.LBB45:
1338:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 return 0;
 2624              	 .loc 1 1338 0
 2625 011e 4FF00000 	 mov r0,#0
 2626              	.LVL311:
 2627 0122 01E0     	 b .L183
 2628              	.LVL312:
 2629              	.L194:
 2630              	.LBE45:
1352:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return 0;
 2631              	 .loc 1 1352 0
 2632 0124 4FF00000 	 mov r0,#0
 2633              	.LVL313:
 2634              	.L183:
1375:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 2635              	 .loc 1 1375 0
 2636 0128 02B0     	 add sp,sp,#8
 2637 012a BDE8F087 	 pop {r4,r5,r6,r7,r8,r9,sl,pc}
 2638              	 .cfi_endproc
 2639              	.LFE71:
 2641 012e 00BF     	 .section .text.fat_seek_file,"ax",%progbits
 2642              	 .align 2
 2643              	 .global fat_seek_file
 2644              	 .thumb
 2645              	 .thumb_func
 2647              	fat_seek_file:
 2648              	.LFB70:
1245:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 2649              	 .loc 1 1245 0
 2650              	 .cfi_startproc
 2651              	 
 2652              	 
 2653              	.LVL314:
 2654 0000 70B5     	 push {r4,r5,r6,lr}
 2655              	.LCFI24:
 2656              	 .cfi_def_cfa_offset 16
 2657              	 .cfi_offset 14,-4
 2658              	 .cfi_offset 6,-8
 2659              	 .cfi_offset 5,-12
 2660              	 .cfi_offset 4,-16
1246:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fd || !offset)
 2661              	 .loc 1 1246 0
 2662 0002 0446     	 mov r4,r0
 2663 0004 0E46     	 mov r6,r1
 2664 0006 D1F10101 	 rsbs r1,r1,#1
 2665              	.LVL315:
 2666 000a 38BF     	 it cc
 2667 000c 0021     	 movcc r1,#0
 2668 000e 0028     	 cmp r0,#0
 2669 0010 08BF     	 it eq
 2670 0012 41F00101 	 orreq r1,r1,#1
 2671 0016 F1B9     	 cbnz r1,.L204
1249:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint32_t new_pos = fd->pos;
 2672              	 .loc 1 1249 0
 2673 0018 036B     	 ldr r3,[r0,#48]
 2674              	.LVL316:
1250:src/MightyBoard/Motherboard/lib_sd/fat.c ****     switch(whence)
 2675              	 .loc 1 1250 0
 2676 001a 012A     	 cmp r2,#1
 2677 001c 05D0     	 beq .L200
 2678 001e 12B1     	 cbz r2,.L199
 2679 0020 022A     	 cmp r2,#2
 2680 0022 1BD1     	 bne .L207
 2681 0024 04E0     	 b .L208
 2682              	.L199:
1253:src/MightyBoard/Motherboard/lib_sd/fat.c ****             new_pos = *offset;
 2683              	 .loc 1 1253 0
 2684 0026 3568     	 ldr r5,[r6,#0]
 2685              	.LVL317:
1254:src/MightyBoard/Motherboard/lib_sd/fat.c ****             break;
 2686              	 .loc 1 1254 0
 2687 0028 05E0     	 b .L202
 2688              	.LVL318:
 2689              	.L200:
1256:src/MightyBoard/Motherboard/lib_sd/fat.c ****             new_pos += *offset;
 2690              	 .loc 1 1256 0
 2691 002a 3568     	 ldr r5,[r6,#0]
 2692 002c 5D19     	 adds r5,r3,r5
 2693              	.LVL319:
1257:src/MightyBoard/Motherboard/lib_sd/fat.c ****             break;
 2694              	 .loc 1 1257 0
 2695 002e 02E0     	 b .L202
 2696              	.LVL320:
 2697              	.L208:
1259:src/MightyBoard/Motherboard/lib_sd/fat.c ****             new_pos = fd->dir_entry.file_size + *offset;
 2698              	 .loc 1 1259 0
 2699 0030 3568     	 ldr r5,[r6,#0]
 2700 0032 836A     	 ldr r3,[r0,#40]
 2701 0034 ED18     	 adds r5,r5,r3
 2702              	.LVL321:
 2703              	.L202:
1265:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(new_pos > fd->dir_entry.file_size
 2704              	 .loc 1 1265 0
 2705 0036 A36A     	 ldr r3,[r4,#40]
 2706 0038 9D42     	 cmp r5,r3
 2707 003a 04D9     	 bls .L203
1267:src/MightyBoard/Motherboard/lib_sd/fat.c ****        && !fat_resize_file(fd, new_pos)
 2708              	 .loc 1 1267 0
 2709 003c 2046     	 mov r0,r4
 2710              	.LVL322:
 2711 003e 2946     	 mov r1,r5
 2712 0040 FFF7FEFF 	 bl fat_resize_file
 2713              	.LVL323:
 2714 0044 68B1     	 cbz r0,.L206
 2715              	.L203:
1272:src/MightyBoard/Motherboard/lib_sd/fat.c ****     fd->pos = new_pos;
 2716              	 .loc 1 1272 0
 2717 0046 2563     	 str r5,[r4,#48]
1273:src/MightyBoard/Motherboard/lib_sd/fat.c ****     fd->pos_cluster = 0;
 2718              	 .loc 1 1273 0
 2719 0048 4FF00003 	 mov r3,#0
 2720 004c A386     	 strh r3,[r4,#52]
1275:src/MightyBoard/Motherboard/lib_sd/fat.c ****     *offset = (int32_t) new_pos;
 2721              	 .loc 1 1275 0
 2722 004e 3560     	 str r5,[r6,#0]
1276:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return 1;
 2723              	 .loc 1 1276 0
 2724 0050 4FF00100 	 mov r0,#1
 2725 0054 70BD     	 pop {r4,r5,r6,pc}
 2726              	.LVL324:
 2727              	.L204:
1247:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 2728              	 .loc 1 1247 0
 2729 0056 4FF00000 	 mov r0,#0
 2730 005a 70BD     	 pop {r4,r5,r6,pc}
 2731              	.LVL325:
 2732              	.L207:
1262:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return 0;
 2733              	 .loc 1 1262 0
 2734 005c 4FF00000 	 mov r0,#0
 2735 0060 70BD     	 pop {r4,r5,r6,pc}
 2736              	.LVL326:
 2737              	.L206:
1270:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 2738              	 .loc 1 1270 0
 2739 0062 4FF00000 	 mov r0,#0
1277:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 2740              	 .loc 1 1277 0
 2741 0066 70BD     	 pop {r4,r5,r6,pc}
 2742              	 .cfi_endproc
 2743              	.LFE70:
 2745              	 .section .text.fat_open_dir,"ax",%progbits
 2746              	 .align 2
 2747              	 .global fat_open_dir
 2748              	 .thumb
 2749              	 .thumb_func
 2751              	fat_open_dir:
 2752              	.LFB72:
1388:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 2753              	 .loc 1 1388 0
 2754              	 .cfi_startproc
 2755              	 
 2756              	 
 2757              	 
 2758              	.LVL327:
 2759 0000 2DE9F003 	 push {r4,r5,r6,r7,r8,r9}
 2760              	.LCFI25:
 2761              	 .cfi_def_cfa_offset 24
 2762              	 .cfi_offset 9,-4
 2763              	 .cfi_offset 8,-8
 2764              	 .cfi_offset 7,-12
 2765              	 .cfi_offset 6,-16
 2766              	 .cfi_offset 5,-20
 2767              	 .cfi_offset 4,-24
1389:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs || !dir_entry || !(dir_entry->attributes & FAT_ATTRIB_DIR))
 2768              	 .loc 1 1389 0
 2769 0004 8446     	 mov ip,r0
 2770 0006 0D46     	 mov r5,r1
 2771 0008 D1F10101 	 rsbs r1,r1,#1
 2772              	.LVL328:
 2773 000c 38BF     	 it cc
 2774 000e 0021     	 movcc r1,#0
 2775 0010 0028     	 cmp r0,#0
 2776 0012 08BF     	 it eq
 2777 0014 41F00101 	 orreq r1,r1,#1
1390:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 2778              	 .loc 1 1390 0
 2779 0018 4FF00004 	 mov r4,#0
1389:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs || !dir_entry || !(dir_entry->attributes & FAT_ATTRIB_DIR))
 2780              	 .loc 1 1389 0
 2781 001c 0029     	 cmp r1,#0
 2782 001e 3ED1     	 bne .L210
1389:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs || !dir_entry || !(dir_entry->attributes & FAT_ATTRIB_DIR))
 2783              	 .loc 1 1389 0 is_stmt 0 discriminator 1
 2784 0020 95F82030 	 ldrb r3,[r5,#32]
 2785 0024 13F0100F 	 tst r3,#16
1390:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 2786              	 .loc 1 1390 0 is_stmt 1 discriminator 1
 2787 0028 08BF     	 it eq
 2788 002a 0024     	 moveq r4,#0
1389:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs || !dir_entry || !(dir_entry->attributes & FAT_ATTRIB_DIR))
 2789              	 .loc 1 1389 0 discriminator 1
 2790 002c 37D0     	 beq .L210
 2791              	.LVL329:
1401:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!dd->fs)
 2792              	 .loc 1 1401 0 discriminator 1
 2793 002e 40F20003 	 movw r3,#:lower16:.LANCHOR3
 2794 0032 C0F20003 	 movt r3,#:upper16:.LANCHOR3
 2795 0036 1B68     	 ldr r3,[r3,#0]
 2796 0038 3BB1     	 cbz r3,.L215
1401:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!dd->fs)
 2797              	 .loc 1 1401 0 is_stmt 0
 2798 003a 40F20003 	 movw r3,#:lower16:.LANCHOR3
 2799 003e C0F20003 	 movt r3,#:upper16:.LANCHOR3
 2800 0042 5B6B     	 ldr r3,[r3,#52]
1404:src/MightyBoard/Motherboard/lib_sd/fat.c ****         ++dd;
 2801              	 .loc 1 1404 0 is_stmt 1
 2802 0044 184C     	 ldr r4,.L219
1401:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!dd->fs)
 2803              	 .loc 1 1401 0
 2804 0046 43BB     	 cbnz r3,.L218
 2805 0048 03E0     	 b .L211
 2806              	.L215:
1397:src/MightyBoard/Motherboard/lib_sd/fat.c ****     struct fat_dir_struct* dd = fat_dir_handles;
 2807              	 .loc 1 1397 0
 2808 004a 40F20004 	 movw r4,#:lower16:.LANCHOR3
 2809 004e C0F20004 	 movt r4,#:upper16:.LANCHOR3
 2810              	.L211:
1410:src/MightyBoard/Motherboard/lib_sd/fat.c ****     memcpy(&dd->dir_entry, dir_entry, sizeof(*dir_entry));
 2811              	 .loc 1 1410 0
 2812 0052 A846     	 mov r8,r5
 2813 0054 04F10409 	 add r9,r4,#4
 2814 0058 05F12007 	 add r7,r5,#32
 2815              	.LVL330:
 2816              	.L212:
 2817 005c 4E46     	 mov r6,r9
 2818 005e D8F80000 	 ldr r0,[r8,#0]
 2819 0062 D8F80410 	 ldr r1,[r8,#4]
 2820 0066 D8F80820 	 ldr r2,[r8,#8]
 2821 006a D8F80C30 	 ldr r3,[r8,#12]
 2822 006e 0FC6     	 stmia r6!,{r0,r1,r2,r3}
 2823 0070 08F11008 	 add r8,r8,#16
 2824 0074 B146     	 mov r9,r6
 2825 0076 B845     	 cmp r8,r7
 2826 0078 F0D1     	 bne .L212
 2827 007a D8F80000 	 ldr r0,[r8,#0]
 2828 007e D8F80410 	 ldr r1,[r8,#4]
 2829 0082 D8F80820 	 ldr r2,[r8,#8]
 2830 0086 A9E80700 	 stmia r9!,{r0,r1,r2}
1411:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dd->fs = fs;
 2831              	 .loc 1 1411 0
 2832 008a C4F800C0 	 str ip,[r4,#0]
1412:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dd->entry_cluster = dir_entry->cluster;
 2833              	 .loc 1 1412 0
 2834 008e 6D8C     	 ldrh r5,[r5,#34]
 2835              	.LVL331:
 2836 0090 2586     	 strh r5,[r4,#48]
1413:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dd->entry_offset = 0;
 2837              	 .loc 1 1413 0
 2838 0092 4FF00003 	 mov r3,#0
 2839 0096 6386     	 strh r3,[r4,#50]
1415:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return dd;
 2840              	 .loc 1 1415 0
 2841 0098 01E0     	 b .L210
 2842              	.LVL332:
 2843              	.L218:
1407:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 2844              	 .loc 1 1407 0
 2845 009a 4FF00004 	 mov r4,#0
 2846              	.LVL333:
 2847              	.L210:
1416:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 2848              	 .loc 1 1416 0
 2849 009e 2046     	 mov r0,r4
 2850 00a0 BDE8F003 	 pop {r4,r5,r6,r7,r8,r9}
 2851 00a4 7047     	 bx lr
 2852              	.L220:
 2853 00a6 00BF     	 .align 2
 2854              	.L219:
 2855 00a8 34000000 	 .word .LANCHOR3+52
 2856              	 .cfi_endproc
 2857              	.LFE72:
 2859              	 .section .text.fat_close_dir,"ax",%progbits
 2860              	 .align 2
 2861              	 .global fat_close_dir
 2862              	 .thumb
 2863              	 .thumb_func
 2865              	fat_close_dir:
 2866              	.LFB73:
1430:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 2867              	 .loc 1 1430 0
 2868              	 .cfi_startproc
 2869              	 
 2870              	 
 2871              	 
 2872              	.LVL334:
1431:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(dd)
 2873              	 .loc 1 1431 0
 2874 0000 10B1     	 cbz r0,.L221
1435:src/MightyBoard/Motherboard/lib_sd/fat.c ****         dd->fs = 0;
 2875              	 .loc 1 1435 0
 2876 0002 4FF00002 	 mov r2,#0
 2877 0006 0260     	 str r2,[r0,#0]
 2878              	.L221:
 2879 0008 7047     	 bx lr
 2880              	 .cfi_endproc
 2881              	.LFE73:
 2883 000a 00BF     	 .section .text.fat_reset_dir,"ax",%progbits
 2884              	 .align 2
 2885              	 .global fat_reset_dir
 2886              	 .thumb
 2887              	 .thumb_func
 2889              	fat_reset_dir:
 2890              	.LFB75:
1562:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 2891              	 .loc 1 1562 0
 2892              	 .cfi_startproc
 2893              	 
 2894              	 
 2895              	 
 2896              	.LVL335:
1563:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!dd)
 2897              	 .loc 1 1563 0
 2898 0000 38B1     	 cbz r0,.L225
1566:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dd->entry_cluster = dd->dir_entry.cluster;
 2899              	 .loc 1 1566 0
 2900 0002 C28C     	 ldrh r2,[r0,#38]
 2901 0004 0286     	 strh r2,[r0,#48]
1567:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dd->entry_offset = 0;
 2902              	 .loc 1 1567 0
 2903 0006 4FF00002 	 mov r2,#0
 2904 000a 4286     	 strh r2,[r0,#50]
1568:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return 1;
 2905              	 .loc 1 1568 0
 2906 000c 4FF00100 	 mov r0,#1
 2907              	.LVL336:
 2908 0010 7047     	 bx lr
 2909              	.LVL337:
 2910              	.L225:
1564:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 2911              	 .loc 1 1564 0
 2912 0012 4FF00000 	 mov r0,#0
 2913              	.LVL338:
1569:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 2914              	 .loc 1 1569 0
 2915 0016 7047     	 bx lr
 2916              	 .cfi_endproc
 2917              	.LFE75:
 2919              	 .section .text.fat_read_dir,"ax",%progbits
 2920              	 .align 2
 2921              	 .global fat_read_dir
 2922              	 .thumb
 2923              	 .thumb_func
 2925              	fat_read_dir:
 2926              	.LFB74:
1449:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 2927              	 .loc 1 1449 0
 2928              	 .cfi_startproc
 2929              	 
 2930              	 
 2931              	.LVL339:
 2932 0000 2DE9F04F 	 push {r4,r5,r6,r7,r8,r9,sl,fp,lr}
 2933              	.LCFI26:
 2934              	 .cfi_def_cfa_offset 36
 2935              	 .cfi_offset 14,-4
 2936              	 .cfi_offset 11,-8
 2937              	 .cfi_offset 10,-12
 2938              	 .cfi_offset 9,-16
 2939              	 .cfi_offset 8,-20
 2940              	 .cfi_offset 7,-24
 2941              	 .cfi_offset 6,-28
 2942              	 .cfi_offset 5,-32
 2943              	 .cfi_offset 4,-36
 2944 0004 8FB0     	 sub sp,sp,#60
 2945              	.LCFI27:
 2946              	 .cfi_def_cfa_offset 96
1450:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!dd || !dir_entry)
 2947              	 .loc 1 1450 0
 2948 0006 8346     	 mov fp,r0
 2949 0008 0F46     	 mov r7,r1
 2950 000a D1F10101 	 rsbs r1,r1,#1
 2951              	.LVL340:
 2952 000e 38BF     	 it cc
 2953 0010 0021     	 movcc r1,#0
 2954 0012 0028     	 cmp r0,#0
 2955 0014 08BF     	 it eq
 2956 0016 41F00101 	 orreq r1,r1,#1
 2957 001a 0029     	 cmp r1,#0
 2958 001c 61D1     	 bne .L236
1454:src/MightyBoard/Motherboard/lib_sd/fat.c ****     struct fat_fs_struct* fs = dd->fs;
 2959              	 .loc 1 1454 0
 2960 001e 0568     	 ldr r5,[r0,#0]
 2961              	.LVL341:
1456:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint16_t cluster_size = header->cluster_size;
 2962              	 .loc 1 1456 0
 2963 0020 6E8A     	 ldrh r6,[r5,#18]
 2964              	.LVL342:
1457:src/MightyBoard/Motherboard/lib_sd/fat.c ****     cluster_t cluster_num = dd->entry_cluster;
 2965              	 .loc 1 1457 0
 2966 0022 B0F83080 	 ldrh r8,[r0,#48]
 2967              	.LVL343:
1458:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint16_t cluster_offset = dd->entry_offset;
 2968              	 .loc 1 1458 0
 2969 0026 448E     	 ldrh r4,[r0,#50]
 2970              	.LVL344:
1461:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(cluster_offset >= cluster_size)
 2971              	 .loc 1 1461 0
 2972 0028 A642     	 cmp r6,r4
 2973 002a 04D8     	 bhi .L228
1468:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fat_reset_dir(dd);
 2974              	 .loc 1 1468 0
 2975 002c FFF7FEFF 	 bl fat_reset_dir
 2976              	.LVL345:
1469:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 2977              	 .loc 1 1469 0
 2978 0030 4FF00000 	 mov r0,#0
 2979 0034 5AE0     	 b .L227
 2980              	.L228:
1473:src/MightyBoard/Motherboard/lib_sd/fat.c ****     memset(&arg, 0, sizeof(arg));
 2981              	 .loc 1 1473 0
 2982 0036 4FF00001 	 mov r1,#0
 2983 003a 0C91     	 str r1,[sp,#48]
 2984 003c 0D91     	 str r1,[sp,#52]
1474:src/MightyBoard/Motherboard/lib_sd/fat.c ****     memset(dir_entry, 0, sizeof(*dir_entry));
 2985              	 .loc 1 1474 0
 2986 003e 3846     	 mov r0,r7
 2987 0040 4FF02C02 	 mov r2,#44
 2988 0044 FFF7FEFF 	 bl memset
1475:src/MightyBoard/Motherboard/lib_sd/fat.c ****     arg.dir_entry = dir_entry;
 2989              	 .loc 1 1475 0
 2990 0048 0B97     	 str r7,[sp,#44]
1478:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(cluster_num == 0)
 2991              	 .loc 1 1478 0
 2992 004a B8F1000F 	 cmp r8,#0
 2993 004e 39D1     	 bne .L240
1485:src/MightyBoard/Motherboard/lib_sd/fat.c ****             cluster_size = header->cluster_zero_offset - header->root_dir_offset;
 2994              	 .loc 1 1485 0
 2995 0050 6E69     	 ldr r6,[r5,#20]
 2996              	.LVL346:
 2997 0052 AB69     	 ldr r3,[r5,#24]
 2998 0054 F61A     	 subs r6,r6,r3
 2999 0056 B6B2     	 uxth r6,r6
 3000              	.LVL347:
 3001 0058 34E0     	 b .L240
 3002              	.LVL348:
 3003              	.L235:
 3004              	.LBB46:
1493:src/MightyBoard/Motherboard/lib_sd/fat.c ****         uint16_t cluster_left = cluster_size - cluster_offset;
 3005              	 .loc 1 1493 0
 3006 005a C4EB0609 	 rsb r9,r4,r6
 3007 005e 1FFA89F9 	 uxth r9,r9
 3008              	.LVL349:
1495:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(cluster_num == 0)
 3009              	 .loc 1 1495 0
 3010 0062 B8F1000F 	 cmp r8,#0
 3011 0066 02D1     	 bne .L231
1496:src/MightyBoard/Motherboard/lib_sd/fat.c ****             pos += header->root_dir_offset;
 3012              	 .loc 1 1496 0
 3013 0068 A869     	 ldr r0,[r5,#24]
 3014 006a 2018     	 adds r0,r4,r0
 3015              	.LVL350:
 3016 006c 04E0     	 b .L232
 3017              	.LVL351:
 3018              	.L231:
1498:src/MightyBoard/Motherboard/lib_sd/fat.c ****             pos += fat_cluster_offset(fs, cluster_num);
 3019              	 .loc 1 1498 0
 3020 006e 2846     	 mov r0,r5
 3021 0070 4146     	 mov r1,r8
 3022 0072 FFF7FEFF 	 bl fat_cluster_offset
 3023 0076 0019     	 adds r0,r0,r4
 3024              	.LVL352:
 3025              	.L232:
1500:src/MightyBoard/Motherboard/lib_sd/fat.c ****         arg.bytes_read = 0;
 3026              	 .loc 1 1500 0
 3027 0078 4FF00003 	 mov r3,#0
 3028 007c 0C93     	 str r3,[sp,#48]
1501:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fs->partition->device_read_interval(pos,
 3029              	 .loc 1 1501 0
 3030 007e 2B68     	 ldr r3,[r5,#0]
 3031 0080 CDF800A0 	 str sl,[sp,#0]
 3032 0084 0BAA     	 add r2,sp,#44
 3033 0086 0192     	 str r2,[sp,#4]
 3034 0088 5F68     	 ldr r7,[r3,#4]
 3035 008a 03A9     	 add r1,sp,#12
 3036 008c 4FF02002 	 mov r2,#32
 3037 0090 4B46     	 mov r3,r9
 3038 0092 B847     	 blx r7
 3039              	.LVL353:
 3040 0094 40B3     	 cbz r0,.L237
1510:src/MightyBoard/Motherboard/lib_sd/fat.c ****         cluster_offset += arg.bytes_read;
 3041              	 .loc 1 1510 0
 3042 0096 0C9B     	 ldr r3,[sp,#48]
 3043 0098 E418     	 adds r4,r4,r3
 3044              	.LVL354:
 3045 009a A4B2     	 uxth r4,r4
 3046              	.LVL355:
1512:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(cluster_offset >= cluster_size)
 3047              	 .loc 1 1512 0
 3048 009c A642     	 cmp r6,r4
 3049 009e 15D8     	 bhi .L242
1517:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if((cluster_num = fat_get_next_cluster(fs, cluster_num)) != 0)
 3050              	 .loc 1 1517 0
 3051 00a0 2846     	 mov r0,r5
 3052 00a2 4146     	 mov r1,r8
 3053 00a4 FFF7FEFF 	 bl fat_get_next_cluster
 3054              	.LVL356:
 3055 00a8 8046     	 mov r8,r0
 3056 00aa 40B9     	 cbnz r0,.L238
1524:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(!arg.finished)
 3057              	 .loc 1 1524 0
 3058 00ac 9DF83530 	 ldrb r3,[sp,#53]
 3059 00b0 83B9     	 cbnz r3,.L234
1527:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 fat_reset_dir(dd);
 3060              	 .loc 1 1527 0
 3061 00b2 5846     	 mov r0,fp
 3062              	.LVL357:
 3063 00b4 FFF7FEFF 	 bl fat_reset_dir
1528:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 return 0;
 3064              	 .loc 1 1528 0
 3065 00b8 4FF00000 	 mov r0,#0
 3066 00bc 16E0     	 b .L227
 3067              	.LVL358:
 3068              	.L238:
1519:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 cluster_offset = 0;
 3069              	 .loc 1 1519 0
 3070 00be 4FF00004 	 mov r4,#0
 3071              	.LVL359:
 3072 00c2 03E0     	 b .L242
 3073              	.LVL360:
 3074              	.L240:
1501:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fs->partition->device_read_interval(pos,
 3075              	 .loc 1 1501 0 discriminator 1
 3076 00c4 40F2000A 	 movw sl,#:lower16:fat_dir_entry_read_callback
 3077 00c8 C0F2000A 	 movt sl,#:upper16:fat_dir_entry_read_callback
 3078              	.LVL361:
 3079              	.L242:
 3080              	.LBE46:
1490:src/MightyBoard/Motherboard/lib_sd/fat.c ****     while(!arg.finished)
 3081              	 .loc 1 1490 0 discriminator 1
 3082 00cc 9DF83530 	 ldrb r3,[sp,#53]
 3083 00d0 002B     	 cmp r3,#0
 3084 00d2 C2D0     	 beq .L235
 3085              	.LVL362:
 3086              	.L234:
1544:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dd->entry_cluster = cluster_num;
 3087              	 .loc 1 1544 0
 3088 00d4 ABF83080 	 strh r8,[fp,#48]
1545:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dd->entry_offset = cluster_offset;
 3089              	 .loc 1 1545 0
 3090 00d8 ABF83240 	 strh r4,[fp,#50]
1547:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return arg.finished;
 3091              	 .loc 1 1547 0
 3092 00dc 9DF83500 	 ldrb r0,[sp,#53]
 3093 00e0 04E0     	 b .L227
 3094              	.LVL363:
 3095              	.L236:
1451:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 3096              	 .loc 1 1451 0
 3097 00e2 4FF00000 	 mov r0,#0
 3098 00e6 01E0     	 b .L227
 3099              	.LVL364:
 3100              	.L237:
 3101              	.LBB47:
1508:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return 0;
 3102              	 .loc 1 1508 0
 3103 00e8 4FF00000 	 mov r0,#0
 3104              	.LVL365:
 3105              	.L227:
 3106              	.LBE47:
1548:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 3107              	 .loc 1 1548 0
 3108 00ec 0FB0     	 add sp,sp,#60
 3109 00ee BDE8F08F 	 pop {r4,r5,r6,r7,r8,r9,sl,fp,pc}
 3110              	 .cfi_endproc
 3111              	.LFE74:
 3113 00f2 00BF     	 .section .text.fat_get_dir_entry_of_path,"ax",%progbits
 3114              	 .align 2
 3115              	 .global fat_get_dir_entry_of_path
 3116              	 .thumb
 3117              	 .thumb_func
 3119              	fat_get_dir_entry_of_path:
 3120              	.LFB65:
 855:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 3121              	 .loc 1 855 0
 3122              	 .cfi_startproc
 3123              	 
 3124              	 
 3125              	.LVL366:
 3126 0000 2DE9F84F 	 push {r3,r4,r5,r6,r7,r8,r9,sl,fp,lr}
 3127              	.LCFI28:
 3128              	 .cfi_def_cfa_offset 40
 3129              	 .cfi_offset 14,-4
 3130              	 .cfi_offset 11,-8
 3131              	 .cfi_offset 10,-12
 3132              	 .cfi_offset 9,-16
 3133              	 .cfi_offset 8,-20
 3134              	 .cfi_offset 7,-24
 3135              	 .cfi_offset 6,-28
 3136              	 .cfi_offset 5,-32
 3137              	 .cfi_offset 4,-36
 3138              	 .cfi_offset 3,-40
 3139 0004 1446     	 mov r4,r2
 856:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs || !path || path[0] == '\0' || !dir_entry)
 3140              	 .loc 1 856 0
 3141 0006 8246     	 mov sl,r0
 3142 0008 8846     	 mov r8,r1
 3143 000a D1F10101 	 rsbs r1,r1,#1
 3144              	.LVL367:
 3145 000e 38BF     	 it cc
 3146 0010 0021     	 movcc r1,#0
 3147 0012 0028     	 cmp r0,#0
 3148 0014 08BF     	 it eq
 3149 0016 41F00101 	 orreq r1,r1,#1
 3150 001a 0029     	 cmp r1,#0
 3151 001c 6AD1     	 bne .L252
 856:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs || !path || path[0] == '\0' || !dir_entry)
 3152              	 .loc 1 856 0 is_stmt 0 discriminator 1
 3153 001e 98F80030 	 ldrb r3,[r8,#0]
 3154 0022 D2F10102 	 rsbs r2,r2,#1
 3155              	.LVL368:
 3156 0026 38BF     	 it cc
 3157 0028 0022     	 movcc r2,#0
 3158 002a 002B     	 cmp r3,#0
 3159 002c 08BF     	 it eq
 3160 002e 42F00102 	 orreq r2,r2,#1
 3161 0032 002A     	 cmp r2,#0
 3162 0034 62D1     	 bne .L253
 859:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(path[0] == '/')
 3163              	 .loc 1 859 0 is_stmt 1
 3164 0036 2F2B     	 cmp r3,#47
 860:src/MightyBoard/Motherboard/lib_sd/fat.c ****         ++path;
 3165              	 .loc 1 860 0
 3166 0038 08BF     	 it eq
 3167 003a 08F10108 	 addeq r8,r8,#1
 3168              	.LVL369:
 863:src/MightyBoard/Motherboard/lib_sd/fat.c ****     memset(dir_entry, 0, sizeof(*dir_entry));
 3169              	 .loc 1 863 0
 3170 003e 2046     	 mov r0,r4
 3171              	.LVL370:
 3172 0040 4FF00001 	 mov r1,#0
 3173 0044 4FF02C02 	 mov r2,#44
 3174 0048 FFF7FEFF 	 bl memset
 864:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dir_entry->attributes = FAT_ATTRIB_DIR;
 3175              	 .loc 1 864 0
 3176 004c 4FF01003 	 mov r3,#16
 3177 0050 84F82030 	 strb r3,[r4,#32]
 3178              	.LBB48:
 868:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(path[0] == '\0')
 3179              	 .loc 1 868 0
 3180 0054 98F80030 	 ldrb r3,[r8,#0]
 3181 0058 002B     	 cmp r3,#0
 3182 005a 53D0     	 beq .L254
 876:src/MightyBoard/Motherboard/lib_sd/fat.c ****         const char* sub_path = strchr(path, '/');
 3183              	 .loc 1 876 0
 3184 005c 4FF02F0B 	 mov fp,#47
 3185              	.L259:
 871:src/MightyBoard/Motherboard/lib_sd/fat.c ****         struct fat_dir_struct* dd = fat_open_dir(fs, dir_entry);
 3186              	 .loc 1 871 0
 3187 0060 5046     	 mov r0,sl
 3188 0062 2146     	 mov r1,r4
 3189 0064 FFF7FEFF 	 bl fat_open_dir
 3190              	.LVL371:
 872:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!dd)
 3191              	 .loc 1 872 0
 3192 0068 0646     	 mov r6,r0
 3193 006a 0028     	 cmp r0,#0
 3194 006c 4ED0     	 beq .L255
 876:src/MightyBoard/Motherboard/lib_sd/fat.c ****         const char* sub_path = strchr(path, '/');
 3195              	 .loc 1 876 0
 3196 006e 4046     	 mov r0,r8
 3197              	.LVL372:
 3198 0070 5946     	 mov r1,fp
 3199 0072 FFF7FEFF 	 bl strchr
 3200              	.LVL373:
 878:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(sub_path)
 3201              	 .loc 1 878 0
 3202 0076 28B1     	 cbz r0,.L246
 880:src/MightyBoard/Motherboard/lib_sd/fat.c ****             length_to_sep = sub_path - path;
 3203              	 .loc 1 880 0
 3204 0078 C8EB0007 	 rsb r7,r8,r0
 3205 007c FFB2     	 uxtb r7,r7
 3206              	.LVL374:
 881:src/MightyBoard/Motherboard/lib_sd/fat.c ****             ++sub_path;
 3207              	 .loc 1 881 0
 3208 007e 00F10109 	 add r9,r0,#1
 3209              	.LVL375:
 3210 0082 22E0     	 b .L262
 3211              	.LVL376:
 3212              	.L246:
 885:src/MightyBoard/Motherboard/lib_sd/fat.c ****             length_to_sep = strlen(path);
 3213              	 .loc 1 885 0
 3214 0084 4046     	 mov r0,r8
 3215              	.LVL377:
 3216 0086 FFF7FEFF 	 bl strlen
 3217 008a C7B2     	 uxtb r7,r0
 3218              	.LVL378:
 886:src/MightyBoard/Motherboard/lib_sd/fat.c ****             sub_path = path + length_to_sep;
 3219              	 .loc 1 886 0
 3220 008c 08EB0709 	 add r9,r8,r7
 3221              	.LVL379:
 3222 0090 1BE0     	 b .L262
 3223              	.L250:
 893:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if((strlen(dir_entry->long_name) != length_to_sep ||
 3224              	 .loc 1 893 0
 3225 0092 2046     	 mov r0,r4
 3226 0094 FFF7FEFF 	 bl strlen
 3227 0098 0546     	 mov r5,r0
 3228 009a B842     	 cmp r0,r7
 3229 009c 15D1     	 bne .L262
 894:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 strncmp(path, dir_entry->long_name, length_to_sep) != 0))
 3230              	 .loc 1 894 0 discriminator 1
 3231 009e 4046     	 mov r0,r8
 3232 00a0 2146     	 mov r1,r4
 3233 00a2 2A46     	 mov r2,r5
 3234 00a4 FFF7FEFF 	 bl strncmp
 893:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if((strlen(dir_entry->long_name) != length_to_sep ||
 3235              	 .loc 1 893 0 discriminator 1
 3236 00a8 78B9     	 cbnz r0,.L262
 897:src/MightyBoard/Motherboard/lib_sd/fat.c ****             fat_close_dir(dd);
 3237              	 .loc 1 897 0
 3238 00aa 3046     	 mov r0,r6
 3239 00ac FFF7FEFF 	 bl fat_close_dir
 3240              	.LVL380:
 900:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(path[length_to_sep] == '\0')
 3241              	 .loc 1 900 0
 3242 00b0 18F80530 	 ldrb r3,[r8,r5]
 3243 00b4 002B     	 cmp r3,#0
 3244 00b6 2DD0     	 beq .L256
 904:src/MightyBoard/Motherboard/lib_sd/fat.c ****             if(dir_entry->attributes & FAT_ATTRIB_DIR)
 3245              	 .loc 1 904 0
 3246 00b8 94F82030 	 ldrb r3,[r4,#32]
 3247 00bc 13F0100F 	 tst r3,#16
 3248 00c0 0AD1     	 bne .L257
 912:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return 0;
 3249              	 .loc 1 912 0
 3250 00c2 4FF00000 	 mov r0,#0
 3251 00c6 BDE8F88F 	 pop {r3,r4,r5,r6,r7,r8,r9,sl,fp,pc}
 3252              	.LVL381:
 3253              	.L262:
 890:src/MightyBoard/Motherboard/lib_sd/fat.c ****         while(fat_read_dir(dd, dir_entry))
 3254              	 .loc 1 890 0 discriminator 1
 3255 00ca 3046     	 mov r0,r6
 3256 00cc 2146     	 mov r1,r4
 3257 00ce FFF7FEFF 	 bl fat_read_dir
 3258 00d2 0028     	 cmp r0,#0
 3259 00d4 DDD1     	 bne .L250
 3260 00d6 02E0     	 b .L249
 3261              	.LVL382:
 3262              	.L257:
 907:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 path = sub_path;
 3263              	 .loc 1 907 0
 3264 00d8 C846     	 mov r8,r9
 3265              	.LVL383:
 898:src/MightyBoard/Motherboard/lib_sd/fat.c ****             dd = 0;
 3266              	 .loc 1 898 0
 3267 00da 4FF00006 	 mov r6,#0
 3268              	.LVL384:
 3269              	.L249:
 915:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fat_close_dir(dd);
 3270              	 .loc 1 915 0
 3271 00de 3046     	 mov r0,r6
 3272 00e0 FFF7FEFF 	 bl fat_close_dir
 868:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(path[0] == '\0')
 3273              	 .loc 1 868 0
 3274 00e4 98F80030 	 ldrb r3,[r8,#0]
 3275 00e8 002B     	 cmp r3,#0
 3276 00ea B9D1     	 bne .L259
 869:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return 1;
 3277              	 .loc 1 869 0
 3278 00ec 4FF00100 	 mov r0,#1
 3279 00f0 BDE8F88F 	 pop {r3,r4,r5,r6,r7,r8,r9,sl,fp,pc}
 3280              	.LVL385:
 3281              	.L252:
 3282              	.LBE48:
 857:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 3283              	 .loc 1 857 0
 3284 00f4 4FF00000 	 mov r0,#0
 3285 00f8 BDE8F88F 	 pop {r3,r4,r5,r6,r7,r8,r9,sl,fp,pc}
 3286              	.L253:
 3287 00fc 4FF00000 	 mov r0,#0
 3288 0100 BDE8F88F 	 pop {r3,r4,r5,r6,r7,r8,r9,sl,fp,pc}
 3289              	.L254:
 3290              	.LBB49:
 869:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return 1;
 3291              	 .loc 1 869 0
 3292 0104 4FF00100 	 mov r0,#1
 3293 0108 BDE8F88F 	 pop {r3,r4,r5,r6,r7,r8,r9,sl,fp,pc}
 3294              	.LVL386:
 3295              	.L255:
 918:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return 0;
 3296              	 .loc 1 918 0
 3297 010c 4FF00000 	 mov r0,#0
 3298              	.LVL387:
 3299 0110 BDE8F88F 	 pop {r3,r4,r5,r6,r7,r8,r9,sl,fp,pc}
 3300              	.LVL388:
 3301              	.L256:
 902:src/MightyBoard/Motherboard/lib_sd/fat.c ****                 return 1;
 3302              	 .loc 1 902 0
 3303 0114 4FF00100 	 mov r0,#1
 3304              	.LBE49:
 919:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 3305              	 .loc 1 919 0
 3306 0118 BDE8F88F 	 pop {r3,r4,r5,r6,r7,r8,r9,sl,fp,pc}
 3307              	 .cfi_endproc
 3308              	.LFE65:
 3310              	 .section .text.fat_create_file,"ax",%progbits
 3311              	 .align 2
 3312              	 .global fat_create_file
 3313              	 .thumb
 3314              	 .thumb_func
 3316              	fat_create_file:
 3317              	.LFB80:
2067:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 3318              	 .loc 1 2067 0
 3319              	 .cfi_startproc
 3320              	 
 3321              	 
 3322              	.LVL389:
 3323 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 3324              	.LCFI29:
 3325              	 .cfi_def_cfa_offset 24
 3326              	 .cfi_offset 14,-4
 3327              	 .cfi_offset 7,-8
 3328              	 .cfi_offset 6,-12
 3329              	 .cfi_offset 5,-16
 3330              	 .cfi_offset 4,-20
 3331              	 .cfi_offset 3,-24
 3332 0002 1446     	 mov r4,r2
2068:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!parent || !file || !file[0] || !dir_entry)
 3333              	 .loc 1 2068 0
 3334 0004 0646     	 mov r6,r0
 3335 0006 0D46     	 mov r5,r1
 3336 0008 D1F10101 	 rsbs r1,r1,#1
 3337              	.LVL390:
 3338 000c 38BF     	 it cc
 3339 000e 0021     	 movcc r1,#0
 3340 0010 0028     	 cmp r0,#0
 3341 0012 08BF     	 it eq
 3342 0014 41F00101 	 orreq r1,r1,#1
 3343 0018 0029     	 cmp r1,#0
 3344 001a 38D1     	 bne .L267
2068:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!parent || !file || !file[0] || !dir_entry)
 3345              	 .loc 1 2068 0 is_stmt 0 discriminator 1
 3346 001c 2A78     	 ldrb r2,[r5,#0]
 3347              	.LVL391:
 3348 001e D4F10103 	 rsbs r3,r4,#1
 3349 0022 38BF     	 it cc
 3350 0024 0023     	 movcc r3,#0
 3351 0026 002A     	 cmp r2,#0
 3352 0028 08BF     	 it eq
 3353 002a 43F00103 	 orreq r3,r3,#1
 3354 002e 002B     	 cmp r3,#0
 3355 0030 30D1     	 bne .L268
 3356              	.LVL392:
 3357              	.L270:
2074:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fat_read_dir(parent, dir_entry))
 3358              	 .loc 1 2074 0 is_stmt 1
 3359 0032 3046     	 mov r0,r6
 3360 0034 2146     	 mov r1,r4
 3361 0036 FFF7FEFF 	 bl fat_read_dir
 3362 003a 58B1     	 cbz r0,.L265
2077:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(strcmp(file, dir_entry->long_name) == 0)
 3363              	 .loc 1 2077 0
 3364 003c 2846     	 mov r0,r5
 3365 003e 2146     	 mov r1,r4
 3366 0040 FFF7FEFF 	 bl strcmp
 3367 0044 0028     	 cmp r0,#0
 3368 0046 F4D1     	 bne .L270
2079:src/MightyBoard/Motherboard/lib_sd/fat.c ****             fat_reset_dir(parent);
 3369              	 .loc 1 2079 0
 3370 0048 3046     	 mov r0,r6
 3371 004a FFF7FEFF 	 bl fat_reset_dir
2080:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return 0;
 3372              	 .loc 1 2080 0
 3373 004e 4FF00000 	 mov r0,#0
 3374 0052 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 3375              	.L265:
2084:src/MightyBoard/Motherboard/lib_sd/fat.c ****     struct fat_fs_struct* fs = parent->fs;
 3376              	 .loc 1 2084 0
 3377 0054 3768     	 ldr r7,[r6,#0]
 3378              	.LVL393:
2087:src/MightyBoard/Motherboard/lib_sd/fat.c ****     memset(dir_entry, 0, sizeof(*dir_entry));
 3379              	 .loc 1 2087 0
 3380 0056 2046     	 mov r0,r4
 3381 0058 4FF00001 	 mov r1,#0
 3382 005c 4FF02C02 	 mov r2,#44
 3383 0060 FFF7FEFF 	 bl memset
 3384              	.LVL394:
2088:src/MightyBoard/Motherboard/lib_sd/fat.c ****     strncpy(dir_entry->long_name, file, sizeof(dir_entry->long_name) - 1);
 3385              	 .loc 1 2088 0
 3386 0064 2046     	 mov r0,r4
 3387 0066 2946     	 mov r1,r5
 3388 0068 4FF01F02 	 mov r2,#31
 3389 006c FFF7FEFF 	 bl strncpy
2091:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!(dir_entry->entry_offset = fat_find_offset_for_dir_entry(fs, parent, dir_entry)))
 3390              	 .loc 1 2091 0
 3391 0070 3846     	 mov r0,r7
 3392 0072 3146     	 mov r1,r6
 3393 0074 2246     	 mov r2,r4
 3394 0076 FFF7FEFF 	 bl fat_find_offset_for_dir_entry
 3395 007a A062     	 str r0,[r4,#40]
 3396 007c 68B1     	 cbz r0,.L269
2095:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fat_write_dir_entry(fs, dir_entry))
 3397              	 .loc 1 2095 0
 3398 007e 3846     	 mov r0,r7
 3399 0080 2146     	 mov r1,r4
 3400 0082 FFF7FEFF 	 bl fat_write_dir_entry
2069:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 3401              	 .loc 1 2069 0
 3402 0086 0030     	 adds r0,r0,#0
 3403 0088 18BF     	 it ne
 3404 008a 0120     	 movne r0,#1
 3405 008c F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 3406              	.LVL395:
 3407              	.L267:
 3408 008e 4FF00000 	 mov r0,#0
 3409 0092 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 3410              	.L268:
 3411 0094 4FF00000 	 mov r0,#0
 3412 0098 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 3413              	.LVL396:
 3414              	.L269:
2092:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 3415              	 .loc 1 2092 0
 3416 009a 4FF00000 	 mov r0,#0
2099:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 3417              	 .loc 1 2099 0
 3418 009e F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 3419              	 .cfi_endproc
 3420              	.LFE80:
 3422              	 .section .text.fat_delete_file,"ax",%progbits
 3423              	 .align 2
 3424              	 .global fat_delete_file
 3425              	 .thumb
 3426              	 .thumb_func
 3428              	fat_delete_file:
 3429              	.LFB81:
2118:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 3430              	 .loc 1 2118 0
 3431              	 .cfi_startproc
 3432              	 
 3433              	 
 3434              	.LVL397:
 3435 0000 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
 3436              	.LCFI30:
 3437              	 .cfi_def_cfa_offset 24
 3438              	 .cfi_offset 14,-4
 3439              	 .cfi_offset 8,-8
 3440              	 .cfi_offset 7,-12
 3441              	 .cfi_offset 6,-16
 3442              	 .cfi_offset 5,-20
 3443              	 .cfi_offset 4,-24
 3444 0004 84B0     	 sub sp,sp,#16
 3445              	.LCFI31:
 3446              	 .cfi_def_cfa_offset 40
2119:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs || !dir_entry)
 3447              	 .loc 1 2119 0
 3448 0006 0546     	 mov r5,r0
 3449 0008 8846     	 mov r8,r1
 3450 000a D1F10101 	 rsbs r1,r1,#1
 3451              	.LVL398:
 3452 000e 38BF     	 it cc
 3453 0010 0021     	 movcc r1,#0
 3454 0012 0028     	 cmp r0,#0
 3455 0014 08BF     	 it eq
 3456 0016 41F00101 	 orreq r1,r1,#1
2120:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 3457              	 .loc 1 2120 0
 3458 001a 4FF00000 	 mov r0,#0
 3459              	.LVL399:
2119:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs || !dir_entry)
 3460              	 .loc 1 2119 0
 3461 001e 0029     	 cmp r1,#0
 3462 0020 32D1     	 bne .L273
2123:src/MightyBoard/Motherboard/lib_sd/fat.c ****     offset_t dir_entry_offset = dir_entry->entry_offset;
 3463              	 .loc 1 2123 0
 3464 0022 D8F82840 	 ldr r4,[r8,#40]
 3465              	.LVL400:
2125:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 3466              	 .loc 1 2125 0
 3467 0026 4FF00000 	 mov r0,#0
2124:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!dir_entry_offset)
 3468              	 .loc 1 2124 0
 3469 002a 002C     	 cmp r4,#0
 3470 002c 2CD0     	 beq .L273
2132:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fs->partition->device_read(dir_entry_offset, buffer, sizeof(buffer)))
 3471              	 .loc 1 2132 0
 3472 002e 4FF00C06 	 mov r6,#12
2136:src/MightyBoard/Motherboard/lib_sd/fat.c ****         buffer[0] = FAT_DIRENTRY_DELETED;
 3473              	 .loc 1 2136 0
 3474 0032 4FF0E507 	 mov r7,#229
 3475              	.LVL401:
 3476              	.L282:
2132:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fs->partition->device_read(dir_entry_offset, buffer, sizeof(buffer)))
 3477              	 .loc 1 2132 0
 3478 0036 2B68     	 ldr r3,[r5,#0]
 3479 0038 1B68     	 ldr r3,[r3,#0]
 3480 003a 2046     	 mov r0,r4
 3481 003c 01A9     	 add r1,sp,#4
 3482 003e 3246     	 mov r2,r6
 3483 0040 9847     	 blx r3
 3484 0042 E0B1     	 cbz r0,.L279
2136:src/MightyBoard/Motherboard/lib_sd/fat.c ****         buffer[0] = FAT_DIRENTRY_DELETED;
 3485              	 .loc 1 2136 0
 3486 0044 8DF80470 	 strb r7,[sp,#4]
2139:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fs->partition->device_write(dir_entry_offset, buffer, sizeof(buffer)))
 3487              	 .loc 1 2139 0
 3488 0048 2B68     	 ldr r3,[r5,#0]
 3489 004a 9B68     	 ldr r3,[r3,#8]
 3490 004c 2046     	 mov r0,r4
 3491 004e 01A9     	 add r1,sp,#4
 3492 0050 3246     	 mov r2,r6
 3493 0052 9847     	 blx r3
 3494 0054 B0B1     	 cbz r0,.L280
2143:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(buffer[11] != 0x0f)
 3495              	 .loc 1 2143 0
 3496 0056 9DF80F30 	 ldrb r3,[sp,#15]
 3497 005a 0F2B     	 cmp r3,#15
 3498 005c 02D1     	 bne .L274
2146:src/MightyBoard/Motherboard/lib_sd/fat.c ****         dir_entry_offset += 32;
 3499              	 .loc 1 2146 0
 3500 005e 04F12004 	 add r4,r4,#32
 3501              	.LVL402:
2147:src/MightyBoard/Motherboard/lib_sd/fat.c ****     }
 3502              	 .loc 1 2147 0
 3503 0062 E8E7     	 b .L282
 3504              	.L274:
2158:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return (dir_entry->cluster == 0 || fat_free_clusters(fs, dir_entry->cluster));
 3505              	 .loc 1 2158 0
 3506 0064 B8F82210 	 ldrh r1,[r8,#34]
 3507 0068 4FF00100 	 mov r0,#1
 3508 006c 29B1     	 cbz r1,.L276
2158:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return (dir_entry->cluster == 0 || fat_free_clusters(fs, dir_entry->cluster));
 3509              	 .loc 1 2158 0 is_stmt 0 discriminator 2
 3510 006e 2846     	 mov r0,r5
 3511 0070 FFF7FEFF 	 bl fat_free_clusters
 3512 0074 0030     	 adds r0,r0,#0
 3513 0076 18BF     	 it ne
 3514 0078 0120     	 movne r0,#1
 3515              	.L276:
2158:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return (dir_entry->cluster == 0 || fat_free_clusters(fs, dir_entry->cluster));
 3516              	 .loc 1 2158 0 discriminator 3
 3517 007a C0B2     	 uxtb r0,r0
 3518 007c 04E0     	 b .L273
 3519              	.L279:
2133:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return 0;
 3520              	 .loc 1 2133 0 is_stmt 1
 3521 007e 4FF00000 	 mov r0,#0
 3522 0082 01E0     	 b .L273
 3523              	.L280:
2140:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return 0;
 3524              	 .loc 1 2140 0
 3525 0084 4FF00000 	 mov r0,#0
 3526              	.LVL403:
 3527              	.L273:
2159:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 3528              	 .loc 1 2159 0
 3529 0088 04B0     	 add sp,sp,#16
 3530 008a BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 3531              	 .cfi_endproc
 3532              	.LFE81:
 3534 008e 00BF     	 .section .text.fat_create_dir,"ax",%progbits
 3535              	 .align 2
 3536              	 .global fat_create_dir
 3537              	 .thumb
 3538              	 .thumb_func
 3540              	fat_create_dir:
 3541              	.LFB82:
2182:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 3542              	 .loc 1 2182 0
 3543              	 .cfi_startproc
 3544              	 
 3545              	 
 3546              	.LVL404:
 3547 0000 2DE9F041 	 push {r4,r5,r6,r7,r8,lr}
 3548              	.LCFI32:
 3549              	 .cfi_def_cfa_offset 24
 3550              	 .cfi_offset 14,-4
 3551              	 .cfi_offset 8,-8
 3552              	 .cfi_offset 7,-12
 3553              	 .cfi_offset 6,-16
 3554              	 .cfi_offset 5,-20
 3555              	 .cfi_offset 4,-24
 3556 0004 1446     	 mov r4,r2
2183:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!parent || !dir || !dir[0] || !dir_entry)
 3557              	 .loc 1 2183 0
 3558 0006 0646     	 mov r6,r0
 3559 0008 0D46     	 mov r5,r1
 3560 000a D1F10101 	 rsbs r1,r1,#1
 3561              	.LVL405:
 3562 000e 38BF     	 it cc
 3563 0010 0021     	 movcc r1,#0
 3564 0012 0028     	 cmp r0,#0
 3565 0014 08BF     	 it eq
 3566 0016 41F00101 	 orreq r1,r1,#1
 3567 001a 0029     	 cmp r1,#0
 3568 001c 40F08A80 	 bne .L290
2183:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!parent || !dir || !dir[0] || !dir_entry)
 3569              	 .loc 1 2183 0 is_stmt 0 discriminator 1
 3570 0020 2A78     	 ldrb r2,[r5,#0]
 3571              	.LVL406:
 3572 0022 D4F10103 	 rsbs r3,r4,#1
 3573 0026 38BF     	 it cc
 3574 0028 0023     	 movcc r3,#0
 3575 002a 002A     	 cmp r2,#0
 3576 002c 08BF     	 it eq
 3577 002e 43F00103 	 orreq r3,r3,#1
 3578 0032 63B1     	 cbz r3,.L294
 3579 0034 82E0     	 b .L296
 3580              	.LVL407:
 3581              	.L286:
2189:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(strcmp(dir, dir_entry->long_name) == 0)
 3582              	 .loc 1 2189 0 is_stmt 1
 3583 0036 2846     	 mov r0,r5
 3584 0038 2146     	 mov r1,r4
 3585 003a FFF7FEFF 	 bl strcmp
 3586 003e 30B9     	 cbnz r0,.L294
2191:src/MightyBoard/Motherboard/lib_sd/fat.c ****             fat_reset_dir(parent);
 3587              	 .loc 1 2191 0
 3588 0040 3046     	 mov r0,r6
 3589 0042 FFF7FEFF 	 bl fat_reset_dir
2192:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return 0;
 3590              	 .loc 1 2192 0
 3591 0046 4FF00000 	 mov r0,#0
 3592 004a BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 3593              	.L294:
2187:src/MightyBoard/Motherboard/lib_sd/fat.c ****     while(fat_read_dir(parent, dir_entry))
 3594              	 .loc 1 2187 0 discriminator 1
 3595 004e 3046     	 mov r0,r6
 3596 0050 2146     	 mov r1,r4
 3597 0052 FFF7FEFF 	 bl fat_read_dir
 3598 0056 0028     	 cmp r0,#0
 3599 0058 EDD1     	 bne .L286
2196:src/MightyBoard/Motherboard/lib_sd/fat.c ****     struct fat_fs_struct* fs = parent->fs;
 3600              	 .loc 1 2196 0
 3601 005a 3768     	 ldr r7,[r6,#0]
 3602              	.LVL408:
2199:src/MightyBoard/Motherboard/lib_sd/fat.c ****     cluster_t dir_cluster = fat_append_clusters(fs, 0, 1);
 3603              	 .loc 1 2199 0
 3604 005c 3846     	 mov r0,r7
 3605 005e 4FF00001 	 mov r1,#0
 3606 0062 4FF00102 	 mov r2,#1
 3607 0066 FFF7FEFF 	 bl fat_append_clusters
 3608              	.LVL409:
2200:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!dir_cluster)
 3609              	 .loc 1 2200 0
 3610 006a 8046     	 mov r8,r0
 3611 006c 0028     	 cmp r0,#0
 3612 006e 69D0     	 beq .L292
2204:src/MightyBoard/Motherboard/lib_sd/fat.c ****     fat_clear_cluster(fs, dir_cluster);
 3613              	 .loc 1 2204 0
 3614 0070 3846     	 mov r0,r7
 3615              	.LVL410:
 3616 0072 4146     	 mov r1,r8
 3617 0074 FFF7FEFF 	 bl fat_clear_cluster
2206:src/MightyBoard/Motherboard/lib_sd/fat.c ****     memset(dir_entry, 0, sizeof(*dir_entry));
 3618              	 .loc 1 2206 0
 3619 0078 2046     	 mov r0,r4
 3620 007a 4FF00001 	 mov r1,#0
 3621 007e 4FF02C02 	 mov r2,#44
 3622 0082 FFF7FEFF 	 bl memset
2207:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dir_entry->attributes = FAT_ATTRIB_DIR;
 3623              	 .loc 1 2207 0
 3624 0086 4FF01003 	 mov r3,#16
 3625 008a 84F82030 	 strb r3,[r4,#32]
2211:src/MightyBoard/Motherboard/lib_sd/fat.c ****                               (offset_t) (dir_cluster - 2) * fs->header.cluster_size;
 3626              	 .loc 1 2211 0
 3627 008e A8F10203 	 sub r3,r8,#2
 3628 0092 798A     	 ldrh r1,[r7,#18]
2210:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dir_entry->entry_offset = fs->header.cluster_zero_offset +
 3629              	 .loc 1 2210 0
 3630 0094 7A69     	 ldr r2,[r7,#20]
 3631 0096 01FB0323 	 mla r3,r1,r3,r2
 3632 009a A362     	 str r3,[r4,#40]
2212:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dir_entry->long_name[0] = '.';
 3633              	 .loc 1 2212 0
 3634 009c 4FF02E03 	 mov r3,#46
 3635 00a0 2370     	 strb r3,[r4,#0]
2213:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dir_entry->cluster = dir_cluster;
 3636              	 .loc 1 2213 0
 3637 00a2 A4F82280 	 strh r8,[r4,#34]
2214:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fat_write_dir_entry(fs, dir_entry))
 3638              	 .loc 1 2214 0
 3639 00a6 3846     	 mov r0,r7
 3640 00a8 2146     	 mov r1,r4
 3641 00aa FFF7FEFF 	 bl fat_write_dir_entry
 3642 00ae 38B9     	 cbnz r0,.L287
2216:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fat_free_clusters(fs, dir_cluster);
 3643              	 .loc 1 2216 0
 3644 00b0 3846     	 mov r0,r7
 3645 00b2 4146     	 mov r1,r8
 3646 00b4 FFF7FEFF 	 bl fat_free_clusters
2217:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 3647              	 .loc 1 2217 0
 3648 00b8 4FF00000 	 mov r0,#0
 3649 00bc BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 3650              	.L287:
2221:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dir_entry->entry_offset += 32;
 3651              	 .loc 1 2221 0
 3652 00c0 A36A     	 ldr r3,[r4,#40]
 3653 00c2 03F12003 	 add r3,r3,#32
 3654 00c6 A362     	 str r3,[r4,#40]
2222:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dir_entry->long_name[1] = '.';
 3655              	 .loc 1 2222 0
 3656 00c8 4FF02E03 	 mov r3,#46
 3657 00cc 6370     	 strb r3,[r4,#1]
2223:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dir_entry->cluster = parent->dir_entry.cluster;
 3658              	 .loc 1 2223 0
 3659 00ce F38C     	 ldrh r3,[r6,#38]
 3660 00d0 6384     	 strh r3,[r4,#34]
2224:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fat_write_dir_entry(fs, dir_entry))
 3661              	 .loc 1 2224 0
 3662 00d2 3846     	 mov r0,r7
 3663 00d4 2146     	 mov r1,r4
 3664 00d6 FFF7FEFF 	 bl fat_write_dir_entry
 3665 00da 38B9     	 cbnz r0,.L288
2226:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fat_free_clusters(fs, dir_cluster);
 3666              	 .loc 1 2226 0
 3667 00dc 3846     	 mov r0,r7
 3668 00de 4146     	 mov r1,r8
 3669 00e0 FFF7FEFF 	 bl fat_free_clusters
2227:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 3670              	 .loc 1 2227 0
 3671 00e4 4FF00000 	 mov r0,#0
 3672 00e8 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 3673              	.L288:
2231:src/MightyBoard/Motherboard/lib_sd/fat.c ****     strncpy(dir_entry->long_name, dir, sizeof(dir_entry->long_name) - 1);
 3674              	 .loc 1 2231 0
 3675 00ec 2046     	 mov r0,r4
 3676 00ee 2946     	 mov r1,r5
 3677 00f0 4FF01F02 	 mov r2,#31
 3678 00f4 FFF7FEFF 	 bl strncpy
2232:src/MightyBoard/Motherboard/lib_sd/fat.c ****     dir_entry->cluster = dir_cluster;
 3679              	 .loc 1 2232 0
 3680 00f8 A4F82280 	 strh r8,[r4,#34]
2235:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!(dir_entry->entry_offset = fat_find_offset_for_dir_entry(fs, parent, dir_entry)))
 3681              	 .loc 1 2235 0
 3682 00fc 3846     	 mov r0,r7
 3683 00fe 3146     	 mov r1,r6
 3684 0100 2246     	 mov r2,r4
 3685 0102 FFF7FEFF 	 bl fat_find_offset_for_dir_entry
 3686 0106 A062     	 str r0,[r4,#40]
 3687 0108 38B9     	 cbnz r0,.L289
2237:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fat_free_clusters(fs, dir_cluster);
 3688              	 .loc 1 2237 0
 3689 010a 3846     	 mov r0,r7
 3690 010c 4146     	 mov r1,r8
 3691 010e FFF7FEFF 	 bl fat_free_clusters
2238:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 3692              	 .loc 1 2238 0
 3693 0112 4FF00000 	 mov r0,#0
 3694 0116 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 3695              	.L289:
2242:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fat_write_dir_entry(fs, dir_entry))
 3696              	 .loc 1 2242 0
 3697 011a 3846     	 mov r0,r7
 3698 011c 2146     	 mov r1,r4
 3699 011e FFF7FEFF 	 bl fat_write_dir_entry
 3700 0122 98B9     	 cbnz r0,.L293
2244:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fat_free_clusters(fs, dir_cluster);
 3701              	 .loc 1 2244 0
 3702 0124 3846     	 mov r0,r7
 3703 0126 4146     	 mov r1,r8
 3704 0128 FFF7FEFF 	 bl fat_free_clusters
2245:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 3705              	 .loc 1 2245 0
 3706 012c 4FF00000 	 mov r0,#0
 3707 0130 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 3708              	.LVL411:
 3709              	.L290:
2184:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 3710              	 .loc 1 2184 0
 3711 0134 4FF00000 	 mov r0,#0
 3712 0138 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 3713              	.L296:
 3714 013c 4FF00000 	 mov r0,#0
 3715 0140 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 3716              	.LVL412:
 3717              	.L292:
2201:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 3718              	 .loc 1 2201 0
 3719 0144 4FF00000 	 mov r0,#0
 3720              	.LVL413:
 3721 0148 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 3722              	.L293:
2248:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return 1;
 3723              	 .loc 1 2248 0
 3724 014c 4FF00100 	 mov r0,#1
2249:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 3725              	 .loc 1 2249 0
 3726 0150 BDE8F081 	 pop {r4,r5,r6,r7,r8,pc}
 3727              	 .cfi_endproc
 3728              	.LFE82:
 3730              	 .section .text.fat_get_file_size,"ax",%progbits
 3731              	 .align 2
 3732              	 .global fat_get_file_size
 3733              	 .thumb
 3734              	 .thumb_func
 3736              	fat_get_file_size:
 3737              	.LFB83:
2357:src/MightyBoard/Motherboard/lib_sd/fat.c **** offset_t fat_get_file_size(const struct fat_file_struct* fd){
 3738              	 .loc 1 2357 0
 3739              	 .cfi_startproc
 3740              	 
 3741              	 
 3742              	 
 3743              	.LVL414:
2359:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 3744              	 .loc 1 2359 0
 3745 0000 806A     	 ldr r0,[r0,#40]
 3746              	.LVL415:
 3747 0002 7047     	 bx lr
 3748              	 .cfi_endproc
 3749              	.LFE83:
 3751              	 .section .text.fat_get_fs_size,"ax",%progbits
 3752              	 .align 2
 3753              	 .global fat_get_fs_size
 3754              	 .thumb
 3755              	 .thumb_func
 3757              	fat_get_fs_size:
 3758              	.LFB84:
2369:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 3759              	 .loc 1 2369 0
 3760              	 .cfi_startproc
 3761              	 
 3762              	 
 3763              	 
 3764              	.LVL416:
2370:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs)
 3765              	 .loc 1 2370 0
 3766 0000 0346     	 mov r3,r0
 3767 0002 40B1     	 cbz r0,.L300
2378:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return (offset_t) (fs->header.fat_size / 2 - 2) * fs->header.cluster_size;
 3768              	 .loc 1 2378 0
 3769 0004 C068     	 ldr r0,[r0,#12]
 3770              	.LVL417:
 3771 0006 4FEA5000 	 lsr r0,r0,#1
 3772 000a A0F10200 	 sub r0,r0,#2
 3773 000e 5B8A     	 ldrh r3,[r3,#18]
 3774              	.LVL418:
 3775 0010 03FB00F0 	 mul r0,r3,r0
 3776 0014 7047     	 bx lr
 3777              	.LVL419:
 3778              	.L300:
2371:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 3779              	 .loc 1 2371 0
 3780 0016 4FF00000 	 mov r0,#0
 3781              	.LVL420:
2379:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 3782              	 .loc 1 2379 0
 3783 001a 7047     	 bx lr
 3784              	 .cfi_endproc
 3785              	.LFE84:
 3787              	 .section .text.fat_get_fs_free,"ax",%progbits
 3788              	 .align 2
 3789              	 .global fat_get_fs_free
 3790              	 .thumb
 3791              	 .thumb_func
 3793              	fat_get_fs_free:
 3794              	.LFB85:
2392:src/MightyBoard/Motherboard/lib_sd/fat.c **** {
 3795              	 .loc 1 2392 0
 3796              	 .cfi_startproc
 3797              	 
 3798              	 
 3799              	.LVL421:
 3800 0000 2DE9F047 	 push {r4,r5,r6,r7,r8,r9,sl,lr}
 3801              	.LCFI33:
 3802              	 .cfi_def_cfa_offset 32
 3803              	 .cfi_offset 14,-4
 3804              	 .cfi_offset 10,-8
 3805              	 .cfi_offset 9,-12
 3806              	 .cfi_offset 8,-16
 3807              	 .cfi_offset 7,-20
 3808              	 .cfi_offset 6,-24
 3809              	 .cfi_offset 5,-28
 3810              	 .cfi_offset 4,-32
 3811 0004 8CB0     	 sub sp,sp,#48
 3812              	.LCFI34:
 3813              	 .cfi_def_cfa_offset 80
2393:src/MightyBoard/Motherboard/lib_sd/fat.c ****     if(!fs)
 3814              	 .loc 1 2393 0
 3815 0006 8046     	 mov r8,r0
 3816 0008 68B3     	 cbz r0,.L306
2398:src/MightyBoard/Motherboard/lib_sd/fat.c ****     count_arg.cluster_count = 0;
 3817              	 .loc 1 2398 0
 3818 000a 4FF00003 	 mov r3,#0
 3819 000e ADF80830 	 strh r3,[sp,#8]
2399:src/MightyBoard/Motherboard/lib_sd/fat.c ****     count_arg.buffer_size = sizeof(fat);
 3820              	 .loc 1 2399 0
 3821 0012 4FF02003 	 mov r3,#32
 3822 0016 0393     	 str r3,[sp,#12]
2401:src/MightyBoard/Motherboard/lib_sd/fat.c ****     offset_t fat_offset = fs->header.fat_offset;
 3823              	 .loc 1 2401 0
 3824 0018 8668     	 ldr r6,[r0,#8]
 3825              	.LVL422:
2402:src/MightyBoard/Motherboard/lib_sd/fat.c ****     uint32_t fat_size = fs->header.fat_size;
 3826              	 .loc 1 2402 0
 3827 001a C468     	 ldr r4,[r0,#12]
 3828              	.LVL423:
2403:src/MightyBoard/Motherboard/lib_sd/fat.c ****     while(fat_size > 0)
 3829              	 .loc 1 2403 0
 3830 001c E4B1     	 cbz r4,.L303
 3831              	.LBB50:
2409:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fs->partition->device_read_interval(fat_offset,
 3832              	 .loc 1 2409 0
 3833 001e 40F20009 	 movw r9,#:lower16:fat_get_fs_free_16_callback
 3834 0022 C0F20009 	 movt r9,#:upper16:fat_get_fs_free_16_callback
 3835 0026 0DF1080A 	 add sl,sp,#8
 3836              	.LVL424:
 3837              	.L309:
2405:src/MightyBoard/Motherboard/lib_sd/fat.c ****         uintptr_t length = UINTPTR_MAX - 1;
 3838              	 .loc 1 2405 0
 3839 002a 14F1030F 	 cmn r4,#3
 3840 002e 94BF     	 ite ls
 3841 0030 2546     	 movls r5,r4
 3842 0032 6FF00105 	 mvnhi r5,#1
 3843              	.LVL425:
2409:src/MightyBoard/Motherboard/lib_sd/fat.c ****         if(!fs->partition->device_read_interval(fat_offset,
 3844              	 .loc 1 2409 0
 3845 0036 D8F80030 	 ldr r3,[r8,#0]
 3846 003a CDF80090 	 str r9,[sp,#0]
 3847 003e CDF804A0 	 str sl,[sp,#4]
 3848 0042 5F68     	 ldr r7,[r3,#4]
 3849 0044 3046     	 mov r0,r6
 3850 0046 04A9     	 add r1,sp,#16
 3851 0048 4FF02002 	 mov r2,#32
 3852 004c 2B46     	 mov r3,r5
 3853 004e B847     	 blx r7
 3854 0050 60B1     	 cbz r0,.L308
2425:src/MightyBoard/Motherboard/lib_sd/fat.c ****         fat_offset += length;
 3855              	 .loc 1 2425 0
 3856 0052 7619     	 adds r6,r6,r5
 3857              	.LVL426:
 3858              	.LBE50:
2403:src/MightyBoard/Motherboard/lib_sd/fat.c ****     while(fat_size > 0)
 3859              	 .loc 1 2403 0
 3860 0054 641B     	 subs r4,r4,r5
 3861              	.LVL427:
 3862 0056 E8D1     	 bne .L309
 3863              	.LVL428:
 3864              	.L303:
2429:src/MightyBoard/Motherboard/lib_sd/fat.c ****     return (offset_t) count_arg.cluster_count * fs->header.cluster_size;
 3865              	 .loc 1 2429 0
 3866 0058 B8F81230 	 ldrh r3,[r8,#18]
 3867 005c BDF80800 	 ldrh r0,[sp,#8]
 3868 0060 00FB03F0 	 mul r0,r0,r3
 3869 0064 04E0     	 b .L302
 3870              	.LVL429:
 3871              	.L306:
2394:src/MightyBoard/Motherboard/lib_sd/fat.c ****         return 0;
 3872              	 .loc 1 2394 0
 3873 0066 4FF00000 	 mov r0,#0
 3874 006a 01E0     	 b .L302
 3875              	.LVL430:
 3876              	.L308:
 3877              	.LBB51:
2423:src/MightyBoard/Motherboard/lib_sd/fat.c ****             return 0;
 3878              	 .loc 1 2423 0
 3879 006c 4FF00000 	 mov r0,#0
 3880              	.LVL431:
 3881              	.L302:
 3882              	.LBE51:
2430:src/MightyBoard/Motherboard/lib_sd/fat.c **** }
 3883              	 .loc 1 2430 0
 3884 0070 0CB0     	 add sp,sp,#48
 3885 0072 BDE8F087 	 pop {r4,r5,r6,r7,r8,r9,sl,pc}
 3886              	 .cfi_endproc
 3887              	.LFE85:
 3889 0076 00BF     	 .section .rodata
 3890              	 .align 2
 3891              	 .set .LANCHOR0,.+0
 3892              	.LC0:
 3893 0000 01       	 .byte 1
 3894 0001 03       	 .byte 3
 3895 0002 05       	 .byte 5
 3896 0003 07       	 .byte 7
 3897 0004 09       	 .byte 9
 3898 0005 0E       	 .byte 14
 3899 0006 10       	 .byte 16
 3900 0007 12       	 .byte 18
 3901 0008 14       	 .byte 20
 3902 0009 16       	 .byte 22
 3903 000a 18       	 .byte 24
 3904 000b 1C       	 .byte 28
 3905 000c 1E       	 .byte 30
 3906 000d 000000   	 .section .bss.fat_fs_handles,"aw",%nobits
 3907              	 .align 2
 3908              	 .set .LANCHOR1,.+0
 3911              	fat_fs_handles:
 3912 0000 00000000 	 .space 32
 3912      00000000 
 3912      00000000 
 3912      00000000 
 3912      00000000 
 3913              	 .section .bss.fat_dir_handles,"aw",%nobits
 3914              	 .align 2
 3915              	 .set .LANCHOR3,.+0
 3918              	fat_dir_handles:
 3919 0000 00000000 	 .space 104
 3919      00000000 
 3919      00000000 
 3919      00000000 
 3919      00000000 
 3920              	 .section .bss.fat_file_handles,"aw",%nobits
 3921              	 .align 2
 3922              	 .set .LANCHOR2,.+0
 3925              	fat_file_handles:
 3926 0000 00000000 	 .space 56
 3926      00000000 
 3926      00000000 
 3926      00000000 
 3926      00000000 
 3927              	 .text
 3928              	.Letext0:
 3929              	 .file 2 "c:\\program files\\codesourcery\\sourcery_codebench_lite_for_arm_eabi\\bin\\../lib/gcc/arm-none-eabi/4.6.3/../../../../arm-none-eabi/include/stdint.h"
 3930              	 .file 3 "src/MightyBoard/Motherboard/lib_sd/sd_raw_config.h"
 3931              	 .file 4 "src/MightyBoard/Motherboard/lib_sd/partition.h"
 3932              	 .file 5 "src/MightyBoard/Motherboard/lib_sd/fat_config.h"
 3933              	 .file 6 "src/MightyBoard/Motherboard/lib_sd/fat.h"
 3934              	 .file 7 "src/MightyBoard/Motherboard/system/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 fat.c
    {standard input}:19     .text.fat_get_next_cluster:00000000 $t
    {standard input}:23     .text.fat_get_next_cluster:00000000 fat_get_next_cluster
    {standard input}:120    .text.fat_free_clusters:00000000 $t
    {standard input}:124    .text.fat_free_clusters:00000000 fat_free_clusters
    {standard input}:258    .text.fat_append_clusters:00000000 $t
    {standard input}:262    .text.fat_append_clusters:00000000 fat_append_clusters
    {standard input}:447    .text.fat_clear_cluster_callback:00000000 $t
    {standard input}:451    .text.fat_clear_cluster_callback:00000000 fat_clear_cluster_callback
    {standard input}:467    .text.fat_cluster_offset:00000000 $t
    {standard input}:471    .text.fat_cluster_offset:00000000 fat_cluster_offset
    {standard input}:509    .text.fat_calc_83_checksum:00000000 $t
    {standard input}:513    .text.fat_calc_83_checksum:00000000 fat_calc_83_checksum
    {standard input}:546    .text.fat_get_fs_free_16_callback:00000000 $t
    {standard input}:550    .text.fat_get_fs_free_16_callback:00000000 fat_get_fs_free_16_callback
    {standard input}:596    .text.fat_clear_cluster:00000000 $t
    {standard input}:600    .text.fat_clear_cluster:00000000 fat_clear_cluster
    {standard input}:651    .text.fat_dir_entry_read_callback:00000000 $t
    {standard input}:655    .text.fat_dir_entry_read_callback:00000000 fat_dir_entry_read_callback
    {standard input}:3891   .rodata:00000000 .LANCHOR0
    {standard input}:968    .text.fat_find_offset_for_dir_entry:00000000 $t
    {standard input}:972    .text.fat_find_offset_for_dir_entry:00000000 fat_find_offset_for_dir_entry
    {standard input}:1182   .text.fat_write_dir_entry:00000000 $t
    {standard input}:1186   .text.fat_write_dir_entry:00000000 fat_write_dir_entry
    {standard input}:1516   .text.fat_open:00000000 $t
    {standard input}:1521   .text.fat_open:00000000 fat_open
    {standard input}:3908   .bss.fat_fs_handles:00000000 .LANCHOR1
    {standard input}:1744   .text.fat_close:00000000 $t
    {standard input}:1749   .text.fat_close:00000000 fat_close
    {standard input}:1768   .text.fat_open_file:00000000 $t
    {standard input}:1773   .text.fat_open_file:00000000 fat_open_file
    {standard input}:3922   .bss.fat_file_handles:00000000 .LANCHOR2
    {standard input}:1861   .text.fat_open_file:00000088 $d
    {standard input}:1866   .text.fat_close_file:00000000 $t
    {standard input}:1871   .text.fat_close_file:00000000 fat_close_file
    {standard input}:1890   .text.fat_read_file:00000000 $t
    {standard input}:1895   .text.fat_read_file:00000000 fat_read_file
    {standard input}:2106   .text.fat_write_file:00000000 $t
    {standard input}:2111   .text.fat_write_file:00000000 fat_write_file
    {standard input}:2406   .text.fat_resize_file:00000000 $t
    {standard input}:2411   .text.fat_resize_file:00000000 fat_resize_file
    {standard input}:2642   .text.fat_seek_file:00000000 $t
    {standard input}:2647   .text.fat_seek_file:00000000 fat_seek_file
    {standard input}:2746   .text.fat_open_dir:00000000 $t
    {standard input}:2751   .text.fat_open_dir:00000000 fat_open_dir
    {standard input}:3915   .bss.fat_dir_handles:00000000 .LANCHOR3
    {standard input}:2855   .text.fat_open_dir:000000a8 $d
    {standard input}:2860   .text.fat_close_dir:00000000 $t
    {standard input}:2865   .text.fat_close_dir:00000000 fat_close_dir
    {standard input}:2884   .text.fat_reset_dir:00000000 $t
    {standard input}:2889   .text.fat_reset_dir:00000000 fat_reset_dir
    {standard input}:2920   .text.fat_read_dir:00000000 $t
    {standard input}:2925   .text.fat_read_dir:00000000 fat_read_dir
    {standard input}:3114   .text.fat_get_dir_entry_of_path:00000000 $t
    {standard input}:3119   .text.fat_get_dir_entry_of_path:00000000 fat_get_dir_entry_of_path
    {standard input}:3311   .text.fat_create_file:00000000 $t
    {standard input}:3316   .text.fat_create_file:00000000 fat_create_file
    {standard input}:3423   .text.fat_delete_file:00000000 $t
    {standard input}:3428   .text.fat_delete_file:00000000 fat_delete_file
    {standard input}:3535   .text.fat_create_dir:00000000 $t
    {standard input}:3540   .text.fat_create_dir:00000000 fat_create_dir
    {standard input}:3731   .text.fat_get_file_size:00000000 $t
    {standard input}:3736   .text.fat_get_file_size:00000000 fat_get_file_size
    {standard input}:3752   .text.fat_get_fs_size:00000000 $t
    {standard input}:3757   .text.fat_get_fs_size:00000000 fat_get_fs_size
    {standard input}:3788   .text.fat_get_fs_free:00000000 $t
    {standard input}:3793   .text.fat_get_fs_free:00000000 fat_get_fs_free
    {standard input}:3890   .rodata:00000000 $d
    {standard input}:3907   .bss.fat_fs_handles:00000000 $d
    {standard input}:3911   .bss.fat_fs_handles:00000000 fat_fs_handles
    {standard input}:3914   .bss.fat_dir_handles:00000000 $d
    {standard input}:3918   .bss.fat_dir_handles:00000000 fat_dir_handles
    {standard input}:3921   .bss.fat_file_handles:00000000 $d
    {standard input}:3925   .bss.fat_file_handles:00000000 fat_file_handles
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
memset
strlen
strrchr
memcpy
strchr
strncmp
strcmp
strncpy
